msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.3.2\n"

#: _guides/config-yaml.adoc
msgid "YAML configuration"
msgstr "YAML設定"

#: _guides/config-yaml.adoc
msgid "You can use a YAML file,`application.yaml`, to configure your {project-name} application instead of the standard Java properties file, `application.properties`."
msgstr "標準の Java プロパティファイル `application.properties` の代わりに、YAML ファイル `application.yaml` を使って {project-name} アプリケーションを設定することもできます。"

#: _guides/config-yaml.adoc
msgid "link:https://en.wikipedia.org/wiki/YAML[YAML] is widely used for defining resource descriptors, especially in Kubernetes."
msgstr "link:https://en.wikipedia.org/wiki/YAML[YAML] は、特にKubernetesでリソース記述子を定義するために広く使用されています。"

#: _guides/config-yaml.adoc
msgid "Enable YAML configuration"
msgstr "YAML設定の有効化"

#. type: Plain text
#: _guides/config-yaml.adoc
msgid "To enable YAML configuration, add the `quarkus-config-yaml` extension:"
msgstr "YAML設定を有効にするには、 `quarkus-config-yaml` エクステンションを追加します。"

#: _guides/config-yaml.adoc
msgid "Alternatively, add the following dependency to your project:"
msgstr "あるいは、以下の依存関係をプロジェクトに追加してください："

#. type: Block title
#: _guides/config-yaml.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/config-yaml.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/config-yaml.adoc
msgid "After adding the extension or dependency, to avoid confusion, remove the `src/main/resources/application.properties` file and create a `src/main/resources/application.yaml` file."
msgstr "エクステンションまたは依存関係を追加した後、混乱を避けるために、 `src/main/resources/application.properties` ファイルを削除し、 `src/main/resources/application.yaml` ファイルを作成します。"

#: _guides/config-yaml.adoc
msgid "If both files are present, {project-name} gives precedence to properties in the YAML file."
msgstr "両方のファイルが存在する場合、{project-name}はYAMLファイルのプロパティを優先します。"

#: _guides/config-yaml.adoc
msgid "{project-name} recognizes both `.yml` and `.yaml` file extensions."
msgstr "{project-name}は、 `.yml` と `.yaml` の両方のファイル拡張子を認識します。"

#: _guides/config-yaml.adoc
msgid "Example YAML configurations"
msgstr "YAML 設定例"

#: _guides/config-yaml.adoc
msgid "The following snippets give examples of YAML configurations:"
msgstr "次のスニペットは YAML 設定の例です："

#. type: Title ==
#: _guides/config-yaml.adoc
#, no-wrap
msgid "Profiles"
msgstr "プロファイル"

#: _guides/config-yaml.adoc
msgid "As you can see in the previous snippet, you can use xref:config-reference.adoc#profiles[profiles] in YAML."
msgstr "前のスニペットでわかるように、YAMLで xref:config-reference.adoc#profiles[プロファイル] を使うことができます。"

#: _guides/config-yaml.adoc
msgid ""
"In YAML, keys that begin with `%` are not allowed.\n"
"However, profile keys must start with this symbol.\n"
"To resolve this, enclose the profile keys in double quotes, as demonstrated by the example, `\"%test\"`."
msgstr ""
"YAML において、 `%` で始まるキーは許されません。\n"
"しかし、プロファイルキーはこのシンボルで始めなければなりません。 \n"
"`\"%test\"` これを解決するには、プロファイルキーを二重引用符で囲みます。"

#: _guides/config-yaml.adoc
msgid ""
"All configurations under the `\"%test\"` key activate only when the `test` profile is enabled.\n"
"For instance, the previous snippet shows that OpenID Connect (OIDC) (`quarkus.oidc.enabled: false`) is disabled when the `test` profile is active.\n"
"Without the `test` profile, OIDC is enabled by default."
msgstr ""
"`\"%test\"` キーの下にあるすべての設定は、 `test` プロファイルが有効になっているときにのみ有効になります。\n"
"例えば、前述のスニペットでは、 `test` プロファイルが有効な場合、OpenID Connect (OIDC) ( `quarkus.oidc.enabled: false` ) は無効になっています。 \n"
"`test` プロファイルがない場合、OIDC はデフォルトで有効になります。"

#: _guides/config-yaml.adoc
msgid "You can also define custom profiles, such as `%staging` in the following example:"
msgstr "以下の例の `%staging` のように、カスタムプロファイルを定義することもできます："

#: _guides/config-yaml.adoc
msgid "If you enable the `staging` profile, the HTTP port is set to `8082` instead of `8081`."
msgstr "`staging` プロファイルを有効にすると、HTTP ポートは `8081` ではなく `8082` に設定されます。"

#: _guides/config-yaml.adoc
msgid ""
"The YAML configuration also supports profile-aware files.\n"
"In this case, properties for a specific profile can reside in an `application-{profile}.yaml` named file.\n"
"The previous example can be expressed as:"
msgstr ""
"YAML 設定はプロファイル対応ファイルもサポートします。\n"
"この場合、特定のプロファイルのプロパティは `application-{profile}.yaml` という名前のファイルに保存できます。\n"
"先程の例は次のように表現できます："

#. type: Block title
#: _guides/config-yaml.adoc
#, no-wrap
msgid "application-staging.yaml"
msgstr "application-staging.yaml"

#: _guides/config-yaml.adoc
#, fuzzy
msgid ""
"An `application.yaml` file must exist (even if empty) in the exact location of the profile-aware\n"
"(`application-{profile}.yaml`) file to be included in the configuration to ensure a consistent order when\n"
"loading the files."
msgstr "`application.yaml` ファイルは、ファイルを読み込む際に一貫した順序を保証するために、コンフィギュレーションに含まれるプロファイル対応 ( `application-{profile}.yaml` ) ファイルの正確な場所に存在する必要があります (空でも構いません)。"

#. type: Title ==
#: _guides/config-yaml.adoc
#, no-wrap
msgid "Expressions"
msgstr "式"

#: _guides/config-yaml.adoc
msgid "The YAML format also supports xref:config-reference.adoc#property-expressions[property expressions], by using the same format as Java properties:"
msgstr "YAML フォーマットは Java プロパティと同じフォーマットを使うことで xref:config-reference.adoc#property-expressions[プロパティ式] もサポートします："

#: _guides/config-yaml.adoc
msgid "You can reference nested properties by using the `.` (dot) separator, as in `${x.factor}`."
msgstr "`${x.factor}` の よ う に、 `.` （ド ッ ト ） セパレーターを用い る こ と で、 入れ子にな っ たプ ロ パテ ィ を参照す る こ と がで き ます。"

#. type: Title ==
#: _guides/config-yaml.adoc
#, no-wrap
msgid "External application.yaml file"
msgstr "外部application.yamlファイル"

#: _guides/config-yaml.adoc
msgid ""
"The `application.yaml` file can also be placed in `config/application.yaml` to specialize the runtime configuration.\n"
"The file must be present in the root of the working directory relative to the {project-name} application runner:"
msgstr ""
"`application.yaml` ファイルは、実行時設定を特殊化するために `config/application.yaml` に置くこともできます。\n"
"このファイルは{project-name}アプリケーション・ランナーに相対する作業ディレクトリのルートに存在しなければなりません："

#: _guides/config-yaml.adoc
msgid "The values from this file override any values from the regular `application.yaml` file if it exists."
msgstr "このファイルの値は、通常の `application.yaml` ファイルが存在する場合、そのファイルの値を上書きします。"

#: _guides/config-yaml.adoc
msgid "Configuration property conflicts"
msgstr "設定プロパティの競合"

#: _guides/config-yaml.adoc
#, fuzzy
msgid ""
"The MicroProfile Config specification defines configuration properties as an arbitrary `.`-delimited string.\n"
"However, structured formats such as YAML only support a subset of the possible configuration namespace.\n"
"For example, consider the two configuration properties `one.two` and `one.two.three`.\n"
"One property is the prefix of another, so it might not be immediately evident how to specify both keys in your YAML configuration."
msgstr "MicroProfile Config 仕様では、設定プロパティを `.` で区切られた任意の文字列として定義します。しかし、YAML のような構造化フォーマットは可能な構成名前空間のサブセットしかサポートしません。たとえば、 `one.two` と `one.two.three` という 2 つの設定プロパティを考えてみましょう。1つのプロパティは別のプロパティのプレフィックスなので、YAML構成で両方のキーを指定する方法はすぐにはわからないかもしれません。"

#: _guides/config-yaml.adoc
msgid "This is solved by using `~` as a `null` key to represent any YAML property that is a prefix of another one:"
msgstr "これは `~` を `null` キーとして使い、他のプロパティのプレフィックスである YAML プロパティを表すことで解決されます："

#: _guides/config-yaml.adoc
msgid "YAML `null` keys are not included in the assembly of the configuration property name, allowing them to be used at any level for disambiguating configuration properties."
msgstr "YAML `null` キーは設定プロパティ名のアセンブリに含まれないので、設定プロパティを曖昧さをなくすためにどのレベルでも使うことができます。"

#: _guides/config-yaml.adoc
msgid "Although Quarkus primarily uses `.properties` file extension for configuration, the snakeyaml library, which is used for parsing YAML in Quarkus, can also parse JSON structures. This means you can use YAML files with JSON content inside."
msgstr "Quarkusでは、主に設定に `.properties` ファイル拡張子を使用しますが、QuarkusでYAMLのパースに使用されるsnakeyamlライブラリは、JSON構造もパースできます。つまり、JSONコンテンツを含むYAMLファイルを使用できます。"

#: _guides/config-yaml.adoc
msgid "YAML and JSON structures can be read in an application.yaml file."
msgstr "YAMLとJSON構造はapplication.yamlファイルから読み込むことができます。"

#: _guides/config-yaml.adoc
msgid "Certainly, here's a step-by-step guide on how to use complex configuration structures with Quarkus:"
msgstr "Quarkusで複雑な設定構造を使用する方法について、ステップバイステップで説明します："

#: _guides/config-yaml.adoc
msgid "Define Your Configuration Interface."
msgstr "設定インターフェースを定義します。"

#: _guides/config-yaml.adoc
msgid "Create the appropriate JSON structure and store it in a YAML file."
msgstr "適切なJSON構造を作成し、YAMLファイルに格納します。"
