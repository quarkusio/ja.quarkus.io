msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Redis Extension Reference Guide"
msgstr "Redis エクステンションのリファレンスガイド"

#: _guides/redis-reference.adoc
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr "Redis は、データベース、キャッシュ、ストリーミングエンジン、メッセージブローカーとして使用されるインメモリーデータストアです。Quarkus Redis エクステンションを使用すると、Quarkus アプリケーションと Redis を統合することができます。"

#: _guides/redis-reference.adoc
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr "このエクステンションを使うには、ユーザーが Redis に精通していること、特にコマンドの仕組みとその設定について理解していることが必要です。一般的には、以下を推奨します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr "Redis を紹介する https://try.redis.io/[インタラクティブなチュートリアル]。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr "Redis コマンドを説明し、リファレンスドキュメントへのリンクが掲載されている https://redis.io/commands/[コマンドリファレンス]。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr "このエクステンションは、命令型とリアクティブ型の API、および低レベルと高レベルの (タイプセーフな) クライアントを提供します。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use the Redis Client"
msgstr "Redisクライアントの使用"

#: _guides/redis-reference.adoc
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr "このエクステンションを使用する場合は、最初に `io.quarkus:quarkus-redis` エクステンションを追加する必要があります。 `pom.xml` ファイルに、以下を追加します。"

#. type: Block title
#: _guides/redis-reference.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/redis-reference.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr "この依存関係があれば、次に Redis クライアントや _データソース_ (高レベル、タイプセーフの API) を注入することができます。以下に例を示します。"

#: _guides/redis-reference.adoc
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the <<apis>> section."
msgstr "quarkus-redis エクステンションで提供されるさまざまな API の詳細については、<<apis>> セクションを参照してください。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To use Redis as a cache backend, refer to the xref:cache-redis-reference.adoc[Redis Cache Backend reference]."
msgstr "Redisをキャッシュバックエンドとして使用するには、 xref:cache-redis-reference.adoc[Redisキャッシュバックエンドのリファレンス] を参照してください。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "One extension, multiple APIs"
msgstr "1 つのエクステンション、複数の API"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "This extension provides multiple ways to interact with Redis:"
msgstr "このエクステンションは、Redis と対話する複数の方法を提供します。"

#: _guides/redis-reference.adoc
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr "_低レベルの_ Vert.x クライアント: 完全にリアクティブで、ノンブロッキングかつ非同期なクライアントです。詳細は https://vertx.io/docs/vertx-redis-client/java/[Vert.x Redis クライアントドキュメント] を参照してください。2 つの API (`io.vertx.redis.client.Redis` および `io.vertx.redis.client.RedisAPI`) が公開されています。接続を自分で管理する必要がある場合を除き、通常は後者を利用することになります。"

#: _guides/redis-reference.adoc
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr "Vert.x API の _低レベルの_ Mutiny バリアント :以前のものとは異なり、Mutiny API を公開し、リアクティブ型と命令型の両方のメソッド (接尾辞は `andAwait()`) が提供されます。2 つの API (`io.vertx.mutiny.redis.client.Redis` および `io.vertx.mutiny.redis.client.RedisAPI`) が公開されています。自分で接続を管理する必要がある場合を除いて、通常は後者を使用します。"

#: _guides/redis-reference.adoc
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr "_高レベルの_ リアクティブデータソース: Redis と対話するための、タイプセーフな高レベル API です。この API は完全にリアクティブで非同期です。これは、Mutiny API を公開します。 `io.quarkus.redis.datasource.ReactiveRedisDataSource` インターフェイスを公開します。"

#: _guides/redis-reference.adoc
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr "_高レベルの_ 命令型データソース: Redis と対話するための、タイプセーフな高レベル API です。これはリアクティブデータソースの命令型バリアントです。 `io.quarkus.redis.datasource.RedisDataSource` インターフェイスを公開します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr "適切な API を選択できるように、いくつかの推奨事項を以下に示します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr "Redis と統合する命令型 (_classic_) の Quarkus アプリケーションを構築する場合、 `io.quarkus.redis.datasource.RedisDataSource` を使用します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr "Redis と統合したリアクティブな Quarkus アプリケーションを構築する場合は、 `io.quarkus.redis.datasource.ReactiveRedisDataSource` を使用します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr "細かい制御が必要な場合や、汎用的な方法でコマンドを実行する場合は、 `io.vertx.mutiny.redis.client.RedisAPI` を使用します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr "既存の Vert.x コードがある場合は、 `io.vertx.redis.client.RedisAPI` を使用します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr "カスタムコマンドを発行する必要がある場合は、データソース (リアクティブ型または命令型) または `io.vertx.mutiny.redis.client.Redis` を使用することができます。"

#: _guides/redis-reference.adoc
msgid "[[inject-the-default-and-named-clients]] Inject the default and named clients"
msgstr "[[inject-the-default-and-named-clients]] デフォルトおよび名前付きクライアントを注入する"

#: _guides/redis-reference.adoc
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr "このエクステンションでは、_デフォルトの_ Redis クライアント/データソースまたは _名前付き_ ソースを設定することができます。後者は、複数の Redis インスタンスに接続する必要がある場合に不可欠となります。"

#: _guides/redis-reference.adoc
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr "デフォルトの接続は、 `quarkus.redis.*` プロパティーを使用して設定されます。たとえば、デフォルトの Redis クライアントを設定するには、以下を使用します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr "デフォルトの接続を使用する場合、_プレーン_ `@Inject` を使用してさまざまな APIS を注入することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr "一般的には、1 つだけ注入します。先ほどのスニペットは単なる一例です。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr "_名前付き_ クライアントは `quarkus.redis.<name>.*` プロパティーを使用して設定されます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr "API にアクセスするためには、 `@RedisClientName` 修飾子が必要です。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can omit the `@Inject` annotation when using `@RedisClientName`."
msgstr "`@RedisClientName` を使用する場合、 `@Inject` アノテーションを省略することができます。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Connect to the Redis server"
msgstr "Redisサーバーへの接続"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr "Redis エクステンションは、4 つの異なるモードで動作することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Simple client (probably what most users need)."
msgstr "シンプルなクライアント (おそらくほとんどのユーザーが必要としているもの)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr "Sentinel (高可用性モードで Redis を使用する場合)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr "クラスター (Redis を Clustered モードで動作させる場合)。"

#: _guides/redis-reference.adoc
msgid "Replication (single shard, one node writes, multiple read)."
msgstr "レプリケーション (シングルシャード、1 ノード書き込み、マルチ読み取り)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr "接続 URL は、以下のように `quarkus.redis.hosts` (または `quarkus.redis.<name>.hosts`) で設定されます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use Unix Socket"
msgstr "Unixソケットの使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using unix-socket, you need:"
msgstr "unix-socket を使用する場合、以下が必要です。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use the Sentinel Mode"
msgstr "Sentinel モードの使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr "Sentinel を使用する場合、複数の _ホスト urls_ を渡し、クライアントのタイプを `sentinel` に設定する必要があります。"

#: _guides/redis-reference.adoc
msgid ""
"The host URLs here must be the sentinel servers.\n"
"The client will obtain the URLs of actual Redis servers (master or replicas, depending on `role`) from one of the sentinels, using the `master-name` as an identifier of the \"master set\"."
msgstr ""
"ここでのホスト URL は sentinel サーバーである必要があります。\n"
"クライアントは、マスターセットの識別子として `master-name` を使用して、sentinel の 1 つから実際の Redis サーバー (`role` に応じてマスターまたはレプリカ) の URL を取得します。"

#: _guides/redis-reference.adoc
msgid ""
"Note that you practically never want to configure `quarkus.redis.role=sentinel`.\n"
"This setting means that the Redis client will execute commands directly on one of the sentinel servers, instead of an actual Redis server guarded by the sentinels."
msgstr ""
"実際には、 `quarkus.redis.role=sentinel` を設定する必要はないことに注意してください。\n"
"この設定は、Redis クライアントが、sentinel によって保護されている実際の Redis サーバーではなく、sentinel サーバーの 1 つで直接コマンドを実行します。"

#: _guides/redis-reference.adoc
msgid "Automatic Failover"
msgstr "自動フェイルオーバー"

#: _guides/redis-reference.adoc
msgid "In the sentinel mode, it is possible to configure automatic failover of _master_ connections:"
msgstr "sentinel モードでは、_ マスター _ 接続の自動フェイルオーバーを設定できます。"

#: _guides/redis-reference.adoc
msgid ""
"If enabled, the sentinel client will additionally create a connection to one sentinel node and watch for failover events.\n"
"When new master is elected, all connections to the old master are automatically closed and new connections to the new master are created.\n"
"Automatic failover makes sense for connections executing regular commands, but not for connections used to subscribe to Redis pub/sub channels."
msgstr ""
"有効にすると、sentinel クライアントは 1 つの sentinel ノードへの接続を追加で作成し、フェイルオーバーイベントを監視します。\n"
"新しいマスターが選出されると、古いマスターへのすべての接続が自動的に閉じられ、新しいマスターへの新しい接続が作成されます。\n"
"自動フェイルオーバーは、通常のコマンドを実行する接続には意味がありますが、Redis pub/sub チャネルをサブスクライブするために使用される接続には意味がありません。"

#: _guides/redis-reference.adoc
msgid ""
"Note that there is a brief period of time between the old master failing and the new master being elected when the existing connections will temporarily fail all operations.\n"
"After the new master is elected, the connections will automatically fail over and start working again."
msgstr ""
"古いマスターが失敗してから新しいマスターが選出されるまでの短期間に、既存の接続ですべての操作が一時的に失敗する天に注意してください。\n"
"新しいマスターが選出されると、接続は自動的にフェイルオーバーされ、再び動作を開始します。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use the Cluster Mode"
msgstr "クラスターモードの使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr "Redis をクラスターモードで使用する場合、複数の _ホスト urls_ を渡し、クライアントのタイプを `cluster` に設定し、 `replicas` モードを設定する必要があります。"

#: _guides/redis-reference.adoc
msgid ""
"The host URLs here must be some of the cluster members.\n"
"Not all cluster members need to be configured, as the client will obtain a full cluster topology from one of the known servers.\n"
"However, it is advisable to configure at least 2 or 3 nodes, not just 1."
msgstr ""
"ここでのホスト URL は、クラスターメンバーの一部である必要があります。\n"
"クライアントは既知のサーバーの 1 つから完全なクラスタートポロジーを取得するため、すべてのクラスターメンバーを設定する必要はありません。\n"
"ただし、1 つのノードだけではなく、少なくとも 2 つまたは 3 つのノードを設定することを推奨します。"

#: _guides/redis-reference.adoc
msgid ""
"By default, all commands are sent to a master node (if the command has a key, it is the master node of the shard that owns the key, otherwise it is a random master node).\n"
"It is possible to configure the Redis client to send read-only commands (queries) to replica nodes.\n"
"Set the `quarkus.redis.replicas` configuration property to:"
msgstr ""
"デフォルトでは、すべてのコマンドはマスターノードに送信されます (コマンドにキーがある場合は、キーを所有するシャードのマスターノード、それ以外の場合はランダムマスターノード)。\n"
"Redis クライアントを設定して、レプリカノードに読み取り専用コマンド (クエリー) を送信することが可能です。\n"
"`quarkus.redis.replicas` 設定プロパティーを次のように設定します。"

#: _guides/redis-reference.adoc
msgid "`never`: never use replica nodes, always send queries to master nodes (this is the default)"
msgstr "`never`: レプリカノードは使用せず、常にマスターノードにクエリーを送信します (これがデフォルトです)"

#: _guides/redis-reference.adoc
msgid "`always`: always use replica nodes (if there's more than one replica in the shard, it is selected randomly), never send queries to master nodes"
msgstr "`always`: 常にレプリカノードを使用します (シャード内にレプリカが複数ある場合は無作為に選択されます)。マスターノードにクエリーを送信しません。"

#: _guides/redis-reference.adoc
msgid "`share`: use master and replica nodes to execute queries (the specific node for each query is selected randomly)"
msgstr "`share`: マスターノードとレプリカノードを使用してクエリーを実行します (各クエリーの特定のノードは無作為に選択されます)"

#: _guides/redis-reference.adoc
msgid "Note that replication in Redis is asynchronous, so replica nodes may be lagging behind their master nodes."
msgstr "Redis のレプリケーションは非同期であるため、レプリカノードはマスターノードより遅れる可能性があることに注意してください。"

#: _guides/redis-reference.adoc
msgid "Use the Replication Mode"
msgstr "レプリケーションモードの使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr "レプリケーションモードを使用する場合、単一のホスト URL を渡し、タイプを `replication` に設定する必要があります。"

#: _guides/redis-reference.adoc
msgid ""
"By default, all commands are sent to the master node.\n"
"It is possible to configure the Redis client to send read-only commands (queries) to replica nodes.\n"
"Set the `quarkus.redis.replicas` configuration property to:"
msgstr ""
"デフォルトでは、すべてのコマンドはマスターノードに送信されます。\n"
"Redis クライアントを設定して、レプリカノードに読み取り専用コマンド (クエリー) を送信することが可能です。\n"
"`quarkus.redis.replicas` 設定プロパティーを次のように設定します。"

#: _guides/redis-reference.adoc
msgid "`never`: never use replica nodes, always send queries to the master node (this is the default)"
msgstr "`never`: レプリカノードは使用せず、常にマスターノードにクエリーを送信します (これがデフォルトです)"

#: _guides/redis-reference.adoc
msgid "`always`: always use replica nodes (if there's more than one replica, it is selected randomly), never send queries to the master node"
msgstr "`always`: 常にレプリカノードを使用します (レプリカが複数ある場合はランダムに選択されます)。マスターノードにクエリーを送信しません。"

#: _guides/redis-reference.adoc
msgid "Note that replication in Redis is asynchronous, so replica nodes may be lagging behind the master node."
msgstr "Redis のレプリケーションは非同期であるため、レプリカノードはマスターノードより遅れる可能性があることに注意してください。"

#: _guides/redis-reference.adoc
msgid "Static Topology"
msgstr "静的トポロジー"

#: _guides/redis-reference.adoc
msgid "In the replication mode, it is possible to reconfigure the Redis client to skip automatic discovery of the topology:"
msgstr "レプリケーションモードでは、Redis クライアントを再設定してトポロジーの自動検出をスキップできます。"

#: _guides/redis-reference.adoc
msgid ""
"With static topology, the first node in the configuration is assumed to be a _master_ node, while the remaining nodes are assumed to be _replicas_.\n"
"The nodes are not verified; it is a responsibility of the application developer to ensure that the static configuration is correct."
msgstr ""
"静的トポロジーでは、設定内の最初のノードは _マスター_ ノードと見なされ、残りのノードは _レプリカ_ と見なされます。\n"
"ノードは検証されません。アプリケーション開発者が責任を持って、静的設定が正しいことを確認するようにしてください。"

#: _guides/redis-reference.adoc
msgid ""
"Note that automatic discovery of the topology is usually the preferred choice.\n"
"Static configuration should only be used when necessary.\n"
"One such case is _Amazon Elasticache for Redis (Cluster Mode Disabled)_, where:"
msgstr ""
"通常は、トポロジーの自動検出が優先されることに注意してください。\n"
"静的設定は必要な場合にのみ使用してください。\n"
"そのようなケースの 1 つが、_Amazon Elasticache for Redis (クラスターモードが無効)_ です。"

#: _guides/redis-reference.adoc
msgid "master node should be set to the _primary endpoint_, and"
msgstr "マスターノードは _プライマリーエンドポイント_ に設定し、"

#: _guides/redis-reference.adoc
msgid "one replica node should be set to the _reader endpoint_."
msgstr "1 つのレプリカノードを _リーダーエンドポイント_ に設定する必要があります。"

#: _guides/redis-reference.adoc
msgid ""
"Note that the reader endpoint of Elasticache for Redis (Cluster Mode Disabled) is a domain name which resolves to a CNAME record that points to one of the replicas.\n"
"The CNAME record to which the reader endpoint resolves changes over time.\n"
"This form of DNS-based load balancing does not work well with DNS resolution caching and connection pooling.\n"
"As a result, some replicas are likely to be underutilized."
msgstr ""
"Elasticache for Redis (クラスターモードが無効) のリーダーエンドポイントは、レプリカの 1 つを参照する CNAME レコードに対して解決されるドメイン名であることに注意してください。\n"
"リーダーエンドポイントが解決する CNAME レコードは、時間の経過とともに変化します。\n"
"この形式の DNS ベースの負荷分散は、DNS 解決キャッシュおよび接続プールでは正しく機能しません。\n"
"その結果、一部のレプリカが十分に活用されない可能性があります。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Connect to Redis Cloud"
msgstr "Redisクラウドに接続"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To connect to redis cloud, you need the following properties:"
msgstr "redis クラウドに接続するためには、以下のプロパティーが必要です。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use TLS"
msgstr "TLS の使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To use TLS, you need to:"
msgstr "TLSを使うには、以下を実施してください:"

#: _guides/redis-reference.adoc
msgid "Set the `quarkus.redis.tls.enabled=true` property or use the  xref:./tls-registry-reference.adoc[TLS registry] (recommended)"
msgstr "`quarkus.redis.tls.enabled=true` プロパティーを設定するか、xref:./tls-registry-reference.adoc[TLS レジストリー] を使用します (推奨)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Make sure that your URL starts with `rediss://` (with two `s`)"
msgstr "URLが `rediss://` (2つの `s`) で始まるようにします。"

#: _guides/redis-reference.adoc
msgid "When using the TLS registry, you need to use a named configuration to avoid conflicts with other TLS configurations:"
msgstr "TLS レジストリーを使用する場合は、他の TLS 設定との競合を避けるために、名前付き設定を使用する必要があります。"

#: _guides/redis-reference.adoc
msgid "The default hostname verifier is set to `NONE`, meaning it does not verify the host name. You can change this behavior by setting the `quarkus.redis.tls.hostname-verification-algorithm` property, to `HTTPS` for example."
msgstr "デフォルトのホスト名検証は `NONE` に設定されており、この設定ではホスト名は検証されません。この動作は、 `quarkus.redis.tls.hostname-verification-algorithm` プロパティーを、 `HTTPS` などに設定して変更できます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure the authentication"
msgstr "認証の設定"

#: _guides/redis-reference.adoc
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr "Redis のパスワードは、 `redis://` URL で設定するか、 `quarkus.redis.password` プロパティーで設定することができますが、後者での設定をお勧めします。可能であれば、シークレットや環境変数を使ってパスワードを設定することをお勧めします。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr "関連する環境変数は `QUARKUS_REDIS_PASSWORD` で、名前付きクライアントの場合は `QUARKUS_REDIS_<NAME>_PASSWORD` となります。"

#: _guides/redis-reference.adoc
msgid "Connection pooling"
msgstr "接続プール"

#: _guides/redis-reference.adoc
msgid ""
"Connections to Redis are always pooled.\n"
"By default, maximum number of connections in the pool is 6.\n"
"This can be configured using `quarkus.redis.max-pool-size`."
msgstr ""
"Redis への接続は常にプールされます。\n"
"デフォルトでは、プール内の接続の最大数は 6 です。\n"
"これは `quarkus.redis.max-pool-size` を使用して設定できます。"

#: _guides/redis-reference.adoc
msgid ""
"When the connection pool is depleted, attempts to obtain a connection are put into a queue.\n"
"By default, maximum number of attempts waiting in the queue to obtain a Redis connection is 24.\n"
"This can be configured using `quarkus.redis.max-pool-waiting`."
msgstr ""
"接続プールから接続がなくなると、接続を取得する試行はキューに入れられます。\n"
"デフォルトでは、キューで待機している間に Redis 接続取得を試行する回数は最大で 24 回です。\n"
"これは `quarkus.redis.max-pool-waiting` を使用して設定できます。"

#: _guides/redis-reference.adoc
msgid ""
"Executing certain commands modifies the server-side state and the behavior of the connection.\n"
"Such connections cannot be reused and when closed, they are not put back into the pool; instead, they are truly closed.\n"
"The commands that cause this behavior are:"
msgstr ""
"特定のコマンドを実行すると、サーバー側の状態と接続の動作が変更されます。\n"
"このような接続は再利用できず、切断されたときにプールに戻されるのではなく、完全に切断されます。\n"
"この動作を行うコマンドは次のとおりです。"

#: _guides/redis-reference.adoc
msgid "subscription commands (`SUBSCRIBE`, `UNSUBSCRIBE` etc.)"
msgstr "サブスクリプションコマンド (`SUBSCRIBE`、 `UNSUBSCRIBE` など)"

#: _guides/redis-reference.adoc
msgid "`SELECT`"
msgstr "`SELECT`"

#: _guides/redis-reference.adoc
msgid "`AUTH`"
msgstr "`AUTH`"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use Redis data sources"
msgstr "Redisデータソースの使用"

#: _guides/redis-reference.adoc
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr "Quarkus は、Redis 上で高レベルの API を公開します。この API はタイプセーフで https://redis.io/commands/command-docs/[Redis コマンド編成] から継承された _グループ_ の概念を中心とした構造となっています。この API を使用すると、Redis コマンドをより便利かつ安全に実行することができます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Inject data sources"
msgstr "データソースの注入"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr "設定された各 Redis クライアントに対して、2 つの Redis データソースが公開されます。"

#: _guides/redis-reference.adoc
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr "`io.quarkus.redis.datasource.RedisDataSource`: 命令型の (ブロッキング) Redis データソースです。各操作は、レスポンスを受信するか、タイムアウトに達するまでブロックされます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr "`io.quarkus.redis.datasource.ReactiveRedisDataSource`: `Uni<X>` または `Multi<X>` を返すリアクティブ型 Redis データソースです。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr "_デフォルトの_ Redis クライアントを設定した場合、以下を使用してデータソースを注入することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr "_名前付きの_ Redis クライアントを設定した場合、 `io.quarkus.redis.RedisClientName` 修飾子を使用して、正しいクライアントを選択する必要があります。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr "_ブロッキング_ バリアントを使う場合は、以下を使用してデフォルトのタイムアウトを設定することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The default timeout is configured to 10s."
msgstr "デフォルトのタイムアウトは 10 秒に設定されています。"

#. type: Block title
#: _guides/redis-reference.adoc
#, no-wrap
msgid "All about delegation"
msgstr "デリゲーションに関するすべて"

#: _guides/redis-reference.adoc
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr "ブロッキングデータソース (`io.quarkus.redis.datasource.RedisDataSource`) はリアクティブデータソース (`io.quarkus.redis.datasource.ReactiveRedisDataSource`) の上に実装されています。 `ReactiveRedisDataSource` は `io.vertx.mutiny.redis.Redis` API の上に実装されています。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Data Source groups"
msgstr "データソースグループ"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "As mentioned above, the API is divided into groups:"
msgstr "前述の通り、API はグループに分かれています。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "bitmap - `.bitmap()`"
msgstr "bitmap - `.bitmap()`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "key (generic) - `.key()`"
msgstr "key (generic) - `.key()`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "geo - `.geo(memberType)`"
msgstr "geo - `.geo(memberType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "hash - `.hash(`valueType)`"
msgstr "hash - `.hash(`valueType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr "hyperloglog - `.hyperloglog(memberType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "list - `.list(memberType)`"
msgstr "list - `.list(memberType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "pubsub - `pubsub()`"
msgstr "pubsub - `pubsub()`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "set - `.set(memberType)`"
msgstr "set - `.set(memberType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr "sorted-set - `.sortedSet(memberType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "string - `.value(valueType)`"
msgstr "string - `.value(valueType)`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "stream - `.stream(`valueType`)"
msgstr "stream - `.stream(`valueType`)"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "transactions - `withTransaction`"
msgstr "transactions - `withTransaction`"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "json - `.json()` (requires the https://redis.com/modules/redis-json/[RedisJSON] module on the server side)"
msgstr "json - `.json()` (サーバー側に link:https://redis.com/modules/redis-json/[RedisJSON] モジュールが必要)"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "bloom - `.bloom()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side)"
msgstr "bloom - `.bloom()` (サーバー側に link:https://redis.com/modules/redis-bloom/[RedisBloom] モジュールが必要)"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "cuckoo - `.cuckoo()` (requires the https://redis.com/modules/redis-bloom/[rRedisBloom] module on the server side, which also provides the cuckoo filter commands)"
msgstr "cuckoo - `.cuckoo()` (サーバ側に link:https://redis.com/modules/redis-bloom/[rRedisBloom] モジュールが必要で、cuckoo のフィルタコマンドも提供します)"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "count-min - `.countmin()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the count-min filter commands)"
msgstr "count-min - `.countmin()` （サーバー側に link:https://redis.com/modules/redis-bloom/[RedisBloom] モジュールが必要で、count-minフィルターコマンドも提供されます。）"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "top-k - `.topk()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the top-k filter commands)"
msgstr "top-k - `.topk()` (サーバー側に link:https://redis.com/modules/redis-bloom/[RedisBloom] モジュールが必要で、top-kフィルターコマンドも提供します)"

#: _guides/redis-reference.adoc
msgid ""
"graph - `.graph()` (requires the https://redis.com/modules/redis-graph/[RedisGraph] module on the server side).\n"
"These commands are marked as experimental.\n"
"Also the module has been declared _end of life_ by https://redis.com/blog/redisgraph-eol/[Redis]."
msgstr ""
"graph - `.graph()` (サーバー側に link:https://redis.com/modules/redis-graph/[RedisGraph] モジュールが必要)。\n"
"これらのコマンドは実験的なものです。\n"
"また、このモジュールは link:https://redis.com/blog/redisgraph-eol/[Redis] によって _終了_ が 宣言されています。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "search - `.search()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "search - `.search()` (サーバー側に link:https://redis.com/modules/redis-search/[RedisSearch] モジュールが必要です)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "auto-suggest - `.autosuggest()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "auto-suggest - `.autosuggest()` (サーバー側に link:https://redis.com/modules/redis-search/[RedisSearch] モジュールが必要です)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "time-series - `.timeseries()` (requires the https://redis.com/modules/redis-timeseries/[Redis Time Series] module on the server side)."
msgstr "time-series - `.timeseries()` (サーバー側に link:https://redis.com/modules/redis-timeseries/[Redis Time Series] モジュールが必要です)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "These commands are marked as experimental, as we would need feedback before making them stable."
msgstr "これらのコマンドは、stableになる前にフィードバックを必要とするため、experimentalとしてマークされています。"

#: _guides/redis-reference.adoc
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr "これらのメソッドはそれぞれ、そのグループに関連するコマンドを実行することができるオブジェクトを返します。以下のスニペットは、_ハッシュ_ グループの使い方を示しています。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Inject the `RedisDataSource` in the constructor"
msgstr "コンストラクターに `RedisDataSource` を注入します。"

#: _guides/redis-reference.adoc
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr "`HashCommands` オブジェクトを作成します。このオブジェクトには 3 つのタイプ (キーのタイプ、フィールドのタイプ、メンバーのタイプ) のパラメーターがあります。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr "作成した `commands` を使用して、フィールド `field` と値 `value` を関連付けます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr "作成した `commands` を使用して、フィールド `field` の値を取得します。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Serializing and Deserializing data"
msgstr "データのシリアライズとデシリアライズ"

#: _guides/redis-reference.adoc
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"By default, non-standard types are serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr ""
"データ・ソースAPIは、シリアライズとデシリアライズを自動的に処理します。\n"
"デフォルトでは、非標準型はJSONにシリアライズされ、JSONからデシリアライズされます。\n"
"この場合、 `quarkus-jackson` が使用されます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Binary"
msgstr "バイナリ"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To store or retrieve binary data, use `byte[]`."
msgstr "バイナリ・データを保存または取得するには、 `byte[]` を使用します。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Custom codec"
msgstr "カスタムコーデック"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can register custom codec by providing a CDI _bean_ implementing the `io.quarkus.redis.datasource.codecs.Codec` interface:"
msgstr "`io.quarkus.redis.datasource.codecs.Codec` インタフェースを実装したCDI _bean_ を提供することで、カスタムコーデックを登録できます："

#: _guides/redis-reference.adoc
msgid ""
"The `canHandle` method is called to check if the codec can handle a specific type.\n"
"The parameter received in the `encode` method matches that type.\n"
"The object returned by the `decode` method must also match that type."
msgstr ""
"`canHandle` メソッドは、コーデックが特定の型を扱えるかどうかをチェックするために呼び出されます。 \n"
"`encode` メソッドで受け取るパラメータは、その型と一致します。 \n"
"`decode` メソッドによって返されるオブジェクトも、その型に一致しなければなりません。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use type reference"
msgstr "型参照の使用"

#: _guides/redis-reference.adoc
msgid ""
"Each group can be configured with `Class`, or with `TypeReference` objects.\n"
"`TypeReference` are useful when dealing with Java generics:"
msgstr ""
"各グループは、 `Class` または `TypeReference` オブジェクトを使用して設定できます。\n"
"`TypeReference` は、Java ジェネリックを扱うときに便利です。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You cannot use type references when using transaction. This is a known limitation."
msgstr "トランザクションを使用する場合、型参照は使用できません。これは既知の制限です。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Manipulate cached and binary data with the `value` group"
msgstr "`value` グループを使用したキャッシュされたデータとバイナリーデータの操作"

#: _guides/redis-reference.adoc
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr "`value` グループは https://redis.io/docs/manual/data-types/#strings[Redis 文字列] を操作するために使用されます。したがって、このグループは Java の文字列に限定されることなく、整数 (カウンターなど) やバイナリーコンテンツ (イメージなど) にも使用することができます。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Work with cached values"
msgstr "キャッシュされた値を扱う"

#: _guides/redis-reference.adoc
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr "Redis をキャッシュとして使用するには、 `setex` コマンドを使用します。このコマンドは、指定したキーに指定した値を指定した期間だけ格納します。以下のスニペットは、このようなコマンドを使用して `BusinessObject` を 1 秒間格納する方法を示しています。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr "`setnx` メソッドは、指定したキーに対応する値が格納されていない場合に、値を設定するためだけに使用することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr "`key` グループは、各キーの有効期限や ttl をより細かく制御します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr "`set` メソッドは、動作を変更するための `SetArgs` 引数を受け取ることもできます。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr "`ex(seconds)`: 指定された有効期限を秒単位で設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr "`px(milliseconds)`: 指定した有効期限をミリ秒単位で設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr "`exat(timestamp-seconds)`: キーの有効期限が切れる Unix 時間を秒単位で設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr "`pxat(timestamp-milliseconds)`: キーの有効期限が切れる Unix 時間をミリ秒単位で設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`nx()` - Only set the key if it does not already exist."
msgstr "`nx()`: キーがまだ存在しない場合にのみ、キーを設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`xx()` - Only set the key if it already exists."
msgstr "`xx()`: キーがすでに存在する場合にのみ、キーを設定します。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr "`keepttl()`: キーに関連付けられた有効期限を保持します。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Store binary data"
msgstr "バイナリーデータの格納"

#: _guides/redis-reference.adoc
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr "Redis の _文字列_ は、イメージのようなバイナリーデータを格納するために使用することができます。この場合、値のタイプとして `byte[]` を使用します。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Store a counter"
msgstr "カウンターの格納"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can store counters in Redis as demonstrated below:"
msgstr "以下に示すように、Redis にカウンターを格納することができます。"

#: _guides/redis-reference.adoc
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr "コマンドを取得します。今回は `Long` 値を操作します。"

#: _guides/redis-reference.adoc
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr "与えられた `key` に対応するカウンターを取得します。カウンターが格納されていない場合は、 `0L` を返します。"

#: _guides/redis-reference.adoc
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr "値を増やします。キーのカウンターが格納されていない場合は、 `incr` コマンドは 0 を値とみなします (したがって `incr` は値を 1 に設定します)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr "他にも、カウンターを操作する際に便利なメソッドがあります。以下に例を示します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr "`incrby`: 増分値 (正または負) を設定することができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr "`incrbyfloat` - float/double として増分値を設定できます (格納される値は double になります)。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`set` - to set an initial value if needed"
msgstr "`set`: 必要に応じて初期値を設定します．"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr "`decr` および `decrby`: 格納された値を減らすことができます。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Communicate with pub/sub"
msgstr "pub/subとの通信"

#: _guides/redis-reference.adoc
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the `pubsub` group."
msgstr "Redisでは、チャンネルに _メッセージ_ を送信したり、そのメッセージをリッスンしたりすることができます。これらの機能は、 `pubsub` グループから利用できます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr "以下のスニペットは、_キャッシュ_ が `set` ごとに `Notification` を発行する方法と、サブスクライバーがその通知を受信する方法を示しています。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use Redis transactions"
msgstr "Redisトランザクションの使用"

#: _guides/redis-reference.adoc
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr "Redis トランザクションは、リレーショナルデータベースのトランザクションとは少し異なります。Redis トランザクションは、まとめて実行されるコマンドのバッチです。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr "Redis トランザクションはキーのセットを _監視_ することができ、トランザクションの実行中にこれらのキーのいずれかが更新された場合、トランザクションを _破棄_ します。"

#: _guides/redis-reference.adoc
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr "トランザクション内でキューに入れられたコマンドは、トランザクション全体が実行される前に実行されることはありません。つまり、トランザクションの最中に結果を取得することはできません。結果はトランザクションの完了後にアクセスする `TransactionResult` オブジェクトに蓄積されます。このオブジェクトには、トランザクションが成功したか破棄されたかに関係なく含まれ、成功した場合は各コマンドの結果 (コマンドの順番でインデックス化されています) が含まれます。"

#: _guides/redis-reference.adoc
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr ""
"トランザクションを開始するには、 `withTransaction` メソッドを使用します。\n"
"このメソッドは `Consumer<TransactionalRedisDataSource>` を受け取ります。これは、コマンドが `void` (リアクティブバリアントでは `Uni<Void>`) を返すことを除けば、通常の `RedisDataSource` と同じ API です。\n"
"そのコンシューマーが返されたとき、トランザクションは _実行_ されます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr "次のスニペットは、2 つの関連する _書き込み_ を実行するトランザクションを作成する方法を示しています。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using `tx.discard()`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr "受け取った `tx` オブジェクトは、 `tx.discard()` を使用してトランザクションを _破棄_ することもできます。返された `TransactionResult` から、各コマンドの結果を取り出すことができます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr "データソースのリアクティブバリアントを使用する場合、渡されるコールバックは `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`: となります。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as ``String``s to the second, vararg parameter of the `withTransaction` method:"
msgstr "トランザクションの実行は _キーによって_ 条件付けすることができます。渡されたキーがトランザクショ ンの実行中に変更されると、トランザクションは破棄されます。キーは `withTransaction` メソッドの2番目の vararg パラメータに `String` s として渡されます："

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr "トランザクションの中から pub/sub 機能を使用することはできません。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Implement the optimistic locking pattern"
msgstr "楽観的ロックパターンの実装"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method allowing execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr "楽観的ロックを使用するには、 `withTransaction` メソッドの変種を使用し、トランザクション開始前にコードを実行できるようにする必要があります。つまり、以下のように実行されます："

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr "たとえば、フィールドが存在する場合にのみハッシュの値を更新する必要がある場合は、以下のような API を使用することになります。"

#: _guides/redis-reference.adoc
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr "プレトランザクションブロックまたはトランザクションブロックの実行前または実行中に監視されているキーの 1 つがタッチされた場合、トランザクションは中断されます。プレトランザクションブロックは、トランザクションブロックが使用できる結果を生成します。トランザクション内では、コマンドは結果を生成しないので、この構成は必要です。結果は、トランザクションの実行後にのみ取得することができます。"

#: _guides/redis-reference.adoc
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr "プレトランザクションブロックとトランザクションブロックは、同じ Redis 接続で呼び出されます。その結果、プレトランザクションブロックは、渡されたデータソースを使用してコマンドを実行する必要があります。したがって、コマンドはその接続から発行されます。これらのコマンドは、監視されたキーを変更することはできません。"

#: _guides/redis-reference.adoc
msgid "Error handling"
msgstr "エラー処理"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"If the transaction block returns successfully (or completes with an item in case of the reactive API), the transaction is executed.\n"
"Note that in this case, some transaction commands may succeed and some may fail; this is standard Redis behavior.\n"
"The `TransactionResult.hasErrors()` method indicates whether at least one command failed.\n"
"Results of failed commands in the `TransactionResult` are represented as ``Throwable``s.\n"
"If the transaction block throws an exception (or completes with a failure in case of the reactive API), the transaction is discarded automatically and the exception is rethrown (or the resulting `Uni` completes with the same failure in case of the reactive API)."
msgstr "トランザクション・ブロックが正常にリターンすると（あるいはリアクティブAPIの場合はアイテムで完了すると）、トランザクションが実行されます。この場合、トランザクションコマンドの中には成功するものと失敗するものがあることに注意してください。 `TransactionResult.hasErrors()` メソッドは、少なくとも1つのコマンドが失敗したかどうかを示します。 `TransactionResult` 。失敗したコマンドの結果は、 `Throwable` sとして表されます。トランザクションブロックが例外をスローした場合（またはリアクティブAPIの場合に失敗して完了した場合）、トランザクションは自動的に破棄され、例外が再度スローされます（または、リアクティブAPIの場合に同じ失敗で結果の `Uni` が完了します）。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"In case of the optimistic locking API, if the pre-transaction block returns successfully (or completes with an item in case of the reactive API), the transaction is started and execution proceeds to the transaction block.\n"
"If the pre-transaction block throws an exception (or completes with a failure in case of the reactive API), all watched keys are ``UNWATCH``ed automatically and the exception is rethrown (or the resulting `Uni` completes with the same failure in case of the reactive API).\n"
"In this case, the transaction is not started and the transaction block is not executed."
msgstr "楽観的ロッキングAPIの場合、プレトランザクションブロックが正常終了すると(またはリアクティブAPIの場合はアイテムで完了すると)、トランザクションが開始され、トランザクションブロックに実行が進みます。pre-transaction ブロックが例外をスローした場合 (または reactive API の場合は失敗で完了した場合)、ウォッチされていたすべてのキーは自動的に `UNWATCH` になり、例外が再スローされます (または reactive API の場合は、結果の `Uni` が同じ失敗で完了します)。この場合、トランザクションは開始されず、トランザクションブロックは実行されない。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid "Transactions in Redis Cluster"
msgstr "Redisクラスタでのトランザクション"

#: _guides/redis-reference.adoc
#, fuzzy
msgid "In the cluster mode, transaction commands (`MULTI`, `EXEC`, `DISCARD`, `WATCH`, `UNWATCH`) are handled specially."
msgstr "クラスタ・モードでは、トランザクション・コマンド ( `MULTI` , `EXEC` , `DISCARD` , `WATCH` , `UNWATCH` ) は特別に扱われます。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid "By default, transactions in cluster are disabled and transaction commands immediately fail."
msgstr "デフォルトでは、クラスタ内のトランザクションは無効になっており、トランザクションコマンドは直ちに失敗します。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"It is however possible to enable single-node transactions by setting `quarkus.redis.cluster-transactions` to `single-node`.\n"
"Note that this setting only makes sense in the cluster mode and is ignored otherwise."
msgstr "ただし、 `quarkus.redis.cluster-transactions` を `single-node` に設定することで、シングル・ノード・トランザクションを有効にすることができます。この設定はクラスタ・モードでのみ意味を持ち、それ以外では無視されることに注意してください。"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"In this mode, the `MULTI` command is queued and is only issued when the next command is executed.\n"
"This next command binds the connection to the corresponding node of the Redis cluster (so it should have keys, otherwise the target node is random).\n"
"All subsequent commands are targeted to that node.\n"
"If some of the subsequent commands have a key that belongs to another node, the command fails on the server side.\n"
"If `WATCH` is used before `MULTI`, its key(s) determine to which node the connection is bound and the subsequent `MULTI` is not queued.\n"
"If `WATCH` keys belong to multiple nodes, the command fails on the client side."
msgstr "このモードでは、 `MULTI` コマンドはキューに入れられ、次のコマンドが実行されたときにのみ発行されます。この次のコマンドは、接続をRedisクラスタの対応するノードにバインドします（そのため、キーを持っている必要があり、そうでない場合はターゲット・ノードがランダムになります）。後続のコマンドはすべてそのノードをターゲットにします。後続のコマンドの一部が別のノードに属するキーを持つ場合、コマンドはサーバー側で失敗します。 `MULTI` の前に `WATCH` が使用された場合、そのキーによって接続がどのノードにバインドされるかが決定され、後続の `MULTI` はキューに入れられません。 `WATCH` キーが複数のノードに属している場合、コマンドはクライアント側で失敗します。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Execute custom commands"
msgstr "カスタムコマンドの実行"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr "カスタムコマンドや API でサポートされていないコマンドを実行するには、以下の方法を使用します。"

#: _guides/redis-reference.adoc
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr "`execute` メソッドは Redis にコマンドを送信し、 `Response` を取得します。コマンド名は最初のパラメーターとして渡されます。コマンドには、任意の数の **String** パラメーターを追加することができます。結果は `Response` オブジェクトにラップされます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The reactive variant returns a `Uni<Response>`."
msgstr "リアクティブバリアントは `Uni<Response>` を返します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can also execute custom command in a transaction."
msgstr "また、トランザクション内でカスタムコマンドを実行することも可能です。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Preload data into Redis"
msgstr "Redisにデータをプリロードする"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "On startup, you can configure the Redis client to preload data into the Redis database."
msgstr "起動時に、RedisクライアントはRedisデータベースにデータをプリロードするように設定することができます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure the load scripts"
msgstr "ロードスクリプトの設定"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Specify the _load script_ you want to load using:"
msgstr "使用する _ロードスクリプト_ を指定します:"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "`load-script` is a build time property than cannot be overridden at runtime."
msgstr "`load-script` はビルド時のプロパティであり、実行時にオーバーライドすることはできません。"

#: _guides/redis-reference.adoc
msgid ""
"Note that each client can have a different script, even a list of scripts.\n"
"In the case of a list, the data is imported in the list order (for example, first `actors.redis`, then `movies.redis` for the `my-redis` client)."
msgstr "各クライアントは異なるスクリプトを持つことができ、スクリプトのリストを持つこともできることに注意してください。リストの場合、データはリストの順番でインポートされます（たとえば、最初に `actors.redis` 、次に `my-redis` クライアントのための `movies.redis` ）。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Write load scripts"
msgstr "ロードスクリプトの作成"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The `.redis` file follows a _one command per line_ format:"
msgstr "`.redis` ファイルは、 _1行に1コマンド_ の形式をとっています:"

#: _guides/redis-reference.adoc
msgid ""
"Quarkus batches all the commands from a single file and sends all the commands.\n"
"The loading process fails if there is any error, but the previous instructions may have been executed.\n"
"To avoid that, you can wrap your command into a Redis _transaction_:"
msgstr "Quarkusは、1つのファイルからすべてのコマンドを一括して送信します。読み込み処理はエラーがあると失敗しますが、前の命令が実行されている可能性があります。それを避けるために、コマンドをRedis _トランザクション_ にラップすることができます:"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure the pre-loading"
msgstr "プリロードの設定"

#: _guides/redis-reference.adoc
msgid ""
"The data is loaded when the application starts.\n"
"By default, it drops the whole database before importing.\n"
"You can prevent this using `quarkus.redis.flush-before-load=false`."
msgstr "アプリケーションの起動時にデータを読み込みます。デフォルトでは、インポートする前にデータベース全体をドロップします。これを防ぐには、 `quarkus.redis.flush-before-load=false` を使用します。"

#: _guides/redis-reference.adoc
msgid ""
"Also, the import process only runs if the database is empty (no key).\n"
"You can force to import even if there is data using the `quarkus.redis.load-only-if-empty=false`"
msgstr "また、インポート処理は、データベースが空（キーなし）の場合のみ実行されます。 `quarkus.redis.load-only-if-empty=false` を使用すれば、データがあっても強制的にインポートすることができます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Distinguish dev/test vs. prod when pre-loading"
msgstr "プリロード時の開発/テストと実稼働の区別"

#: _guides/redis-reference.adoc
msgid ""
"As mentioned above, in dev and test modes, Quarkus tries to import data by looking for the `src/main/resources/import.redis`.\n"
"This behavior is disabled in _prod_ mode, and if you want to import even in production, add:"
msgstr "上記のように、devやtestモードでは、Quarkusは `src/main/resources/import.redis` を探してデータをインポートしようとします。この動作は _prod_ モードでは無効になっており、実稼働環境でもインポートしたい場合は、以下を追加します:"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Before importing in _prod_ mode, make sure you configured `quarkus.redis.flush-before-load` accordingly."
msgstr "_prod_ モードでインポートする前に、 `quarkus.redis.flush-before-load` を適切に設定してください。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "In dev mode, to reload the content of the `.redis` load scripts, you need to add: `%dev.quarkus.vertx.caching=false`"
msgstr "devモードでは、 `.redis` ロードスクリプトの内容を再読み込みするため、 `%dev.quarkus.vertx.caching=false` を追加する必要があります"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use the Vert.x redis client"
msgstr "Vert.x redisクライアントの使用"

#: _guides/redis-reference.adoc
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr "高レベルの API に加えて、Vertx Redis クライアントをコードで直接使用することができます。Vert.x Redis クライアントのドキュメントは https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web サイト] で公開されています。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure Redis hosts programmatically"
msgstr "プログラムでRedisホストを設定"

#: _guides/redis-reference.adoc
#, fuzzy
msgid ""
"The `RedisHostsProvider` programmatically provides Redis hosts.\n"
"This allows for configuration of properties like Redis connection password coming from other sources."
msgstr "`RedisHostsProvider` はプログラムで Redis ホストを提供します。これにより、他のソースから来たRedis接続パスワードのようなプロパティを設定することができます。"

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr "これは、application.properties に機密データを格納する必要がなくなるので便利です。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The host provider can be used to configure the redis client like shown below"
msgstr "以下に示すように、ホストプロバイダーを使用して redis クライアントを設定することができます。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Customize the Redis options programmatically"
msgstr "プログラムによる Redis オプションのカスタマイズ"

#: _guides/redis-reference.adoc
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr "Redis クライアントのオプションをカスタマイズするために、 `io.quarkus.redis.client.RedisOptionsCustomizer` インターフェイスを実装した Bean を公開することができます。この Bean は、設定された各 Redis クライアントに対して呼び出されます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use the Redis Dev Services"
msgstr "Redis Dev Servicesの使用"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr "link:redis-dev-services[Redis Dev Service] を参照してください。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure Redis observability"
msgstr "Redisのオブザーバビリティの設定"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Enable the health checks"
msgstr "ヘルスチェックの有効化"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr "`quarkus-smallrye-health` エクステンションを使用している場合、 `quarkus-redis` は Redis サーバーへの接続を検証するための readiness ヘルスチェックを自動的に追加します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "そのため、アプリケーションの `/q/health/ready` エンドポイントにアクセスすると、接続の検証状況に関する情報が表示されます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr "この動作は、 `application.properties` の `quarkus.redis.health.enabled` プロパティーを `false` に設定することで無効にできます。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Enable metrics"
msgstr "メトリクスの有効化"

#: _guides/redis-reference.adoc
msgid ""
"Redis client metrics are automatically enabled when the application also uses the xref:telemetry-micrometer.adoc[`quarkus-micrometer`] extension.\n"
"Micrometer collects the metrics of all the Redis clients implemented by the application."
msgstr "Redisクライアント・メトリクスは、アプリケーションが xref:telemetry-micrometer.adoc[`quarkus-micrometer`] エクステンションを使用している場合は、自動的に有効になります。micrometerは、アプリケーションが実装するすべてのRedisクライアントのメトリクスを収集します。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "As an example, if you export the metrics to Prometheus, you will get:"
msgstr "例えば、メトリクスをPrometheusにエクスポートすると、以下のように取得できます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The Redis client name can be found in the _tags_."
msgstr "Redisクライアント名は、 _タグ_ で確認できます。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The metrics contain both the Redis connection pool metrics (`redis_pool_*`) and the metrics about the command execution (`redis_commands_*`) such as the number of command, successes, failures, and durations."
msgstr "メトリクスには、Redis接続プールのメトリクス（ `redis_pool_*` ）と、コマンド実行に関するメトリクス（ `redis_commands_*` ）（コマンド数、成功、失敗、継続時間など）の両方が含まれています。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Disable metrics"
msgstr "メトリクスの無効か"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To disable the Redis client metrics when `quarkus-micrometer` is used, add the following property to the application configuration:"
msgstr "`quarkus-micrometer` が使用されている時にRedisクライアントメトリクスを無効にするには、アプリケーション設定に次のプロパティを追加します:"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _guides/redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> ビルド時に固定された設定プロパティー。その他の設定プロパティーは、すべて実行時にオーバーライド可能です。<input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
