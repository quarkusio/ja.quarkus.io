msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.5\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/cache.adoc
#, no-wrap
msgid "Application Data Caching"
msgstr "アプリケーションデータのキャッシング"

#. type: Plain text
#: _guides/cache.adoc
msgid "In this guide, you will learn how to enable application data caching in any CDI managed bean of your Quarkus application."
msgstr "このガイドでは、QuarkusアプリケーションのCDI管理されたBeanでアプリケーションデータのキャッシングを有効にする方法について説明します。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Scenario"
msgstr "シナリオ"

#: _guides/cache.adoc
msgid ""
"Let's imagine you want to expose in your Quarkus application a REST API that allows users to retrieve the weather forecast for the next three days.\n"
"The problem is that you have to rely on an external meteorological service which only accepts requests for one day at a time and takes forever to answer.\n"
"Since the weather forecast is updated once every twelve hours, caching the service responses would definitely improve your API performances."
msgstr "Quarkusアプリケーションで、ユーザーが今後3日間の天気予報を取得できるREST APIを公開したいとします。問題は、一度に1日分のリクエストしか受け付けず、応答に時間がかかる外部の気象サービスに依存しなければならないことです。天気予報は12時間に一度更新されるので、サービスのレスポンスをキャッシュすればAPIのパフォーマンスは間違いなく向上します。"

#. type: Plain text
#: _guides/cache.adoc
msgid "We'll do that using a single Quarkus annotation."
msgstr "これをQuarkusの単一のアノテーションを使用して行います。"

#: _guides/cache.adoc
msgid ""
"In this guide, we use the default Quarkus Cache backend (Caffeine).\n"
"You can use Infinispan or Redis instead.\n"
"Refer to the xref:cache-infinispan-reference.adoc[Infinispan cache backend reference] to configure the Infinispan backend.\n"
"Refer to the xref:cache-redis-reference.adoc[Redis cache backend reference] to configure the Redis backend."
msgstr ""
"このガイドでは、デフォルトのQuarkus Cacheバックエンド（Caffeine）を使用します。\n"
"代わりに、InfinispanまたはRedisを使用できます。\n"
"Infinispanバックエンドを設定するには、 xref:cache-infinispan-reference.adoc[Infinispanキャッシュバックエンドリファレンス] を参照してください。\n"
"Redis バックエンドを設定するには、 xref:cache-redis-reference.adoc[Redis キャッシュバックエンドリファレンス] を参照してください。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _guides/cache.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローン `git clone {quickstarts-clone-url}` するか、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The solution is located in the `cache-quickstart` link:{quickstarts-tree-url}/cache-quickstart[directory]."
msgstr "ソリューションは `cache-quickstart` link:{quickstarts-tree-url}/cache-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: _guides/cache.adoc
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "まず、以下のコマンドで新しいQuarkusプロジェクトを作成します。"

#: _guides/cache.adoc
msgid "This command generates the project and imports the `cache` and `rest-jackson` extensions."
msgstr "このコマンドはプロジェクトを生成し、 `cache` と `rest-jackson` エクステンションモジュールをインポートします。"

#: _guides/cache.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `cache` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `cache` エクステンションを追加することができます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに以下の内容が追加されます。"

#. type: Block title
#: _guides/cache.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/cache.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Creating the REST API"
msgstr "REST APIの作成"

#: _guides/cache.adoc
msgid ""
"Let's start by creating a service that will simulate an extremely slow call to the external meteorological service.\n"
"Create `src/main/java/org/acme/cache/WeatherForecastService.java` with the following content:"
msgstr "まずは、外部気象サービスへの非常に遅い呼び出しをシミュレートするサービスを作成してみましょう。以下の内容で `src/main/java/org/acme/cache/WeatherForecastService.java` を作成します。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This is where the slowness comes from."
msgstr "遅さはここに由来します。"

#: _guides/cache.adoc
msgid ""
"We also need a class that will contain the response sent to the users when they ask for the next three days weather forecast.\n"
"Create `src/main/java/org/acme/cache/WeatherForecast.java` this way:"
msgstr "また、ユーザーが次の3日間の天気予報を求めたときに送信されるレスポンスを含むクラスも必要です。 `src/main/java/org/acme/cache/WeatherForecast.java` をこのように作成します:"

#: _guides/cache.adoc
msgid ""
"Now, we just need to create the REST resource.\n"
"Create the `src/main/java/org/acme/cache/WeatherForecastResource.java` file with this content:"
msgstr "あとは、RESTリソースを作成するだけです。 この内容で `src/main/java/org/acme/cache/WeatherForecastResource.java` ファイルを作成します。"

#: _guides/cache.adoc
msgid ""
"If the `daysInFuture` query parameter is omitted, the three days weather forecast will start from the current day.\n"
"Otherwise, it will start from the current day plus the `daysInFuture` value."
msgstr "`daysInFuture` クエリパラメーターが省略された場合、3 日間の天気予報は現在の日から始まります。それ以外の場合は、現在の日に `daysInFuture` の値を加えたものから始まります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "We're all done! Let's check if everything's working."
msgstr "完了です！うまくいっているか確認してみましょう。"

#. type: Plain text
#: _guides/cache.adoc
msgid "First, run the application using dev mode from the project directory:"
msgstr "まず、プロジェクトディレクトリからDevモードでアプリケーションを実行します。"

#: _guides/cache.adoc
msgid ""
"Then, call `http://localhost:8080/weather?city=Raleigh` from a browser.\n"
"After six long seconds, the application will answer something like this:"
msgstr "次に、ブラウザから `http://localhost:8080/weather?city=Raleigh` を呼び出します。6秒ほど長い時間が経過すると、アプリケーションはこのような回答をします:"

#. type: delimited block =
#: _guides/cache.adoc
msgid "The response content may vary depending on the day you run the code."
msgstr "コードを実行する日によってレスポンスの内容が異なる場合があります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "You can try calling the same URL again and again, it will always take six seconds to answer."
msgstr "何度同じURLを呼び出してみても、必ず6秒でレスポンスが返却されます。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Enabling the cache"
msgstr "キャッシュの有効化"

#: _guides/cache.adoc
msgid ""
"Now that your Quarkus application is up and running, let's tremendously improve its response time by caching the external meteorological service responses.\n"
"Update the `WeatherForecastService` class like this:"
msgstr "Quarkusアプリケーションが動いたので、外部の気象サービスのレスポンスをキャッシュすることで、レスポンスタイムを大幅に改善してみましょう。 `WeatherForecastService` クラスを次のように修正します。"

#. type: Plain text
#: _guides/cache.adoc
msgid "We only added this annotation (and the associated import of course)."
msgstr "このアノテーション(もちろん関連するインポートも)を追加しただけです。"

#: _guides/cache.adoc
msgid ""
"Let's try to call `http://localhost:8080/weather?city=Raleigh` again.\n"
"You're still waiting a long time before receiving an answer.\n"
"This is normal since the server just restarted and the cache was empty."
msgstr "`http://localhost:8080/weather?city=Raleigh` をもう一度呼び出して確認してみてください。返事が来るまでにまだ長い時間待たされています。これはサーバーが再起動したばかりでキャッシュが空になっているので正常です。"

#: _guides/cache.adoc
msgid ""
"Wait a second! The server restarted by itself after the `WeatherForecastService` update?\n"
"Yes, this is one of Quarkus amazing features for developers called `live coding`."
msgstr "ちょっと待って!? `WeatherForecastService` のアップデート後、サーバーが勝手に再起動した?はい、これは、 `live coding` と呼ばれる開発者のためのQuarkusの驚くべき機能の一つです。"

#: _guides/cache.adoc
msgid ""
"Now that the cache was loaded during the previous call, try calling the same URL.\n"
"This time, you should get a super fast answer with an `executionTimeInMs` value close to 0."
msgstr "前回の呼び出しでキャッシュが読み込まれたので、同じ URL を呼び出してみてください。今度は、 `executionTimeInMs` の値が 0 に近い超高速な応答が返ってくるはずです。"

#: _guides/cache.adoc
msgid ""
"Let's see what happens if we start from one day in the future using the `http://localhost:8080/weather?city=Raleigh&daysInFuture=1` URL.\n"
"You should get an answer two seconds later since two of the requested days were already loaded in the cache."
msgstr "URL `http://localhost:8080/weather?city=Raleigh&daysInFuture=1` を使って未来のある日から始めるとどうなるか見てみましょう。要求された日のうち2つはすでにキャッシュに読み込まれていたので、2秒後に回答が得られるはずです。"

#: _guides/cache.adoc
msgid ""
"You can also try calling the same URL with a different city and see the cache in action again.\n"
"The first call will take six seconds and the following ones will be answered immediately."
msgstr "また、同じURLを別の都市で呼び出してみて、再度キャッシュの動作を確認することもできます。最初の呼び出しには6秒ほどかかり、次の呼び出しにはすぐに出ます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Congratulations! You just added application data caching to your Quarkus application with a single line of code!"
msgstr "おめでとうございます！たった1行のコードでQuarkusアプリケーションにアプリケーションデータのキャッシングを追加しました！"

#: _guides/cache.adoc
msgid ""
"Do you want to learn more about the Quarkus application data caching abilities?\n"
"The following sections will show you everything there is to know about it."
msgstr "Quarkusアプリケーションのデータキャッシング機能について詳しく知りたいですか?以下のセクションでは、この機能について知っておくべきことをすべて紹介します。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Caching using annotations"
msgstr "アノテーションを利用したキャッシング"

#. type: Plain text
#: _guides/cache.adoc
msgid "Quarkus offers a set of annotations that can be used in a CDI managed bean to enable caching abilities."
msgstr "Quarkusは、CDI管理されたBeanで使用できる、キャッシュ機能を有効にするアノテーションのセットを提供します。"

#: _guides/cache.adoc
msgid ""
"Caching annotations are not allowed on private methods.\n"
"They will work fine with any other access modifier including package-private (no explicit modifier)."
msgstr "プライベートメソッドではアノテーションのキャッシュは許可されていません。package-private (明示的な修飾子を持たない) を含む他のアクセス修飾子では問題なく動作します。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "@CacheResult"
msgstr "@CacheResult"

#. type: Plain text
#: _guides/cache.adoc
msgid "Loads a method result from the cache without executing the method body whenever possible."
msgstr "可能な限り、メソッドボディを実行せずにキャッシュからメソッドの結果を読み込みます。"

#: _guides/cache.adoc
msgid ""
"When a method annotated with `@CacheResult` is invoked, Quarkus will compute a cache key and use it to check in the cache whether the method has been already invoked.\n"
"See the <<cache-keys-building-logic>> section of this guide to learn how the cache key is computed.\n"
"If a value is found in the cache, it is returned and the annotated method is never actually executed.\n"
"If no value is found, the annotated method is invoked and the returned value is stored in the cache using the computed key."
msgstr "`@CacheResult` でアノテーションされたメソッドが呼び出されると、Quarkusはキャッシュキーを計算し、それを使用して、そのメソッドがすでに呼び出されているかどうかをキャッシュでチェックします。キャッシュキーの計算方法については、このガイドの <<cache-keys-building-logic>> のセクションを参照してください。 キャッシュ内に値が見つかった場合、その値が返され、アノテーションされたメソッドが実際に実行されることはありません。 値が見つからない場合、アノテーションされたメソッドが呼び出され、返された値は計算されたキーを使用してキャッシュに格納されます。"

#: _guides/cache.adoc
msgid ""
"A method annotated with `CacheResult` is protected by a lock on cache miss mechanism.\n"
"If several concurrent invocations try to retrieve a cache value from the same missing key, the method will only be invoked once.\n"
"The first concurrent invocation will trigger the method invocation while the subsequent concurrent invocations will wait for the end of the method invocation to get the cached result.\n"
"The `lockTimeout` parameter can be used to interrupt the lock after a given delay.\n"
"The lock timeout is disabled by default, meaning the lock is never interrupted.\n"
"See the parameter Javadoc for more details."
msgstr "`CacheResult` でアノテーションされたメソッドは、キャッシュミスのロックメカニズムによって保護されています。複数の同時呼び出しが同じ欠落キーからキャッシュ値を取得しようとした場合、メソッドは一度だけ呼び出されます。最初の同時呼び出しはメソッドの呼び出しをトリガし、その後の同時呼び出しはキャッシュされた結果を取得するためにメソッドの呼び出しの終了を待ちます。 `lockTimeout` パラメーターを使用すると、所定の遅延後にロックを中断することができます。ロックのタイムアウトは既定では無効になっており、ロックが中断されることはありません。詳細は、パラメーター Javadoc を参照してください。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This annotation cannot be used on a method returning `void`."
msgstr "このアノテーションは、 `void` を返すメソッドでは使用できません。"

#: _guides/cache.adoc
msgid ""
"Quarkus is able to also cache `null` values unlike the underlying Caffeine provider.\n"
"See <<negative-cache,more on this topic below>>."
msgstr "Quarkusは、基礎となるCaffeineプロバイダとは異なり、 `null` の値をキャッシュすることもできます。 link:#negative-cache[このトピックの詳細は以下] を参照してください。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "@CacheInvalidate"
msgstr "@CacheInvalidate"

#. type: Plain text
#: _guides/cache.adoc
msgid "Removes an entry from the cache."
msgstr "キャッシュからエントリーを削除します。"

#: _guides/cache.adoc
msgid ""
"When a method annotated with `@CacheInvalidate` is invoked, Quarkus will compute a cache key and use it to try to remove an existing entry from the cache.\n"
"See the <<cache-keys-building-logic>> section of this guide to learn how the cache key is computed.\n"
"If the key does not identify any cache entry, nothing will happen."
msgstr "`@CacheInvalidate` のアノテーションが付いたメソッドが呼び出されると、Quarkus はキャッシュキーを計算し、それを使ってキャッシュから既存のエントリを削除しようとします。 キャッシュキーの計算方法については、このガイドの <<cache-keys-building-logic>> のセクションを参照してください。 もしキーがどのキャッシュエントリも特定できない場合は、何も起こりません。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "@CacheInvalidateAll"
msgstr "@CacheInvalidateAll"

#. type: Plain text
#: _guides/cache.adoc
msgid "When a method annotated with `@CacheInvalidateAll` is invoked, Quarkus will remove all entries from the cache."
msgstr "`@CacheInvalidateAll` でアノテーションされたメソッドが呼び出されると、Quarkusはキャッシュからすべてのエントリーを削除します。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "@CacheKey"
msgstr "@CacheKey"

#: _guides/cache.adoc
msgid ""
"When a method argument is annotated with `@CacheKey`, it is identified as a part of the cache key during an invocation of a\n"
"method annotated with `@CacheResult` or `@CacheInvalidate`."
msgstr "メソッドの引数が `@CacheKey` でアノテーションされている場合、 `@CacheResult` または `@CacheInvalidate` でアノテーションされたメソッドの呼び出し時にキャッシュキーの一部として識別されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This annotation is optional and should only be used when some method arguments are NOT part of the cache key."
msgstr "このアノテーションはオプションで、メソッドの引数の一部がキャッシュキーの一部ではない場合にのみ使用されるべきです。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Cache keys building logic"
msgstr "キャッシュキー構築ロジック"

#. type: Plain text
#: _guides/cache.adoc
msgid "Cache keys are built by the annotations API using the following logic:"
msgstr "キャッシュキーはアノテーションAPIにより、以下のロジックで構築されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "If an `io.quarkus.cache.CacheKeyGenerator` is declared in a `@CacheResult` or a `@CacheInvalidate` annotation, then it is used to generate the cache key. The `@CacheKey` annotations that might be present on some method arguments are ignored."
msgstr " `io.quarkus.cache.CacheKeyGenerator` が `@CacheResult` または `@CacheInvalidate` アノテーションで宣言されている場合、キャッシュ・キーの生成に使用されます。いくつかのメソッド引数の存在する可能性のある `@CacheKey` アノテーションは無視されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Otherwise, if the method has no arguments, then the cache key is an instance of `io.quarkus.cache.DefaultCacheKey` built from the cache name."
msgstr "このメソッドに引数がなければ、キャッシュキーはキャッシュ名から作成される `io.quarkus.cache.DefaultCacheKey` のインスタンスとなります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Otherwise, if the method has exactly one argument, then that argument is the cache key."
msgstr "このメソッドが正確に1つの引数を持つ場合、この引数はキャッシュキーとなります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Otherwise, if the method has multiple arguments but only one annotated with `@CacheKey`, then that annotated argument is the cache key."
msgstr "メソッドに複数の引数があり、 `@CacheKey` でアノテーションされたものが１つだけある場合、このアノテーションされた引数がキャッシュキーとなります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Otherwise, if the method has multiple arguments annotated with `@CacheKey`, then the cache key is an instance of `io.quarkus.cache.CompositeCacheKey` built from these annotated arguments."
msgstr "メソッドが `@CacheKey` でアノテーションされた複数の引数を持つ場合、キャッシュキーはこれらのアノテーションされた引数から構築される `io.quarkus.cache.CompositeCacheKey` のインスタンスになります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Otherwise, if the method has multiple arguments and none of them are annotated with `@CacheKey`, the cache key is an instance of `io.quarkus.cache.CompositeCacheKey` built from all the method arguments."
msgstr "メソッドが複数の引数を持ち、そのどれにも `@CacheKey` でアノテーションされていない場合、キャッシュキーはすべてのメソッド引数から構築される `io.quarkus.cache.CompositeCacheKey` のインスタンスになります。"

#. type: delimited block =
#: _guides/cache.adoc
msgid "Each non-primitive method argument that is part of the key must implement `equals()` and `hashCode()` correctly for the cache to work as expected."
msgstr "キーの一部である非プリミティブメソッドの各引数は、キャッシュが期待通りに動作するために、 `equals()` と `hashCode()` を正しく実装する必要があります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "When a cache key is built from several method arguments, whether they are explicitly identified with `@CacheKey` or not, the building logic depends on the order of these arguments in the method signature. On the other hand, the arguments names are not used at all and do not have any effect on the cache key."
msgstr "キャッシュキーが複数のメソッド引数から構築される場合、それらが明示的に `@CacheKey` で識別されているかどうかに関わらず、構築ロジックはメソッドシグネチャ内のこれらの引数の順序に依存します。一方、引数名は全く使用されず、キャッシュキーには何の影響も与えません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Calling this method WILL invalidate values cached by the `load` method even if the key elements names have been swapped."
msgstr "このメソッドを呼び出すと、キー要素名が入れ替わっていても `load` メソッドでキャッシュされた値が無効になります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Calling this method WILL NOT invalidate values cached by the `load` method because the key elements order is different."
msgstr "このメソッドを呼び出すと、キー要素の順序が異なるため、 `load` メソッドでキャッシュされた値が無効になることはありません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Calling this method WILL invalidate values cached by the `load` method because the key elements order is the same."
msgstr "このメソッドを呼び出すと、キー要素の順序が同じなので、 `load` メソッドでキャッシュされた値が無効になります。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Generating a cache key with `CacheKeyGenerator`"
msgstr "`CacheKeyGenerator` でキャッシュキーを生成する"

#: _guides/cache.adoc
msgid ""
"You may want to include more than the arguments of a method into a cache key.\n"
"This can be done by implementing the `io.quarkus.cache.CacheKeyGenerator` interface and declaring that implementation in the `keyGenerator` field of a `@CacheResult` or `@CacheInvalidate` annotation."
msgstr "メソッドの引数以外もキャッシュ・キーに含めたい場合があります。これは、 `io.quarkus.cache.CacheKeyGenerator` インターフェイスを実装し、その実装を `@CacheResult` または `@CacheInvalidate` アノテーションの `keyGenerator` フィールドで宣言することで実現できます。"

#: _guides/cache.adoc
msgid ""
"The class must either represent a CDI bean or declare a public no-args constructor.\n"
"If it represents a CDI bean, then the key generator will be injected during the cache key computation.\n"
"Otherwise, a new instance of the key generator will be created using its default constructor for each cache key computation."
msgstr ""
"このクラスは、CDI Bean を表すか、public no-args コンストラクタを宣言する必要があります。\n"
"それが CDI Bean を表している場合、キー・ジェネレータはキャッシュ・キーの計算中に注入されます。\n"
"そうでない場合は、キャッシュ・キーの計算ごとに、その既定のコンストラクタを使用してキー・ジェネレータの新しいインスタンスが作成されます。"

#: _guides/cache.adoc
msgid ""
"In case of CDI, there must be exactly one bean that has the class in its set of bean types, otherwise the build fails.\n"
"The context associated with the scope of the bean must be active when the `CacheKeyGenerator#generate()` method is invoked.\n"
"If the scope is `@Dependent` then the bean instance is destroyed when the `CacheKeyGenerator#generate()` method completes."
msgstr ""
"CDIの場合，そのBean型の集合にそのクラスをもつBeanが正確に一つ存在しなければならず，そうでない場合，ビルドは失敗します。\n"
"Beanのスコープに関連付けられたコンテキストは， `CacheKeyGenerator#generate()` メソッドが呼び出されるとき，有効でなければなりません。\n"
"スコープが `@Dependent` の場合， `CacheKeyGenerator#generate()` メソッドが完了すると，Bean インスタンスは破棄されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The following key generator will be injected as a CDI bean:"
msgstr "以下のキージェネレータはCDI Beanとして注入されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "External data can be included into the cache key by injecting a CDI bean in the key generator."
msgstr "キージェネレータにCDI Beanをインジェクトすることで、外部データをキャッシュキーに含めることができます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Be careful while using `Method`, some of its methods can be expensive."
msgstr " `Method` を使っている間、メソッドのいくつかは高価になることがあるため注意してください。"

#: _guides/cache.adoc
msgid ""
"Make sure the method has enough arguments before accessing them from their index.\n"
"Otherwise, an `IndexOutOfBoundsException` may be thrown during the cache key computation."
msgstr "インデックスからアクセスする前に、このメソッドが十分な引数を持っていることを確認してください。そうでないと、キャッシュキーの計算中に `IndexOutOfBoundsException` が投げられるかもしれません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The following key generator will be instantiated using its default constructor:"
msgstr "以下のキージェネレータは、デフォルトのコンストラクタを使用してインスタンス化されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Including the method name into the cache key is not expensive, unlike other methods from `Method`."
msgstr "メソッド名をキャッシュキーに含めることは、 `Method` の他のメソッドとは異なり、高価なものではありません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Both kinds of key generators can be used in a similar way:"
msgstr "どちらの種類のキージェネレーターも、同様の方法で使用することができます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This key generator is a CDI bean."
msgstr "このキージェネレーターはCDI Beanです。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The `@CacheKey` annotation will be ignored because a key generator is declared in the `@CacheResult` annotation."
msgstr "キー・ジェネレータが `@CacheResult` アノテーションで宣言されているため、 `@CacheKey` アノテーションは無視されます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This key generator is not a CDI bean."
msgstr "このキージェネレーターはCDI Beanではありません。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The `@CacheKey` annotation will be ignored when the `foo` cache data is invalidated, but `param1` will be the cache key when the `bar` cache data is invalidated."
msgstr "`@CacheKey` アノテーションは `foo` キャッシュデータが無効化されると無視されますが、 `bar` キャッシュデータが無効化されると `param1` がキャッシュキーになります。"

#: _guides/cache.adoc
#, fuzzy
msgid "@CachedResults"
msgstr "キャッシュされた結果"

#: _guides/cache.adoc
#, fuzzy
msgid "This API is experimental and may change in the future."
msgstr "このAPIは実験的なものであり、将来変更される可能性があります。"

#: _guides/cache.adoc
#, fuzzy
msgid ""
"The `@io.quarkus.cache.CachedResults` qualifier may be applied to injection points to instruct the container to inject a _generated wrapper bean_ that\n"
"delegates all method invocations to the original bean but the return values of selected business methods are cached.\n"
"By default, all non-void non-static business methods are included.\n"
"However, it is possible to exclude methods whose names match one of the regular expressions defined by `@CachedResults#exclude()`.\n"
"The injected class must be either an interface or declare a no-args constructor."
msgstr "`@io.quarkus.cache.CachedResults` 修飾子を注入ポイントに適用して、すべてのメソッド呼び出しを元のBeanに委譲するが、選択されたビジネスメソッドの戻り値はキャッシュされる _生成されたラッパービーンを_ 注入するようにコンテナに指示することができます。デフォルトでは，すべての非ボイド非静的ビジネスメソッドが含まれます。しかし、 `@CachedResults#exclude()` で定義された正規表現のひとつに名前がマッチするメソッドを除外することも可能です。注入されるクラスは、インターフェイスであるか、引数無しコンストラクタを宣言していなければなりません。"

#: _guides/cache.adoc
#, fuzzy
msgid "A _generated wrapper bean_ is injected instead of the original bean that implements the `PingService`."
msgstr "_生成されたラッパービーンは_ 、 `PingService` を実装する元のビーンの代わりに注入されます。"

#: _guides/cache.adoc
#, fuzzy
msgid "The return value of the `service.ping()` invocation will be cached. The cache will be named like `org.example.PingService#ping()`."
msgstr "`service.ping()` 呼び出しの返り値はキャッシュされます。キャッシュの名前は `org.example.PingService#ping()` のようになります。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Caching using the programmatic API"
msgstr "プログラムAPIを使ったキャッシング"

#: _guides/cache.adoc
msgid ""
"Quarkus also offers a programmatic API which can be used to store, retrieve or delete values from any cache declared using the annotations API.\n"
"All operations from the programmatic API are non-blocking and rely on https://smallrye.io/smallrye-mutiny/[Mutiny] under the hood."
msgstr "Quarkusは、アノテーションAPIを使用して宣言された任意のキャッシュから値を保存、取得、削除するために使用できるプログラムAPIも提供しています。プログラムAPIからのすべての操作はノンブロッキングで、フードの下で https://smallrye.io/smallrye-mutiny/[Mutiny] に依存しています。"

#: _guides/cache.adoc
msgid ""
"Before accessing programmatically the cached data, you need to retrieve an `io.quarkus.cache.Cache` instance.\n"
"The following sections will show you how to do that."
msgstr "キャッシュされたデータにプログラムでアクセスする前に、 `io.quarkus.cache.Cache` のインスタンスを取得する必要があります。以下のセクションでは、その方法をご紹介します。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Injecting a `Cache` with the `@CacheName` annotation"
msgstr "`@CacheName` アノテーションとともに `Cache` をインジェクトする"

#. type: Plain text
#: _guides/cache.adoc
msgid "`io.quarkus.cache.CacheName` can be used on a field, a constructor parameter or a method parameter to inject a `Cache`:"
msgstr "`io.quarkus.cache.CacheName` は、フィールド、コンストラクタパラメータ、またはメソッドのパラメータに使用して、 `Cache` をインジェクトすることができます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This is optional."
msgstr "これはオプションです。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This method returns the `Uni<String>` type which is non-blocking."
msgstr "このメソッドは、ノンブロッキングである `Uni<String>` タイプを返します。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The `k` argument contains the cache key value."
msgstr "`k` 引数には、キャッシュキーの値が含まれています。"

#. type: Plain text
#: _guides/cache.adoc
msgid "If you don't need the call to be non-blocking, this is how you can retrieve the cache value in a blocking way."
msgstr "呼び出しをノンブロッキングにする必要がない場合は、このようにしてブロッキングしてキャッシュ値を取得することができます。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Retrieving a `Cache` from the `CacheManager`"
msgstr " `CacheManager` から `Cache` を取得しています。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Another way to retrieve a `Cache` instance consists in injecting the `io.quarkus.cache.CacheManager` first and then retrieving the desired `Cache` from its name:"
msgstr "`Cache` のインスタンスを取得するもう一つの方法は、まず `io.quarkus.cache.CacheManager` をインジェクトし、その名前から目的の `Cache` を取得するやり方です。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Building a programmatic cache key"
msgstr "プログラムキャッシュキーの構築"

#: _guides/cache.adoc
msgid ""
"Before building a programmatic cache key, you need to know how cache keys are built by the annotations API when an annotated method is invoked.\n"
"This is explained in the <<cache-keys-building-logic>> section of this guide."
msgstr "プログラムキャッシュキーを構築する前に、アノテーションメソッドが呼び出されたときにアノテーションAPIによってキャッシュキーがどのように構築されるかを知っておく必要があります。これについては、このガイドの <<cache-keys-building-logic> セクションで説明されています。"

#. type: Plain text
#: _guides/cache.adoc
msgid "Now, if you want to retrieve or delete, using the programmatic API, a cache value that was stored using the annotations API, you just need to make sure the same key is used with both APIs."
msgstr "アノテーションAPIを使って保存されたキャッシュ値を、プログラムAPIを使って取得または削除したい場合、両方のAPIで同じキーが使われていることを確認する必要があります。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Retrieving all keys from a `CaffeineCache`"
msgstr "`CaffeineCache` からすべてのキーを取得します。"

#: _guides/cache.adoc
msgid ""
"The cache keys from a specific `CaffeineCache` can be retrieved as an unmodifiable `Set` as shown below.\n"
"If the cache entries are modified while an iteration over the set is in progress, the set will remain unchanged."
msgstr "特定の `CaffeineCache` からのキャッシュキーは、以下に示すように、変更不可能な `Set` として取得できます。セットに対するイテレーションが進行している間にキャッシュエントリが変更された場合、セットは変更されないままとなります。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Populating a `CaffeineCache`"
msgstr "`CaffeineCache` にデータを追加する"

#: _guides/cache.adoc
msgid ""
"You can populate a `CaffeineCache` using the `CaffeineCache#put(Object, CompletableFuture)` method.\n"
"This method associates the `CompletableFuture` with the given key in the cache. If the cache previously contained a value associated with the key, the old value is replaced by this `CompletableFuture`. If the asynchronous computation fails, the entry will be automatically removed."
msgstr "`CaffeineCache` にデータを追加するには `CaffeineCache#put(Object, CompletableFuture)` メソッドを使います。 このメソッドは `CompletableFuture` をキャッシュ内の与えられたキーと関連付けます。キャッシュに以前からそのキーに関連する値が入っていた場合、古い値はこの `CompletableFuture` に置き換えられます。非同期計算が失敗した場合、そのエントリは自動的に削除されます。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Retrieving a value if a key is present from a `CaffeineCache`"
msgstr "`CaffeineCache` からすべてのキーを取得する"

#: _guides/cache.adoc
msgid ""
"The cache value from a specific `CaffeineCache` can be retrieved if present as shown below.\n"
"If the given key is contained in the cache, the method will return the `CompletableFuture` the specified key is mapped to.\n"
"That `CompletableFuture` may be computing or may already be completed.\n"
"Otherwise, the method will return `null`."
msgstr "特定の `CaffeineCache` からのキャッシュ値は、以下に示すように存在する場合に取得できます。 与えられたキーがキャッシュに含まれている場合、このメソッドは指定されたキーがマッピングされた `CompletableFuture` を返します。 その `CompletableFuture` は計算中であるか、あるいは既に終了している可能性があります。 そうでなければ、このメソッドは `null` を返します。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Changing the expiration policy or the maximum size of a `CaffeineCache` in real time"
msgstr "リアルタイムで `CaffeineCache` の有効期限ポリシーや最大サイズを変更"

#: _guides/cache.adoc
msgid ""
"The expiration policy of a `CaffeineCache` can be changed while a Quarkus app is running if that policy was initially specified in the Quarkus configuration.\n"
"Similarly, the maximum size of a `CaffeineCache` can be changed in real time if the cache was built with an initial maximum size defined in the configuration."
msgstr "`CaffeineCache` の有効期限ポリシーは、そのポリシーが Quarkus の設定で最初に指定されている場合、Quarkus アプリの実行中に変更することができます。同様に、 `CaffeineCache` の最大サイズも、設定に定義された初期最大サイズでキャッシュが構築された場合、リアルタイムで変更できます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This line will only work if the cache was constructed with an `expire-after-access` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "この行は、キャッシュが `expire-after-access` という設定値で構築された場合にのみ機能します。そうでない場合は、 `IllegalStateException` がスローされます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This line will only work if the cache was constructed with an `expire-after-write` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "この行は、キャッシュが `expire-after-write` という設定値で構築された場合にのみ機能します。そうでない場合は、 `IllegalStateException` がスローされます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This line will only work if the cache was constructed with a `maximum-size` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "この行は、キャッシュが `maximum-size` という設定値で構築された場合にのみ機能します。そうでない場合は、 `IllegalStateException` がスローされます。"

#. type: delimited block =
#: _guides/cache.adoc
msgid "The `setExpireAfterAccess`, `setExpireAfterWrite` and `setMaximumSize` methods from `CaffeineCache` must never be invoked from within an atomic scope of a cache operation."
msgstr "`CaffeineCache` の `setExpireAfterAccess` 、 `setExpireAfterWrite` 、 `setMaximumSize` メソッドは、 キャッシュ操作のアトミックスコープ内から決して呼び出してはいけません。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Configuring the underlying caching provider"
msgstr "基礎となるキャッシュプロバイダの設定"

#: _guides/cache.adoc
msgid ""
"This extension uses https://github.com/ben-manes/caffeine[Caffeine] as its underlying caching provider.\n"
"Caffeine is a high performance, near optimal caching library."
msgstr "このエクステンションは、基礎となるキャッシュプロバイダとして link:https://github.com/ben-manes/caffeine[Caffeine] を使用しています。Caffeine は高性能で最適に近いキャッシングライブラリです。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Caffeine configuration properties"
msgstr "Caffeine設定プロパティ"

#: _guides/cache.adoc
msgid ""
"Each of the Caffeine caches backing up the Quarkus application data caching extension can be configured using the following\n"
"properties in the `application.properties` file. By default, caches do not perform any type of eviction if not configured."
msgstr "Quarkusアプリケーションのデータキャッシュエクステンションをバックアップする各Caffeineキャッシュは、 `application.properties` ファイルの以下のプロパティーを使用して設定することができます。デフォルトでは、設定されていない場合、キャッシュはどのようなタイプのエヴィクションも実行しません。"

#. type: delimited block =
#: _guides/cache.adoc
msgid "You need to replace `cache-name` in all the following properties with the real name of the cache you want to configure."
msgstr "以下のすべてのプロパティーで `cache-name` を設定したいキャッシュの実名に置き換える必要があります。"

#: _guides/cache.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Plain text
#: _guides/cache.adoc
msgid "Here's what your cache configuration could look like:"
msgstr "キャッシュの設定は以下のようになります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The `foo` cache is being configured."
msgstr "`foo` キャッシュの設定を行っています。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The `bar` cache is being configured."
msgstr "`bar` キャッシュの設定を行っています。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Enabling Micrometer metrics"
msgstr "Micrometerメトリクスの有効化"

#: _guides/cache.adoc
msgid "Each cache declared using the <<#annotations-api,annotations caching API>> can be monitored using Micrometer metrics."
msgstr "<<#annotations-api,アノテーションキャッシング API>> を使って宣言された各キャッシュは、Micrometerのメトリクスを使ってモニターすることができます。"

#: _guides/cache.adoc
msgid ""
"The cache metrics collection will only work if your application depends on a `quarkus-micrometer-registry-*` extension.\n"
"See the xref:telemetry-micrometer.adoc[Micrometer metrics guide] to learn how to use Micrometer in Quarkus."
msgstr "キャッシュ・メトリクスの収集は、アプリケーションが `quarkus-micrometer-registry-*` エクステンションに依存している場合にのみ機能します。QuarkusでMicrometerを使用する方法については、 xref:telemetry-micrometer.adoc[Micrometerメトリクスガイド] を参照してください。"

#: _guides/cache.adoc
msgid ""
"The cache metrics collection is disabled by default.\n"
"It can be enabled from the `application.properties` file:"
msgstr "デフォルトでは、キャッシュメトリクスの収集は無効になっています。 `application.properties` ファイルから有効にすることができます。"

#. type: delimited block =
#: _guides/cache.adoc
msgid "Like all instrumentation methods, collecting metrics comes with a small overhead that can impact the application performances."
msgstr "全ての計測手法のように、メトリクスの収集にはわずかなオーバーヘッドが伴い、アプリケーションのパフォーマンスに影響を与える可能性があります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "The collected metrics contain cache statistics such as:"
msgstr "収集されたメトリクスには、以下のようなキャッシュの統計情報が含まれています。"

#. type: Plain text
#: _guides/cache.adoc
msgid "the approximate current number of entries in the cache"
msgstr "キャッシュ内のエントリーのおおよその数"

#. type: Plain text
#: _guides/cache.adoc
msgid "the number of entries that were added to the cache"
msgstr "キャッシュに追加されたエントリーの数"

#. type: Plain text
#: _guides/cache.adoc
msgid "the number of times a cache lookup has been performed, including information about hits and misses"
msgstr "ヒットとミスに関する情報を含む、キャッシュルックアップの実行回数"

#. type: Plain text
#: _guides/cache.adoc
msgid "the number of evictions and the weight of the evicted entries"
msgstr "エヴィクションの回数とエヴィクションエントリの重み"

#. type: Plain text
#: _guides/cache.adoc
msgid "Here is an example of cache metrics available for an application that depends on the `quarkus-micrometer-registry-prometheus` extension:"
msgstr "以下は、 `quarkus-micrometer-registry-prometheus` エクステンションに依存するアプリケーションで利用可能なキャッシュメトリクスの例です。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Annotated beans examples"
msgstr "アノテーション付きBeanの例"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Implicit simple cache key"
msgstr "暗黙の簡易キャッシュキー"

#. type: Plain text
#: _guides/cache.adoc
msgid "The cache key is implicit since there's no `@CacheKey` annotation."
msgstr "`@CacheKey` アノテーションがないので、キャッシュキーは暗黙的です。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Explicit composite cache key"
msgstr "明示的な複合キャッシュキー"

#. type: Plain text
#: _guides/cache.adoc
msgid "The cache key is explicitly composed of two elements. The method signature also contains a third argument which is not part of the key."
msgstr "キャッシュキーは明示的に 2 つの要素で構成されています。メソッドシグネチャには、キーの一部ではない第三引数も含まれています。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Default cache key"
msgstr "デフォルトのキャッシュキー"

#. type: Plain text
#: _guides/cache.adoc
msgid "A unique default cache key derived from the cache name is used because the method has no arguments."
msgstr "メソッドには引数がないため、キャッシュ名から派生した一意のデフォルトキャッシュキーが使用されます。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Multiple annotations on a single method"
msgstr "単一メソッドでの複数アノテーション"

#. type: Plain text
#: _guides/cache.adoc
msgid "This method can be used to force a refresh of the cache entry corresponding to the given key."
msgstr "このメソッドを使用して、指定されたキーに対応するキャッシュエントリーを強制的に更新することができます。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This method will invalidate all entries from the `foo` and `bar` caches with a single call."
msgstr "このメソッドは、一度の呼び出しで `foo` および `bar` キャッシュからのすべてのエントリーを無効にします。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Clear all application caches"
msgstr "すべてのアプリケーションキャッシュの消去"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Negative caching and nulls"
msgstr "ネガティブキャッシングとnull"

#: _guides/cache.adoc
msgid ""
"Sometimes one wants to cache the result of an (expensive) remote call.\n"
"If the remote call fails, one may not want to cache the result or exception,\n"
"but rather re-try the remote call on the next invocation."
msgstr "(高価な)リモートコールの結果をキャッシュしたい場合があります。リモートコールが失敗した場合、結果や例外をキャッシュするのではなく、 次の呼び出しでリモートコールを再試行したい場合があります。"

#: _guides/cache.adoc
msgid ""
"A simple approach could be to catch the exception and return `null`, so that the caller can\n"
"act accordingly:"
msgstr "シンプルなアプローチとしては、例外をキャッチして `null` を返すことで、呼び出し元がそれに応じて行動できるようにすることができます。"

#. type: Block title
#: _guides/cache.adoc
#, no-wrap
msgid "Sample code"
msgstr "サンプルコード"

#. type: Plain text
#: _guides/cache.adoc
msgid "Call the method to call the remote"
msgstr "リモートを呼び出すためにメソッドを実行"

#. type: Plain text
#: _guides/cache.adoc
msgid "Do the remote call and return its result"
msgstr "リモートコールを行い、その結果を返却"

#. type: Plain text
#: _guides/cache.adoc
msgid "Return in case of exception"
msgstr "例外が発生時にリターンする"

#: _guides/cache.adoc
msgid ""
"This approach has an unfortunate side effect: as we said before, Quarkus can also cache\n"
"`null` values. Which means that the next call to `callRemote()` with the same parameter value\n"
"will be answered out of the cache, returning `null` and no remote call will be done.\n"
"This may be desired in some scenarios, but usually one wants to retry the remote call until it returns a result."
msgstr "このアプローチには不幸な副作用があります。先に述べたように、Quarkusは `null` の値をキャッシュすることもできます。つまり、同じパラメーター値を持つ `callRemote()` への次の呼び出しは、キャッシュの外で応答され、 `null` が返され、リモートコールは行われないということです。これはシナリオによっては望ましいことかもしれませんが、通常は結果が返ってくるまでリモートコールを再試行したいものです。"

#. type: Title ===
#: _guides/cache.adoc
#, no-wrap
msgid "Let exceptions bubble up"
msgstr "例外をバブルアップさせる"

#: _guides/cache.adoc
msgid ""
"To prevent the cache from caching (marker) results from a remote call, we need to let\n"
"the exception bubble out of the called method and catch it at the caller side:"
msgstr "リモートコールの結果をキャッシュ(マーカー)しないようにするには、コールされたメソッドから例外をバブルアップし、呼び出し側でキャッチする必要があります。"

#. type: Block title
#: _guides/cache.adoc
#, no-wrap
msgid "With Exception bubbling up"
msgstr "例外をバブルアップ"

#. type: Plain text
#: _guides/cache.adoc
msgid "Exceptions may bubble up"
msgstr "例外がバブルアップする場合がある"

#. type: Plain text
#: _guides/cache.adoc
msgid "This can throw all kinds of remote exceptions"
msgstr "これは、あらゆる種類のリモート例外を投げることができます"

#: _guides/cache.adoc
msgid ""
"When the call to the remote throws an exception, the cache does not store the result,\n"
"so that a subsequent call to `callRemote()` with the same parameter value will not be\n"
"answered out of the cache.\n"
"It will instead result in another attempt to call the remote."
msgstr "リモートへの呼び出しが例外をスローした場合、キャッシュは結果を保存しないので、 同じパラメーター値を持つ `callRemote()` への後続の呼び出しがキャッシュから応答されることはありません。その代わりに、リモートへの呼び出しを再度試みることになります。"

#. type: Title ==
#: _guides/cache.adoc
#, no-wrap
msgid "Going native"
msgstr "ネイティブ化"

#. type: Plain text
#: _guides/cache.adoc
msgid "The Cache extension supports building native executables."
msgstr "Cache エクステンションは、ネイティブ実行可能ファイルの構築をサポートしています。"

#: _guides/cache.adoc
msgid ""
"However, to optimize runtime memory, Caffeine embarks many cache implementation classes that are selected depending on the cache configuration.\n"
"We are not registering all of them for reflection\n"
"(and the ones not registered are not included into the native executables) as registering all of them would be very costly."
msgstr "実行時の速度を最適化するために、Caffeineはキャッシュ設定に応じて選択される多くのキャッシュ実装クラスを組み込んでいます。すべてのクラスを登録するのは非常にコストがかかるため、リフレクションのためにすべてのクラスを登録していません（登録されていないクラスはネイティブ実行可能ファイルに含まれません）。"

#. type: Plain text
#: _guides/cache.adoc
msgid "We are registering the most common implementations but, depending on your cache configuration, you might encounter errors like:"
msgstr "ここでは、最も一般的な実装を登録していますが、キャッシュの設定によっては、以下のようなエラーが発生する場合があります。"

#. type: Plain text
#: _guides/cache.adoc
msgid "`PSAMS` is one of the many cache implementation classes of Caffeine so this part may vary."
msgstr "`PSAMS` は、Caffeineの数あるキャッシュ実装クラスのひとつなので、この部分は変わるかもしれません。"

#: _guides/cache.adoc
msgid ""
"When you encounter this error, you can easily fix it by adding the following annotation to any of your application classes\n"
"(or you can create a new class such as `Reflections` just to host this annotation if you prefer):"
msgstr "このエラーが発生した場合は、アプリケーションクラスに以下のアノテーションを追加することで、簡単に修正することができます（あるいは、このアノテーションをホストするためだけに、 `Reflections` のような新しいクラスを作成することもできます）。"

#. type: Plain text
#: _guides/cache.adoc
msgid "It is an array, so you can register several cache implementations in one go if your configuration requires several of them."
msgstr "配列なので、複数のキャッシュ実装が必要な構成の場合、一度に登録することができます。"

#: _guides/cache.adoc
msgid ""
"This annotation will register the cache implementation classes for reflection and this will include the classes into the native executable.\n"
"More details about the `@RegisterForReflection` annotation can be found on  the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr ""
"このアノテーションによって、キャッシュ実装クラスがリフレクション用に登録され、そのクラスがネイティブ実行可能ファイルに組み込まれます。 \n"
"`@RegisterForReflection` アノテーションの詳細は、 xref:writing-native-applications-tips.adoc#registerForReflection[ネイティブ・アプリケーションのヒント] のページを参照してください。"
