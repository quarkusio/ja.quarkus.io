msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.5\n"

#. type: Title =
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Quarkus and Maven"
msgstr "QuarkusとMaven"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Use Maven to create a new project, add or remove extensions, launch development mode, debug your application, and build your application into a jar, native executable, or container-friendly executable. Import your project into your favorite IDE using Maven project metadata."
msgstr "Mavenを使用して、新しいプロジェクトを作成し、エクステンションを追加または削除し、開発モードを起動し、アプリケーションをデバッグし、アプリケーションをjar、ネイティブ実行可能ファイル、またはコンテナに適した実行可能ファイルにビルドします。Mavenプロジェクトのメタデータを使用して、お気に入りのIDEにプロジェクトをインポートします。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Creating a new project"
msgstr "新規プロジェクトの作成"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "You can scaffold a new Maven project with:"
msgstr "次のように新しいMavenプロジェクトの枠組を生成することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "If you are using the CLI, you can get the list of available options with:"
msgstr "CLIを使用している場合、次のように利用可能なオプションのリストを取得することが可能です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "If you are using the Maven command, the following table lists the attributes you can pass to the `create` command:"
msgstr "Maven コマンドを使用している場合、次の表が `create` コマンドに渡すことができる属性の一覧です。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Attribute"
msgstr "属性"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Default Value"
msgstr "デフォルト値"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Description"
msgstr "Description"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`projectGroupId`"
msgstr "`projectGroupId`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`org.acme.sample`"
msgstr "`org.acme.sample`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The group id of the created project"
msgstr "作成されたプロジェクトのグループID"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`projectArtifactId`"
msgstr "`projectArtifactId`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "_mandatory_"
msgstr "_mandatory_"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The artifact id of the created project. Not passing it triggers the interactive mode."
msgstr "作成されたプロジェクトのアーティファクトID。これを渡さないと、インタラクティブモードがトリガされます。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`projectVersion`"
msgstr "`projectVersion`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`1.0.0-SNAPSHOT`"
msgstr "`1.0.0-SNAPSHOT`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The version of the created project"
msgstr "作成されたプロジェクトのバージョン"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`platformGroupId`"
msgstr "`platformGroupId`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`{quarkus-platform-groupid}`"
msgstr "`{quarkus-platform-groupid}`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The group id of the target platform."
msgstr "ターゲットプラットフォームのグループID"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`platformArtifactId`"
msgstr "`platformArtifactId`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`quarkus-bom`"
msgstr "`quarkus-bom`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The artifact id of the target platform BOM."
msgstr "ターゲットプラットフォームBOMのアーティファクトID"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`platformVersion`"
msgstr "`platformVersion`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The version currently recommended by the xref:extension-registry-user.adoc[Quarkus Extension Registry]"
msgstr "xref:extension-registry-user.adoc[Quarkus Extension Registry] が現在推奨しているバージョン"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The version of the platform you want the project to use. It can also accept a version range, in which case the latest from the specified range will be used."
msgstr "プロジェクトで使用したいプラットフォームのバージョンを指定します。バージョンの範囲を指定することもでき、その場合は指定した範囲の最新のものが使用されます。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`javaVersion`"
msgstr "`javaVersion`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "17"
msgstr "17"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The version of Java you want the project to use."
msgstr "プロジェクトで使用したいJavaのバージョン"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`className`"
msgstr "`className`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "_Not created if omitted_"
msgstr "_省略された場合は作成されない_"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The fully qualified name of the generated resource"
msgstr "生成されたリソースの完全修飾名"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`path`"
msgstr "`path`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`/hello`"
msgstr "`/hello`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The resource path, only relevant if `className` is set."
msgstr "リソースパス、 `className` が設定されている場合のみ関連します。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`extensions`"
msgstr "`extensions`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "_[]_"
msgstr "_[]_"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The list of extensions to add to the project (comma-separated)"
msgstr "プロジェクトに追加するエクステンションのリスト (カンマ区切り)"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`quarkusRegistryClient`"
msgstr "`quarkusRegistryClient`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`true`"
msgstr "`true`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Whether Quarkus should use the online registry to resolve extension catalogs. If this is set to false, the extension catalog will be narrowed to the defined (or default) platform BOM."
msgstr "Quarkus がオンラインレジストリーを使用して拡張カタログを解決するかどうか。これが false に設定されている場合、拡張カタログは、定義された (またはデフォルトの) プラットフォーム BOM に絞り込まれます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "By default, the command will target the `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}` platform release (unless the coordinates of the desired platform release have been specified)."
msgstr "デフォルトでは、コマンドは `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}` のプラットフォーム・リリースをターゲットにします（希望するプラットフォーム・リリースの座標が指定されていない場合）。"

#: _guides/maven-tooling.adoc
msgid ""
"The project is generated in a directory named after the passed artifactId.\n"
"If the directory already exists, the generation fails."
msgstr "プロジェクトは、渡された artifactId にちなんだ名前のディレクトリーに生成されます。ディレクトリーが既に存在する場合は、生成に失敗します。"

#: _guides/maven-tooling.adoc
msgid ""
"A pair of Dockerfiles for native and jvm mode are also generated in `src/main/docker`.\n"
"Instructions to build the image and run the container are written in those Dockerfiles."
msgstr "ネイティブモードと jvm モード用の Dockerfile も `src/main/docker`  に生成されています。イメージのビルドとコンテナーの実行の指示は、これらの Dockerfile に書かれています。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Dealing with extensions"
msgstr "エクステンションへの対応"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "From inside a Quarkus project, you can obtain a list of the available extensions with:"
msgstr "Quarkusプロジェクトの内部から、利用可能なエクステンションのリストを取得することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "You can add an extension using:"
msgstr "以下を使ってエクステンションを追加できます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Extensions are passed using a comma-separated list."
msgstr "エクステンションは、カンマ区切りのリストを使用して渡されます。"

#: _guides/maven-tooling.adoc
msgid ""
"The extension name is the GAV name of the extension: e.g., `io.quarkus:quarkus-agroal`.\n"
"However, you can pass a partial name, and Quarkus will do its best to find the right extension.\n"
"For example, `agroal`, `Agroal`, or `agro` will expand to `io.quarkus:quarkus-agroal`.\n"
"If no extension is found or more than one extension matches, you will see a red check mark ❌ in the command result."
msgstr "エクステンション名は、エクステンションのGAV名です。例えば、 `io.quarkus:quarkus-agroal` です。ただし、部分名を渡すこともでき、Quarkusは正しいエクステンションを見つけるために最善を尽くします。例えば、 `agroal` 、 `Agroal` 、 `agro` は、 `io.quarkus:quarkus-agroal` に展開されます。エクステンションが見つからない場合、または複数のエクステンションが一致する場合は、コマンド結果に赤いチェックマーク❌が表示されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "You can install all extensions which match a globbing pattern :"
msgstr "グロブパターンに一致するすべてのエクステンションをインストールすることができます。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Configuring `javac` options"
msgstr "`javac` オプションの設定"

#: _guides/maven-tooling.adoc
msgid ""
"The Quarkus Maven plugin makes use of `javac`,\n"
"and by default it picks up compiler flags to pass to\n"
"`javac` from `maven-compiler-plugin`."
msgstr "Maven プラグインは `javac` を使用し、デフォルトでは `maven-compiler-plugin` から `javac` に渡すコンパイラフラグをピックアップします。"

#: _guides/maven-tooling.adoc
msgid ""
"If you need to customize the compiler flags used by the plugin, like in <<dev-mode,development mode>>, add a `configuration` section to the `plugin` block and set the `compilerArgs` property just as you would when configuring `maven-compiler-plugin`.\n"
"You can also set `source`, `target`, and `jvmArgs`.\n"
"For example, to pass `--enable-preview` to both the JVM and `javac`:"
msgstr ""
"xref:dev-mode[開発モード] のように、プラグインが使用するコンパイラフラグをカスタマイズする必要がある場合は、 `plugin` ブロックに `configuration` セクションを追加し、 `maven-compiler-plugin` を設定するときと同じように `compilerArgs` プロパティを設定します。 \n"
"`source` , `target` , `jvmArgs` を設定することもできます。\n"
"たとえば、 `--enable-preview` を JVM と `javac` の両方に渡す場合、次のように行います："

#: _guides/maven-tooling.adoc
msgid ""
"Because the Quarkus Maven plugin itself runs in the JVM started by Maven,\n"
"and because some (rare) Quarkus extensions need to load application classes during the build,\n"
"it may be necessary to pass the same flags to the JVM running Maven."
msgstr "Quarkus Mavenプラグイン自体は、Mavenによって起動されたJVMで実行され、一部の（まれな）Quarkusエクステンションではビルド中にアプリケーションクラスをロードする必要があるため、Mavenを実行しているJVMに同じフラグを渡すことが必要になる場合があります。"

#. type: delimited block =
#: _guides/maven-tooling.adoc
msgid "To that end, you can use https://maven.apache.org/configure.html#maven_opts-environment-variable[`MAVEN_OPTS`]:"
msgstr "そのために link:https://maven.apache.org/configure.html#maven_opts-environment-variable[`MAVEN_OPTS`] が使用できます:"

#: _guides/maven-tooling.adoc
msgid "CLI"
msgstr "コマンドラインインタフェース"

#: _guides/maven-tooling.adoc
msgid "Maven"
msgstr "Maven"

#: _guides/maven-tooling.adoc
msgid ""
"**Alternatively**, you can simply create the file\n"
"https://maven.apache.org/configure.html#mvn-jvm-config-file[`.mvn/jvm.config`] at the root of your project:\n"
"and any options you put in that file will be picked up by Maven, without having to set `MAVEN_OPTS`."
msgstr ""
"*または* 、プロジェクトのルートにファイル \n"
"link:https://maven.apache.org/configure.html#mvn-jvm-config-file[`.mvn/jvm.config`] を作成すれば、\n"
"`MAVEN_OPTS` を設定しなくても、そのファイルに記述したオプションが Maven に取り込まれます。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Development mode"
msgstr "開発モード"

#: _guides/maven-tooling.adoc
msgid ""
"Quarkus comes with a built-in development mode.\n"
"Run your application with:"
msgstr "Quarkusには開発モードが組み込まれています。以下でアプリケーションを実行します。"

#: _guides/maven-tooling.adoc
msgid ""
"You can then update the application sources, resources and configurations.\n"
"The changes are automatically reflected in your running application.\n"
"This is great to do development spanning UI and database as you see changes reflected immediately."
msgstr "その後、アプリケーションのソース、リソース、および設定を更新することができます。変更は実行中のアプリケーションに自動的に反映されます。変更がすぐに反映されるので、UIやデータベースにまたがった開発をするのに最適です。"

#: _guides/maven-tooling.adoc
msgid ""
"Dev mode enables hot deployment with background compilation, which means\n"
"that when you modify your Java files or your resource files and refresh your browser these changes will automatically take effect.\n"
"This works too for resource files like the configuration property file.\n"
"The act of\n"
"refreshing the browser triggers a scan of the workspace, and if any changes are detected the Java files are compiled,\n"
"and the application is redeployed, then your request is serviced by the redeployed application. If there are any issues\n"
"with compilation or deployment an error page will let you know."
msgstr "Devモードでは、バックグラウンド・コンパイルによるホット・デプロイメントが可能です。つまり、Javaファイルやリソース・ファイルを変更してブラウザを更新すると、その変更が自動的に反映されます。これは、Javaファイルやリソースファイルを変更してブラウザを更新すると、その変更が自動的に反映されることを意味します。ブラウザを更新すると、ワークスペースのスキャンが行われ、変更が検出されると、Javaファイルがコンパイルされ、アプリケーションが再デプロイされ、再デプロイされたアプリケーションによってリクエストが処理されます。コンパイルやデプロイに問題があった場合は、エラーページでお知らせします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Hit `CTRL+C` to stop the application."
msgstr "`CTRL+C` を押して、アプリケーションを停止します。"

#. type: delimited block =
#: _guides/maven-tooling.adoc
msgid "By default, `quarkus:dev` sets the debug host to `localhost` (for security reasons). If you need to change this, for example to enable debugging on all hosts, you can use the `-DdebugHost` option like so:"
msgstr "デフォルトでは、 `quarkus:dev` はデバッグホストを `localhost` に設定します (セキュリティー上の理由から)。これを変更する必要がある場合、例えばすべてのホストでデバッグを有効にしたい場合は、 `-DdebugHost` オプションを次のように使用します。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Remote Development Mode"
msgstr "リモート開発モード"

#: _guides/maven-tooling.adoc
msgid ""
"It is possible to use development mode remotely, so that you can run Quarkus in a container environment (such as OpenShift)\n"
"and have changes made to your local files become immediately visible."
msgstr "開発モードをリモートで使用することができるので、コンテナー環境(OpenShiftなど)でQuarkusを実行して、ローカルファイルに加えられた変更をすぐに確認できるようにすることができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "This allows you to develop in the same environment you will actually run your app in, and with access to the same services."
msgstr "これにより、実際にアプリを実行するのと同じ環境で、同じサービスにアクセスしながら開発することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Do not use this in production. This should only be used in a development environment. You should not run production application in dev mode."
msgstr "本番環境では使用しないでください。開発環境でのみ使用してください。本番環境のアプリケーションを開発モードで実行してはいけません。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "To do this you must build a mutable application, using the `mutable-jar` format. Set the following properties in `application.properties`:"
msgstr "これを行うには、 `mutable-jar` 形式を使用して、ミュータブルアプリケーションをビルドする必要があります。 `application.properties` で以下のプロパティーを設定してください。"

#: _guides/maven-tooling.adoc
msgid ""
"This tells Quarkus to use the mutable-jar format. Mutable applications also include the deployment time parts of Quarkus,\n"
"so they take up a bit more disk space. If run normally they start just as fast and use the same memory as an immutable application,\n"
"however they can also be started in dev mode."
msgstr "これは、QuarkusにMutable-jar形式を使用するように指示します。ミュータブルアプリケーションには、Quarkusのデプロイメント時間の部分も含まれているため、より多くのディスクスペースを占有します。普通に実行した場合は、イミュータブルアプリケーションと同じ速度で起動し、同じメモリーを使用しますが、devモードで起動することもできます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The password that is used to secure communication between the remote side and the local side."
msgstr "リモート側とローカル側の通信を安全に保つためのパスワードです。"

#: _guides/maven-tooling.adoc
msgid ""
"The URL that your app is going to be running in dev mode at. This is only needed on the local side, so you\n"
"may want to leave it out of the properties file and specify it as a system property on the command line."
msgstr "アプリがdevモードで実行されるURL。これはローカル側でのみ必要なので、プロパティー ファイルから除外して、コマンド ラインでシステム プロパティーとして指定するとよいでしょう。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The `mutable-jar` is then built in the same way that a regular Quarkus jar is built, i.e. by issuing:"
msgstr "`mutable-jar` は、通常のQuarkus jarをビルドするのと同じ方法で発行することでビルドされます。つまり以下のように発行できます:"

#: _guides/maven-tooling.adoc
msgid ""
"Before you start Quarkus on the remote host set the environment variable `QUARKUS_LAUNCH_DEVMODE=true`. If you are\n"
"on bare metal you can set it via the `export QUARKUS_LAUNCH_DEVMODE=true` command and then run the application with the proper `java -jar ...` command to run the application."
msgstr "リモートホストでQuarkusを起動する前に、環境変数 `QUARKUS_LAUNCH_DEVMODE=true`  を設定します。ベアメタルを使用している場合は、 `export QUARKUS_LAUNCH_DEVMODE=true`  コマンドで設定し、適切に `java -jar ...` コマンドでアプリケーションを実行します。"

#: _guides/maven-tooling.adoc
msgid ""
"If you plan on running the application via Docker, then you'll need to add `-e QUARKUS_LAUNCH_DEVMODE=true` to the `docker run` command.\n"
"When the application starts you should now see the following line in the logs: `Profile dev activated. Live Coding activated`. You will also need to give the application the rights to update the deployment resources by adding `RUN chmod o+rw -R /deployments` after the `COPY` commands into your Dockerfile. For security reasons, this option should not be added to the production Dockerfile."
msgstr ""
"Docker 経由でアプリケーションを実行する予定の場合は、 `docker run` コマンドに `-e QUARKUS_LAUNCH_DEVMODE=true` を追加する必要があります。\n"
"アプリケーションが起動すると、ログに `Profile dev activated. Live Coding activated` の行が表示されます。また、Dockerfile の `COPY` コマンドの後に `RUN chmod o+rw -R /deployments` を追加して、アプリケーションにデプロイメントリソースの更新権限を付与する必要があります。セキュリティー上の理由から、このオプションは実稼働環境の Dockerfile には追加しないでください。"

#: _guides/maven-tooling.adoc
msgid ""
"The remote side does not need to include Maven or any other development tools. The normal `fast-jar` Dockerfile\n"
"that is generated with a new Quarkus application is all you need. If you are using bare metal launch the Quarkus runner\n"
"jar, do not attempt to run normal dev mode."
msgstr "リモート側にはMavenなどの開発ツールを入れる必要はありません。新しいQuarkusアプリケーションで生成される通常の `fast-jar` Dockerfileがあれば大丈夫です。ベアメタルのQuarkus runner jarを起動している場合は、通常のdevmodeを実行しようとしないでください。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Now you need to connect your local agent to the remote host, using the `remote-dev` command:"
msgstr "ここで、 `remote-dev` コマンドを使用して、ローカルエージェントをリモートホストに接続する必要があります。"

#: _guides/maven-tooling.adoc
msgid ""
"Now every time you refresh the browser you should see any changes you have made locally immediately visible in the remote\n"
"app. This is done via an HTTP based long polling transport, that will synchronize your local workspace and the remote\n"
"application via HTTP calls."
msgstr "これで、ブラウザーを更新するたびに、ローカルで行った変更がリモートアプリですぐに表示されるようになります。これは、HTTP ベースのロングポーリングトランスポートを介して行われ、HTTP 呼び出しを介してローカルワークスペースとリモートアプリケーションを同期します。"

#: _guides/maven-tooling.adoc
msgid ""
"If you do not want to use the HTTP feature then you can simply run the `remote-dev` command without specifying the URL.\n"
"In this mode the command will continuously rebuild the local application, so you can use an external tool such as odo or\n"
"rsync to sync to the remote application."
msgstr "HTTP 機能を使用したくない場合は、URL を指定せずに `remote-dev`  コマンドを実行するだけです。このモードでは、コマンドはローカルアプリケーションを継続的に再構築するので、 odo や rsync のような外部ツールを使ってリモートアプリケーションに同期することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "All the config options are shown below:"
msgstr "全ての設定オプションは以下の通りです:"

#: _guides/maven-tooling.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _guides/maven-tooling.adoc
msgid ""
"It is recommended you use SSL when using remote dev mode, however even if you are using an unencrypted connection\n"
"your password is never sent directly over the wire. For the initial connection request the password is hashed with the\n"
"initial state data, and subsequent requests hash it with a random session id generated by the server and any body contents\n"
"for POST requests, and the path for DELETE requests, as well as an incrementing counter to prevent replay attacks."
msgstr "リモート開発モードを使用する際には SSL を使用することを推奨しますが、たとえ暗号化されていない接続を使用していても、パスワードが直接ネットワーク上で送信されることはありません。最初の接続リクエストでは、パスワードは初期状態のデータでハッシュ化され、それ以降のリクエストでは、サーバーによって生成されたランダムなセッションIDと、POSTリクエストのためのボディコンテンツ、DELETEリクエストのためのパス、そしてリプレイ攻撃を防ぐためのインクリメントカウンタでハッシュ化されます。"

#: _guides/maven-tooling.adoc
msgid "Extension provided Dev mode Java options"
msgstr "エクステンションが提供する開発モードの Java オプション"

#: _guides/maven-tooling.adoc
msgid "Some extensions may provide pre-configured Java options that should be added to the command line launching an application in Dev mode."
msgstr "一部のエクステンションでは、開発モードでアプリケーションを起動するコマンドラインに追加する必要がある、事前設定された Java オプションが提供される場合があります。"

#: _guides/maven-tooling.adoc
msgid ""
"Let's suppose there are couple of extensions `quarkus-blue` and `quarkus-red` in an application that provide Java options for Dev mode.\n"
"The logs may look something like this"
msgstr ""
"たとえば、アプリケーションに、開発モード用の Java オプションを提供する 2 つのエクステンション (`quarkus-blue` と `quarkus-red`) があるとします。\n"
"その場合のログは次のようになります"

#: _guides/maven-tooling.adoc
msgid "A user may choose to disable all the Java options provided by extensions by configuring `disableAll` parameter such as"
msgstr "ユーザーは、以下のような `disableAll` パラメーターを設定することで、エクステンションが提供するすべての Java オプションを無効にできます。"

#: _guides/maven-tooling.adoc
msgid "Or disable Java options provided by specific extensions by configuring Maven coordinates patterns, such as"
msgstr "または、Maven 座標パターンを設定することで、特定のエクステンションが提供する Java オプションを無効にできます。"

#: _guides/maven-tooling.adoc
msgid "With this configuration the logs will look like"
msgstr "この設定の場合、ログは次のようになります。"

#: _guides/maven-tooling.adoc
#, fuzzy
msgid "Hot Reload of the Maven process"
msgstr "Mavenプロセスのホットリロード"

#: _guides/maven-tooling.adoc
#, fuzzy
msgid "Sometimes you may want to reload the whole Maven process in order to pick up changes in the `pom.xml` file or to add/remove extensions. Quarkus automatically detects changes in the `pom.xml` file and restarts the Maven process if needed."
msgstr "`pom.xml` 、拡張機能の追加や削除を行うために、Mavenプロセス全体をリロードする場合があります。Quarkusは、 `pom.xml` ファイルの変更を自動的に検出し、必要に応じてMavenプロセスを再起動します。"

#: _guides/maven-tooling.adoc
#, fuzzy
msgid "You can also additionally set the `watchedFiles` parameter to the set of files that are also monitored for changes. This is particularly useful if you are developing a Quarkus extension or any other library that is being used as a dependency in your testing Quarkus application. You can set the `watchedFiles` to the installed Maven artifact in your local repository that will trigger automatic testing application reload when the extension or the library is installed:"
msgstr "また、 `watchedFiles` パラメータを、変更を監視するファイルセットに設定することもできます。これは、Quarkusの拡張機能や、テスト用のQuarkusアプリケーションで依存関係として使用されるその他のライブラリを開発している場合に特に便利です。 `watchedFiles` 、ローカルリポジトリにインストールされたMavenアーティファクトに設定できます。このアーティファクトは、拡張機能またはライブラリがインストールされたときに、テストアプリケーションの自動リロードをトリガーします："

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Debugging"
msgstr "デバッグ"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In development mode, Quarkus starts by default with debug mode enabled, listening to port `5005` without suspending the JVM."
msgstr "開発モードでは、Quarkusはデフォルトでデバッグモードを有効にして起動し、JVMをサスペンドせずにポート `5005` をリッスンします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "This behavior can be changed by giving the `debug` system property one of the following values:"
msgstr "この動作は、 `debug` システム・プロパティーに以下の値のいずれかを与えることで変更できます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`false` - the JVM will start with debug mode disabled"
msgstr "`false` - JVM はデバッグモードを無効にして起動します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`true` - The JVM is started in debug mode and will be listening on port `5005`"
msgstr "`true` - JVM はデバッグモードで起動され、 `5005` ポートをリッスンします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`client` - the JVM will start in client mode and attempt to connect to `localhost:5005`"
msgstr "`client` - JVM はクライアントモードで起動し、 `localhost:5005` に接続を試みます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`{port}` - The JVM is started in debug mode and will be listening on `{port}`"
msgstr "`{port}` - JVM はデバッグモードで開始され、 `{port}` でリッスンします"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "An additional system property `suspend` can be used to suspend the JVM, when launched in debug mode. `suspend` supports the following values:"
msgstr "追加のシステム・プロパティー `suspend` は、デバッグ・モードで起動されたときに JVM をサスペンドするために使用できます。 `suspend` は以下の値をサポートしています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`y` or `true` - The debug mode JVM launch is suspended"
msgstr "`y` または `true` - デバッグモードの JVM 起動が中断されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`n` or `false` - The debug mode JVM is started without suspending"
msgstr "`n` または `false` - デバッグモードの JVM をサスペンドせずに起動します。"

#. type: delimited block =
#: _guides/maven-tooling.adoc
msgid "You can also run a Quarkus application in debug mode with a suspended JVM using:"
msgstr "また、JVM をサスペンドした状態で、デバッグモードで Quarkus アプリケーションを実行することもできます。"

#. type: delimited block =
#: _guides/maven-tooling.adoc
msgid "Then, attach your debugger to `localhost:5005`."
msgstr "次に、デバッガーを `localhost:5005` にアタッチします。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Import in your IDE"
msgstr "IDE でインポートする"

#: _guides/maven-tooling.adoc
msgid ""
"Once you have a <<project-creation,project generated>>, you can import it in your favorite IDE.\n"
"The only requirement is the ability to import a Maven project."
msgstr ""
"xref:project-creation[プロジェクトが生成されたら] 、お気に入りのIDEでインポートできます。\n"
"唯一の要件は、Mavenプロジェクトをインポートできることです。"

#: _guides/maven-tooling.adoc
msgid "**Eclipse**"
msgstr "**Eclipse**"

#: _guides/maven-tooling.adoc
msgid ""
"In Eclipse, click on: `File -> Import`.\n"
"In the wizard, select: `Maven -> Existing Maven Project`.\n"
"On the next screen, select the root location of the project.\n"
"The next screen list the found modules; select the generated project and click on `Finish`. Done!"
msgstr "Eclipse で、 `File → Import`  をクリックします。ウィザードで、 `Maven → Existing Maven Project`  を選択します。次の画面で、プロジェクトのルートの場所を選択します。次の画面では、見つかったモジュールのリストが表示されるので、生成されたプロジェクトを選択して `Finish` をクリックします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In a separated terminal, run:"
msgstr "別のターミナルで、以下を実行します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "and enjoy a highly productive environment."
msgstr "では、生産性の高い環境を楽しんで下さい。"

#: _guides/maven-tooling.adoc
msgid "**IntelliJ IDEA**"
msgstr "**IntelliJ IDEA**"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In IntelliJ IDEA:"
msgstr "IntelliJ IDEA:"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "From inside IntelliJ IDEA select `File -> New -> Project From Existing Sources...` or, if you are on the welcome dialog, select `Import project`."
msgstr "IntelliJ IDEAの内部から `File → New → Project From Existing Sources…​` を選択するか、ウェルカム・ダイアログからであれば、 `Import project` を選択してください。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Select the project root"
msgstr "プロジェクトの root を選択します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Select `Import project from external model` and `Maven`"
msgstr "`Import project from external model` および `Maven` を選択します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Next a few times (review the different options if needed)"
msgstr "Next を数回クリックします (必要に応じてさまざまなオプションを確認してください)。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "On the last screen click on Finish"
msgstr "最後の画面で Finish をクリックします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In a separated terminal or in the embedded terminal, run:"
msgstr "別のターミナルや組込ターミナルで、以下を実行します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Enjoy!"
msgstr "楽しんでください!"

#: _guides/maven-tooling.adoc
msgid "**Apache NetBeans**"
msgstr "**Apache NetBeans**"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In NetBeans:"
msgstr "NetBeans:"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Select `File -> Open Project`"
msgstr "`File → Open Project` を選択"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Click on `Open Project`"
msgstr "`Open Project` をクリックしてください。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In a separated terminal or the embedded terminal, go to the project root and run:"
msgstr "別のターミナルまたは組込ターミナルで、プロジェクトのルートに移動して次を実行します。"

#: _guides/maven-tooling.adoc
msgid "**Visual Studio Code**"
msgstr "**Visual Studio Code**"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Open the project directory in VS Code. If you have installed the Java Extension Pack (grouping a set of Java extensions), the project is loaded as a Maven project."
msgstr "VS Codeでプロジェクトディレクトリーを開きます。Java Extension Pack (Javaエクステンションのセットをグループ化したもの) をインストールしている場合、プロジェクトは Maven プロジェクトとしてロードされます。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Logging Quarkus application build classpath tree"
msgstr "Quarkus アプリケーションのビルドクラスパスのツリーのログ取得"

#: _guides/maven-tooling.adoc
msgid ""
"Usually, dependencies of an application (which is a Maven project) could be displayed using `mvn dependency:tree` command. In case of a Quarkus application, however, this command will list only the runtime dependencies of the application.\n"
"Given that the Quarkus build process adds deployment dependencies of the extensions used in the application to the original application classpath, it could be useful to know which dependencies and which versions end up on the build classpath.\n"
"Luckily, the `quarkus` Maven plugin includes the `dependency-tree` goal which displays the build dependency tree for the application."
msgstr "通常、アプリケーション(Mavenプロジェクト)の依存関係は、 `mvn dependency:tree`  コマンドを使用して表示することができます。しかし、Quarkusアプリケーションの場合、このコマンドはアプリケーションの実行時の依存関係のみを表示します。Quarkusのビルドプロセスは、アプリケーションで使用されているエクステンションのデプロイメント依存関係を元のアプリケーションのクラスパスに追加するので、どの依存関係とどのバージョンがビルドクラスパスで終わるかを知ることは便利です。幸いにも、 `quarkus-bootstrap`  Mavenプラグインには、アプリケーションのビルド依存関係ツリーを表示する `build-tree`  ゴールが含まれています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Executing `./mvnw quarkus:dependency-tree` on your project should result in an output similar to:"
msgstr "プロジェクトで `./mvnw quarkus:dependency-tree` を実行すると、次のような出力が得られるはずです。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The goal accepts the following optional parameters:"
msgstr "ゴールは、以下のオプションのパラメーターを受け入れます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`mode` - the default value is `prod`, i.e. the production build dependency tree. Alternatively, it accepts values `test` to display the test dependency tree and `dev` to display the dev mode dependency tree;"
msgstr "`mode` - デフォルト値は `prod` で、本番ビルドの依存関係ツリーを表示します。または、値 `test` を受け入れてテスト依存関係ツリーを表示し、 `dev` を受け入れて開発モードの依存関係ツリーを表示します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`outputFile` - specifies the file to persist the dependency tree to;"
msgstr "`outputFile` - 依存関係ツリーを永続化するファイルを指定します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`appendOutput` - the default value is `false`, indicates whether the output to the command should be appended to the file specified with the `outputFile` parameter or it should be overridden."
msgstr "`appendOutput` - デフォルト値は `false` で、コマンドへの出力を `outputFile` パラメーターで指定されたファイルに追加するか、上書きするかを示します。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Downloading Maven artifact dependencies for offline development and testing"
msgstr "オフライン開発とテスト向けの Maven アーティファクトの依存関係のダウンロード"

#: _guides/maven-tooling.adoc
msgid ""
"Quarkus extension dependencies are divided into the runtime extension dependencies that end up on the application runtime classpath and the deployment (or build time) extension dependencies that are resolved by Quarkus only at application build time to create\n"
"the build classpath. Application developers are expected to express dependencies only on the runtime artifacts of Quarkus extensions. As a consequence, the deployment extension dependencies aren't visible to Maven plugins that aren't aware of the Quarkus\n"
"extension dependency model, such as the `maven-dependency-plugin`, `go-offline-maven-plugin`, etc. That means those plugins can not be used to pre-download all the application dependencies to be able to build and test the application later in offline mode."
msgstr "Quarkus エクステンションの依存関係は、アプリケーションの実行時クラスパスに到達する実行時エクステンションの依存関係と、アプリケーションのビルド時にのみ Quarkus によって解決されてビルドクラスパスを作成するデプロイメント (またはビルド時) のエクステンションの依存関係に分けられます。アプリケーション開発者は、Quarkus エクステンションのランタイムアーティファクトにのみ依存関係を表現することが期待されています。結果として、デプロイメントエクステンションの依存関係は、Quarkus エクステンションの依存関係モデル (`maven-dependency-plugin`、 `go-offline-maven-plugin` など) を認識しない Maven プラグインには表示されません。つまり、これらのプラグインを使用してすべてのアプリケーションの依存関係を事前にダウンロードして、後でオフラインモードでアプリケーションをビルドおよびテストできるようにすることはできません。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "To enable the use-case of building and testing a Quarkus application offline, the `quarkus-maven-plugin` includes the `go-offline` goal that could be called from the command line like this:"
msgstr "Quarkus アプリケーションをオフラインでビルドおよびテストするユースケースを有効にするために、 `quarkus-maven-plugin` には、以下のようにコマンドラインから呼び出すことができる `go-offline` ゴールが含まれています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "This goal will resolve all the runtime, build time, test and dev mode dependencies of the application downloading them to the configured local Maven repository."
msgstr "このゴールは、アプリケーションの実行時、ビルド時、テスト、および開発モードのすべての依存関係を解決し、これらを設定されたローカルの Maven リポジトリーにダウンロードします。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Native executables make Quarkus applications ideal for containers and serverless workloads."
msgstr "ネイティブ実行可能ファイルにより、Quarkusアプリケーションはコンテナーやサーバーレスのワークロードに最適です。"

#: _guides/maven-tooling.adoc
msgid ""
"Make sure to have `GRAALVM_HOME` configured and pointing to the latest release of GraalVM {graalvm-version}.\n"
"Verify that your `pom.xml` has the proper `native` profile as shown in <<build-tool-maven>>."
msgstr ""
"`GRAALVM_HOME` が設定され、GraalVM {graalvm-version}の最新リリースを指しているようにして下さい。 \n"
"<<build-tool-maven>> に示されているように、あなたの `pom.xml` が適切な `native` プロファイルを持っているようにして下さい。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Create a native executable using:"
msgstr "次のようにネイティブ実行可能ファイルの作成"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "A native executable will be present in `target/`."
msgstr "ネイティブ実行可能ファイルが `target/` に存在します。"

#: _guides/maven-tooling.adoc
msgid "To run Integration Tests on the native executable, make sure to have the proper <<build-tool-maven,Maven plugin configured>> and launch the `verify` goal."
msgstr "ネイティブ実行可能ファイルで統合テストを実行するには、適切な xref:build-tool-maven[Maven プラグインが設定] されているようにし、 `verify` ゴールを起動します。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Build a container friendly executable"
msgstr "コンテナーフレンドリーな実行可能ファイルをビルドする"

#: _guides/maven-tooling.adoc
msgid ""
"The native executable will be specific to your operating system.\n"
"To create an executable that will run in a container, use the following:"
msgstr "ネイティブ実行可能ファイルは、お使いのオペレーティングシステムに固有のものになります。コンテナー内で実行される実行ファイルを作成するには、次のようにします。"

#: _guides/maven-tooling.adoc
msgid ""
"The produced executable will be a 64-bit Linux executable, so depending on your operating system, it may no longer be runnable.\n"
"However, it's not an issue as we are going to copy it to a Docker container.\n"
"Note that in this case the build itself runs in a Docker container too, so you don't need to have GraalVM installed locally."
msgstr "作成された実行ファイルは64bitのLinux実行ファイルとなりますので、OSによっては実行可能でなくなる可能性があります。しかし、今回はDockerコンテナにコピーするため問題ありません。なお、この場合、ビルド自体もDockerコンテナで実行されるため、ローカルにGraalVMがインストールされている必要はありません。"

#: _guides/maven-tooling.adoc
msgid "By default, the native executable will be generated using the `quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:{mandrel-flavor}` Docker image."
msgstr "デフォルトでは、ネイティブ実行可能ファイルは `quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:{mandrel-flavor}` Dockerイメージを使って生成されます。"

#: _guides/maven-tooling.adoc
msgid ""
"If you want to build a native executable with a different Docker image (for instance to use a different GraalVM version),\n"
"use the `-Dquarkus.native.builder-image=<image name>` build argument."
msgstr "異なるDockerイメージでネイティブ実行可能ファイルをビルドしたい場合(例えば、異なるGraalVMのバージョンを使用するなど)、 `-Dquarkus.native.builder-image=<image name>` のbuild引数を使用してください。"

#: _guides/maven-tooling.adoc
msgid ""
"The list of the available Docker images can be found on https://quay.io/repository/quarkus/ubi9-quarkus-mandrel-builder-image?tab=tags[quay.io].\n"
"Be aware that a given Quarkus version might not be compatible with all the images available."
msgstr ""
"利用可能なDockerイメージのリストは、 link:https://quay.io/repository/quarkus/ubi9-quarkus-mandrel-builder-image?tab=tags[quay.io] にあります。\n"
"あるQuarkusのバージョンが、利用可能なすべてのイメージと互換性があるとは限りません。"

#: _guides/maven-tooling.adoc
msgid ""
"Starting from Quarkus 3.19, the _builder_ image is based on UBI 9, and thus requires an UBI 9 base image if you want to run the native executable in a container.\n"
"You can switch back to UBI 8, by setting the `quarkus.native.builder-image` property to one of the available image from the https://quay.io/repository/quarkus/ubi-quarkus-mandrel-builder-image?tab=tags[quay.io repository].\n"
"For example ``quay.io/quarkus/ubi-quarkus-mandrel-builder-image:{mandrel-flavor}` is using UBI 8, and so the resulting native executable will be compatible with UBI 8 base images."
msgstr ""
"Quarkus 3.19 以降、 _ビルダー_ イメージはUBI 9 をベースにしているため、ネイティブ実行可能ファイルをコンテナで実行する場合は UBI 9 のベースイメージが必要です。\n"
"UBI8に戻すには、 `quarkus.native.builder-image` プロパティを link:https://quay.io/repository/quarkus/ubi-quarkus-mandrel-builder-image?tab=tags[quay.ioリポジトリ] から利用可能なイメージの1つに設定します。\n"
"例えば、 ``quay.io/quarkus/ubi-quarkus-mandrel-builder-image:{mandrel-flavor}` は UBI 8 を使用しているので、生成されるネイティブ実行可能ファイルは UBI 8 のベースイメージと互換性があります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "You can follow the xref:building-native-image.adoc[Build a native executable guide] as well as xref:deploying-to-kubernetes.adoc[Deploying Application to Kubernetes and OpenShift] for more information."
msgstr "詳細は link:building-native-image.html[ネイティブ実行可能ファイルのビルド]のほか、link:deploying-to-kubernetes.html[Kubernetes および OpenShift へのアプリケーションのデプロイ]を参照してください。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Maven configuration"
msgstr "Maven の設定"

#: _guides/maven-tooling.adoc
msgid "If you have not used <<project-creation,project scaffolding>>, add the following elements in your `pom.xml`"
msgstr "<<project-creation,プロジェクトのスキャフォールド>>を使用していない場合は、以下の要素を `pom.xml` に追加してください"

#: _guides/maven-tooling.adoc
msgid ""
"Disable running of integration tests (test names `*IT` and annotated with `@QuarkusIntegrationTest`) on all builds. To run these tests all the time, either remove this property, set its value to `false`, or set `-DskipITs=false` on the command line when you run the build. +\n"
"As mentioned below, this is overridden in the `native` profile."
msgstr "すべてのビルドで統合テストの実行を無効にします (テスト名は `*IT` で、 `@QuarkusIntegrationTest` のアノテーションが付けられています)。これらのテストを常に実行するには、このプロパティーを削除するか、値を `false` に設定するか、ビルドを実行するときにコマンドラインで `-DskipITs=false` を設定します。+ 後述するように、これは `native` プロファイルでオーバーライドされます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Optionally use a BOM file to omit the version of the different Quarkus dependencies."
msgstr "オプションで、BOMファイルを使用して、異なるQuarkus依存関係のバージョンを省略することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Use the Quarkus Maven plugin that will hook into the build process."
msgstr "ビルドプロセスにフックするQuarkus Mavenプラグインを使用します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Enabling Maven plugin extensions will register a Quarkus `MavenLifecycleParticipant` which will make sure the Quarkus classloaders used during the build are properly closed. During the `generate-code` and `generate-code-tests` goals the Quarkus application bootstrap is initialized and re-used in the `build` goal (which actually builds and packages a production application). The Quarkus classloaders will be properly closed in the `build` goal of the `quarkus-maven-plugin`. However, if the build fails in between the `generate-code` or `generate-code-tests` and `build` then the Quarkus augmentation classloader won't be properly closed, which may lead to locking of JAR files that happened to be on the classpath on Windows OS."
msgstr "Mavenプラグインのエクステンションを有効にすると、Quarkus `MavenLifecycleParticipant` が登録され、ビルド中に使用されるQuarkusクラスローダが適切にクローズされるようになります。 `generate-code` と `generate-code-tests` のゴールでは、Quarkusアプリケーションブートストラップが初期化され、 `build` のゴール（本番アプリケーションを実際にビルドしてパッケージ化する）で再利用されます。 `quarkus-maven-plugin` の `build` ゴールでは、Quarkus のクラスローダが適切にクローズされます。しかし、 `generate-code` または `generate-code-tests` と `build` の間でビルドが失敗すると、Quarkus augmentation classloaderは適切に閉じられず、Windows OSのクラスパス上にたまたまあったJARファイルがロックされる可能性があります。"

#: _guides/maven-tooling.adoc
msgid ""
"Add system properties to `maven-surefire-plugin`. +\n"
"`maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr "システムのプロパティーを `maven-surefire-plugin`  に追加します。+ `maven.home`  は、 `${maven.home}/conf/settings.xml`  にカスタム設定がある場合にのみ必要です。"

#: _guides/maven-tooling.adoc
msgid ""
"If you want to test the artifact produced by your build with Integration Tests, add the following plugin configuration. Test names `*IT` and annotated with `@QuarkusIntegrationTest` will be run against the artifact produced by the build (JAR file, container image, etc). See the xref:getting-started-testing.adoc#quarkus-integration-test[Integration Testing guide] for more info. +\n"
"`maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr "ビルドによって生成されたアーティファクトを統合テストでテストする場合は、次のプラグイン設定を追加します。テスト名 `*IT` と `@QuarkusIntegrationTest` のアノテーションが付けられたテストは、ビルドによって生成されたアーティファクト (JAR ファイル、コンテナーイメージなど) に対して実行されます。詳細については、xref:getting-started-testing.adoc#quarkus-integration-test 統合テストガイドを参照してください。+ `maven.home` は、 `${maven.home}/conf/settings.xml` にカスタム設定がある場合にのみ必要です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Use a specific `native` profile for native executable building."
msgstr "ネイティブ実行可能ファイルのビルドには、特定の `native` プロファイルを使用します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Enable the `native` package type. The build will therefore produce a native executable."
msgstr "`native` パッケージタイプを有効にします。そのため、ビルドはネイティブ実行可能ファイルを生成します。"

#: _guides/maven-tooling.adoc
msgid ""
"Always run integration tests when building a native image (test names `*IT` and annotated with `@QuarkusIntegrationTest`). +\n"
"If you do not wish to run integration tests when building a native image, simply remove this property altogether or set its value to `true`."
msgstr "ネイティブイメージをビルドする際には、常に統合テストを実行します（テスト名は `*IT` で、アノテーションは `@QuarkusIntegrationTest` ）。+ ネイティブ・イメージのビルド時に統合テストを実行しない場合は、このプロパティを完全に削除するか、その値を `true` に設定してください。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Using fast-jar"
msgstr "fast-jar の使用"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`fast-jar` is the default quarkus package type."
msgstr "`fast-jar` は、デフォルトの quarkus パッケージタイプです。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The result of the build is a directory under `target` named `quarkus-app`."
msgstr "ビルドの結果は、 `quarkus-app` という名前の `target` の下のディレクトリーです。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "You can run the application using: `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "アプリケーションを実行するには、次のようにします: `java -jar target/quarkus-app/quarkus-run.jar`"

#: _guides/maven-tooling.adoc
msgid ""
"In order to successfully run the produced jar, you need to have the entire contents of the `quarkus-app` directory. If any of the files are missing, the application will not start or\n"
"might not function correctly."
msgstr "生成された jar を正常に実行するためには、 `quarkus-app` ディレクトリのすべての内容が必要です。いずれかのファイルが欠落していると、アプリケーションが起動しなかったり、正しく機能しない可能性があります。"

#: _guides/maven-tooling.adoc
msgid ""
"The `fast-jar` packaging results in creating an artifact that starts a little faster and consumes slightly less memory than a legacy Quarkus jar\n"
"because it has indexed information about which dependency jar contains classes and resources. It can thus avoid the lookup into potentially every jar\n"
"on the classpath that the legacy jar necessitates, when loading a class or resource."
msgstr "`fast-jar` パッケージングでは、どの依存関係のjarにクラスやリソースが含まれているかという情報がインデックス化されているため、レガシーのQuarkus jarよりも起動が少し速く、メモリ消費量もわずかに少ないアーティファクトを作成できます。このため、クラスやリソースをロードする際に、 レガシー jar が必要とするクラスパス上のすべての jar を検索する必要がなくなります。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Uber-Jar Creation"
msgstr "Uber-Jar 作成"

#: _guides/maven-tooling.adoc
msgid ""
"Quarkus Maven plugin supports the generation of Uber-Jars by specifying a `quarkus.package.jar.type=uber-jar` configuration option in your `application.properties`\n"
"(or `<quarkus.package.jar.type>uber-jar</quarkus.package.jar.type>` in your `pom.xml`)."
msgstr "Quarkus Mavenプラグインは、 `application.properties` （または `pom.xml` の `<quarkus.package.jar.type>uber-jar</quarkus.package.jar.type>` ）で `quarkus.package.jar.type=uber-jar` 設定オプションを指定することで、Uber-Jarの生成をサポートします。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The original jar will still be present in the `target` directory, but it will be renamed to contain the `.original` suffix."
msgstr "元の jar は `target` ディレクトリーに残っていますが、 `.original` のサフィックスを含むように名前が変更されます。"

#: _guides/maven-tooling.adoc
msgid ""
"When building an Uber-Jar you can specify entries that you want to exclude from the generated jar by using the `quarkus.package.ignored-entries` configuration\n"
"option, this takes a comma separated list of entries to ignore."
msgstr "Uber-jar をビルドする際に、 `quarkus.package.ignored-entries`  設定オプションを使用して生成された jar から除外したいエントリーを指定することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Uber-Jar creation by default excludes link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[signature files] that might be present in the dependencies of the application."
msgstr "デフォルトでは、Uber-Jar の作成は、アプリケーションの依存関係に存在する可能性のある link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[署名ファイル]を除外します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Uber-Jar's final name is configurable via a Maven's build settings `finalName` option."
msgstr "Uber-Jarの最終的な名前は、Mavenのビルド設定 `finalName` オプションで設定できます。"

#. type: Title ====
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Uber-Jar file name suffix"
msgstr "Uber-Jar のファイル名のサフィックス"

#: _guides/maven-tooling.adoc
msgid ""
"By default the generated uber JAR file name will have the `-runner` suffix, unless it was overridden by configuring a custom one with `quarkus.package.jar.runner-suffix` configuration option.\n"
"If the runner suffix is not desired, it can be disabled by setting `quarkus.package.jar.add-runner-suffix` configuration option to `false`, in which case the uber JAR will replace the original JAR\n"
"file generated by `maven-jar-plugin` for the application module."
msgstr ""
"デフォルトでは、生成されるuber JARファイル名は、 `quarkus.package.jar.runner-suffix` 設定オプションでカスタムサフィックスを設定することで上書きされない限り、 `-runner` サフィックスを持ちます。\n"
"ランナーサフィックスが不要な場合は、 `quarkus.package.jar.add-runner-suffix` コンフィギュレーションオプションを `false` に設定することで無効にできます。\n"
"この場合、uber JAR は `maven-jar-plugin` によって生成されたオリジナルの JAR ファイルをアプリケーションモジュール用に置き換えます。"

#. type: Title ====
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Attaching Uber-Jar file as the main project artifact"
msgstr "Uber-Jarファイルをメインプロジェクトのアーティファクトとして添付する"

#: _guides/maven-tooling.adoc
msgid ""
"As long as an Uber-Jar file name is created by appending a suffix, such as `runner`, to the original project JAR file name, the Uber-Jar file name suffix will also be used as the Maven\n"
"artifact classifier for the Uber-Jar artifact. There are two ways to attach an Uber-Jar as the main project artifact (without the classifier):"
msgstr "Uber-Jar ファイル名が元のプロジェクト JAR ファイル名に `runner` などのサフィックスを付加して作成される限り、Uber-Jar ファイル名のサフィックスは Uber-Jar アーティファクトの Maven アーティファクト分類子としても使用されます。Uber-Jar をメイン・プロジェクト・アーティファクトとして添付するには、2 つの方法があります (分類子なし)："

#: _guides/maven-tooling.adoc
msgid "set `quarkus.package.jar.add-runner-suffix=false`, which will disable the addition of the file name suffix and, by doing that, will replace the original project JAR on the file system;"
msgstr "`quarkus.package.jar.add-runner-suffix=false` を設定します。これは、ファイル名の接尾辞の追加を無効にし、ファイルシステム上の元のプロジェクトJARを置き換えます；"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "set `attachRunnerAsMainArtifact` parameter of the `quarkus:build` goal to `true`."
msgstr "`quarkus:build` ゴールの `attachRunnerAsMainArtifact` パラメータを `true` に設定する。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Working with multi-module projects"
msgstr "マルチモジュールプロジェクトでの作業"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "By default, Quarkus will not discover CDI beans inside another module."
msgstr "デフォルトでは、Quarkusは別のモジュール内のCDI Bean を検出しません。"

#: _guides/maven-tooling.adoc
msgid ""
"The best way to enable CDI bean discovery for a module in a multi-module project would be to include the `jandex-maven-plugin`,\n"
"unless it is the main application module already configured with the quarkus-maven-plugin, in which case it will be indexed automatically."
msgstr "マルチモジュールプロジェクトのモジュールで CDI Bean 検出を有効にする最善の方法は、それが `quarkus-maven-plugin` で既に設定されているメインアプリケーションモジュールでない限り、jandex-maven-plugin を含めることです。自動的にインデックスされます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "More information on this topic can be found on the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr "このトピックの詳細については、CDI ガイドの xref:cdi-reference.adoc#bean_discovery[Bean 検出] セクションを参照してください。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Maven test plugin configuration"
msgstr "Mavenテストプラグインの設定"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`maven-surefire-plugin` and `maven-failsafe-plugin` configurations showed above will work in most cases. However, there could be cases when extra configuration will be required."
msgstr "`maven-surefire-plugin` および `maven-failsafe-plugin` の設定は、ほとんどのケースで機能します。しかし、追加の設定が必要になる場合もあります。"

#: _guides/maven-tooling.adoc
msgid ""
"The reason is that, Quarkus may need to re-resolve application dependencies during the test phase to set up the test classpath for the tests. The original Maven resolver used in previous build phases\n"
"will not be available in the test process and, as a conseqence, Quarkus will need to initialize a new one. To make sure the new resolver is initialized correctly, the relevant configuration options\n"
"will need to be passed to the test process."
msgstr ""
"Quarkusでは、テストフェーズでアプリケーションの依存関係を再解決して、テスト用のクラスパスを設定する必要がある場合があるためです。\n"
"以前のビルドフェーズで使用された元のMavenリゾルバはテストプロセスでは使用できず、その結果、Quarkusは新しいリゾルバを初期化する必要があります。\n"
"新しいリゾルバが正しく初期化されるように、関連する設定オプションをテストプロセスに渡す必要があります。"

#. type: Title ====
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Maven user settings"
msgstr "Mavenユーザー設定"

#: _guides/maven-tooling.adoc
msgid ""
"A path to the Maven user settings file may need to be passed to test processes, for example, in case the Maven build process was not launched using the default `mvn` scripts included in the Maven distribution.\n"
"It could be done in the following way:"
msgstr ""
"Maven ビルドプロセスが Maven ディストリビューションに含まれるデフォルトの `mvn` スクリプトを使用して起動されなかった場合など、Maven ユーザー設定ファイルへのパスをテストプロセスに渡す必要があります。\n"
"それは次の方法で行うことができます："

#. type: Title ====
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Remote repository access through authenticated HTTPS"
msgstr "認証されたHTTPSによるリモートリポジトリアクセス"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In case a remote Maven repository requires link:https://maven.apache.org/guides/mini/guide-repository-ssl.html[authenticated HTTPS access configuration], some or all of the following properties will need to be passed to the test plugins:"
msgstr "リモート Maven リポジトリが link:https://maven.apache.org/guides/mini/guide-repository-ssl.html[認証された HTTPS アクセス設定] を必要とする場合、以下のプロパティの一部またはすべてをテストプラグインに渡す必要があります："

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Building with a specific configuration profile"
msgstr "特定の設定プロファイルでビルド"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Quarkus supports xref:config-reference.adoc#profiles[configuration profiles] in order to provide a specific configuration according to the target environment."
msgstr "Quarkusは、対象となる環境に応じて特定の設定を提供するために、 link:config-reference.html#profiles[設定プロファイル]をサポートしています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The profile can be provided directly in the Maven build's command thanks to the system property `quarkus.profile` with a command of type:"
msgstr "以下のタイプのコマンドを持つシステムプロパティー `quarkus.profile` により、プロファイルは Maven ビルドのコマンドで直接提供できます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "However, it is also possible to specify the profile directly in the POM file of the project using project properties, the Quarkus Maven plugin configuration properties or system properties set in the Quarkus Maven plugin configuration."
msgstr "ただし、プロジェクトプロパティー、Quarkus Maven プラグイン設定プロパティー、または Quarkus Maven プラグイン設定で設定されたシステムプロパティーを使用して、プロジェクトの POM ファイルでプロファイルを直接指定することもできます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In order of precedence (greater precedence first):"
msgstr "優先順位の高い順 (優先順位が高い方が先):"

#. type: Block title
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "1. System properties set in the Quarkus Maven plugin configuration"
msgstr "1. Quarkus Maven プラグイン設定で設定されたシステムプロパティー"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The default configuration profile of this project is `prod-aws`."
msgstr "このプロジェクトのデフォルトの設定プロファイルは `prod-aws` です。"

#. type: Block title
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "2. Quarkus Maven plugin configuration properties"
msgstr "2. Quarkus Maven プラグインの設定プロパティー"

#. type: Block title
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "3. Project properties"
msgstr "3. プロジェクトプロパティ"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Whatever the approach is chosen, the profile can still be overridden with the `quarkus.profile` system property or the `QUARKUS_PROFILE` environment variable."
msgstr "どのアプローチを選択しても、プロファイルは `quarkus.profile` システムプロパティーまたは `QUARKUS_PROFILE` 環境変数で引き続きオーバーライドすることができます。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Building several artifacts from a single module"
msgstr "1つのモジュールから複数のアーティファクトの作成"

#: _guides/maven-tooling.adoc
msgid ""
"In some particular use cases, it can be interesting to build several artifacts of your application from the same module.\n"
"A typical example is when you want to build your application with different configuration profiles."
msgstr "いくつかの特定のユースケースでは、同じモジュールからアプリケーションのいくつかのアーティファクトをビルドすることが興味深い場合があります。典型的な例は、さまざまな設定プロファイルを使用してアプリケーションをビルドする場合です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "In that case, it is possible to add as many executions as needed to the Quarkus Maven plugin configuration."
msgstr "この場合、Quarkus Maven プラグイン設定に必要な数の実行を追加することができます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Below is an example of a Quarkus Maven plugin configuration that will produce two builds of the same application: one using the `prod-oracle` profile and the other one using the `prod-postgresql` profile."
msgstr "以下は、同じアプリケーションの 2 つのビルド (1 つは `prod-oracle` プロファイルを使用し、もう 1 つは `prod-postgresql` プロファイルを使用) を生成する Quarkus Maven プラグイン設定の例です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The default configuration profile of the first execution of the plugin is `prod-oracle`."
msgstr "プラグインの最初の実行のデフォルトの設定プロファイルは `prod-oracle` です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The output directory of the first execution of the plugin is set to `oracle-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr "プラグインの最初の実行の出力ディレクトリーは、専用ディレクトリーを持つために、 `quarkus-app` ではなく `oracle-quarkus-app` に設定されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The default configuration profile of the second execution of the plugin is `prod-postgresql`."
msgstr "プラグインの 2 回目の実行のデフォルトの設定プロファイルは `prod-postgresql` です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The output directory of the second execution of the plugin is set to `postgresql-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr "プラグインの 2 回目の実行の出力ディレクトリーは、専用ディレクトリーを持つために、 `quarkus-app` ではなく `postgresql-quarkus-app` に設定されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "With the configuration above, both profile builds will be using the same dependencies, so if we added dependencies on the Oracle and PostgreSQL drivers to the application, both of the drivers will appear in both builds."
msgstr "上記の設定では、両方のプロファイルビルドが同じ依存関係を使用するため、アプリケーションに Oracle ドライバーと PostgreSQL ドライバーの依存関係を追加すると、両方のドライバーが両方のビルドに表示されることになります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "To isolate profile-specific dependencies from other profiles, the JDBC drivers could be added as optional dependencies to the application but configured to be included in each profile that requires them, e.g.:"
msgstr "プロファイル固有の依存関係を他のプロファイルから分離するために、JDBC ドライバーをオプションの依存関係としてアプリケーションに追加できますが、それらを必要とする各プロファイルに含まれるように設定されます。以下に例を示します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The JDBC driver of PostgreSQL is defined as an optional dependency"
msgstr "PostgreSQLのJDBCドライバは、オプションの依存関係として定義されています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "For backward compatibility reasons, it is necessary to explicitly indicate that the optional dependencies need to be filtered."
msgstr "後方互換性の理由から、オプションの依存関係をフィルタリングする必要があることを明示的に示す必要があります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Only the optional dependency corresponding to the JDBC driver of PostgreSQL is expected in the final artifact."
msgstr "PostgreSQLのJDBCドライバに対応するオプションの依存関係のみが、最終的な成果物として期待されます。"

#: _guides/maven-tooling.adoc
msgid "If you have more than one optional dependency to declare in the `quarkus.package.jar.included-optional-dependencies` tag, make sure they are separated with `,` (e.g. `org.postgresql:postgresql::jar,com.foo:bar::jar`)."
msgstr "`quarkus.package.jar.included-optional-dependencies` タグで宣言するオプションの依存関係が複数ある場合は、 `,` で区切ってください (例: `org.postgresql:postgresql::jar,com.foo:bar::jar` )。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Configuring the Project Output"
msgstr "プロジェクト出力の設定"

#: _guides/maven-tooling.adoc
msgid ""
"There are a several configuration options that will define what the output of your project build will be.\n"
"These are provided in `application.properties` the same as any other config property."
msgstr "プロジェクトのビルドの出力を定義するための設定オプションがいくつかあります。これらは他の設定プロパティーと同じように `application.properties`  で提供されています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The properties are shown below:"
msgstr "プロパティーは以下の通りです:"

#: _guides/maven-tooling.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-1\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span> ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは、実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-1\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Custom test configuration profile in JVM mode"
msgstr "JVMモードでのカスタムテスト設定プロファイル"

#: _guides/maven-tooling.adoc
msgid ""
"By default, Quarkus tests in JVM mode are run using the `test` configuration profile. If you are not familiar with Quarkus\n"
"configuration profiles, everything you need to know is explained in the\n"
"xref:config-reference.adoc#profiles[Configuration Profiles Documentation]."
msgstr "デフォルトでは、JVMモードのQuarkusテストは、 `test` 設定プロファイルを使用して実行されます。Quarkusの設定プロファイルに慣れていない場合は、 link:config.html#configuration-profiles[設定プロファイル] のドキュメントで必要な情報がすべて説明されていますので、そちらを参照してください。"

#: _guides/maven-tooling.adoc
msgid ""
"It is however possible to use a custom configuration profile for your tests with the Maven Surefire and Maven Failsafe\n"
"configurations shown below. This can be useful if you need for example to run some tests using a specific database which is not\n"
"your default testing database."
msgstr "ただし、以下に示すMaven SurefireおよびMaven Failsafe構成で、テストにカスタム設定プロファイルを使用することは可能です。これは、例えば、デフォルトのテストデータベースではない特定のデータベースを使用してテストを実行する必要がある場合に便利です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The `foo` configuration profile will be used to run the tests."
msgstr "`foo` 設定プロファイルがテストの実行に使用されます。"

#: _guides/maven-tooling.adoc
msgid ""
"It is not possible to use a custom test configuration profile in native mode for now. Native tests are always run using the\n"
"`prod` profile."
msgstr "今のところ、ネイティブモードでカスタムテスト設定プロファイルを使用することはできません。ネイティブテストは常に `prod`  プロファイルを使用して実行されます。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Bootstrap Maven properties"
msgstr "ブートストラップ Maven プロパティー"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Quarkus bootstrap includes a Maven resolver implementation that is used to resolve application runtime and build time dependencies. The Quarkus Maven resolver is initialized from the same Maven command line that launched the build, test or dev mode. Typically, there is no need to add any extra configuration for it. However, there could be cases where an extra configuration option may be necessary to properly resolve application dependencies in test or dev modes, or IDEs."
msgstr "Quarkus ブートストラップには、アプリケーションのランタイムとビルド時間の依存関係を解決するために使用される Maven リゾルバーの実装が含まれています。Quarkus Maven リゾルバーは、ビルド、テスト、または開発モードを起動したのと同じ Maven コマンドラインから初期化されます。通常、設定を追加する必要はありません。ただし、テストモード、開発モード、または IDE でアプリケーションの依存関係を適切に解決するために、追加の設定オプションが必要になる場合があります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Maven test plugins (such as `surefire` and `failsafe`), for example, are not propagating build system properties to the running tests by default. Which means some system properties set by the Maven CLI aren't available for the Quarkus Maven resolver initialized for the tests, which may result in test dependencies being resolved using different settings than the main Maven build."
msgstr "たとえば、Maven テストプラグイン (`surefire` や `failsafe` など) は、デフォルトでは、ビルドシステムのプロパティーを実行中のテストに伝搬しません。つまり、MavenCLI によって設定されたシステムプロパティーの一部は、テスト用に初期化された Quarkus Maven リゾルバーでは使用できないため、メインの Maven ビルドとは異なる設定を使用して、テストの依存関係が解決される可能性があります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Here is a list of system properties the Quarkus bootstrap Maven resolver checks during its initialization."
msgstr "以下は、Quarkus bootstrap Maven resolverが初期化時にチェックするシステムプロパティのリストです。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Property name"
msgstr "プロパティ名"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`maven.home`"
msgstr "`maven.home`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`MAVEN_HOME` envvar"
msgstr "`MAVEN_HOME` envvar"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "The Maven home dir is used to resolve the global settings file unless it was explicitly provided on the command line with the `-gs` argument"
msgstr "Maven のホームディレクトリは、コマンドラインで `-gs` 引数を使って明示的に提供されていない限り、グローバル設定ファイルの解決に使用されます。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`maven.settings`"
msgstr "`maven.settings`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`~/.m2/settings.xml`"
msgstr "`~/.m2/settings.xml`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Unless the custom settings file has been provided with the `-s` argument, this property can be used to point the resolver to a custom Maven settings file"
msgstr "カスタム設定ファイルが `-s` 引数で提供されていない限り、このプロパティを使用してリゾルバにカスタム Maven 設定ファイルを指定できます。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`maven.repo.local`"
msgstr "`maven.repo.local`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`~/.m2/repository`"
msgstr "`~/.m2/repository`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "This property could be used to configure a custom local Maven repository directory, if it is different from the default one and the one specified in the `settings.xml`"
msgstr "これがデフォルトのものや `settings.xml`で設定されたものと異なる場合、このプロパティを使用して、カスタムのローカル Maven リポジトリ・ディレクトリを構成することができます。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`maven.top-level-basedir`"
msgstr "`maven.top-level-basedir`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "none"
msgstr "none"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "This property may be useful to help the Maven resolver identify the top-level Maven project in the workspace. By default, the Maven resolver will be discovering a project's workspace by navigating the parent-module POM relationship. However, there could be project layouts that are using an aggregator module which isn't appearing as the parent for its modules. In this case, this property will help the Quarkus Maven resolver to properly discover the workspace."
msgstr "このプロパティーは、Maven リゾルバーがワークスペース内の最上位の Maven プロジェクトを識別する際に役立つ場合があります。デフォルトでは、Maven リゾルバーは、親モジュールの POM 関係をナビゲートすることによってプロジェクトのワークスペースを検出します。ただし、モジュールの親として表示されていないアグリゲーターモジュールを使用しているプロジェクトレイアウトが存在する可能性があります。この場合、このプロパティーは、QuarkusMaven リゾルバーがワークスペースを適切に検出できるようにサポートします。"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`quarkus.bootstrap.effective-model-builder`"
msgstr "`quarkus.bootstrap.effective-model-builder`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "`false`"
msgstr "`false`"

#. type: Table
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "By default, the Quarkus Maven resolver is reading project's POMs directly when discovering the project's layout. While in most cases it works well enough and relatively fast, reading raw POMs has its limitation. E.g. if a POM includes modules in a profile, these modules will not be discovered. This system property enables project's layout discovery based on the effective POM models, that are properly interpolated, instead of the raw ones. The reason this option is not enabled by default is it may appear to be significantly more time-consuming that could increase, e.g. CI testing times. Until there is a better approach found that could be used by default, projects that require it should enable this option."
msgstr "デフォルトでは、Quarkus Maven リゾルバーは、プロジェクトのレイアウトを検出するときにプロジェクトの POM を直接読み取ります。ほとんどの場合、これは十分に機能し、比較的高速ですが、raw POM を読み取ることには限界があります。たとえば、POM のプロファイルにモジュールが含まれている場合、これらのモジュールは検出されません。このシステムプロパティーにより、raw のモデルではなく、適切に補間された効果的な POM モデルに基づいたプロジェクトのレイアウト検出が可能になります。このオプションがデフォルトで有効になっていない理由は、たとえば CI テスト時間を増加させるなど、大幅に時間がかかると思われるからです。デフォルトで使用できるより良いアプローチが見つかるまで、このオプションが必要なプロジェクトは、これを有効にする必要があります。"

#: _guides/maven-tooling.adoc
msgid "`quarkus.bootstrap.legacy-model-resolver`"
msgstr "`quarkus.bootstrap.legacy-model-resolver`"

#: _guides/maven-tooling.adoc
msgid "This *system* or *POM* property can be used to enable the legacy `ApplicationModel` resolver implementation. The property was introduced in Quarkus 3.19.0 and will be removed once the legacy implementation is known to be not in demand."
msgstr "この *システムプロパティ* または *POM* プロパティを使用すると、従来の `ApplicationModel` リゾルバ実装を有効にすることができます。このプロパティはQuarkus 3.19.0で導入されましたが、レガシー実装の需要がないことが判明した時点で削除される予定です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "These system properties above could be added to, e.g., a `surefire` and/or `failsafe` plugin configuration as"
msgstr "上記のこれらのシステムプロパティーは、たとえば、以下のように `surefire` および/または `failsafe` プラグイン設定に追加できます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Propagate `maven.home` system property set by the Maven CLI to the tests"
msgstr "Maven CLI によって設定された `maven.home` システムプロパティーをテストに伝達します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Set the Maven local repository directory for the tests"
msgstr "テスト用のMavenローカルリポジトリのディレクトリを設定"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Set the Maven settings file the tests"
msgstr "テスト用の Maven 設定ファイルを設定します"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Point to the top-level project directory for the tests"
msgstr "テスト用のトップレベルのプロジェクト・ディレクトリを指定"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Enable effective POM-based project layout discovery"
msgstr "効果的なPOMベースのプロジェクト・レイアウト・ディスカバリーを有効化"

#. type: Title ====
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Top-level vs Multi-module project directory"
msgstr "トップレベルとマルチモジュールのプロジェクトディレクトリ"

#: _guides/maven-tooling.adoc
msgid ""
"In Maven there appears to be a notion of the top-level project (that is exposed as a project property `${session.topLevelProject.basedir.absolutePath}`)\n"
"and the multi-module project directory (that is available as property `${maven.multiModuleProjectDirectory}`). These directories might not always match!"
msgstr "Mavenでは、トップレベルのプロジェクト(プロジェクトのプロパティとして公開されています。 `${session.topLevelProject.basedir.absolutePath}`)と、マルチモジュールのプロジェクトディレクトリ(プロパティとして公開されています。 `${maven.multiModuleProjectDirectory}`)という概念があるようです。これらのディレクトリは常に一致するとは限りません。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`maven.multiModuleProjectDirectory` is meant to be consulted by the Maven code itself and not something to be relied upon by user code. So, if you find it useful, use it at your own risk!"
msgstr "`maven.multiModuleProjectDirectory` は、Maven コード自体が参照することを意図しており、ユーザーコードが頼るべきものではありません。なので、もし便利だと思っても、自分の責任で使ってくださいね。"

#: _guides/maven-tooling.adoc
msgid ""
"The `${maven.multiModuleProjectDirectory}` will be resolved to the first directory that contains `.mvn` directory as its child going up the workspace file system tree\n"
"starting from the current directory (or the one specified with the `-f` argument) from which the `mvn` command was launched. If the `.mvn` directory was not found, however,\n"
"the `${maven.multiModuleProjectDirectory}` will be pointing to the directory from which the `mvn` command was launched (or the one targeted with the `-f` argument)."
msgstr "`${maven.multiModuleProjectDirectory}` は、 `mvn` コマンドが起動された現在のディレクトリー (または `-f` 引数で指定されたディレクトリー) から開始してワークスペースファイルシステムツリーを上る子として `.mvn` ディレクトリーを含む最初のディレクトリーに解決されます。ただし、 `.mvn` ディレクトリーが見つからなかった場合は、 `${maven.multiModuleProjectDirectory}` は、 `mvn` コマンドが起動されたディレクトリー (または `-f` 引数の対象となるディレクトリー) を指すようになります。"

#: _guides/maven-tooling.adoc
msgid ""
"The `${session.topLevelProject.basedir.absolutePath}` will be pointing either to the directory from which the `mvn` command was launched or to the directory targeted with\n"
"the `-f` argument, if it was specified."
msgstr "`${session.topLevelProject.basedir.absolutePath}` は、 `mvn` コマンドが起動されたディレクトリー、または指定されている場合は `-f` 引数の対象となるディレクトリーのいずれかを指します。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Quarkus project info"
msgstr "Quarkus プロジェクト情報"

#: _guides/maven-tooling.adoc
msgid ""
"The Quarkus Maven plugin includes a goal called `info` (currently marked as 'experimental') that logs Quarkus-specific information about the project, such as: the imported Quarkus platform BOMs and the Quarkus extensions found among the project dependencies.\n"
"In a multi-module project `quarkus:info` will assume that the current module, in which it is executed, is the main module of the application."
msgstr "Quarkus Maven プラグインには、 `info` (現在は 'experimental' とマークされています) と呼ばれるゴールが含まれています。これは、インポートされた Quarkus プラットフォーム BOM やプロジェクトの依存関係で見つかった Quarkus エクステンションなど、プロジェクトに関する Quarkus 固有の情報をログに記録するものです。マルチモジュールプロジェクトでは、 `quarkus:info` は、実行されている現在のモジュールが、アプリケーションのメインモジュールであると想定します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The report generated by `quarkus:info` is not currently including the Quarkus Maven plugin information, however it's planned to be added in the future releases."
msgstr "`quarkus:info` によって生成されたレポートには、現在 Quarkus Maven プラグイン情報が含まれていませんが、将来のリリースで追加される予定です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Here is an example `info` output for a simple project:"
msgstr "単純なプロジェクトの `info` 出力の例を以下に示します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Quarkus platform BOMs imported in the project (BOMs imported by parent POMs will also be reported)"
msgstr "プロジェクトにインポートされた Quarkus プラットフォーム BOM (親 POM によってインポートされた BOM も報告されます)"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Direct Quarkus extension dependencies managed by the `quarkus-bom`"
msgstr "`quarkus-bom` によって管理される直接的な Quarkus エクステンションの依存関係"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Direct Quarkus extension dependencies managed by the `quarkus-camel-bom`"
msgstr "`quarkus-camel-bom` によって管理される直接的な Quarkus エクステンションの依存関係"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Direct Quarkus extensions dependencies that aren't managed by Quarkus BOMs but found in the Quarkus extension registry"
msgstr "Quarkus BOM によって管理されていないが、Quarkus 拡張レジストリーにある直接的な Quarkus 拡張の依存関係"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "`quarkus:info` will also report Quarkus extensions that aren't found in the Quarkus extension registries if those are present among the project dependencies, indicating they have an 'unknown origin'."
msgstr "また、 `quarkus:info` は、Quarkus エクステンションレジストリーにない Quarkus エクステンションがプロジェクトの依存関係に存在する場合は報告し、'不明なオリジン' であることを示します。"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Highlighting misaligned versions"
msgstr "揃っていないバージョンの強調表示"

#: _guides/maven-tooling.adoc
msgid "`quarkus:info` will also highlight basic Quarkus dependency version misalignments, in case they are detected. For example, if we modify the project mentioned above by removing the `camel-quarkus-rabbitmq` extension from the dependencies and adding a `2.6.3.Final` `<version>` element to the `quarkus-rest` dependency that is managed by the `quarkus-bom` and then run `quarkus:info` again, we'll see something like:"
msgstr "`quarkus:info` は、Quarkusの基本的な依存関係のバージョンのずれが検出された場合、そのハイライトも行います。例えば、依存関係から `camel-quarkus-rabbitmq` エクステンションを削除し、 `quarkus-bom` によって管理されている `quarkus-rest` 依存関係に `2.6.3.Final` `<version>` 要素を追加することで、前述のプロジェクトを修正し、 `quarkus:info` を再度実行すると、次のように表示されます:"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The `quarkus-camel-bom` import is now reported as 'unnecessary' since none of the Quarkus extensions it includes are found among the project dependencies"
msgstr "`quarkus-camel-bom` のインポートは、Quarkus のエクステンションがプロジェクトの依存関係にないため、 'unnecessary' と報告されるようになりました。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The version `2.6.3.Final` of the `quarkus-resteasy-reactive` is now reported as being misaligned with the version managed by the Quarkus platform BOM imported in the project, which is {quarkus-version}"
msgstr "quarkus-resteasy-reactive` のバージョン `2.6.3.Final` は、プロジェクトにインポートされた Quarkus プラットフォーム BOM によって管理されているバージョン ({quarkus-version}) と整合性がないと報告されるようになりました。"

#. type: Title ==
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Quarkus project update"
msgstr "Quarkus プロジェクト更新"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The `quarkus:update` goal (currently marked as 'experimental') provided by the Quarkus Maven plugin can be used to check whether there are Quarkus-related updates available for a project, such as: new releases of the relevant Quarkus platform BOMs and non-platform Quarkus extensions present in the project. In a multi-module project the `update` goal is meant to be executed from the main Quarkus application module."
msgstr "QuarkusMaven プラグインによって提供される `quarkus:update` ゴール (現在は 'experimental' としてマークされています) を使用して、プロジェクトで利用可能な Quarkus 関連の更新があるかどうかを確認できます。たとえば、プロジェクトに存在する関連する Quarkus プラットフォーム の BOM やプラットフォーム以外の Quarkus エクステンションの新リリースが挙げられます。マルチモジュールプロジェクトでは、 `update` ゴールはメインの Quarkus アプリケーションモジュールから実行されることを想定しています。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "At this point, the `quarkus:update` goal does not actually apply the recommended updates but simply reports what they are and how to apply them manually."
msgstr "この時点で、 `quarkus:update` のゴールは、推奨される更新を実際に適用するのではなく、単にその内容と手動で適用する方法を報告します。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The Quarkus Maven plugin version isn't currently included in the update report, however it's planned to be added in the future releases."
msgstr "Quarkus Maven プラグインのバージョンは、現在更新レポートに含まれていませんが、将来のリリースで追加される予定です。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The way `quarkus:update` works, first, all the direct Quarkus extension dependencies of the project are collected (those that are managed by the Quarkus platform BOMs and those that aren't but found in the Quarkus extension registries). Then the configured Quarkus extension registries (typically the `registry.quarkus.io`) will be queried for the latest recommended/supported Quarkus platform versions and non-platform Quarkus extensions compatible with them. The algorithm will then select the latest compatible combination of all the extensions found in the project, assuming such a combination actually exists. Otherwise, no updates will be suggested."
msgstr "`quarkus:update` が機能する方法では、最初に、プロジェクトのすべての直接的な Quarkus エクステンションの依存関係が収集されます (Quarkus プラットフォームの BOM によって管理されるものと、管理されないけれども Quarkus エクステンションレジストリーにあるもの)。次に、設定された Quarkus エクステンションレジストリー (通常は `registry.quarkus.io`) が、最新の推奨/サポートされる Quarkus プラットフォームバージョンおよびそれらと互換性のあるプラットフォーム以外の Quarkus エクステンションについてクエリーされます。続いて、アルゴリズムは、プロジェクトで見つかったすべてのエクステンションの最新の互換性のある組み合わせを選択します (そのような組み合わせが実際に存在する場合)。そうでない場合は、更新は提案されません。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Assuming we have a project including Kogito, Camel and core Quarkus extensions available in the Quarkus platform based on Quarkus `2.7.1.Final`, the output of the `quarkus:update` would look like:"
msgstr "Kogito、Camel、および Quarkus `2.7.1.Final` に基づく Quarkus プラットフォームで利用可能なコア Quarkus エクステンションを含むプロジェクトがあると想定する場合、 `quarkus:update` の出力は以下のようになります。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "A list of currently recommended Quarkus platform BOM updates"
msgstr "現在推奨されている Quarkus プラットフォームの BOM 更新のリスト"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Typically, a single project property will be used to manage all the Quarkus platform BOMs but the implementation isn't currently smart enough to point that out and will report updates for each BOM individually."
msgstr "通常、単一のプロジェクトプロパティーを使用してすべての Quarkus プラットフォーム BOM を管理しますが、現在の実装はその点を十分に考慮しておらず、各 BOM の更新が個別に報告されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "If we modify the project to remove all the Camel Quarkus extensions from the project, change the version of the `quarkus-resteasy-reactive` extension to `2.6.3.Final` and downgrade `quarkus-prettytime` which is not included in the Quarkus platform BOMs to `0.2.0`, `quarkus:update` will report something like:"
msgstr "プロジェクトを変更して、プロジェクトからCamel Quarkusエクステンションをすべて削除し、 `quarkus-resteasy-reactive` エクステンションのバージョンを `2.6.3.Final` 、QuarkusプラットフォームのBOMに含まれていない `quarkus-prettytime` を `0.2.0` にダウングレードすると、 `quarkus:update` は次のような報告をします:"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "A list of the currently recommended Quarkus platform BOM updates for the project"
msgstr "プロジェクトに対して現在推奨されている Quarkus プラットフォームの BOM 更新のリスト"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "Given that the project does not include any Camel Quarkus extensions, the BOM import is recommended to be removed"
msgstr "プロジェクトにCamel Quarkusエクステンションが含まれていないことから、BOMインポートを削除することが推奨されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "An outdated version of the `quarkus-resteasy-reactive` is recommended to be removed in favor of the one managed by the `quarkus-bom`"
msgstr "`quarkus-bom` によって管理されていることから、 `quarkus-resteasy-reactive` の古いバージョンを削除することが推奨されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "The latest compatible version of the `quarkus-prettytime` extension"
msgstr "`quarkus-prettytime` エクステンションの最新の互換性のあるバージョン"

#. type: Title ===
#: _guides/maven-tooling.adoc
#, no-wrap
msgid "Quarkus project rectify"
msgstr "Quarkus プロジェクト修正"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "As was mentioned above, `quarkus:info`, besides reporting Quarkus platform and extension versions, performs a quick version alignment check, to make sure the extension versions used in the project are compatible with the imported Quarkus platform BOMs. If misalignments are detected, the following warning message will be logged:"
msgstr "前述のように、 `quarkus:info` は、Quarkus プラットフォームとエクステンションのバージョンを報告するだけでなく、プロジェクトで使用されるエクステンションのバージョンがインポートされた Quarkus プラットフォームの BOM と互換性があることを確認するために、バージョンの整合性をすばやくチェックします。不整合が検出された場合、以下の警告メッセージがログに記録されます。"

#. type: Plain text
#: _guides/maven-tooling.adoc
msgid "When the `rectify` option is enabled, `quarkus:update`, instead of suggesting the latest recommended Quarkus version updates, will log update instructions to simply align the extension dependency versions found in the project with the currently imported Quarkus platform BOMs."
msgstr "`rectify` オプションが有効な場合、 `quarkus:update` は、最新の推奨される Quarkus バージョンの更新を提案する代わりに、プロジェクトで見つかったエクステンションの依存関係バージョンを現在インポートされている Quarkus プラットフォームの BOM に合わせるための更新手順をログに記録します。"
