msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Authorization of web endpoints"
msgstr "ウェブエンドポイントの認可"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus incorporates a pluggable web security layer.\n"
"When security is active, the system performs a permission check on all HTTP requests to determine if they should proceed."
msgstr ""
"Quarkus には、プラグ可能な Web セキュリティーレイヤーが組み込まれています。\n"
"セキュリティーがアクティブな場合、システムはすべての HTTP リクエストに対して権限チェックを実行し、続行するかどうかを決定します。"

#. type: delimited block =
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "If you use Jakarta RESTful Web Services, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr "Jakarta RESTful Web サービスを使用する場合は、HTTP パスレベルのマッチングではなく、 `quarkus.security.jaxrs.deny-unannotated-endpoints` または `quarkus.security.jaxrs.default-roles-allowed` を使用して、デフォルトのセキュリティー要件を設定することを検討してください。アノテーションによって、個々のエンドポイントでこれらのプロパティーをオーバーライドできるためです。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Authorization is based on user roles that the security provider provides.\n"
"To customize these roles, a `SecurityIdentityAugmentor` can be created, see\n"
"xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr ""
"認可は、セキュリティ・プロバイダーが提供するユーザー・ロールに基づきます。これらのロールをカスタマイズするには、\n"
"`SecurityIdentityAugmentor` を作成することができます。\n"
"link:security-customization.html#security-identity-customization[セキュリティ・アイデンティティのカスタマイズ] を参照してください。"

#. type: Title ==
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Authorization using configuration"
msgstr "設定を利用した認可"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions are defined in the Quarkus configuration by permission sets, each specifying a policy for access control."
msgstr "権限は、Quarkus 設定で権限セットによって定義されます。各権限セットで、アクセス制御用のポリシーを指定します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "When a security policy's `paths` property contains the most specific path that matches the current request path, it takes precedence over other security policies with matching paths and is said to win."
msgstr "セキュリティポリシーの `paths` プロパティに、現在の要求パスに一致する最も具体的なパスが含まれている場合、そのセキュリティポリシーは、一致するパスを持つ他のセキュリティポリシーよりも優先され、勝つと言われます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "{project-name} policies summary"
msgstr "{project-name} ポリシーの概要"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Built-in policy"
msgstr "組込ポリシー"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`deny`"
msgstr "`deny`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "This policy denies all users."
msgstr "このポリシーは、すべてのユーザーを拒否します。"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`permit`"
msgstr "`permit`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "This policy permits all users."
msgstr "このポリシーは、すべてのユーザーを許可します。"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`authenticated`"
msgstr "`authenticated`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "This policy permits only authenticated users."
msgstr "このポリシーは、認証されたユーザーのみを許可します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "You can define role-based policies that allow users with specific roles to access the resources."
msgstr "特定のロールを持つユーザーにリソースへのアクセスを許可するロールベースのポリシーを定義できます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of a role-based policy"
msgstr "ロールベースポリシーの例"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles."
msgstr "これは、 `user` ロールと `admin` ロールを持つユーザーを許可するロールベースのポリシーを定義します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "You can reference a custom policy by configuring the built-in permission sets that are defined in the `application.properties` file, as outlined in the following configuration example:"
msgstr "次の設定例に示すように、 `application.properties` ファイルで定義されている組み込みの権限セットを設定することで、カスタムポリシーを参照できます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of policy configuration"
msgstr "ポリシーの設定例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission references the default built-in `permit` policy to allow `GET` methods to `/public`.\n"
"In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr ""
"この権限は、デフォルトの組み込み `permit` ポリシーを参照して、 `/public` への `GET` メソッドを許可します。\n"
"この場合、このリクエストはいずれにせよ許可されるため、示されている設定によるこの例への影響はありません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission references the built-in `deny` policy for both `/forbidden` and `/forbidden/` paths.\n"
"It is an exact path match because it does not end with `*`."
msgstr ""
"この権限は、 `/forbidden` パスと `/forbidden/` パスの両方に対して組み込みの `deny` ポリシーを参照します。\n"
"これは `*` で終わっていないため、パスが完マッチします。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission set references the previously defined policy.\n"
"`roles1` is an example name; you can call the permission sets whatever you want."
msgstr ""
"この権限セットは、以前に定義されたポリシーを参照します。\n"
"`roles1` は例の名前です。権限セットには任意の名前を付けることができます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The exact path pattern `/forbidden` in the example above also secures the `/forbidden/` path.\n"
"This way, the `forbidden` endpoint in the example below is secured by the `deny1` permission."
msgstr ""
"上記の例の正確なパスパターン `/forbidden` は、 `/forbidden/` パスも保護します。\n"
"このようにして、以下の例の `forbidden` エンドポイントは `deny1` 権限によって保護されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Both `/forbidden` and `/forbidden/` paths need to be secured in order to secure the `forbidden` endpoint."
msgstr "`forbidden` エンドポイントを保護するには、 `/forbidden` パスと `/forbidden/` パスの両方を保護する必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "If you need to permit access to the `/forbidden/` path, please add new permission with more specific exact path like in the example below:"
msgstr "`/forbidden/` パスへのアクセスを許可する必要がある場合は、以下の例のように、より具体的な正確なパスを使用して新しい権限を追加してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/forbidden/` path is not secured."
msgstr "`/forbidden/` パスは保護されていません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Custom HttpSecurityPolicy"
msgstr "カスタムの HttpSecurityPolicy"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Sometimes it might be useful to register your own named policy. You can get it done by creating application scoped CDI\n"
"bean that implements the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` interface like in the example below:"
msgstr ""
"独自の名前付きポリシーを登録すると便利な場合があります。以下の例のように、\n"
"`io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` インターフェイスを実装するアプリケーションスコープの CDI Bean を作成することでこれを実現できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Named HTTP Security policy will only be applied to requests matched by the `application.properties` path matching rules."
msgstr "名前付き HTTP セキュリティーポリシーは、 `application.properties` パスマッチングルールにマッチするリクエストにのみ適用されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy referenced from configuration file"
msgstr "設定ファイルから参照されるカスタム名の HttpSecurityPolicy の例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Custom policy name must match the value returned by the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method."
msgstr "カスタムポリシー名は、 `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` メソッドによって返される値とマッチする必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Alternatively, you can bind custom named HttpSecurityPolicy to Jakarta REST endpoints with the `@AuthorizationPolicy` security annotation."
msgstr "または、 `@AuthorizationPolicy` セキュリティーアノテーションを使用して、カスタム名 HttpSecurityPolicy を Jakarta REST エンドポイントにバインドすることもできます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy bound to a Jakarta REST endpoint"
msgstr "Jakarta REST エンドポイントにバインドされたカスタム名の HttpSecurityPolicy の例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `@AuthorizationPolicy` annotation can be used together with other standard security annotations.\n"
"As usual, the method-level annotation has priority over class-level annotation."
msgstr ""
"`@AuthorizationPolicy` アノテーションは、他の標準セキュリティーアノテーションと合わせて使用できます。\n"
"通常どおり、メソッドレベルのアノテーションはクラスレベルのアノテーションよりも優先されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Apply custom named HttpSecurityPolicy to the Jakarta REST `hello` endpoint."
msgstr "カスタム名の HttpSecurityPolicy を Jakarta REST `hello` エンドポイントに適用します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can also create global `HttpSecurityPolicy` invoked on every request.\n"
"Just do not implement the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method and leave the policy nameless."
msgstr ""
"すべてのリクエストで呼び出されるグローバル `HttpSecurityPolicy` を作成することもできます。\n"
"`io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` メソッドを実装せず、ポリシーに名前を付けないままにします。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Inject `@RequestScoped` beans into `HttpSecurityPolicy`"
msgstr "`@RequestScoped` Bean の `HttpSecurityPolicy` への挿入"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"`@RequestScoped` beans can only be injected when the xref:cdi-reference.adoc#request-context-lifecycle[CDI request context] is active.\n"
"The context can be activated by users, for example with the `@ActivateRequestContext`, however authorization happens before Quarkus prepares some `@RequestScoped` beans.\n"
"We recommend to let Quarkus activate and prepare CDI request context for you.\n"
"For example, consider a situation where you want to inject a bean from the Jakarta REST context, such as the `jakarta.ws.rs.core.UriInfo` bean.\n"
"In this case, you must apply the `HttpSecurityPolicy` to Jakarta REST endpoints. This can be achieved in one of the following ways:"
msgstr "`@RequestScoped` Beanを注入できるのは、 xref:cdi-reference.adoc#request-context-lifecycle[CDIリクエストコンテキストが] アクティブなときだけです。コンテキストは、 などでユーザーによってアクティブ化できますが、承認は、Quarkus が Bean を準備する前に行われます。QuarkusにCDIリクエストコンテキストをアクティブ化させ、準備させることをお勧めします。たとえば、 Bean のような Jakarta REST コンテキストから Bean を注入する場合を考えてみましょう。この場合、 を Jakarta REST エンドポイントに適用する必要があります。これは、以下のいずれかの方法で実現できます： `@ActivateRequestContext` `@RequestScoped` `jakarta.ws.rs.core.UriInfo` `HttpSecurityPolicy`"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Use the `@AuthorizationPolicy` security annotation."
msgstr "`@AuthorizationPolicy` セキュリティ注釈を使用します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Set the `quarkus.http.auth.permission.custom1.applies-to=jaxrs` configuration property."
msgstr "`quarkus.http.auth.permission.custom1.applies-to=jaxrs` 構成プロパティを設定します。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Matching on paths and methods"
msgstr "パスとメソッドのマッチング"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission sets can also specify paths and methods as a comma-separated list.\n"
"If a path ends with the `*` wildcard, the query it generates matches all sub-paths.\n"
"Otherwise, it queries for an exact match and only matches that specific path:"
msgstr ""
"権限セットでは、パスとメソッドをコンマ区切りのリストとして指定することもできます。\n"
"パスが `*` ワイルドカードで終わる場合、生成されるクエリーはすべてのサブパスにマッチします。\n"
"それ以外の場合は、完全一致を照会し、特定のパスにのみマッチします。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `$$*$$` wildcard at the end of the path matches zero or more path segments, but never any word starting from the `/public` path.\n"
"For that reason, a path like `/public-info` is not matched by this pattern."
msgstr ""
"パスの末尾にある `$$*$$` ワイルドカードは、0 個以上のパスセグメントにマッチしますが、 `/public` パスから始まる単語にはマッチしません。\n"
"そのため、 `/public-info` のようなパスはこのパターンとはマッチしません。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Matching a path but not a method"
msgstr "パスはマッチするがメソッドはマッチしない場合"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The request is rejected if it matches one or more permission sets based on the path but none of the required methods."
msgstr "パスに基づいて 1 つ以上の権限セットにマッチしても、必要なメソッドのいずれにもマッチしない場合、リクエストは拒否されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Given the preceding permission set, `GET /public/foo` would match both the path and method and therefore be allowed.\n"
"In contrast, `POST /public/foo` would match the path but not the method, and, therefore, be rejected."
msgstr ""
"上記の権限セットが与えられている場合、 `GET/public/foo` はパスとメソッドの両方にマッチするため、許可されます。\n"
"対照的に、 `POST/public/foo` はパスにマッチしますが、メソッドにはマッチしないため、拒否されます。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Matching is always done on the \"longest path wins\" basis.\n"
"Less specific permission sets are not considered if a more specific one has been matched:"
msgstr ""
"マッチングは常に「最長パスが優先される」という基準で行われます。\n"
"具体的な権限セットがマッチした場合、それよりも具体性に欠ける権限セットは考慮されません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Given the preceding permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths.\n"
"However, because the longer path matches the path of the `deny1` permission set, `deny1` is chosen, and the request is rejected."
msgstr ""
"上記の権限セットの場合、 `GET/public/forbidden-folder/foo` は両方の権限セットのパスとマッチします。\n"
"ただし、より長いパスが `deny1` 権限セットのパスとマッチするため、 `deny1` が選択され、リクエストは拒否されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Subpath permissions precede root path permissions, as the `deny1` versus `permit1` permission example previously illustrated."
msgstr "前述の `deny1` 権限と `permit1` 権限の例で示したように、サブパスの権限がルートパスの権限よりも優先されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "This rule is further exemplified by a scenario where subpath permission allows access to a public resource while the root path permission necessitates authorization."
msgstr "このルールをさらに例示するために、サブパス権限ではパブリックリソースへのアクセスを許可し、ルートパス権限では認可を要求するシナリオを示します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching multiple sub-paths: longest path to the `*` wildcard wins"
msgstr "複数のサブパスのマッチング: `*` ワイルドカードへの最長パスが優先される"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Previous examples demonstrated matching all sub-paths when a path concludes with the `$$*$$`\n"
"wildcard."
msgstr ""
"前の例では、パスの末尾が `$$*$$` ワイルドカードの場合に、すべてのサブパスがマッチすることを\n"
"示しました。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"This wildcard can also be applied in the middle of a path, representing a single path segment.\n"
"It cannot be mixed with other path segment characters; thus, path separators always enclose the `$$*$$` wildcard, as seen in the `/public/$$*$$/about-us` path."
msgstr "こ の ワ イ ル ド カ ー ド はパ ス の途中に適用す る こ と も で き 、 単一のパ ス セグ メ ン ト を表 し ます。こ れは他のパスセグ メ ン ト キ ャ ラ ク タ と 混在 さ せ る こ と はで き ませんので、 `/public/*/about-us` パ スに見られる よ う に、 パ ス区切 り キ ャ ラ ク タ は常に `*` ワ イ ル ド カー ド を囲みます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"When several path patterns correspond to the same request path, the system selects the longest sub-path leading to the `$$*$$` wildcard.\n"
"In this context, every path segment character is more specific than the `$$*$$`\n"
"wildcard."
msgstr ""
"複数のパスパターンが同じリクエストパスに対応する場合、システムは `$$*$$` ワイルドカードにつながる最長のサブパスを選択します。\n"
"この文脈では、すべてのパスセグメント文字は、 `$$*$$` ワイルドカード\n"
"よりも具体的になります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Here is a simple example:"
msgstr "簡単な例を挙げてみます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Request paths like `/api/product/detail` can only be accessed by authenticated users."
msgstr "`/api/product/detail` などのリクエストパスには、認証済みユーザーのみがアクセスできます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The path `/api/public-product/detail` is more specific, therefore accessible by anyone."
msgstr "パス `/api/public-product/detail` はより詳細であるため、どのユーザーもアクセスできます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"All paths secured with the authorization using configuration should be tested.\n"
"Writing path patterns with multiple wildcards can be cumbersome.\n"
"Please make sure paths are authorized as you intended."
msgstr ""
"設定を使用した認可で保護されたすべてのパスをテストする必要があります。\n"
"複数のワイルドカードを使用してパスパターンを記述するのは面倒な場合があります。\n"
"パスが意図したとおりに認可されていることを確認してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "In the following example, paths are ordered from the most specific to the least specific one:"
msgstr "次の例では、パスは最も詳細なものから最も詳細でないものの順に並べられています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Request path `/one/two/three/four/five` matches ordered from the most specific to the least specific path"
msgstr "最も詳細なパスから最も詳細でないパスの順に並べたリクエストパス `/one/two/three/four/five` のマッチ"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `$$*$$` wildcard at the end of the path matches zero or more path segments.\n"
"The `$$*$$` wildcard placed anywhere else matches exactly one path segment."
msgstr ""
"パスの末尾にある `$$*$$` ワイルドカードは、0 個以上のパスセグメントにマッチします。\n"
"他の場所に配置された `$$*$$` ワイルドカードは、1 つのパスセグメントのみにマッチします。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "複数のパスのマッチング:一番具体的なパスが勝ちます"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"When a path is registered with multiple permission sets, the permission sets explicitly specifying an HTTP method that matches the request take precedence.\n"
"In this instance, the permission sets without methods only come into effect if the request method does not match permission sets with the method specification."
msgstr ""
"パスが複数の権限セットに登録されている場合、リクエストにマッチする HTTP メソッドを明示的に指定する権限セットが優先されます。\n"
"この場合、メソッドのない権限セットは、リクエストメソッドがメソッド仕様を持つ権限セットとマッチしない場合にのみ、有効になります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The preceding permission set shows that `GET /public/foo` matches the paths of both permission sets.However, it specifically aligns with the explicit method of the `permit1` permission set.Therefore, `permit1` is selected, and the request is accepted."
msgstr "上記の権限セットは、 `GET /public/foo` が両方の権限セットのパスにマッチすることを示しています。ただし、これは `permit1` 権限セットの明示的なメソッドと明確に一致しています。したがって、 `permit1` が選択され、リクエストが受け入れられます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "In contrast, `PUT /public/foo` does not match the method permissions of `permit1`. As a result, `deny1` is activated, leading to the rejection of the request."
msgstr "一方、 `PUT/public/foo` は `permit1` のメソッド権限とマッチしません。その結果、 `deny1` がアクティブになり、リクエストが拒否されます。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Sometimes, the previously described rules allow multiple permission sets to win simultaneously.\n"
"In that case, for the request to proceed, all the permissions must allow access.\n"
"For this to happen, both must either have specified the method or have no method.\n"
"Method-specific matches take precedence."
msgstr ""
"場合によっては、前述のルールにより、複数の権限セットが同時に適用されることがあります。\n"
"その場合、リクエストを続行するには、すべての権限でアクセスが許可されている必要があります。\n"
"そのためには、両方にメソッドが指定されているか、メソッドが存在しない必要があります。\n"
"メソッド固有のマッチが優先されます。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Given the preceding permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr "上記の権限セットの場合、 `GET /api/foo` は両方の権限セットのパスにマッチするため、 `user` と `admin` の両方のロールが必要です。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Configuration properties to deny access"
msgstr "アクセスを拒否するための設定プロパティ"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr "以下の設定により、ロールベースアクセスコントロール（RBAC）の拒否動作が変更されます:"

#. type: Labeled list
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"If set to true, access is denied for all Jakarta REST endpoints by default.\n"
"If a Jakarta REST endpoint has no security annotations, it defaults to the `@DenyAll` behavior.\n"
"This helps you to avoid accidentally exposing an endpoint that is supposed to be secured.\n"
"Defaults to `false`."
msgstr ""
"true に設定すると、すべての Jakarta REST エンドポイントへのアクセスがデフォルトで拒否されます。\n"
"Jakarta REST エンドポイントにセキュリティーアノテーションがない場合、デフォルトで `@DenyAll` 動作になります。\n"
"これにより、保護されているはずのエンドポイントが誤って公開されることを回避できます。\n"
"デフォルトは `false` です。"

#. type: Labeled list
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Defines the default role requirements for unannotated endpoints.\n"
"The `**` role is a special role that means any authenticated user.\n"
"This cannot be combined with `deny-unannotated-endpoints` because `deny` takes effect instead."
msgstr ""
"アノテーションのないエンドポイントのデフォルトのロール要件を定義します。\n"
"`**` ロールは、認証されたすべてのユーザーを意味する特別なロールです。\n"
"代わりに `deny` が有効になるため、これを `deny-unannotated-endpoints` と組み合わせることはできません。"

#. type: Labeled list
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr "`quarkus.security.deny-unannotated-members=true|false`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"If set to true, the access is denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.\n"
"Defaults to `false`."
msgstr ""
"true に設定すると、セキュリティーアノテーションを持たないが、セキュリティーアノテーションを持つメソッドを含むクラスで定義されているすべての CDI メソッドと Jakarta REST エンドポイントへのアクセスが拒否されます。\n"
"デフォルトは `false` です。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Disabling permissions"
msgstr "権限の無効化"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr "権限は、宣言された各権限の `enabled` プロパティを使って、ビルド時に次のように無効にすることができます:"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permissions can be reenabled at runtime with a system property or environment variable, such as:\n"
"`-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "権限は、システムプロパティや環境変数を使って実行時に再有効化することができます（例えば、以下のように）: `-Dquarkus.http.auth.permission.permit1.enabled=true` ."

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Permission paths and HTTP root path"
msgstr "権限パスとHTTPルートパス"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `quarkus.http.root-path` configuration property changes the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr "`quarkus.http.root-path` 設定プロパティは、 xref:http-reference.adoc#context-path[http endpoint context path] を変更します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "デフォルトでは、設定された権限のパスの前に自動的に `quarkus.http.root-path` 、フォワードスラッシュを使用しない場合などです。 :"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "This configuration is equivalent to the following:"
msgstr "この構成は以下に相当します。 :"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"A leading slash changes how the configured permission path is interpreted.\n"
"The configured URL is used as-is, and paths are not adjusted if the value of `quarkus.http.root-path` changes."
msgstr ""
"先頭のスラッシュは、設定された権限パスの解釈方法を変更します。\n"
"設定された URL はそのまま使用され、 `quarkus.http.root-path` の値が変更されてもパスは調整されません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Example:"
msgstr "以下に例を示します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "This configuration only impacts resources served from the fixed or static URL, `/public`, which might not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "この設定は、固定または静的 URL `/public` から提供されるリソースにのみ影響します。この URL は、 `quarkus.http.root-path` が `/` 以外に設定されていると、アプリケーションリソースとマッチしない可能性があります。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "For more information, see link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus]."
msgstr "詳細は、link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] を参照してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Map `SecurityIdentity` roles"
msgstr "`SecurityIdentity` ロールのマッピング"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"The winning role-based policy that was chosen to authorize the current request can map `SecurityIdentity` roles to deployment-specific roles.\n"
"These roles are then applicable for endpoint authorization by using the `@RolesAllowed` annotation."
msgstr "現在の要求を認可するために選択されたロールベースのポリシーは、 `SecurityIdentity` ロールを配備固有のロールにマップできます。これらのロールは、 `@RolesAllowed` アノテーションを使用してエンドポイント認可に適用されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Map the `admin` role to `Admin1` role. The `SecurityIdentity` will have both `admin` and `Admin1` roles."
msgstr "`admin` ロールを `Admin1` ロールにマップします。 `SecurityIdentity` には `admin` ロールと `Admin1` ロールの両方が存在します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/*` path is secured, only authenticated HTTP requests are granted access."
msgstr "`/*` パスは保護されており、認証された HTTP リクエストのみにアクセスが許可されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "If all that you need is to map the `SecurityIdentity` roles to the deployment-specific roles regardless of a path, you can also do this:"
msgstr "パスに関係なく、 `SecurityIdentity` ロールをデプロイメント固有のロールにマッピングするだけの場合は、次のようにすることもできます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/*` path is not secured. You must secure your endpoints with standard security annotations or define HTTP permissions in addition to this configuration property."
msgstr "`/*` パスは保護されていません。標準のセキュリティーアノテーションを使用してエンドポイントを保護するか、この設定プロパティーに加えて HTTP 権限を定義する必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "If you prefer a programmatic configuration, the same mapping can be added with the `io.quarkus.vertx.http.security.HttpSecurity` CDI event:"
msgstr "プログラムによる設定をご希望の場合は、 `io.quarkus.vertx.http.security.HttpSecurity` CDI イベントで同じマッピングを追加できます："

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Shared permission checks"
msgstr "共有権限チェック"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"One important rule for unshared permission checks is that only one path match is applied, the most specific one.\n"
"When a path matches as the most specific, you can specify multiple permissions for that path and they are all applied.\n"
"However, there can be permission checks you want to apply to many paths without repeating them over and over again.\n"
"That's where shared permission checks come in, they are always applied when the permission path is matched."
msgstr "非共有パーミッション・チェックの重要なルールの1つは、パスのマッチは1つだけ適用され、最も具体的なものが適用されるということです。あるパスが最も具体的なものとしてマッチすると、そのパスに対して複数のパーミッションを指定することができ、それらはすべて適用されます。しかし、何度も繰り返すことなく、多くのパスに適用したいパーミッションチェックがあります。そこで共有パーミッションチェックの出番です。共有パーミッションチェックは、パーミッションパスがマッチしたときに常に適用されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy applied on every HTTP request"
msgstr "すべての HTTP リクエストに適用されるカスタム名の HttpSecurityPolicy の例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "<<custom-http-security-policy>> will be also applied on the `/admin/1` path together with the `admin-policy1` policy."
msgstr "<<custom-http-security-policy>> は、 `admin-policy1` ポリシーとともに `/admin/1` パスにも適用されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Configuring many shared permission checks is less effective than configuring unshared ones.\n"
"Use shared permissions to complement unshared permission checks like in the example below."
msgstr ""
"共有権限チェックを多数設定することは、共有されていない権限チェックを設定する場合よりも効果が低くなります。\n"
"以下の例のように、共有権限を使用して非共有権限チェックを補完します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Map `SecurityIdentity` roles with shared permission"
msgstr "共有権限を持つ `SecurityIdentity` ロールのマッピング"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Role `root` will be able to access `/secured/user/\\*` and `/secured/admin/*` paths."
msgstr "ロール `root` は、 `/secured/user/\\*` および `/secured/admin/*` パスにアクセスできるようになります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/secured/*` path can only be accessed by authenticated users. This way, you have secured the `/secured/all` path and so on."
msgstr "`/secured/*` パスには、認証されたユーザーのみがアクセスできます。このようにして、 `/secured/all` パスなどが保護されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Shared permissions are always applied before unshared ones, therefore a `SecurityIdentity` with the `root` role will have the `user` role as well."
msgstr "共有権限は常に非共有権限の前に適用されるため、 `root` ロールを持つ `SecurityIdentity` には `user` ロールも付与されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Set up path-specific authorization programmatically"
msgstr "プログラムによるパス固有の認可の設定"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"You can also configure the authorization policies presented by this guide so far programmatically.\n"
"Consider the example mentioned earlier:"
msgstr "このガイドでこれまでに紹介した認可ポリシーをプログラムで設定することもできます。前述の例を考えてみましょう："

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "The same authorization policies can be configured programmatically:"
msgstr "同じ認可ポリシーをプログラムで設定することもできます："

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Additionally, the `io.quarkus.vertx.http.security.HttpSecurity` CDI event can be used to configure specific authentication mechanisms and policies:"
msgstr "さらに、 `io.quarkus.vertx.http.security.HttpSecurity` CDI イベントを使用して、特定の認証メカニズムとポリシーを構成できます："

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Use the Basic authentication and authorize the requests with a custom `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy`."
msgstr "Basic認証を使用し、カスタム `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` 。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Use the Bearer token authentication and authorize the `SecurityIdentity` with your own policy."
msgstr "ベアラートークン認証を使用し、独自のポリシーで `SecurityIdentity` 。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Use Authorization Code Flow mechanism and write your own policy based on incoming request headers."
msgstr "認可コードフロー機構を使用し、受信リクエストヘッダに基づいて独自のポリシーを記述します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "When Quarkus fires the `HttpSecurity` CDI event, the runtime configuration is ready."
msgstr "Quarkusで `HttpSecurity` CDIイベントが発生すると、実行時設定の準備が完了します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"Require that all the requests to the `/user-info` path have string permissions `openid`, `email` and `profile`.\n"
"The same authorization can be required with the `@PermissionsAllowed(value = { \"openid\", \"email\", \"profile\" }, inclusive = true)` annotation instance placed on an endpoint."
msgstr "`/user-info` パスへのすべてのリクエストに、文字列パーミッション `openid` 、 `email` 、 `profile` を要求します。エンドポイントに配置された `@PermissionsAllowed(value = { \"openid\", \"email\", \"profile\" }, inclusive = true)` 注釈インスタンスでも同じ権限を要求できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "Programmatic set up references"
msgstr "プログラム・セットアップ・リファレンス"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-basic-authentication.adoc#basic-auth-programmatic-set-up[Set up Basic authentication programmatically]"
msgstr "xref:security-basic-authentication.adoc#basic-auth-programmatic-set-up[プログラムによるベーシック認証の設定]"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-openid-connect-multitenancy.adoc#programmatic-startup[Programmatic OIDC start-up for multitenant application]"
msgstr "xref:security-openid-connect-multitenancy.adoc#programmatic-startup[マルチテナント・アプリケーションのプログラム的OIDCスタートアップ]"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#form-based-auth-programmatic-set-up[Set up Form-based authentication programmatically]"
msgstr "xref:security-authentication-mechanisms.adoc#form-based-auth-programmatic-set-up[プログラムによるフォームベース認証の設定]"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#mtls-programmatic-set-up[Set up the mutual TLS client authentication programmatically]"
msgstr "xref:security-authentication-mechanisms.adoc#mtls-programmatic-set-up[プログラムによるTLSクライアント相互認証の設定]"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-cors.adoc#cors-filter-programmatic-set-up[Configuring the CORS filter programmatically]"
msgstr "xref:security-cors.adoc#cors-filter-programmatic-set-up[プログラムによるCORSフィルターの設定]"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid "xref:security-csrf-prevention.adoc#csrf-prevention-programmatic-set-up[Configuring the CSRF prevention programmatically]"
msgstr "xref:security-csrf-prevention.adoc#csrf-prevention-programmatic-set-up[プログラムによるCSRF防止の設定]"

#. type: Title ==
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Authorization using annotations"
msgstr "アノテーションを使った認可"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"{project-name} includes built-in security to allow for link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control (RBAC)]\n"
"based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr "{project-name} には、REST エンドポイントと CDI Bean 上の共通セキュリティーアノテーション `@RolesAllowed`、 `@DenyAll`、 `@PermitAll` に基づく link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control (RBAC)] を可能にするセキュリティーが組み込まれています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
#, fuzzy
msgid ""
"Authorization checks for `quarkus.http.auth.` configurations are performed before security checks for standard security annotations.\n"
"Therefore, `@PermitAll` only permits access to paths that are not already restricted by HTTP permissions.\n"
"`@PermitAll` cannot override HTTP-level security configurations, only relax restrictions imposed by other standard security annotations such as `@RolesAllowed`."
msgstr "`quarkus.http.auth.` 構成の権限チェックは、標準のセキュリティ注釈のセキュリティチェックよりも前に実行されます。したがって、 `@PermitAll` は、HTTP パーミッションによってすでに制限されていないパスへのアクセスのみを許可します。 `@PermitAll` は、HTTP レベルのセキュリティ設定を上書きすることはできませんが、 `@RolesAllowed` のような他の標準的なセキュリティアノテーションによって課された制限を緩和することだけはできます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "{project-name} annotation types summary"
msgstr "{project-name} アノテーションの種類の概要"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Annotation type"
msgstr "アノテーション型"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@DenyAll`"
msgstr "`@DenyAll`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr "どのセキュリティロールも指定されたメソッドを呼び出すことを許可されていないことを指定します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@PermitAll`"
msgstr "`@PermitAll`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in, even without authentication."
msgstr ""
"すべてのセキュリティロールが指定されたメソッドを呼び出すことを許可されるように指定します。\n"
"\n"
"`@PermitAll` は認証なしでも誰でもアクセスできるようにします。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@RolesAllowed`"
msgstr "`@RolesAllowed`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Specifies the list of security roles allowed to access methods in an application."
msgstr "アプリケーション内のメソッドへのアクセスを許可するセキュリティーロールのリストを指定します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@Authenticated`"
msgstr "`@Authenticated`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "{project-name} provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource. It's equivalent to `@RolesAllowed(\"**\")`."
msgstr "{project-name} は、認証されたすべてのユーザーがリソースにアクセスできるようにする `io.quarkus.security.Authenticated` アノテーションを提供します。これは `@RolesAllowed (\"**\")` と同等です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@PermissionsAllowed`"
msgstr "`@PermissionsAllowed`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Specifies the list of permissions that are allowed to invoke the specified methods."
msgstr "指定されたメソッドを呼び出すことが許可される権限のリストを指定します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "`@AuthorizationPolicy`"
msgstr "`@AuthorizationPolicy`"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Specifies named `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` that should authorize access to the specified Jakarta REST endpoints.\n"
"Named HttpSecurityPolicy can be used for general authorization checks as demonstrated by <<authorization-policy-example>>."
msgstr ""
"指定された Jakarta REST エンドポイントへのアクセスを許可する名前付き `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` を指定します。\n"
"<<authorization-policy-example>> で例示されているように、名前付き HttpSecurityPolicy は、一般的な認可チェックに使用できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The following <<subject-example>> demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
msgstr "次の <<subject-example>> は、エンドポイントを記述および保護するために Jakarta REST と Common Security アノテーションの両方を使用するエンドポイントを示します。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "SubjectExposingResource example"
msgstr "SubjectExposingResourceの例"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "`/subject/secured` エンドポイントは、 `@RolesAllowed(\"Tester\")` アノテーションを使用して\"Tester\"というロールを付与された認証済みユーザーが必要です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The endpoint obtains the user principal from the Jakarta REST `SecurityContext`.\n"
"This returns `non-null` for a secured endpoint."
msgstr ""
"エンドポイントは、Jakarta REST `SecurityContext` からユーザープリンシパルを取得します。\n"
"これは、保護されたエンドポイントに対して `non-null` を返します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/authenticated` endpoint allows any authenticated user by specifying the `@Authenticated` annotation."
msgstr "`/subject/authenticated` エンドポイントでは、 `@Authenticated` アノテーションを指定して、認証されたすべてのユーザーを許可します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` エンドポイントでは、 `@PermitAll` アノテーションを指定することで、認証されていないアクセスが可能になります。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The call to obtain the user principal returns `null` if the caller is unauthenticated and `non-null` if the caller is authenticated."
msgstr "ユーザープリンシパルを取得するためのこの呼び出しは、呼び出し元が認証されていない場合は `null` を返し、呼び出し元が認証されている場合は `non-null` を返します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `/subject/denied` endpoint declares the `@DenyAll` annotation, disallowing all direct access to it as a REST method, regardless of the user calling it.\n"
"The method is still invokable internally by other methods in this class."
msgstr ""
"`/subject/denied` エンドポイントは `@DenyAll` アノテーションを宣言し、ユーザーが呼び出すかどうかに関係なく、REST メソッドとしてのすべての直接アクセスを禁止します。\n"
"このメソッドは、このクラスの他のメソッドによって引き続き内部的に呼び出すことができます。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr "IO スレッドで標準のセキュリティーアノテーションを使用する予定の場合は、xref:security-proactive-authentication.adoc[Proactive Authentication] の情報を確認してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[property expressions] including default values and nested property expressions.\n"
"Configuration properties used with the annotation are resolved at runtime."
msgstr ""
"`@RolesAllowed` アノテーション値は、デフォルト値とネストされたプロパティー式を含む xref:config-reference.adoc#property-expressions[property expressions] をサポートします。\n"
"アノテーションで使用される設定プロパティーは実行時に解決されます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Annotation value examples"
msgstr "アノテーション値の例"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Value explanation"
msgstr "値の説明"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr "`@RolesAllowed(\"${admin-role}\")`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "The endpoint allows users with the role denoted by the value of the `admin-role` property."
msgstr "エンドポイントは、 `admin-role` プロパティーの値によって示されるロールを持つユーザーを許可します。"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "An example showing that the value can contain multiple variables."
msgstr "値が複数の変数を含むことができることを示す例。"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr "`@RolesAllowed(\"${customer:User}\")`"

#. type: Table
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid ""
"A default value demonstration.\n"
"The required role is denoted by the value of the `customer` property.\n"
"However, if that property is not specified, a role named `User` is required as a default."
msgstr ""
"デフォルト値のデモンストレーション。\n"
"必要なロールは、 `customer` プロパティーの値によって示されます。\n"
"ただし、そのプロパティーが指定されていない場合は、デフォルトで `User` という名前のロールが必要になります。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr "`@RolesAllowed` アノテーションにおけるプロパティ式の使用例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Subject access control example"
msgstr "サブジェクトアクセス制御の例"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr "`@RolesAllowed` アノテーション値は、 `Administrator` の値に設定されています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role of \"Software-Tester\".\n"
"It is possible to use multiple expressions in the role definition."
msgstr ""
"この `/subject/software-tester` エンドポイントには、\"Software-Tester\" のロールが付与された認証済みユーザーが必要です。\n"
"ロール定義では複数の式を使用できます。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation because we did not set the configuration property `customer`."
msgstr "この `/subject/user` エンドポイントには、 `@RolesAllowed(\"${customer:User}\")` アノテーションを使用して \"User\" ロールが付与された認証済みユーザーが必要です。これは、設定プロパティー `customer` を設定しなかったためです。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"In production, this `/subject/secured` endpoint requires an authenticated user with the `User` role.\n"
"In development mode, it allows any authenticated user."
msgstr ""
"実稼働環境では、この `/subject/secured` エンドポイントには `User` ロールを持つ認証済みユーザーが必要です。\n"
"開発モードでは、認証されたすべてのユーザーが許可されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Property expression `all-roles` will be treated as a collection type `List`, therefore, the endpoint will be accessible for roles `Administrator`, `Software`, `Tester` and `User`."
msgstr "プロパティー式 `all-roles` は、コレクション型 `List` として扱われます。そのため、このエンドポイントには、 `Administrator`、 `Software`、 `Tester` および `User` の各ロールがアクセスできるようになります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Endpoint security annotations and Jakarta REST inheritance"
msgstr "エンドポイントセキュリティーアノテーションと Jakarta REST 継承"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus supports security annotations placed on the endpoint implementation or its class like in the example below:"
msgstr "Quarkus は、次の例のように、エンドポイント実装またはそのクラスに配置されたセキュリティーアノテーションをサポートしています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Class-level security annotation must be placed on the class where the endpoint implementation is declared."
msgstr "クラスレベルのセキュリティーアノテーションは、エンドポイント実装が宣言されているクラスに配置する必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Method-level security annotation must be placed on the endpoint implementation."
msgstr "メソッドレベルのセキュリティーアノテーションはエンドポイント実装に配置する必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The xref:resteasy.adoc[RESTEasy] subresource locators declared as default interface methods cannot be secured\n"
"by standard security annotations.\n"
"Secured subresource locators must be implemented and secured on the interface implementors like in the example below:"
msgstr ""
"デフォルトのインターフェイスメソッドとして宣言された xref:resteasy.adoc[RESTEasy] サブリソースロケーターは\n"
"標準のセキュリティーアノテーションでは保護できません\n"
"保護されたサブリソースロケーターは、次の例のように、インターフェイス実装者に実装され、保護される必要があります。"

#. type: Title ===
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Permission annotation"
msgstr "権限アノテーション"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation, which authorizes any authenticated user with the given permission to access the resource.\n"
"This annotation is an extension of the common security annotations and checks the permissions granted to a `SecurityIdentity` instance."
msgstr ""
"Quarkus は、指定された権限を持つ認証済みユーザーにリソースへのアクセスを認可する `io.quarkus.security.PermissionsAllowed` アノテーションも提供します。\n"
"このアノテーションは、一般的なセキュリティーアノテーションのエクステンションであり、 `SecurityIdentity` インスタンスに付与された権限をチェックします。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of endpoints secured with the `@PermissionsAllowed` annotation"
msgstr "`@PermissionsAllowed` アノテーションで保護されたエンドポイントの例"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The resource method `createOrUpdate` is only accessible for a user with both `create` and `update` permissions."
msgstr "リソースメソッド `createOrUpdate` にアクセスできるのは、 `create` 権限と `update` 権限の両方を持つユーザーのみです。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"By default, at least one of the permissions specified through one annotation instance is required.\n"
"You can require all permissions by setting `inclusive=true`.\n"
"Both resource methods `createOrUpdate` have equal authorization requirements."
msgstr ""
"デフォルトでは、1 つのアノテーションインスタンスを通じて指定された権限の少なくとも 1 つが必要です。\n"
"`inclusive=true` を設定することで、すべての権限を要求することができます。\n"
"両方のリソースメソッド `createOrUpdate` には同等の認可要件があります。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of the `all` or `detail` actions."
msgstr "`SecurityIdentity` に `read` 権限または `see` 権限と、 `all` アクションまたは `detail` アクションのどちらかがある場合は、 `getItem` へのアクセスが許可されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can use your preferred `java.security.Permission` implementation.\n"
"By default, string-based permission is performed by `io.quarkus.security.StringPermission`."
msgstr ""
"希望する `java.security.Permission` 実装を使用できます。\n"
"デフォルトでは、文字列ベースの権限は `io.quarkus.security.StringPermission` によって実行されます。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions are not beans, therefore the only way to obtain bean instances is programmatically by using `Arc.container()`."
msgstr "権限は Bean ではないため、Bean インスタンスを取得する唯一の方法は、 `Arc.container()` を使用してプログラム的に取得することです。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr "IO スレッドで `@PermissionsAllowed` を使用する予定の場合は xref:security-proactive-authentication.adoc[Proactive Authentication] の情報を確認してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"`@PermissionsAllowed` is not repeatable on the class level due to a limitation with Quarkus interceptors.\n"
"For more information, see the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the Quarkus \"CDI reference\" guide."
msgstr ""
"Quarkus インターセプターの制限により、 `@PermissionsAllowed` はクラスレベルで繰り返すことができません。\n"
"詳細は、Quarkus CDI リファレンスガイドの xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] セクションを参照してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The easiest way to add permissions to a role-enabled `SecurityIdentity` instance is to map roles to permissions.\n"
"Use <<authorization-using-configuration>> to grant the required `SecurityIdentity` permissions for `CRUDResource` endpoints to authenticated requests, as outlined in the following example:"
msgstr ""
"ロール対応の `SecurityIdentity` インスタンスに権限を追加する最も簡単な方法は、ロールを権限にマップすることです。\n"
"<<authorization-using-configuration>> を使用して、次の例に示すように、認証されたリクエストに対して `CRUDResource` エンドポイントに必要な `SecurityIdentity` 権限を付与します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Add the permission `see` and the action `all` to the `SecurityIdentity` instance of the `user` role.\n"
"Similarly, for the `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
msgstr ""
"`user` ロールの `SecurityIdentity` インスタンスに、権限 `see` とアクション `all` を追加します。\n"
"同様に、 `@PermissionsAllowed` アノテーションの場合は、デフォルトで `io.quarkus.security.StringPermission` が使用されます。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions `create`, `update`, and `read` are mapped to the role `admin`."
msgstr "権限 `create`、 `update`、および `read` は、ロール `admin` にマップされます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The role policy `role-policy1` allows only authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.\n"
"For more information about the path-matching algorithm, see <<matching-multiple-paths>> later in this guide."
msgstr ""
"ロールポリシー `role-policy1` は、認証されたリクエストのみが `/crud/modify` および `/crud/id` サブパスにアクセスできるようにします。\n"
"パスマッチングアルゴリズムの詳細は、このガイドの <<matching-multiple-paths>> を参照してください。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can specify a custom implementation of the `java.security.Permission` class.\n"
"Your custom class must define exactly one constructor that accepts the permission name and optionally some actions, for example, `String` array.\n"
"In this scenario, the permission `list` is added to the `SecurityIdentity` instance as `new CustomPermission(\"list\")`."
msgstr ""
"`java.security.Permission` クラスのカスタム実装を指定できます。\n"
"カスタムクラスでは、権限名と、オプションでいくつかのアクション (たとえば、 `String` 配列) を受け入れるコンストラクターを 1 つだけ定義する必要があります。\n"
"このシナリオでは、権限 `list` が `new CustomPermission (\"list\")` として `SecurityIdentity` インスタンスに追加されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can also create a custom `java.security.Permission` class with additional constructor parameters.\n"
"These additional parameters names get matched with arguments names of the method annotated with the `@PermissionsAllowed` annotation.\n"
"Later, Quarkus instantiates your custom permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
msgstr ""
"追加のコンストラクターパラメーターを使用してカスタム `java.security.Permission` クラスを作成することもできます。\n"
"これらの追加パラメーターの名前は、 `@PermissionsAllowed` アノテーションが付けられたメソッドの引数名と一致します。\n"
"その後、Quarkus は、 `@PermissionsAllowed` アノテーションが付けられたメソッドが呼び出された実際の引数を使用して、カスタム権限をインスタンス化します。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of a custom `java.security.Permission` class that accepts additional arguments"
msgstr "追加の引数を受け入れるカスタムの `java.security.Permission` クラスの例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"There must be exactly one constructor of a custom `Permission` class.\n"
"The first parameter is always considered to be a permission name and must be of type `String`.\n"
"Quarkus can optionally pass permission actions to the constructor.\n"
"For this to happen, declare the second parameter as `String[]`."
msgstr ""
"カスタム `Permission` クラスのコンストラクターは 1 つだけ存在する必要があります。\n"
"最初のパラメーターは常に権限名とみなされ、 `String` 型である必要があります。\n"
"Quarkus はオプションでコンストラクターに権限アクションを渡すことができます。\n"
"これを実現するには、2 番目のパラメーターを `String[]` として宣言します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `LibraryPermission` class permits access to the current or parent library if `SecurityIdentity` is allowed to perform one of the required actions, for example, `read`, `write`, or `list`."
msgstr "`LibraryPermission` クラスは、 `SecurityIdentity` が `read`、 `write`、または `list` などの必要なアクションのいずれかを実行することを許可されている場合に、現在のライブラリーまたは親ライブラリーへのアクセスを許可します。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The following example shows how the `LibraryPermission` class can be used:"
msgstr "次の例は、 `LibraryPermission` クラスの使用方法を示しています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The formal parameter `library` is identified as the parameter matching same-named `LibraryPermission` constructor parameter.\n"
"Therefore, Quarkus will pass the `library` parameter to the `LibraryPermission` class constructor.\n"
"However, the `LibraryPermission` must be instantiated each time the `updateLibrary` method is invoked."
msgstr ""
"仮パラメーター `library` は、同じ名前の `LibraryPermission` コンストラクターパラメーターと一致するパラメーターとして識別されます。\n"
"したがって、Quarkus は `library` パラメーターを `LibraryPermission` クラスコンストラクターに渡します。\n"
"ただし、 `updateLibrary` メソッドが呼び出されるたびに `LibraryPermission` をインスタンス化する必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Here, the second `Library` parameter matches the name `library`,\n"
"while the `migrate` parameter is ignored during the `LibraryPermission` permission instantiation."
msgstr ""
"ここで、2 番目の `Library` パラメーターは名前 `library` と一致しますが、\n"
"`migrate` パラメーターは `LibraryPermission` 権限のインスタンス化中に無視されます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of a resource secured with the `LibraryPermission`"
msgstr "`LibraryPermission` で保護されたリソースの例"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Similarly to the `CRUDResource` example, the following example shows how you can grant a user with the `admin` role permissions to update `MediaLibrary`:"
msgstr "`CRUDResource` の例と同様に、次の例は、 `admin` ロールを持つユーザーに `MediaLibrary` を更新する権限を付与する方法を示しています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "When building a native executable, the permission class must be registered for reflection unless it is also used in at least one `io.quarkus.security.PermissionsAllowed#name` parameter. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "ネイティブ実行可能ファイルを構築する場合、少なくとも 1 つの `io.quarkus.security.PermissionsAllowed#name` パラメーターでも使用されていない限り、権限クラスをリフレクション用に登録する必要があります。 `@RegisterForReflection` アノテーションの詳細は、xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] ページを参照してください。"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "We want to pass the `MediaLibrary` instance to the `LibraryPermission` constructor."
msgstr "`MediaLibrary` インスタンスを `LibraryPermission` コンストラクターに渡します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Grants the permission `media-library`, which permits `read`, `write`, and `list` actions.\n"
"Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""
"`media-library` 権限を付与します。これにより、 `read`、 `write`、および `list` アクションが許可されます。\n"
"`MediaLibrary` は `TvLibrary` クラスの親であるため、 `admin` ロールを持つユーザーも `TvLibrary` を変更することが許可されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `/library/*` path can be tested from a Keycloak provider Dev UI page, because the user `alice` which is created\n"
"automatically by the xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] has an `admin` role."
msgstr ""
"`/library/*`パスは Keycloak プロバイダーの Dev UI ページからテストできます。これは、xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] によって自動的に作成されたユーザー`alice` に\n"
" `admin` ロールが付与されるためです。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The examples provided so far demonstrate role-to-permission mapping.\n"
"It is also possible to programmatically add permissions to the `SecurityIdentity` instance.\n"
"In the following example, xref:security-customization.adoc#security-identity-customization[`SecurityIdentity` is customized] to add the same permission that was previously granted with the HTTP role-based policy."
msgstr ""
"これまでに示した例は、ロールと権限のマッピングを示しています。\n"
"`SecurityIdentity` インスタンスにプログラムで権限を追加することも可能です。\n"
"次の例では、xref:security-customization.adoc#security-identity-customization[`SecurityIdentity`] がカスタマイズされ、以前に HTTP ロールベースポリシーで付与されたものと同じ権限が追加されます。"

#. type: Block title
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "Example of adding the `LibraryPermission` programmatically to `SecurityIdentity`"
msgstr "プログラムで `SecurityIdentity` に `LibraryPermission` を追加する例"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Add a `media-library` permission that was created can perform `read`, `write`, and `list` actions.\n"
"Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""
"作成された権限 `media-library` を追加すると、 `read`、 `write`、および `list` アクションを実行できます。\n"
"`MediaLibrary` は `TvLibrary` クラスの親であるため、 `admin` ロールを持つユーザーも `TvLibrary` を変更することが許可されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Annotation-based permissions do not work with custom xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] because there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
msgstr "`jakarta.ws.rs.core.SecurityContext` には権限がないため、アノテーションベースの権限はカスタム xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] では機能しません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Create permission checkers"
msgstr "権限チェッカーを作成する"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"By default, `SecurityIdentity` must be configured with permissions which can be used to check if this identity passes `@PermissionAllowed` authorization restrictions.\n"
"Alternatively, you can use a `@PermissionChecker` annotation to mark any CDI bean method as a permission checker.\n"
"The `@PermissionChecker` annotation value should match required permission declared by the `@PermissionsAllowed` annotation value.\n"
"For example, a permission checker can be created like this:"
msgstr ""
"デフォルトでは、 `Security アイデンティティー` は、この ID が `@PermissionAllowed` 認可制限を通過するかどうかを確認するために使用できる権限で設定されている必要があります。\n"
"または、 `@PermissionChecker` アノテーションを使用して、任意の CDI Bean メソッドを権限チェッカーとしてマークすることもできます。\n"
"`@PermissionChecker` アノテーション値は、 `@PermissionsAllowed` アノテーション値によって宣言された必要な権限と一致する必要があります。\n"
"たとえば、権限チェッカーは次のように作成できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission required to access the `ProjectResource#renameProject` is the `rename-project` permission."
msgstr "`ProjectResource#renameProject` にアクセスするために必要な権限は、 `rename-project` 権限です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `ProjectResource#canRenameProject` method authorizes access to the `ProjectResource#renameProject` endpoint."
msgstr "`ProjectResource#canRenameProject` メソッドは、 `ProjectResource#renameProject` エンドポイントへのアクセスを承認します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The `SecurityIdentity` instance can be injected into any permission checker method."
msgstr "`SecurityIdentity` インスタンスは、任意の権限チェッカーメソッドに挿入できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"In this example, the `rename-project` permission checker is declared on the same resource.\n"
"However, there is no restriction on where this permission checker can be declared as demonstrated in the next example."
msgstr ""
"この例では、 `rename-project` 権限チェッカーが同じリソースで宣言されています。\n"
"ただし、次の例に示すように、この権限チェッカーを宣言できる場所に制限はありません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission checker methods can be declared on a normal scoped CDI bean or on a `@Singleton` bean.\n"
"The `@Dependent` CDI bean scope is currently not supported."
msgstr ""
"権限チェッカーメソッドは、通常のスコープの CDI Bean または `@Singleton` Bean で宣言できます。\n"
"`@Dependent` CDI Bean スコープは現在サポートされていません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The permission checker above requires the `SecurityIdentity` instance to authorize the `renameProject` endpoint.\n"
"Instead of declaring the `rename-project` permission checker directly on the resource, you can declare it on any CDI bean like in this example:"
msgstr ""
"上記の権限チェッカーでは、 `renameProject` エンドポイントを承認するために `SecurityIdentity` インスタンスが必要です。\n"
"`rename-project` 権限チェッカーをリソース上で直接宣言する代わりに、次の例のように任意の CDI Bean 上で宣言できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "A CDI bean with the permission checker must be either a normal scoped bean or a `@Singleton` bean."
msgstr "権限チェッカーを備えた CDI Bean は、通常のスコープ Bean または `@Singleton` Bean のいずれかである必要があります。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission checker method must return either `boolean` or `Uni<Boolean>`. Private checker methods are not supported."
msgstr "権限チェッカーメソッドは、 `boolean` または `Uni<Boolean>` を返す必要があります。プライベートチェッカーメソッドはサポートされていません。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission checks run by default on event loops.\n"
"Annotate a permission checker method with the `io.smallrye.common.annotation.Blocking` annotation if you want to run the check on a worker thread."
msgstr ""
"権限チェックは、イベントループでデフォルトで実行されます。\n"
"ワーカースレッドでチェックを実行する場合は、権限チェッカーメソッドに `io.smallrye.common.annotation.Blocking` アノテーションを付けます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching between the `@PermissionsAllowed` values and the `@PermissionChecker` value is based on string equality as shown in the example below:"
msgstr "`@PermissionsAllowed` 値と `@PermissionChecker` 値の一致は、次の例に示すように、文字列の等価性に基づいて行われます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission checker method `canDeleteAllDirectories` grants access to the `deleteDirectory` because the `delete:all` values are equal."
msgstr "権限チェッカーメソッド `canDeleteAllDirectories` は、 `delete:all` 値が等しいため、 `deleteDirectory` へのアクセスを許可します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "There must be exactly two permission checker methods, one for the `delete:service` permission and other for the `delete:file` permission."
msgstr "権限チェッカーメソッドは 2 つ必要です。1 つは `delete:service` 権限用、もう 1 つは `delete:file` 権限用です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Create permission meta-annotations"
msgstr "権限メタアノテーションを作成する"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"`@PermissionsAllowed` can also be used in meta-annotations.\n"
"For example, a new `@CanWrite` security annotation can be created like this:"
msgstr ""
"`@PermissionsAllowed` はメタアノテーションでも使用できます。\n"
"たとえば、新しい `@CanWrite` セキュリティーアノテーションは次のように作成できます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Any method or class annotated with the `@CanWrite` annotation is secured with this `@PermissionsAllowed` annotation instance."
msgstr "`@CanWrite` アノテーションが付けられたメソッドまたはクラスは、この `@PermissionsAllowed` アノテーションインスタンスにより保護されます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Pass `@BeanParam` parameters into a custom permission"
msgstr "`@BeanParam` パラメーターをカスタム権限に渡す"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus can map fields of a secured method parameters to a custom permission constructor parameters.\n"
"You can use this feature to pass `jakarta.ws.rs.BeanParam` parameters into your custom permission.\n"
"Let's consider following Jakarta REST resource:"
msgstr ""
"Quarkus は、保護されたメソッドパラメーターのフィールドをカスタム権限コンストラクターパラメーターにマップできます。\n"
"この機能を使用すると、 `jakarta.ws.rs.BeanParam` パラメーターをカスタム権限に渡すことができます。\n"
"次の Jakarta REST リソースを考えてみましょう。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `params` annotation attribute specifies that user principal name should be passed to the `BeanParamPermissionChecker#canSayHello` method.\n"
"Other `BeanParamPermissionChecker#canSayHello` method parameters like `customAuthorizationHeader` and `query` are matched automatically.\n"
"Quarkus identifies the `BeanParamPermissionChecker#canSayHello` method parameters among `beanParam` fields and their public accessors.\n"
"To avoid ambiguous resolution, automatic detection only works for the `beanParam` fields.\n"
"For that reason, we had to specify path to the user principal name explicitly."
msgstr ""
"`params` アノテーション属性は、ユーザープリンシパル名を `BeanParamPermissionChecker#canSayHello` メソッドに渡すことを指定します。\n"
"`customAuthorizationHeader` や `query` などの他の `BeanParamPermissionChecker#canSayHello` メソッドパラメーターは自動的に一致します。\n"
"Quarkus は、 `beanParam` フィールドとそのパブリックアクセサーの中から `BeanParamPermissionChecker#canSayHello` メソッドパラメーターを識別します。\n"
"あいまいな解決を避けるため、自動検出は `beanParam` フィールドに対してのみ機能します。\n"
"そのため、ユーザープリンシパル名へのパスを明示的に指定する必要がありました。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Where the `SimpleBeanParam` class is declared like in the example below:"
msgstr "`SimpleBeanParam` クラスは以下の例のように宣言されています。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus Security can only pass public fields to a custom permission constructor."
msgstr "Quarkus Security は、カスタム権限コンストラクターにパブリックフィールドのみを渡すことができます。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus Security automatically uses public getter methods if they are available."
msgstr "Quarkus Security は、パブリックゲッターメソッドが利用可能な場合はそれを自動的に使用します。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `customAuthorizationHeader` field is not public, therefore Quarkus access this field with the `customAuthorizationHeader` accessor.\n"
"That is particularly useful with Java records, where generated accessors are not prefixed with `get`."
msgstr ""
"`customAuthorizationHeader` フィールドはパブリックではないため、Quarkus は `customAuthorizationHeader` アクセサーを使用してこのフィールドにアクセスします。\n"
"これは、生成されたアクセサーに接頭辞 `get` が付かない Java レコードで特に便利です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "Here is an example of a `@PermissionChecker` method that checks the `say-hello` permission based on a user principal, custom header and query parameter:"
msgstr "以下は、ユーザープリンシパル、カスタムヘッダー、クエリーパラメーターに基づいて `say-hello` 権限をチェックする `@PermissionChecker` メソッドの例です。"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can pass `@BeanParam` directly into a `@PermissionChecker` method and access its fields programmatically.\n"
"Ability to reference `@BeanParam` fields with the `@PermissionsAllowed#params` attribute is useful when you have multiple differently structured `@BeanParam` classes."
msgstr ""
"`@BeanParam` を `@PermissionChecker` メソッドに直接渡し、プログラムでそのフィールドにアクセスできます。\n"
"`@PermissionsAllowed#params` 属性を使用して `@BeanParam` フィールドを参照する機能は、異なる構造の `@BeanParam` クラスが複数ある場合に便利です。"

#. type: Title ==
#: _guides/security-authorize-web-endpoints-reference.adoc
#, no-wrap
msgid "References"
msgstr "参考資料"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Security の概要]"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "xref:security-architecture.adoc[Quarkus Security アーキテクチャー]"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Quarkusの認証メカニズム]"

#. type: Plain text
#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr "xref:security-basic-authentication.adoc[Basic 認証]"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-getting-started-tutorial.adoc[Getting started with Security by using Basic authentication and Jakarta Persistence]"
msgstr "xref:security-getting-started-tutorial.adoc[Basic 認証と Jakarta Persistence を使ったセキュリティー入門]"

#: _guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID Connect Bearer Token Scopes And SecurityIdentity Permissions]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID Connect ベアラートークンの範囲と SecurityIdentity 権限]"
