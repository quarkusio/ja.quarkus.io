msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#: _guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "OpenID Connect (OIDC) と Keycloak を使用して認証を一元化する"

#: _guides/security-keycloak-authorization.adoc
msgid "Learn how to enable bearer token authorization in your Quarkus application by using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr "保護されたリソースへ安全にアクセスするために、link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] を使用して、Quarkus アプリケーションでベアラートークン認可を有効にする方法を説明します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Overview"
msgstr "概要"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The Keycloak Authorization extension, `quarkus-keycloak-authorization`, extends the OpenID Connect extension, `quarkus-oidc`, to provide advanced authorization capabilities.\n"
"It features a policy enforcer that dynamically manages access to secured resources.\n"
"Access is governed by permissions defined in Keycloak, supporting flexible and dynamic Resource-Based Access Control (RBAC)."
msgstr ""
"Keycloak Authorization エクステンション の `quarkus-keycloak-authorization` は、OpenID Connect エクステンションの `quarkus-oidc` を拡張して、高度な認可機能を提供します。\n"
"これには、保護されたリソースへのアクセスを動的に管理するポリシーエンフォーサーが備わっています。\n"
"アクセスは Keycloak で定義された権限によって管理され、柔軟で動的なリソースベースのアクセス制御 (RBAC) をサポートします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Use the `quarkus-keycloak-authorization` extension only if you are using Keycloak and the Keycloak Authorization Services feature is enabled in your environment to handle authorization decisions."
msgstr "Keycloak を使用しており、認可判断を処理するために環境で Keycloak 認可サービス機能が有効になっている場合にのみ、`quarkus-keycloak-authorization` エクステンションを使用してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "If you are not using Keycloak, or if Keycloak is configured without the Keycloak Authorization Services feature, use the `quarkus-oidc` extension instead."
msgstr "Keycloakを使用していない場合、またはKeycloak 認可サービス機能を使用せずにKeycloakが設定されている場合は、代わりに `quarkus-oidc` エクステンションを使用してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "How it works"
msgstr "動作原理"

#: _guides/security-keycloak-authorization.adoc
msgid "The `quarkus-keycloak-authorization` extension centralizes authorization responsibilities in Keycloak, enhancing security and simplifying application maintenance:"
msgstr "`quarkus-keycloak-authorization` エクステンションは、Keycloak の認可責任を一元化し、セキュリティーを強化して、アプリケーションのメンテナンスを簡素化します。"

#: _guides/security-keycloak-authorization.adoc
msgid "It uses the `quarkus-oidc` extension to verify bearer tokens."
msgstr "ベアラートークンを検証するために `quarkus-oidc` エクステンションを使用します。"

#: _guides/security-keycloak-authorization.adoc
msgid "It sends verified tokens to Keycloak Authorization Services."
msgstr "検証されたトークンを Keycloak Authorization Services に送信します。"

#: _guides/security-keycloak-authorization.adoc
msgid "It allows Keycloak to evaluate resource-based permissions dynamically by using attributes such as resource name, identifier, or URI."
msgstr "これにより、Keycloak はリソース名、識別子、URI などの属性を使用して、リソースベースの権限を動的に評価できるようになります。"

#: _guides/security-keycloak-authorization.adoc
msgid "By externalizing authorization decisions, you can:"
msgstr "認可決定を外部化することで、次のことが可能になります。"

#: _guides/security-keycloak-authorization.adoc
msgid "Implement diverse access control strategies without modifying application code."
msgstr "アプリケーションコードを変更せずに、多様なアクセス制御ストラテジーを実装できます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Reduce redeployment needs as security requirements evolve."
msgstr "セキュリティー要件が進化するにつれ、再デプロイの必要性を軽減できます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Compatibility"
msgstr "互換性"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"This extension is compatible only with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications].\n"
"It complements explicit mechanisms such as role-based access control with dynamic authorization policies."
msgstr ""
"このエクステンションは、Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC サービスアプリケーション] とのみ互換性があります。\n"
"ロールベースのアクセス制御などの明示的なメカニズムを動的認可ポリシーで補完します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Key Features"
msgstr "主な特長"

#: _guides/security-keycloak-authorization.adoc
msgid "**Centralized Management**: Delegate authorization decisions to Keycloak for consistent security policies across applications."
msgstr "**集中管理**: アプリケーション間で一貫したセキュリティーポリシーを実現するために、認可の決定を Keycloak に委譲します。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Dynamic Permissions**: Define access control dynamically by using resource attributes."
msgstr "**動的権限**: リソース属性を使用してアクセス制御を動的に定義します。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Simplified Maintenance**: Reduce the need to update and redeploy applications when access policies change."
msgstr "**メンテナンスの簡素化**: アクセスポリシーが変更されたときにアプリケーションを更新して再デプロイする必要性を軽減します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Setting Up"
msgstr "セットアップ"

#: _guides/security-keycloak-authorization.adoc
msgid "Before using this extension, ensure the following:"
msgstr "このエクステンションを使用する前に、次の点を確認してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Keycloak Authorization Services feature is enabled in your Keycloak instance."
msgstr "Keycloak認可サービス機能がKeycloakインスタンスで有効になっています。"

#: _guides/security-keycloak-authorization.adoc
msgid "Your Quarkus application includes the `quarkus-keycloak-authorization` extension."
msgstr "Quarkus アプリケーションに `quarkus-keycloak-authorization` エクステンションが含まれている。"

#: _guides/security-keycloak-authorization.adoc
msgid "For detailed steps, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr "詳細な手順については、xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラートークン認証] ガイドを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Additional resources"
msgstr "関連情報"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"To learn more about Keycloak Authorization Services and the policy enforcer, visit the official documentation:\n"
"https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services Documentation]."
msgstr ""
"Keycloak Authorization Services とポリシーエンフォーサーの詳細は、公式ドキュメントを参照してください: \n"
"https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services ドキュメント]"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "要件"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#: _guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org[Keycloak]"
msgstr "https://www.keycloak.org[Keycloak]"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャー"

#: _guides/security-keycloak-authorization.adoc
msgid "This example demonstrates a simple microservice setup with two protected endpoints:"
msgstr "この例では、2 つの保護されたエンドポイントを持つ単純なマイクロサービスのセットアップを示します。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _guides/security-keycloak-authorization.adoc
msgid "Token-based access control"
msgstr "トークンベースのアクセス制御"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Access to these endpoints is controlled by using bearer tokens.\n"
"To gain access, the following conditions must be met:"
msgstr ""
"これらのエンドポイントへのアクセスは、ベアラートークンを使用して制御されます。\n"
"アクセスするには、次の条件を満たす必要があります。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Valid token**: The token must have a correct signature, a valid expiration date, and the appropriate audience."
msgstr "**有効なトークン**: トークンには正しい署名、適切な有効期限、適切な対象者が設定されている必要があります。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Trust**: The microservice must trust the issuing Keycloak server."
msgstr "**信頼**: マイクロサービスは発行元の Keycloak サーバーを信頼する必要があります。"

#: _guides/security-keycloak-authorization.adoc
msgid "The bearer tokens issued by the Keycloak server serve as:"
msgstr "Keycloak サーバーによって発行されるベアラートークンは、以下の役割を果たします。"

#: _guides/security-keycloak-authorization.adoc
msgid "**User identifiers**: Indicating the subject (user) for whom the token was issued."
msgstr "**ユーザー識別子**: トークンが発行された対象 (ユーザー) を示します。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Client references**: Identifying the client application acting on behalf of the user, per OAuth 2.0 Authorization Server standards."
msgstr "**クライアント参照**: OAuth 2.0 Authorization Server 標準に従って、ユーザーに代わって動作するクライアントアプリケーションを識別します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Endpoints and access policies"
msgstr "エンドポイントとアクセスポリシー"

#: _guides/security-keycloak-authorization.adoc
msgid "For `/api/users/me`:"
msgstr "`/api/users/me` の場合: "

#: _guides/security-keycloak-authorization.adoc
msgid "**Access policy**: Open to users with a valid bearer token and the `user` role."
msgstr "**アクセスポリシー**: 有効なベアラートークンと `user` ロールを持つユーザーに適用されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Response**: Returns user details as a JSON object derived from the token."
msgstr "**レスポンス**: トークンから派生した JSON オブジェクトとしてユーザーの詳細を返します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Example response"
msgstr "応答の例"

#: _guides/security-keycloak-authorization.adoc
msgid "For `/api/admin`:"
msgstr "`/api/admin` の場合: "

#: _guides/security-keycloak-authorization.adoc
msgid "*Access policy*: Restricted to users with a valid bearer token and the `admin` role."
msgstr "*アクセスポリシー*: 有効なベアラートークンと `admin` ロールを持つユーザーに制限されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Decoupled authorization"
msgstr "分離された認可"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"This example highlights the use of role-based access control (RBAC) policies to protect resources.\n"
"Key points include:"
msgstr ""
"この例では、リソースを保護するためのロールベースのアクセス制御 (RBAC) ポリシーの使用について説明します。\n"
"主なポイントは次のとおりです。"

#: _guides/security-keycloak-authorization.adoc
msgid "*Policy flexibility*: Keycloak supports various policy types, such as attribute-based and custom policies, enabling fine-grained control."
msgstr "*ポリシーの柔軟性*: Keycloak は、属性ベースやカスタムポリシーなど、さまざまなポリシータイプをサポートしており、きめ細かい制御が可能です。"

#: _guides/security-keycloak-authorization.adoc
msgid "*Decoupled application logic*: Authorization policies are managed entirely by Keycloak, allowing your application to focus on its core functionality."
msgstr "*分離されたアプリケーションロジック*: 認可ポリシーは Keycloak によって完全に管理されるため、アプリケーションはコア機能に集中できます。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""
"次の章で紹介する手順に沿って、ステップを踏んでアプリケーションを作成することを推奨します。\n"
"ただし、完成した例にそのまま進むこともできます。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "`git clone {quickstarts-clone-url}` で Git リポジトリーをクローンします。または、{quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _guides/security-keycloak-authorization.adoc
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解決策は `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[ディレクトリー] にあります。"

#: _guides/security-keycloak-authorization.adoc
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: _guides/security-keycloak-authorization.adoc
msgid "To get started, create a new project by using the following command:"
msgstr "最初に、次のコマンドを使用して新しいプロジェクトを作成します。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"This command generates a new project with the `keycloak-authorization` extension.\n"
"The extension integrates a Keycloak Adapter into your Quarkus application, providing the necessary capabilities to interact with a Keycloak server and perform bearer token authorization."
msgstr ""
"このコマンドは、 `keycloak-authorization` エクステンションを持つ新しいプロジェクトを生成します。\n"
"このエクステンションは、Keycloak アダプターを Quarkus アプリケーションに統合し、Keycloak サーバーと対話してベアラートークンの認可を実行するために必要な機能を提供します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Adding extensions to an existing project"
msgstr "既存のプロジェクトにエクステンションを追加する"

#: _guides/security-keycloak-authorization.adoc
msgid "If you already have an existing Quarkus project, you can add the `oidc` and `keycloak-authorization` extensions by running the following command in your project's base directory:"
msgstr "既存の Quarkus プロジェクトがある場合は、プロジェクトのベースディレクトリーで次のコマンドを実行して、 `oidc` および `keycloak-authorization` エクステンションを追加できます。"

#: _guides/security-keycloak-authorization.adoc
msgid "This command adds the following dependencies to your build file:"
msgstr "このコマンドは、ビルドファイルに以下の依存関係を追加します。"

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/security-keycloak-authorization.adoc
msgid "Implementing the `/api/users/me` endpoint"
msgstr "`/api/users/me` エンドポイントの実装"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Start by implementing the `/api/users/me` endpoint.\n"
"The following code defines a Jakarta REST resource that provides user details:"
msgstr ""
"`/api/users/me` エンドポイントの実装から開始します。\n"
"次のコードは、ユーザーの詳細を提供する Jakarta REST リソースを定義します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Implementing the `/api/admin` endpoint"
msgstr "`/api/admin` エンドポイントの実装"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Next, define the `/api/admin` endpoint.\n"
"The following code represents a simple Jakarta REST resource protected with authentication:"
msgstr ""
"次に、 `/api/admin` エンドポイントを定義します。\n"
"次のコードは、認証で保護された単純な Jakarta REST リソースを表しています。"

#: _guides/security-keycloak-authorization.adoc
msgid "Role-based access control with Keycloak"
msgstr "Keycloak によるロールベースのアクセス制御"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Notice that explicit annotations such as `@RolesAllowed` are not defined to enforce access control for the resources.\n"
"Instead, the `keycloak-authorization` extension dynamically maps the URIs of protected resources in Keycloak."
msgstr ""
"リソースへのアクセス制御を強制するために、 `@RolesAllowed` などの明示的なアノテーションが定義されていない点に注意してください。\n"
"代わりに、 `keycloak-authorization` エクステンションは、Keycloak 内の保護されたリソースの URI を動的にマッピングします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Access control is managed as follows:"
msgstr "アクセス制御は次のように管理されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Keycloak evaluates permissions for each request based on its configured policies."
msgstr "Keycloak は、設定されたポリシーに基づいて各リクエストの権限を評価します。"

#: _guides/security-keycloak-authorization.adoc
msgid "The extension enforces these permissions, granting or denying access based on the roles or policies defined in Keycloak."
msgstr "エクステンションはこれらの権限を適用し、Keycloak で定義されたロールまたはポリシーに基づいてアクセスを許可または拒否します。"

#: _guides/security-keycloak-authorization.adoc
msgid "This decouples access control logic from the application code, making it easier to manage and update access policies directly in Keycloak."
msgstr "これにより、アクセス制御ロジックがアプリケーションコードから分離され、Keycloak で直接アクセスポリシーを管理および更新しやすくなります。"

#. type: Title ===
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"You can use the OpenID Connect extension to configure the adapter settings through the `application.properties` file, typically located in the `src/main/resources` directory.\n"
"For example:"
msgstr ""
"OpenID Connect エクステンションを使用すると、通常は `src/main/resources` ディレクトリーにある `application.properties` ファイルを通じてアダプター設定を行うことができます。\n"
"以下に例を示します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Specifies the URL of the Keycloak server and the realm used for authentication."
msgstr "Keycloak サーバーの URL と認証に使用するレルムを指定します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Identifies the client application within the Keycloak realm."
msgstr "Keycloak レルム内のクライアントアプリケーションを識別します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Defines the client secret for authentication with the Keycloak server."
msgstr "Keycloak サーバーによる認証用のクライアントシークレットを定義します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Disables TLS verification for development purposes, not recommended for production."
msgstr "開発目的で TLS 検証を無効にします。実稼働環境では推奨されません。"

#: _guides/security-keycloak-authorization.adoc
msgid "Enables the Keycloak policy enforcer to manage access control based on defined permissions."
msgstr "Keycloak ポリシーエンフォーサーが、定義された権限に基づいてアクセス制御を管理できるようにします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Configures Dev Services to import a specified realm file, effective only in dev mode and not in JVM or native modes."
msgstr "指定されたレルムファイルをインポートするように Dev Services を設定します。これは開発モードでのみ有効で、JVM モードやネイティブモードでは有効ではありません。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Adding the `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak automatically launches a container in development mode.\n"
"For more details, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""
"`quarkus.oidc.auth-server-url` に `%prod.` プロファイルプレフィックスを追加すると、Dev Services for Keycloak が開発モードで自動的にコンテナーを起動するようになります。\n"
"詳細は、<<keycloak-dev-mode,Running the application in Dev mode>> セクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"By default, applications using the `quarkus-oidc` extension are treated as `service` type applications.\n"
"However, the extension also supports `web-app` type applications under the following conditions:"
msgstr ""
"デフォルトでは、 `quarkus-oidc` エクステンションを使用するアプリケーションは `service` タイプのアプリケーションとして扱われます。\n"
"ただし、エクステンションは、次の条件下では `web-app` タイプのアプリケーションもサポートします。"

#: _guides/security-keycloak-authorization.adoc
msgid "The access token returned during the authorization code grant flow must be the source of roles (`quarkus.oidc.roles.source=accesstoken`)."
msgstr "認可コード付与フロー中に返されるアクセストークンは、ロールのソース (`quarkus.oidc.roles.source=accesstoken`) である必要があります。"

#: _guides/security-keycloak-authorization.adoc
msgid "Note: For `web-app` type applications, ID token roles are checked by default."
msgstr "注記: `web-app` タイプのアプリケーションの場合、ID トークンのロールはデフォルトでチェックされます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Starting and configuring the Keycloak server"
msgstr "Keycloak サーバーの起動と設定"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""
"アプリケーションを開発モードで実行するときは、Keycloak サーバーを起動しないでください。\n"
"Dev Services for Keycloak がコンテナーを起動します。\n"
"詳細は、<<keycloak-dev-mode,開発モードでアプリケーションを実行する>> セクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "Keycloak サーバーを起動するには、以下の Docker コマンドを使用します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `keycloak.version`, ensure the version is `26.3.4` or later."
msgstr "`keycloak.version` の場合、バージョンが `26.3.4` 以降であることを確認してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "For Keycloak keystore, use the `keycloak-keystore.jks` file located at https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr "Keycloak キーストアの場合は、 https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config] にある `keycloak-keystore.jks` ファイルを使用します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Accessing the Keycloak server"
msgstr "Keycloak サーバーへのアクセス"

#: _guides/security-keycloak-authorization.adoc
msgid "Open your browser and navigate to https://localhost:8543[https://localhost:8543]."
msgstr "ブラウザーを開き、 https://localhost:8543[https://localhost:8543] に移動します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Log in to the Keycloak Administration Console by using the following credentials:"
msgstr "次の認証情報を使用して、Keycloak Administration Console にログインします。"

#: _guides/security-keycloak-authorization.adoc
msgid "**Username**: `admin`"
msgstr "**ユーザー名**: `admin`"

#: _guides/security-keycloak-authorization.adoc
msgid "**Password**: `admin`"
msgstr "**パスワード**: `admin`"

#: _guides/security-keycloak-authorization.adoc
msgid "Importing the realm configuration"
msgstr "レルム設定のインポート"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"To create a new realm, import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file].\n"
"For detailed steps on creating realms, refer to the Keycloak documentation: https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[Create a new realm]."
msgstr ""
"新しいレルムを作成するには、link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[レルム設定ファイル] をインポートします。\n"
"レルムを作成する詳細な手順については、Keycloak のドキュメント ( https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成する]) を参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"After importing the realm, go to Clients, choose the `backend-service` client, and select the Authorization and Resources tab for this client.\n"
"You can now review the resource permissions:"
msgstr "レルムをインポートした後、[Clients]に移動し、 `backend-service` クライアントを選択し、このクライアントの[Authorization and Resources]タブを選択します。リソースの権限を確認できます："

#: _guides/security-keycloak-authorization.adoc
msgid "Role of Keycloak in resource permissions"
msgstr "リソース権限における Keycloak のロール"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The resource access permissions are configured directly in Keycloak, which eliminates the need for `@RolesAllowed` annotations in your application code.\n"
"This approach centralizes access control management within Keycloak, simplifying application maintenance and security updates."
msgstr ""
"リソースのアクセス権限は Keycloak で直接設定されるため、アプリケーションコードに `@RolesAllowed` アノテーションを追加する必要がなくなります。\n"
"このアプローチにより、Keycloak 内でアクセス制御管理が集中化され、アプリケーションのメンテナンスとセキュリティー更新が簡素化されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in dev mode"
msgstr "開発モードでのアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
msgid "To run the application in development mode, use the following command:"
msgstr "アプリケーションを開発モードで実行するには、次のコマンドを使用します。"

#: _guides/security-keycloak-authorization.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] starts a Keycloak container and imports the `quarkus-realm.json` configuration file."
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] は、Keycloak コンテナーを起動し、 `quarkus-realm.json` 設定ファイルをインポートします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a **Provider: Keycloak** link on an **OpenID Connect** card in the Dev UI."
msgstr "http://localhost:8080/q/dev-ui[/q/dev-ui] で入手可能な xref:dev-ui.adoc[Dev UI] を開き、Dev UI の **OpenID Connect** カードの **Provider: Keycloak** リンクをクリックします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Interacting with Dev UI"
msgstr "開発 UI の操作"

#: _guides/security-keycloak-authorization.adoc
msgid "Open the xref:dev-ui.adoc[Dev UI] at http://localhost:8080/q/dev-ui[/q/dev-ui]."
msgstr "xref:dev-ui.adoc[Dev UI] at http://localhost:8080/q/dev-ui[/q/dev-ui] を開きます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Click the **Provider: Keycloak** link within the **OpenID Connect** card in the Dev UI."
msgstr "Dev UI の **OpenID Connect** カード内の **Provider: Keycloak** リンクをクリックします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Testing user permissions"
msgstr "ユーザー権限のテスト"

#: _guides/security-keycloak-authorization.adoc
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following:"
msgstr "`OpenID Connect Dev UI` によって提供される `Single Page Application` にログインするように求められたら、次の手順を実行します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "`/api/users/me` リソースにアクセスするための `User Permission` のみを持つ `alice` (パスワード: `alice`) としてログインします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `403`."
msgstr "`/api/admin` にアクセスすると、 `403` が返されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Access `/api/users/me`, which returns `200`."
msgstr "`/api/users/me` にアクセスすると、 `200` が返されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "ログアウトし、 `admin` としてログインします (パスワード: `admin`)。 `admin` は、 `/api/admin` リソースにアクセスするための `Admin Permission` と、 `/api/users/me` リソースにアクセスするための `User Permission` の両方を持っています。"

#: _guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `200`."
msgstr "`/api/admin` にアクセスすると、 `200` が返されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Customizing the Keycloak realm"
msgstr "Keycloak レルムのカスタマイズ"

#: _guides/security-keycloak-authorization.adoc
msgid "If you started Dev Services for Keycloak without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json], create a default `quarkus` realm without Keycloak authorization policies:"
msgstr "link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] などのレルムファイルをインポートせずに Dev Services for Keycloak を開始した場合は、Keycloak 認可ポリシーなしでデフォルトの `quarkus` レルムを作成します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Select the **Keycloak Admin** link from the **OpenID Connect** card in the Dev UI."
msgstr "Dev UI の **OpenID Connect** カードから **Keycloak Admin** リンクを選択します。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Log in to the Keycloak admin console.\n"
"The username and password are both `admin`."
msgstr ""
"Keycloak 管理コンソールにログインします。\n"
"ユーザー名とパスワードは両方とも `admin` です。"

#: _guides/security-keycloak-authorization.adoc
msgid "Follow the instructions at link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services documentation] to enable authorization policies in the `quarkus` realm."
msgstr "`quarkus` レルムで認可ポリシーを有効にするには、link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services ドキュメント] の指示に従ってください。"

#: _guides/security-keycloak-authorization.adoc
msgid "The **Keycloak Admin** link is easy to find in Dev UI:"
msgstr "**Keycloak Admin** リンクは、Dev UI で簡単に見つけることができます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Adding custom JavaScript policies"
msgstr "カスタム JavaScript ポリシーの追加"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR archive, Dev Services for Keycloak can transfer this archive to the Keycloak container.\n"
"Use the following properties in `application.properties` to configure the transfer:"
msgstr ""
"アプリケーションが、JAR アーカイブにデプロイされた link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript ポリシー] で設定された Keycloak 認可を使用する場合、Dev Services for Keycloak はこのアーカイブを Keycloak コンテナーに転送できます。\n"
"転送を設定するには、 `application.properties` の次のプロパティーを使用します。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Creates a `policies` alias for the `/policies.jar` classpath resource.\n"
"The policies archive can also be located on the file system."
msgstr ""
"`/policies.jar` クラスパスリソースの `policies` エイリアスを作成します。\n"
"ポリシーアーカイブはファイルシステム上に配置することもできます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Maps the policies archive to the `/opt/keycloak/providers/policies.jar` location inside the Keycloak container."
msgstr "ポリシーアーカイブを Keycloak コンテナー内の `/opt/keycloak/providers/policies.jar` のロケーションにマップします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in JVM mode"
msgstr "JVM モードでのアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application in JVM mode."
msgstr "開発モードでアプリケーションを試した後、JVM モードで標準の Java アプリケーションとして実行できます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Compile the application:"
msgstr "アプリケーションをコンパイルします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Run the application:"
msgstr "アプリケーションを実行します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in native mode"
msgstr "ネイティブモードでアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
msgid "You can compile this demo into native code; no modifications are required."
msgstr "このデモはネイティブコードにコンパイルできます。変更は必要ありません。"

#: _guides/security-keycloak-authorization.adoc
msgid "Native compilation eliminates the need for a JVM in the production environment because the produced binary includes the runtime and is optimized for minimal resource usage."
msgstr "ネイティブコンパイルでは、生成されたバイナリーにランタイムが含まれ、リソースの使用が最小限になるように最適化されるため、実稼働環境で JVM が不要になります。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"Compilation takes longer and is disabled by default.\n"
"To build the application, enable the `native` profile."
msgstr ""
"コンパイルには時間がかかるため、デフォルトでは無効になっています。\n"
"アプリケーションをビルドするには、 `native` プロファイルを有効にします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Build the native binary:"
msgstr "ネイティブバイナリーをビルドします。"

#: _guides/security-keycloak-authorization.adoc
msgid "After a while, run the native binary:"
msgstr "しばらくしたら、ネイティブバイナリーを実行します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Testing the application"
msgstr "アプリケーションのテスト"

#: _guides/security-keycloak-authorization.adoc
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section for instructions on testing your application in development mode."
msgstr "開発モードでアプリケーションをテストする手順については、前述の <<keycloak-dev-mode,Running the application in Dev mode>> セクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "You can test the application running in JVM or native modes by using `curl`."
msgstr "`curl` を使用して、JVM またはネイティブモードで実行されているアプリケーションをテストできます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Obtaining an access token"
msgstr "アクセストークンの取得"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The application uses bearer token authorization.\n"
"To access its resources, first obtain an access token from the Keycloak server:"
msgstr ""
"アプリケーションはベアラートークン認可を使用します。\n"
"リソースにアクセスするには、まず Keycloak サーバーからアクセストークンを取得します。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"If the `quarkus.oidc.authentication.user-info-required` property is set to `true`, the application requires that an access token is used to request `UserInfo`.\n"
"In that case, you must add the `scope=openid` query parameter to the token grant request; for example:"
msgstr ""
"`quarkus.oidc.authentication.user-info-required` プロパティーが `true` に設定されている場合、アプリケーションはアクセストークンを使用して UserInfo をリクエストすることを要求します。\n"
"その場合、トークン付与リクエストに `scope=openid` クエリーパラメーターを追加する必要があります。以下に例を示します。"

#: _guides/security-keycloak-authorization.adoc
msgid "The preceding example obtains an access token for the user `alice`."
msgstr "上記の例では、ユーザー `alice` のアクセストークンを取得します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Accessing the `/api/users/me` endpoint"
msgstr "`/api/users/me` エンドポイントへのアクセス"

#: _guides/security-keycloak-authorization.adoc
msgid "Any user with a valid access token can access the `http://localhost:8080/api/users/me` endpoint, which returns a JSON payload with user details:"
msgstr "有効なアクセストークンを持つすべてのユーザーは、ユーザーの詳細を含む JSON ペイロードを返す `http://localhost:8080/api/users/me` エンドポイントにアクセスできます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Accessing the `/api/admin` endpoint"
msgstr "`/api/admin` エンドポイントへのアクセス"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The `http://localhost:8080/api/admin` endpoint is restricted to users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, the server returns a `403 Forbidden` response:"
msgstr ""
"`http://localhost:8080/api/admin` エンドポイントは、 `admin` ロールを持つユーザーに制限されています。\n"
"以前に発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーは `403 Forbidden` レスポンスを返します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Getting an admin access token"
msgstr "管理者アクセストークンの取得"

#: _guides/security-keycloak-authorization.adoc
msgid "To access the admin endpoint, get an access token for the `admin` user:"
msgstr "管理エンドポイントにアクセスするには、 `admin` ユーザーのアクセストークンを取得します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Injecting the authorization client"
msgstr "認可クライアントの注入"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"You can use the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] for advanced tasks, such as managing resources and getting permissions directly from Keycloak.\n"
"To enable this functionality, inject an `AuthzClient` instance into your beans:"
msgstr ""
"リソースの管理や Keycloak からの直接の権限取得などの高度なタスクについては、link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] を参照してください。\n"
"この機能を有効にするには、Bean に `AuthzClient` インスタンスを注入します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enabled=true`.\n"
"Otherwise, no bean is available for injection."
msgstr "`AuthzClient` を直接使用するには、 `quarkus.keycloak.policy-enforcer.enabled=true` を設定します。そうでない場合は、インジェクションに使用できるBeanはありません。"

#: _guides/security-keycloak-authorization.adoc
msgid "Mapping protected resources"
msgstr "保護されたリソースのマッピング"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension uses lazy loading to fetch resources from Keycloak on demand. It uses the request URI to identify and map application resources that require protection."
msgstr "デフォルトでは、拡張機能はKeycloakからリソースをオンデマンドで取得するために遅延ロードを使用します。リクエストURIを使用して、保護が必要なアプリケーションリソースを識別し、マッピングします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable lazy loading and instead pre-load all resources at startup, configure the following property:"
msgstr "遅延ロードを無効にし、代わりに起動時にすべてのリソースをプリロードするには、以下のプロパティを設定します："

#: _guides/security-keycloak-authorization.adoc
msgid "The time required to pre-load resources from Keycloak during startup depends on the number of resources, which might impact your application's initial load time."
msgstr "起動時に Keycloak からリソースを事前ロードするのに必要な時間はリソースの数によって異なり、アプリケーションの初期ロード時間に影響する可能性があります。"

#: _guides/security-keycloak-authorization.adoc
msgid "More about configuring protected resources"
msgstr "保護されたリソースの設定に関する詳細"

#: _guides/security-keycloak-authorization.adoc
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "デフォルト設定では、Keycloak はロールを管理し、誰がどのルートにアクセスできるかを決定します。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr ""
"`@RolesAllowed` アノテーションまたは `application.properties` ファイルを使用して保護されたルートを設定するには、xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) ベアラートークン認証] および xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] ガイドを確認してください。\n"
"詳細は、xref:security-overview.adoc[Quarkus セキュリティーの概要] を参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Access to public resources"
msgstr "パブリックリソースへのアクセス"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"To allow access to a public resource without applying `quarkus-keycloak-authorization` policies, define a `permit` HTTP policy in the `application.properties` file.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr ""
"`quarkus-keycloak-authorization` ポリシーを適用せずにパブリックリソースへのアクセスを許可するには、 `application.properties` ファイルで `permit` HTTP ポリシーを定義します。\n"
"詳細は、xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] ガイドを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "You do not need to disable policy checks for a Keycloak Authorization Policy when using configurations like the following:"
msgstr "次のような設定を使用する場合、Keycloak Authorization Policy のポリシーチェックを無効にする必要はありません。"

#: _guides/security-keycloak-authorization.adoc
msgid "To restrict access to public resources for anonymous users, define an enforcing Keycloak Authorization Policy:"
msgstr "匿名ユーザーによるパブリックリソースへのアクセスを制限するには、強制的な Keycloak Authorization Policy を定義します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "パブリックリソースへの匿名アクセスを制御する必要がある場合、デフォルトのテナント設定のみが適用されます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Checking permission scopes programmatically"
msgstr "プログラムを使用してパーミッションスコープを確認する"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"In addition to resource permissions, you can define method scopes.\n"
"A scope typically represents an action performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr ""
"リソース権限に加えて、メソッドスコープを定義できます。\n"
"スコープは通常、リソースに対して実行されるアクションを表します。\n"
"メソッドスコープを使用して、強制的な Keycloak Authorization Policy を作成できます。\n"
"以下に例を示します。"

#: _guides/security-keycloak-authorization.adoc
msgid "User must have resource permission `Scope Permission Resource` and scope `read`"
msgstr "ユーザーはリソースパーミッション 'Scope Permission Resource' とスコープ 'read' を持っている必要があります。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The Keycloak Policy Enforcer secures the `/api/protected/standard-way` request path, removing the need for annotations such as `@RolesAllowed`.\n"
"However, in some scenarios, you may need to perform a programmatic check."
msgstr ""
"Keycloak Policy Enforcer は `/api/protected/standard-way` リクエストパスを保護し、 `@RolesAllowed` などのアノテーションの必要性を排除します。\n"
"ただし、シナリオによっては、プログラムによるチェックを実行する必要がある場合があります。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr ""
"次の例に示すように、Bean に `SecurityIdentity` インスタンスを注入することでこれを実現できます。\n"
"または、リソースメソッドに `@PermissionsAllowed` アノテーションを付与することで同じ結果を得ることができます。\n"
"次の例は、それぞれ同じ `read` スコープを必要とする 3 つのリソースメソッドを示しています。"

#: _guides/security-keycloak-authorization.adoc
msgid "The `/standard-way` sub-path requires both the resource permission and the `read` scope, based on the configuration set in the `application.properties` file."
msgstr "`/standard-way` サブパスには、 `application.properties` ファイルで設定された設定に基づいて、リソース権限と `read` スコープの両方が必要です。"

#: _guides/security-keycloak-authorization.adoc
msgid "The `/programmatic-way` sub-path checks only for the `Scope Permission Resource` permission by default. However, you can enforce additional constraints, such as scope requirements, by using `SecurityIdentity#checkPermission`."
msgstr "`/programmatic-way` サブパスは、デフォルトでは `Scope Permission Resource` 権限のみをチェックします。ただし、 `SecurityIdentity#checkPermission` を使用して、スコープ要件などの追加の制約を適用できます。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The `@PermissionsAllowed` annotation at `/annotation-way` restricts access to requests that have the `Scope Permission Resource` permission along with the `read` scope.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Authorization of web endpoints guide."
msgstr ""
"`/annotation-way` の `@PermissionsAllowed` アノテーションは、 `Scope Permission Resource` パーミッションと `read` スコープを持つリクエストへのアクセスを制限します。\n"
"詳細については、Web エンドポイントの認可ガイドの xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[アノテーションを使用した認可] のセクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy].\n"
"For example:"
msgstr ""
"xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) マルチテナンシー] と同様に、テナントごとにポリシーエンフォーサー設定をセットアップできます。\n"
"以下に例を示します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Dynamic tenant configuration resolution"
msgstr "動的なテナント設定の解決"

#: _guides/security-keycloak-authorization.adoc
msgid "To create configurations for multiple tenants while avoiding excessive entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` interface to define them programmatically at runtime."
msgstr "設定ファイル内の過剰なエントリーを避けながら複数のテナントの設定を作成するには、 `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` インターフェイスを使用して、実行時にプログラムで定義することができます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Define or update the `/enhanced-config` path in the default tenant configuration."
msgstr "デフォルトのテナント設定で `/enhanced-config` パスを定義または更新します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Add the `/new-config` path to the tenant configuration, including custom claims and values that are populated programmatically."
msgstr "プログラムによって設定されるカスタムクレームと値を含む、テナント設定に `/new-config` パスを追加します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Fallback to the default static tenant configuration resolution defined in the `application.properties` file or other SmallRye Config sources."
msgstr "`application.properties` ファイルまたはその他の SmallRye Config ソースで定義されているデフォルトの静的テナント設定解決にフォールバックします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"This configuration adheres to the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration] guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr ""
"この設定は、公式の https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer 設定] ガイドラインに準拠しています。\n"
"さまざまな設定オプションの詳細は、次のドキュメントを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> ビルド時に固定された設定プロパティー。その他の設定プロパティーは、すべて実行時にオーバーライド可能です。<input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "References"
msgstr "参考資料"

#: _guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloak ドキュメント]"

#: _guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Security の概要]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"
