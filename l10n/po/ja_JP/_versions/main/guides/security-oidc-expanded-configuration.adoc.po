msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OpenId Connect (OIDC) Expanded Configuration Reference"
msgstr "Quarkus OpenId Connect（OIDC）拡張構成リファレンス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC `quarkus-oidc` extension provides a comprehensive, highly adaptable and configurable OIDC and OAuth2 adapter implementation.\n"
"It supports many OIDC and OAuth2 providers, bearer access token and authorization code flows, various provider client authentication mechanisms, token verification and introspection requirements, and much more."
msgstr "Quarkus OIDC `quarkus-oidc` 拡張機能は、包括的で適応性が高く、設定可能なOIDCおよびOAuth2アダプタ実装を提供します。多くのOIDCおよびOAuth2プロバイダ、ベアラアクセストークンおよび認証コードフロー、さまざまなプロバイダクライアント認証メカニズム、トークン検証およびイントロスペクション要件などをサポートしています。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus-oidc` prioritizes on letting users meet most of requirements without having to write custom code, while also letting users customize and filter different parts of the OIDC flows. But the OIDC and OAuth2 space is huge and supporting many of required combinations with configuration propertes has its cost."
msgstr "`quarkus-oidc` は、ユーザがカスタムコードを書くことなくほとんどの要件を満たせるようにすることを優先し、同時にユーザが OIDC フローのさまざまな部分をカスタマイズしたりフィルタリングしたりできるようにしています。しかし、OIDCとOAuth2の領域は巨大であり、コンフィギュレーションプロパティで多くの必要な組み合わせをサポートするにはコストがかかります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "As you can see from the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties reference] document which contains OIDC properties generated from JavaDocs, a number of properties in the `quarkus.oidc.*` namespace is large. Even though only a very minimum number of properties may be required to cover most typical requirements, users may find it difficult to find the right combination."
msgstr "JavaDocs から生成された OIDC プロパティを含む xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties reference] document からわかるように、 `quarkus.oidc.*` 名前空間のプロパティ数は膨大です。ほとんどの典型的な要件をカバーするために必要なプロパティの数はごくわずかであっても、ユーザーは適切な組み合わせを見つけるのが難しいと感じるかもしれません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Many properties, which may look unusual or redundant in one specific deployment, have been added to address concrete requirements to support other deployments. Some important properties may have weaker default values to avoid breaking deployments whose providers do not support such properties by default, or provide limited or non-standard support."
msgstr "ある特定のデプロイメントでは異例または冗長に見えるかもしれない多くのプロパティは、他のデプロイメントをサポートするための具体的な要件に対処するために追加されています。一部の重要なプロパティは、プロバイダがデフォルトでそのようなプロパティに対応していない、または限定的または非標準的なサポートを提供しているデプロイメントを壊さないように、デフォルト値が弱くなっている場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This document provides an expanded description of the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties], explains why some properties have been introduced, why they have current default values, and suggests typical property combinations."
msgstr "こ の文書では、 xref:security-oidc-configuration-properties-reference.adoc[OIDC 構成プ ロ パテ ィ] について詳 し く 説明 し 、 い く つかのプ ロ パテ ィ が導入 さ れた理由、 それ らが現在のデフ ォ ル ト 値を持つ理由、 お よ び代表的なプ ロ パテ ィ の組み合わせを提案 し ます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Core properties"
msgstr "コア特性"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enablement"
msgstr "イネーブルメント"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC enablement property"
msgstr "OIDCイネーブルメントプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Property name"
msgstr "プロパティー名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Default"
msgstr "デフォルト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Description"
msgstr "説明"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.enabled"
msgstr "quarkus.oidc.enabled"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "true"
msgstr "true"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the OIDC extension is enabled"
msgstr "OIDCエクステンションが有効な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This build-time property is about controlling if the whole OIDC extension should be enabled. If it is disabled at build-time then the OIDC extension is unavailable at runtime."
msgstr "このビルド時プロパティは、OIDC拡張機能全体を有効にするかどうかを制御するものです。もしこのプロパティがビルド時に無効になっている場合、OIDC 拡張機能は実行時には使用できません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant"
msgstr "テナント"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC tenant configuration represents specific requirements associated with a single OIDC provider, an individual tenant or realm among multiple OIDC provider tenants or realms."
msgstr "Quarkus OIDCのテナント構成は、単一のOIDCプロバイダー、複数のOIDCプロバイダーのテナントまたはレルム間の個々のテナントまたはレルムに関連する特定の要件を表します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC tenant properties"
msgstr "OIDCテナント物件"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-enabled"
msgstr "quarkus.oidc.tenant-enabled"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the tenant is enabled"
msgstr "テナントが有効な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-id"
msgstr "quarkus.oidc.tenant-id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant id"
msgstr "テナントID"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "These two properties allow to specify if the OIDC tenant configuration should be enabled and the OIDC tenant name."
msgstr "これら2つのプロパティでは、OIDCテナント構成を有効にするかどうか、およびOIDCテナント名を指定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.tenant-enabled` property can be useful even if you work with a single default OIDC tenant, for example, when the OIDC integration in the container should be activated only on the container startup."
msgstr "`quarkus.oidc.tenant-enabled` プロパティは、コンテナ内の OIDC 統合がコンテナ起動時のみ有効になる場合など、単一のデフォルト OIDC テナントで作業する場合でも役立ちます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In most cases, you do not need to deal with the `quarkus.oidc.tenant-id` property unless you have multiple OIDC tenant configuration requirements and create an OIDC tenant configuration `programmatically`. If you configure OIDC tenants in `application.properties`, then, as you can see from the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties reference] document, the tenant id is declared as a 3rd token in the tenant-specific group of properties."
msgstr "ほとんどの場合、複数の OIDC テナント構成要件があり、OIDC テナント構成 `programmatically` を作成しない限り、 `quarkus.oidc.tenant-id` プロパティを扱う必要はありません。 `application.properties` で OIDC テナントを構成する場合、 xref:security-oidc-configuration-properties-reference.adoc[OIDC 構成プロパティ参照] ドキュメントからわかるように、テナント ID は、テナント固有のプロパティグループの 3 番目のトークンとして宣言されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, the following configuration sets the OIDC `tenant-1` configuration requirements:"
msgstr "たとえば、次の構成では、OIDC `tenant-1` の構成要件を設定します："

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can configure or create as many tenant configurations as you need and have them resolved at the request time."
msgstr "必要な数のテナント設定を構成または作成し、リクエスト時に解決することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<multi-tenancy>> section for more details."
msgstr "詳しくは、 <<multi-tenancy>> のセクションをご覧ください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Metadata"
msgstr "メタデータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC Metadata properties"
msgstr "OIDCメタデータのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.auth-server-url"
msgstr "quarkus.oidc.auth-server-url"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC base URL"
msgstr "OIDCベースURL"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.discovery-enabled"
msgstr "Quarkus.oidc.discovery-enabledを有効にします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable discovery"
msgstr "ディスカバリーの有効化"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authorization-path"
msgstr "quarkus.oidc.authorization-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization path"
msgstr "認証パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-path"
msgstr "quarkus.oidc.token-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token path"
msgstr "トークン・パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks-path"
msgstr "quarkus.oidc.jwks-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JSON Web Key Set (JWKS) path"
msgstr "JSONウェブキーセット（JWKS）パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-path"
msgstr "quarkus.oidc.introspection-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection path"
msgstr "トークンのイントロスペクション・パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.user-info-path"
msgstr "quarkus.oidc.user-info-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "UserInfo path"
msgstr "ユーザー情報パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.end-session-path"
msgstr "quarkus.oidc.end-session-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "End session (logout) path"
msgstr "セッション終了（ログアウト）パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.revoke-path"
msgstr "quarkus.oidc.revoke-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token revocation path"
msgstr "トークン失効パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.registration-path"
msgstr "quarkus.oidc.registration-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC client registration path"
msgstr "OIDCクライアント登録パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.auth-server-url` is a key base OIDC URL property. By default, Quarkus OIDC adds a `.well-known/openid-configuration` path segment to this URL and discovers the OIDC provider metadata."
msgstr "`quarkus.oidc.auth-server-url` は、キーベースの OIDC URL プロパティです。デフォルトでは、Quarkus OIDCはこのURLに パスセグメントを追加し、OIDCプロバイダのメタデータを検出します。 `.well-known/openid-configuration` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can disable metadata discovery with `quarkus.oidc.discovery-enabled=false` when the provider does not support it (most OAuth2 providers do not), when you would like to optimize start up time by skipping a remote discovery call and configure individual OIDC provider endpoint URLs instead."
msgstr "プロバイダがメタデータ検出をサポートしていない場合（ほとんどのOAuth2プロバイダはサポートしていません）、リモート検出呼び出しをスキップして起動時間を最適化したい場合、代わりに個々のOIDCプロバイダのエンドポイントURLを設定したい場合など、 `quarkus.oidc.discovery-enabled=false` 、メタデータ検出を無効にすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Individual OIDC endpoint URLs such as `quarkus.oidc.authorization-path` can also be set when you need to override one of the discovered OIDC endpoint URLs or when the discovered OIDC metadata does not include a required endpoint URL."
msgstr "`quarkus.oidc.authorization-path` などの個別の OIDC エンドポイント URL は、検出された OIDC エンドポイント URL のいずれかを上書きする必要がある場合や、検出された OIDC メタデータに必要なエンドポイント URL が含まれていない場合にも設定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "These URLs can be either relative to the base `quarkus.oidc.auth-server-url` URL or absolute."
msgstr "これらのURLは、ベースとなる `quarkus.oidc.auth-server-url` URLからの相対URLまたは絶対URLのいずれかになります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, usually you need to disable the discovery and specify individual endpoint URLs when working with OAuth2 providers, see the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more details."
msgstr "たとえば、 xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth] 2 プロバイダを使用する場合、通常はディスカバリを無効にして個々のエンドポイント URL を指定する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The individual OIDC endpoint URLs that you may need to configure depends on the OIDC <<application-type>> and expected token formats."
msgstr "設定する必要がある個々の OIDC エンドポイント URL は、OIDC <<application-type>> と予想されるトークン形式によって異なります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authorization-path`, `quarkus.oidc.token-path` and `quarkus.oidc.end-session-path` are only relevant when the <<authorization-code-flow> authentication is enabled with `quarkus.oidc.application-type=web-app`."
msgstr "`quarkus.oidc.authorization-path` `quarkus.oidc.application-type=web-app` で<<authorization-code-flow>>認証が有効になっている場合のみ、 と が関係します。 `quarkus.oidc.token-path` `quarkus.oidc.end-session-path` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.jwks-path` is needed to fetch JSON Web Key Set (JWKS) but only if the tokens are JSON Web Tokens (JWT). When it is `quarkus.oidc.application-type=web-app`, ID tokens representing the user authentication are always in JWT format, and in most cases JWK keys are needed to verify them. The JWKS path is not needed if you work with opaque (binary) bearer access tokens which are usually remotely introspected instead."
msgstr "`quarkus.oidc.jwks-path` は、JSON Web Key Set（JWKS）をフェッチするために必要ですが、トークンが JSON Web Tokens（JWT）の場合のみです。 の場合、ユーザー認証を表す ID トークンは常に JWT 形式であり、ほとんどの場合、JWK キーがそれらを検証するために必要です。JWKSパスは、不透明な（バイナリの）ベアラ・アクセストークンを扱う場合には必要ありません。 `quarkus.oidc.application-type=web-app`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.introspection-path` is required in most cases when an opaque (binary) access token must be introspected remotely because such tokens can not have attached signatures that can be verified. It is worth setting `quarkus.oidc.introspection-path` even if you work with JWT tokens and your provider supports the remote token introspection. In such cases, JWT tokens can be introspected remotely as a fallback, when no matching JWK verification key has been found to verify JWT locally."
msgstr "`quarkus.oidc.introspection-path` は、不透明な(バイナリの)アクセストークンをリモートでイントロスペクトする必要がある場合、ほとんどのケースで必要です。JWT トークンを使っていて、プロバイダがリモート・トークン・イントロスペクションをサポートしている場合でも、 を設定する価値があります。そのような場合、JWT トークンは、ローカルで JWT を検証するために一致する JWK 検証キーが見つからなかったときのフォールバックとして、リモートでイントロスペクションできます。 `quarkus.oidc.introspection-path` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.user-info-path` is usually required after the <<authorization-code-flow> completion, when `UserInfo` must be requested to get more information about the user, in addition to what is already available in the ID token.\n"
"Requesting `UserInfo` is also possible for the bearer access token flow."
msgstr "`quarkus.oidc.user-info-path` は通常、<<authorization-code-flow>>の完了後に要求されます。 、IDトークンですでに利用可能な情報に加えて、ユーザーに関する詳細な情報を取得するために要求する必要があります。 を要求することは、ベアラアクセストークンフローでも可能です。 `UserInfo` `UserInfo`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When you work with OAuth2 providers which issue binary access tokens but do not support the remote introspection, and do not have standard `UserInfo` support, `quarkus.oidc.user-info-path` must point to the OAuth2 provider specific endpoint returning information about the current user, in order to support an indirect access token verification. See the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more details."
msgstr "バイナリ・アクセストークンを発行する OAuth2 プロバイダと連携する場合、リモート・イントロスペクションをサポートしておらず、標準の `UserInfo` サポートもありません。 `quarkus.oidc.user-info-path` は、間接的なアクセストークン検証をサポートするために、現在のユーザーに関する情報を返す OAuth2 プロバイダ固有のエンドポイントを指す必要があります。詳細は xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 プロバイダの] セクションを参照ください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.revoke-path` and `quarkus.oidc.registration-path` are currently not used directly by Quarkus OIDC.\n"
"Applications xref:security-openid-connect-client-reference.adoc#revoke-access-tokens[can revoke tokens] on logout, and other security events.\n"
"Applications that already work with `quarkus-oidc` can use `quarkus.oidc.registration-path` to xref:security-openid-connect-client-registration.adoc[dynamically register OIDC clients]."
msgstr "`quarkus.oidc.revoke-path` `quarkus.oidc.registration-path` 現在のところ、Quarkus OIDCで直接使用されることはありません。アプリケーションは、ログアウト時やその他のセキュリティイベントで xref:security-openid-connect-client-reference.adoc#revoke-access-tokens[トークンを取り消すことができます] 。すでに を使用しているアプリケーションは、 を使用して `quarkus-oidc` `quarkus.oidc.registration-path` xref:security-openid-connect-client-registration.adoc[OIDC クライアントを動的に登録] できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "But please remember, all or some of these OIDC endpoint specific URLs may be discoverable when your provider supports the metadata discovery."
msgstr "しかし、これらのOIDCエンドポイント固有のURLのすべてまたは一部は、プロバイダーがメタデータの発見をサポートしている場合、発見できる可能性があることを忘れないでください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<resource-metadata-properties>> section about accessing the protected resource metadata."
msgstr "保護されたリソースのメタデータへのアクセスについては、 <<resource-metadata-properties>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Application type"
msgstr "アプリケーションタイプ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Application type property"
msgstr "アプリケーションタイプのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.application-type"
msgstr "アプリケーションタイプ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "service"
msgstr "サービス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC application type determines how the the current request is authenticated."
msgstr "OIDCアプリケーションタイプは、現在のリクエストがどのように認証されるかを決定します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The default `service` application type is used when a `bearer` access token is sent with an HTTP `Authorization: Bearer <token>` header to access the Quarkus application. For example, a `Single-page application` (SPA) can use access tokens to access Quarkus on behalf of the currently logged-in SPA user."
msgstr "デフォルトの `service` アプリケーションタイプは、 `bearer` アクセストークンがHTTP `Authorization: Bearer <token>` ヘッダーとともに送信され、Quarkusアプリケーションにアクセスする場合に使用されます。たとえば、 `Single-page application` （SPA）は、アクセストークンを使用して、現在ログインしているSPAユーザーに代わってQuarkusにアクセスできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `web-app` application type is used when the `quarkus-oidc` extension uses an <<authorization-code-flow> to authenticate users to Quarkus and create session cookies."
msgstr "`web-app` アプリケーションタイプは、 `quarkus-oidc` 拡張機能が <<authorization-code-flow> を使用してユーザーを Quarkus で認証し、セッションクッキーを作成する場合に使用されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The `hybrid` application type can be used to support both bearer access token and authorization code flows at the same time.\n"
"If the current request has an HTTP `Authorization: Bearer <token>` header then the bearer access token is verified, otherwise, if no session cookie is available, the user is redirected to the OIDC provider to authenticate."
msgstr "`hybrid` アプリケーション・タイプを使用すると、ベアラ・アクセストークンと認証コードのフローを同時にサポートできます。現在のリクエストに HTTP `Authorization: Bearer <token>` ヘッダがある場合、ベアラアクセストークンが検証されます。そうでない場合、セッションクッキーがない場合、ユーザは認証のために OIDC プロバイダにリダイレクトされます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Client"
msgstr "クライアント"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc` extension represents a registered OIDC application client.\n"
"This client needs to authenticate to the OIDC provider when acquiring, introspecting or revoking tokens."
msgstr "`quarkus-oidc` 拡張は、登録された OIDC アプリケーションクライアントを表します。このクライアントは、トークンを取得、イントロスペクト、または取り消す際に、OIDCプロバイダに対して認証を行う必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client id and secret properties"
msgstr "クライアントIDとシークレットプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.client-id"
msgstr "quarkus.oidc.client-id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client id"
msgstr "クライアントID"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.client-name"
msgstr "quarkus.oidc.client-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client name"
msgstr "クライアント名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.secret"
msgstr "quarkus.oidc.credentials.secret"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret"
msgstr "クライアントの秘密"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Registered OIDC client has a client id and usually, a client secret."
msgstr "登録されたOIDCクライアントはクライアントIDと通常クライアントシークレットを持っています。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` are optional when JWT bearer access tokens are accepted since they can be verified locally with the JWK verification keys available from a public OIDC JWKS key set endpoint. However, configuring `quarkus.oidc.client-id` is RECOMMENDED in this case anyway to make the OIDC log messages more informative."
msgstr "JWTベアラアクセストークンを受け入れる場合、 `quarkus.oidc.client-id` と `quarkus.oidc.credentials.secret` の両方はオプションです。なぜなら、公開OIDC JWKSキーセットエンドポイントから利用可能なJWK検証キーでローカルに検証できるからです。しかし、OIDCのログメッセージをより有益にするために、この場合、 `quarkus.oidc.client-id` を設定することが推奨されます（RECOMMENDED）。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.client-name` is a user-friendly client name and is currently only used  to make the log messages more informative."
msgstr "`quarkus.oidc.client-name` はユーザーフレンドリーなクライアント名で、現在はログメッセージをより有益なものにするためだけに使われています。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you enable an <<authorization-code-flow>> authentication with `quarkus.oidc.application-type=web-app`, then configuring `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` (or other type of client credentials) is required in order to complete the current authorization code flow, because the OIDC token endpoint requires the client authentication."
msgstr "`quarkus.oidc.application-type=web-app` を使用して <<authorization-code-flow>> 認証を有効にした場合、OIDC トークン・エンドポイントはクライアント認証を必要とするため、現在の認証コード・フローを完了するには `quarkus.oidc.client-id` と `quarkus.oidc.credentials.secret` (または他のタイプのクライアント認証情報) を構成する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both of these properties are also usually required if the tokens must be introspected, both for the bearer access token and authorization code flows."
msgstr "これらのプロパティは、ベアラアクセストークンと認証コードフローの両方において、トークンをイントロスペクトする必要がある場合にも通常必要となります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<client-credentials>> section for a complete description of supported OIDC provider client authentication options."
msgstr "サポートされる OIDC プロバイダ・クライアント認証オプションの完全な説明については、 <<client-credentials>> セクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client authentication options"
msgstr "クライアント認証オプション"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.credentials.secret` client secret property was already introduced in the previous <<client-id-secret>> section and using this property alone maybe sufficient to authenticate to many OIDC and OAuth2 compliant providers."
msgstr "`quarkus.oidc.credentials.secret` client secret プロパティは、前の <<client-id-secret>> セクションですでに紹介しました。このプロパティを使うだけで、多くの OIDC および OAuth2 準拠のプロバイダを認証することができるでしょう。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "However, even this single OIDC client secret property may be treated in four different ways, depending on how a specific provider expects it be used: be sent alongside `quarkus.oidc.client-id` as an HTTP `Authorization: Basic` credentials pair (default), as an HTTP POST form parameter, or even as a query parameter (as expected by the xref:security-openid-connect-providers.adoc#strava[Strava OAuth2 provider]), or is used as a placeholder for a generated JWT token for the xref:security-oidc-code-flow-authentication.adoc#apple-post-jwt[Apple client authentication]."
msgstr "HTTP `Authorization: Basic` クレデンシャルペア（デフォルト）として `quarkus.oidc.client-id` とともに送信されるか、HTTP POST フォームパラメータとして送信されるか、あるいはクエリパラメータとして送信されるか（ xref:security-openid-connect-providers.adoc#strava[Strava OAuth2 プロバイダによって] 期待される）、あるいは xref:security-oidc-code-flow-authentication.adoc#apple-post-jwt[Apple クライアント認証] 用に生成された JWT トークンのプレースホルダとして使用されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Have a look at the complete overview of the authentication properties below and check the xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OIDC provider client authentication] section for more details."
msgstr "認証プロパティの完全な概要は以下をご覧ください。また、詳細については xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OIDCプロバイダのクライアント認証] セクションをご覧ください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret credentials"
msgstr "クライアントの秘密認証情報"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret - use it if the HTTP `Authorization: Basic` client id and secret pair is expected"
msgstr "Client secret - HTTP `Authorization: Basic` クライアント ID と secret のペアが必要な場合に使用します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.value"
msgstr "quarkus.oidc.credentials.client-secret.value"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret value"
msgstr "クライアント秘密値"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.method"
msgstr "quarkus.oidc.credentials.client-secret.method"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Basic"
msgstr "ベーシック"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "How client secret should be submitted or used"
msgstr "顧客機密の提出または使用方法"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.name"
msgstr "quarkus.oidc.credentials.client-secret.provider.name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The CredentialsProvider bean name"
msgstr "CredentialsProvider ビーン名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.keyring-name"
msgstr "quarkus.oidc.credentials.client-secret.provider.keyring-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The keyring name"
msgstr "キーホルダーの名前"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.key"
msgstr "Quarkus.oidc.credentials.client-secret.provider.key。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The client secret key"
msgstr "クライアントの秘密鍵"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When a client secret is configured with `quarkus.oidc.credentials.secret`, it is sent alongside `quarkus.oidc.client-id` as an HTTP `Authorization: Basic` credentials pair. However, some providers can only accept the client id and secret if they are sent as POST form parameters, when you need to use the `quarkus.oidc.credentials.client-secret.method=post` configuration."
msgstr "クライアントシークレットが `quarkus.oidc.credentials.secret` で設定されると、 `quarkus.oidc.client-id` とともに HTTP `Authorization: Basic` 認証情報のペアとして送信されます。しかし、プロバイダによっては、クライアント ID とシークレットが POST フォームのパラメータとして送信された場合のみ、 `quarkus.oidc.credentials.client-secret.method=post` の設定を使用する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The remaining three properties in the `quarkus.oidc.credentials.client-secret.provider.*` namespace allow to customize how a custom xref:credentials-provider.adoc[CredentialsProvider] can be used to provide secrets stored in secure locations. Alternatively, you can use Quarkus Configuration system to manage secrets, see the xref:config-secrets.adoc[Secrets in Configuration] guide."
msgstr "`quarkus.oidc.credentials.client-secret.provider.*` 名前空間の残りの 3 つのプロパティを使用すると、カスタム xref:credentials-provider.adoc[CredentialsProvider] を使用して、安全な場所に保存されたシークレットを提供する方法をカスタマイズできます。または、Quarkusの設定システムを使用して xref:config-secrets.adoc[シークレットを] 管理することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT client credentials"
msgstr "JWTクライアント認証情報"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Instead of sending a client secret, Quarkus OIDC can authenticate to OIDC providers by sending a generated JWT authentication token signed with either a client secret or private key."
msgstr "Quarkus OIDCでは、クライアントシークレットを送信する代わりに、クライアントシークレットまたは秘密鍵で署名されたJWT認証トークンを送信して、OIDCプロバイダを認証できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client Secret JWT"
msgstr "クライアントシークレットJWT"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[client_secret_jwt client authentication option] requires creating a JWT token signed with a symmetric key also known to the OIDC provider."
msgstr "JWT link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[client_secret_jwtクライアント認証オプションでは] 、OIDCプロバイダも知っている共通鍵で署名されたJWTトークンを作成する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT client_secret_jwt method properties"
msgstr "JWT client_secret_jwt メソッドのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.secret"
msgstr "quarkus.oidc.credentials.jwt.secret"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If provided, indicates that JWT is signed using a secret key."
msgstr "提供された場合、JWTが秘密鍵を使用して署名されていることを示します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.signature-algorithm"
msgstr "quarkus.oidc.credentials.jwt.signature-algorithm"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "HS256"
msgstr "HS256"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Signature algorithm"
msgstr "署名アルゴリズム"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.name"
msgstr "quarkus.oidc.credentials.jwt.provider.name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.keyring-name"
msgstr "quarkus.oidc.credentials.jwt.provider.keyring-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.key"
msgstr "quarkus.oidc.credentials.jwt.provider.key"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, the OIDC client secret acts as the shared symmetric key, and can be configured with `quarkus.oidc.credentials.jwt.secret`. This is the same secret one can declare, for example, with the `quarkus.oidc.credentials.secret` property but having an option to define it in the `quarkus.oidc.credentials.jwt.*` namespace is better for the JWT `client_secret_jwt` authentication, as one may also need to customize the headers and claims added to JWT with setting more properties in the `quarkus.oidc.credentials.jwt.*` namespace, see the <<jwt-authentication-headers-claims>> section below for more details."
msgstr "デフォルトでは、OIDCクライアントシークレットは共有対称鍵として機能し、 `quarkus.oidc.credentials.jwt.secret` で設定することができます。これは、例えば、 `quarkus.oidc.credentials.secret` プロパティで宣言できるのと同じ秘密です。 `quarkus.oidc.credentials.jwt. **` *名前空間で定義するオプションを持つことは、JWT<code>client_secret_jwt</code> 認証にとってより良いことです。<code>quarkus.oidc.credentials.jwt.</code>* 名前 *空間でより多くのプロパティを設定することで、JWT に追加されるヘッダーとクレームをカスタマイズする必要があるかもしれないから* です。詳細については、以下の <<jwt-authentication-headers-claims>> セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The remaining three properties in the `quarkus.oidc.credentials.jwt.provider.*` namespace allow to customize how a custom xref:credentials-provider.adoc[CredentialsProvider] can be used to provide `quarkus.oidc.credentials.jwt.secret` secrets stored in secure locations. Alternatively, you can use Quarkus Configuration system to manage secrets, see the xref:config-secrets.adoc[Secrets in Configuration] guide."
msgstr "`quarkus.oidc.credentials.jwt.provider.*` 名前空間の残りの 3 つのプロパティでは、カスタム xref:credentials-provider.adoc[CredentialsProvider を] 使用して、安全な場所に保存された `quarkus.oidc.credentials.jwt.secret` シークレットを提供する方法をカスタマイズできます。また、Quarkus 設定システムを使用して xref:config-secrets.adoc[シークレットを] 管理することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, `HS256` algorithm requiring a 32 characters long secret is used to sign generated authentication tokens but it can be strengthened with an algorithm such as `HS512` using the `quarkus.oidc.credentials.jwt.signature-algorithm` property."
msgstr "デフォルトでは、生成された認証トークンの署名には、32 文字の長さの秘密を必要とする `HS256` アルゴリズムが使用されますが、 `quarkus.oidc.credentials.jwt.signature-algorithm` プロパティを使用して、 `HS512` などのアルゴリズムで強化することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Private Key JWT"
msgstr "秘密鍵JWT"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[private_key_jwt client authentication option] requires creating a JWT token signed with the client private key, with the client public key registered in the OIDC provider."
msgstr "JWT link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[private_key_jwtクライアント認証オプションでは] 、OIDCプロバイダに登録されたクライアント公開鍵で、クライアント秘密鍵で署名されたJWTトークンを作成する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT private_key_jwt method properties"
msgstr "JWT private_key_jwt メソッドのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key"
msgstr "quarkus.oidc.credentials.jwt.key"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The inlined key"
msgstr "インラインキー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-file"
msgstr "quarkus.oidc.credentials.jwt.key-file"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key file"
msgstr "キーファイル"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-store-file"
msgstr "quarkus.oidc.credentials.jwt.key-store-file"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key store file"
msgstr "キーストアファイル"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-store-password"
msgstr "quarkus.oidc.credentials.jwt.key-store-password"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-id"
msgstr "quarkus.oidc.credentials.jwt.key-id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key id"
msgstr "キー id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-password"
msgstr "quarkus.oidc.credentials.jwt.key-password"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key password"
msgstr "重要なパスワード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "RS256"
msgstr "RS256"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.credentials.jwt.key` contains an inlined Base64-encoded private key representation, and is especially useful when you need to supply it as an environment property.\n"
"`quarkus.oidc.credentials.jwt.key-file` point to a PEM file containing the private key."
msgstr "`quarkus.oidc.credentials.jwt.key` にはインライン化された Base64 エンコードされた秘密鍵表現が含まれており、環境プロパティとして提供する必要がある場合に特に便利です。 は秘密鍵を含む PEM ファイルを指します。 `quarkus.oidc.credentials.jwt.key-file`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.credentials.jwt.key-store-file`, `quarkus.oidc.credentials.jwt.key-store-password`, `quarkus.oidc.credentials.jwt.key-id` and `quarkus.oidc.credentials.jwt.key-password` can be used to extract the private key from a keystore."
msgstr "`quarkus.oidc.credentials.jwt.key-store-file` `quarkus.oidc.credentials.jwt.key-store-password` 、 、 を使用して、キーストアから秘密鍵を抽出することができます。 `quarkus.oidc.credentials.jwt.key-id` `quarkus.oidc.credentials.jwt.key-password` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, RSA `RS256` algorithm is used to sign a JWT authentication token but it can be changed with `quarkus.oidc.credentials.jwt.signature-algorithm`, for example, to Elliptic Curve `ES256`."
msgstr "デフォルトでは、JWT認証トークンの署名にはRSA `RS256` アルゴリズムが使用されますが、 `quarkus.oidc.credentials.jwt.signature-algorithm` を使用して、例えば楕円曲線 `ES256` に変更することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<jwt-authentication-headers-claims>> section below for details about customizing the generated JWT token."
msgstr "生成されたJWTトークンのカスタマイズの詳細については、以下の <<jwt-authentication-headers-claims>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT authentication headers and claims"
msgstr "JWT認証ヘッダーとクレーム"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[Standard OIDC client authentication text] describes the claims that the generated token must contain but the values of these claims may have to be overridden."
msgstr "link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[標準的なOIDCクライアント認証テキストには] 、生成されたトークンが含まなければならないクレームが記述されていますが、これらのクレームの値はオーバーライドする必要があるかもしれません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT header and claim properties"
msgstr "JWTヘッダーとクレームのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.token-key-id"
msgstr "quarkus.oidc.credentials.jwt.token-key-id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The token key id (`kid`) header value"
msgstr "トークン・キー・ID ( `kid` ) ヘッダ値"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.audience"
msgstr "quarkus.oidc.credentials.jwt.audience"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC token endpoint address"
msgstr "OIDCトークンのエンドポイントアドレス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Audience (`aud`) claim value"
msgstr "観客 ( `aud` ) の請求額"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.issuer"
msgstr "quarkus.oidc.credentials.jwt.issuer"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC client id"
msgstr "OIDCクライアントID"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Issuer (`iss`) claim value"
msgstr "発行体( `iss` ) 請求額"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.subject"
msgstr "quarkus.oidc.credentials.jwt.subject"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Subject (`sub`) cliam value"
msgstr "件名 ( `sub` ) クリアム値"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.lifespan"
msgstr "quarkus.oidc.credentials.jwt.lifespan"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "10 seconds"
msgstr "10秒"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Lifespan added to the `issued at` (`iat`) claim value to calculate the expiry (`exp`) claim value"
msgstr "`issued at` ( `iat` ) のクレーム値に加算され、期限切れ ( `exp` ) のクレーム値が算出されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.claims"
msgstr "quarkus.oidc.credentials.jwt.claims"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Map of extra string claims that must be added to the token"
msgstr "トークンに追加しなければならない余分な文字列クレームのマップ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.credentials.jwt.token-key-id` can be used to set a key identifier (`kid`) header value to help the OIDC provider with fidning a token verification key.\n"
"All other properties listed in the table above can be used to customize JWT claim values."
msgstr "`quarkus.oidc.credentials.jwt.token-key-id` を使用して、OIDC プロバイダがトークン検証キーを見つけるのに役立つキー識別子 ( ) ヘッダー値を設定することができます。上の表にリストされた他のすべてのプロパティは、JWTクレーム値をカスタマイズするために使用することができます。 `kid`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "JWT Bearer"
msgstr "JWT ベアラー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, when a client JWT authentication token must be produced, it is generated by Quarkus OIDC. In some cases, the JWT bearer token may be provided and periodically updated by Kubernetes."
msgstr "デフォルトでは、クライアントJWT認証トークンを生成する必要がある場合、Quarkus OIDCによって生成されます。場合によっては、KubernetesによってJWTベアラートークンが提供され、定期的に更新されることもあります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT source properties"
msgstr "JWTソース・プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.source"
msgstr "quarkus.oidc.credentials.jwt.source"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Generated by quarkus-oidc"
msgstr "作成者：quarkus-oidc"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "How the authentication JWT token is produced"
msgstr "認証JWTトークンの生成方法"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.token-path"
msgstr "quarkus.oidc.credentials.jwt.token-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the token source is BEARER then this path must point to a JWT bearer token in the file system"
msgstr "トークンのソースがBEARERの場合、このパスはファイルシステム内のJWTベアラートークンを指す必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Set `quarkus.oidc.credentials.jwt.source=bearer` if the client authentication token is provided by Kubernetes, and use `quarkus.oidc.credentials.jwt.token-path` to point to the file resource containing this token."
msgstr "クライアント認証トークンがKubernetesによって提供される場合は `quarkus.oidc.credentials.jwt.source=bearer` 、このトークンを含むファイルリソースを指すには `quarkus.oidc.credentials.jwt.token-path` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Mutual TLS"
msgstr "相互 TLS"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<tls-properties>> section if the MTLS authentication is required."
msgstr "MTLS認証が必要な場合は、 <<tls-properties>> のセクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection credentials"
msgstr "内観資格"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the tokens must be introspected, some providers may require the introspection specific authentication credentials, as opposed to the already configured OIDC client id and one of the OIDC client authentication credentials:"
msgstr "トークンをイントロスペクションする必要がある場合、プロバイダによっては、すでに設定されている OIDC クライアント ID と OIDC クライアント認証クレデンシャルの 1 つではなく、イントロスペクション固有の認証クレデンシャルを要求する場合があります："

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection credentials properties"
msgstr "イントロスペクション認証のプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.name"
msgstr "quarkus.oidc.introspection-credentials.name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection name"
msgstr "内観名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.secret"
msgstr "quarkus.oidc.introspection-credentials.secret"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection secret"
msgstr "内観の秘密"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.include-client-id"
msgstr "quarkus.oidc.introspection-credentials.include-client-id"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Include client id"
msgstr "クライアントIDを含む"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.introspection-credentials.name` and `quarkus.oidc.introspection-credentials.secret` must be used only if your provider requires the introspection specific authentication credentials. In this case, the introspection endpoint may also require a `quarkus.oidc.client-id`  property sent as a `client_id` parameter."
msgstr "`quarkus.oidc.introspection-credentials.name` プロバイダがイントロスペクション固有の認証情報を必要とする場合のみ、 を使用する必要があります。この場合、introspection エンドポイントは パラメータとして送られる プロパティも必要とするかもしれません。 `quarkus.oidc.introspection-credentials.secret` `client_id` `quarkus.oidc.client-id`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Currently, introspection credentials, if configured, can only be sent as HTTP POST form parameters."
msgstr "現在、introspection クレデンシャルが設定されている場合、HTTP POST フォームパラメータとしてのみ送信できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection properties"
msgstr "接続プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.use-blocking-dns-lookup"
msgstr "quarkus.oidc.use-blocking-dns-lookup"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "false"
msgstr "false"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use Blocking DNS lookup"
msgstr "DNSルックアップのブロックを使用"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-delay"
msgstr "quarkus.oidc.connection-delay"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection delay"
msgstr "接続遅延"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-retry-count"
msgstr "quarkus.oidc.connection-retry-count"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "3"
msgstr "3"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection retry count"
msgstr "接続再試行回数"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-time-out"
msgstr "quarkus.oidc.connection-time-out"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection time out"
msgstr "接続タイムアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-host"
msgstr "プロキシホスト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy host"
msgstr "プロキシホスト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-port"
msgstr "quarkus.oidc.proxy-port"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "80"
msgstr "80"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy port"
msgstr "プロキシポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-username"
msgstr "プロキシユーザ名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy username"
msgstr "プロキシユーザー名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-password"
msgstr "quarkus.oidc.proxy-password"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy password"
msgstr "プロキシパスワード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.use-blocking-dns-lookup` should be set to `true` to avoid a Vert'x thread getting blocked when an OIDC provider connection is established on the slow network."
msgstr "`quarkus.oidc.use-blocking-dns-lookup` 低速ネットワークでOIDCプロバイダ接続が確立されたときにVert'xスレッドがブロックされるのを避けるために、 に設定する必要があります。 `true` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.connection-retry-count` sets a number of connection retries and `quarkus.oidc.connection-time-out` sets a duration after which the current OIDC connection request times out. `quarkus.oidc.connection-delay` establishes a delay for an initial connection request only."
msgstr "`quarkus.oidc.connection-retry-count` は接続の再試行回数を設定し、 は現在の OIDC 接続要求がタイムアウトするまでの時間を設定します。 は最初の接続要求のみに遅延を設定します。 `quarkus.oidc.connection-time-out` `quarkus.oidc.connection-delay` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Four properties in the `quarkus.oidc.proxy.*` namespace can be used to control access to HTTP proxies."
msgstr "`quarkus.oidc.proxy.*` 名前空間の 4 つのプロパティを使用して、HTTP プロキシへのアクセスを制御できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In some cases, OIDC provider, after accepting HTTP GET requests to either discovery or UserInfo endpoints, initiates a redirect exactly to the same endpoint address while also supplying some additional cookies."
msgstr "場合によっては、OIDC プロバイダは、discovery または UserInfo エンドポイントへの HTTP GET リクエストを受け付けた後、同じエンドポイントアドレスに正確にリダイレクトを開始します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Redirect control properties"
msgstr "リダイレクトコントロールのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Property"
msgstr "プロパティー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.follow-redirects"
msgstr "quarkus.oidc.follow-redirects"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Follow OIDC provider redirects"
msgstr "OIDCプロバイダーのリダイレクトに従ってください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC supports such redirects by default but you are RECOMMENDED to disable it with `quarkus.oidc.follow-redirects=false` if you do not expect HTTP redirects during Quarkus OIDC communicating with the OIDC provider."
msgstr "Quarkus OIDCはデフォルトでこのようなリダイレクトをサポートしていますが、Quarkus OIDCがOIDCプロバイダーと通信している間にHTTPリダイレクトが発生することを想定していない場合は、 `quarkus.oidc.follow-redirects=false` 、この機能を無効にすることが推奨されます（RECOMMENDED）。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "TLS properties"
msgstr "TLSプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tls-configuration-name"
msgstr "quarkus.oidc.tls-configuration-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "TLS Registry name"
msgstr "TLSレジストリ名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use `quarkus.oidc.tls-configuration-name` to reference a xref:tls-registry-reference.adoc[TLS Registry] configuration that can be required when the OIDC provider requires an HTTPS connection or Quarkus OIDC provider client must use MTLS authentication."
msgstr "OIDCプロバイダがHTTPS接続を必要とする場合や、Quarkus OIDCプロバイダクライアントがMTLS認証を使用する必要がある場合に必要となる xref:tls-registry-reference.adoc[TLSレジストリ] 設定を参照するには、 `quarkus.oidc.tls-configuration-name` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Authorization code flow"
msgstr "認可コードフロー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow is a complex, multi-step process which may work with a few properties only but require a lot of tuning to deal with the specific OIDC or OAuth2 provider's implementation and deployment constraints."
msgstr "認証コードフローは複雑なマルチステッププロセスであり、いくつかのプロパティだけで動作する場合もありますが、特定のOIDCまたはOAuth2プロバイダの実装とデプロイの制約に対処するために多くのチューニングが必要です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The authorization code flow is enabled with the `quarkus.oidc.application-type=web-app` application type."
msgstr "認証コードフローは、 `quarkus.oidc.application-type=web-app` アプリケーションタイプで有効になります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow initiation"
msgstr "認証コードフロー開始"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "An initial stage (first leg) of the authorization code flow requires Quarkus OIDC to build a correct redirect URL and redirect the user to the OIDC provider to authenticate."
msgstr "認証コードフローの初期段階（最初の足）では、Quarkus OIDCが正しいリダイレクトURLを作成し、ユーザーをOIDCプロバイダーにリダイレクトして認証する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.redirect-path"
msgstr "quarkus.oidc.authentication.redirect-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC callback URL"
msgstr "OIDCコールバックURL"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.response-mode"
msgstr "quarkus.oidc.authentication.response-mode"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "query"
msgstr "クエリー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC response mode"
msgstr "OIDC応答モード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.scopes"
msgstr "quarkus.oidc.authentication.scopes"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "openid"
msgstr "オープニド"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Required OIDC scopes"
msgstr "必要なOIDCスコープ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.add-openid-scope"
msgstr "quarkus.oidc.authentication.add-openid-scope"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Add `openid` scope"
msgstr "`openid` スコープを追加"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.scope-separator"
msgstr "quarkus.oidc.authentication.scope-separator"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "' '"
msgstr "' '"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Scope separator"
msgstr "スコープセパレーター"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.extra-params"
msgstr "quarkus.oidc.authentication.extra-params"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Extra parameters"
msgstr "追加パラメータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.forward-params"
msgstr "quarkus.oidc.authentication.forward-params"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Forward parameters"
msgstr "前進パラメータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.force-redirect-https-scheme"
msgstr "quarkus.oidc.authentication.force-redirect-https-scheme"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Force redirect HTTPS scheme"
msgstr "HTTPS スキームの強制リダイレクト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.allow-multiple-code-flows"
msgstr "Quarkus.oidc.authentication.allow-multiple-code-flows"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Multi-tab support"
msgstr "マルチタブのサポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.redirect-path` relative path points to the Quarkus endpoint where the user is redirected to by OIDC provider, after the user completed the authentication challenge. The absolute address of this endpoint is the one you set during the OIDC application registration as a callback URL. For example, if the Quarkus endpoint is running at `https://myservice.com` and you have the `quarkus.oidc.authentication.redirect-path=service` redirect path then `https://myservice.com/service` is an absolute callback URL."
msgstr "`quarkus.oidc.authentication.redirect-path` 相対パスは、ユーザーが認証チャレンジを完了した後、OIDCプロバイダによってユーザーがリダイレクトされるQuarkusエンドポイントを指します。このエンドポイントの絶対アドレスは、コールバックURLとしてOIDCアプリケーションの登録時に設定したものです。たとえば、Quarkusのエンドポイントが `https://myservice.com` で実行されており、 `quarkus.oidc.authentication.redirect-path=service` リダイレクトパスが設定されている場合 `https://myservice.com/service` は絶対コールバックURLです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.response-mode` defines how the OIDC provider returns the authorization code flow properties such as `code`. Usually, these parameters are returned as query parameters, for example, `https://myservice.com/service?code=somecode&state=somestate`. It is a `query` response mode which is supported by default."
msgstr "`quarkus.oidc.authentication.response-mode` は、OIDC プロバイダが認可コードフロープロパティ（ など）を返す方法を定義します。通常、これらのパラメータはクエリパラメータとして返されます、 `code` `https://myservice.com/service?code=somecode&state=somestate` .これは `query` レスポンス・モードで、デフォルトでサポートされています。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"However, such parameters may also be returned to Quarkus with the POST form payload directly in the request body. It is achieved by the provider returning an HTML page to the user and this page auto-submitting the form payload to Quarkus. Some providers such as xref:security-openid-connect-providers.adoc#apple[Apple] can enforce this response mode.\n"
"Set `quarkus.oidc.authentication.response-mode=form` if supporting this mode is required. Also note that in this case, setting `quarkus.oidc.authentication.remove-redirect-parameters=true` is not necessary, since the `code` and other parameters are submitted in the request body."
msgstr "ただし、このようなパラメータは、POSTフォームのペイロードをリクエストボディに直接含めてQuarkusに返すこともできます。この場合、プロバイダがHTMLページをユーザーに返し、このページがフォームペイロードをQuarkusに自動送信します。 xref:security-openid-connect-providers.adoc#apple[Appleなど] 一部のプロバイダは、このレスポンスモードを強制することができます。このモードをサポートする必要がある場合は、 `quarkus.oidc.authentication.response-mode=form` を設定してください。また、この場合、 `code` およびその他のパラメータはリクエストボディで送信されるため、 `quarkus.oidc.authentication.remove-redirect-parameters=true` を設定する必要はないことに注意してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Most OIDC providers expect a `scope=openid` parameter in the initial redirect URL, and Quarkus always adds it itself by default, there is no need to do `quarkus.oidc.authentication.scopes=openid`, but quite often you may have to provide an additional scope or a comma separated list of scopes to request additional permissions for the access token that will be issued (alongside ID and refresh tokens) once the authorization code flow is completed.\n"
"For example, if you need Quarkus application to read your Google Calendar on your behalf, you can do `quarkus.oidc.authentication.scopes=https://www.googleapis.com/auth/calendar.readonly`."
msgstr "`quarkus.oidc.authentication.scopes=openid` ほとんどのOIDCプロバイダは、最初のリダイレクトURLに `scope=openid` パラメータがあることを想定しており、Quarkusはデフォルトで常にパラメータを追加しています。例えば、QuarkusアプリケーションにGoogleカレンダーを代理で読み取らせる必要がある場合、 `quarkus.oidc.authentication.scopes=https://www.googleapis.com/auth/calendar.readonly` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If more than one scope has to be submitted to the OIDC provider, then a ` ` space character (URL encoded as `%20`) is used to separate multiple scope values, for example, `scope=openid%20scope=read`. Some OAuth2 providers, notably xref:security-openid-connect-providers.adoc#strava[Strava OAuth2] expect a comma `,` separator, thus you can do `quarkus.oidc.authentication.scope-separator=,`, etc."
msgstr "複数のスコープを OIDC プロバイダーに送信する必要がある場合は、` ` スペース文字 (URL エンコードは `%20` ) を使用して複数のスコープ値を区切ります。例えば、 `scope=openid%20scope=read` 。 `quarkus.oidc.authentication.scope-separator=,` いくつかのOAuth2プロバイダ、特に xref:security-openid-connect-providers.adoc#strava[Strava OAuth] 2ではカンマ `,` の区切りが必要です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Most OAuth2 providers fail if they see an `openid` scope but this scope is expected by default by most OIDC providers. This is when `quarkus.oidc.authentication.add-openid-scope=false` may have to be set."
msgstr "ほとんどの OAuth2 プロバイダーは `openid` スコープを見ると失敗しますが、ほとんどの OIDC プロバイダーはデフォルトでこのスコープを期待しています。この場合は `quarkus.oidc.authentication.add-openid-scope=false` を設定する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Apart from the usual `scope`, `redirect_uri` and `state` query initial redirect parameters, other parameters may have to be included, and the map `quarkus.oidc.authentication.extra-params` property can help, for example, `quarkus.oidc.authentication.extra-params.prompt=consent`, etc."
msgstr "通常の `scope` 、 `redirect_uri` 、 `state` クエリ初期リダイレクトパラメータとは別に、他のパラメータを含める必要があるかもしれません。マップ `quarkus.oidc.authentication.extra-params` プロパティは、例えば、 `quarkus.oidc.authentication.extra-params.prompt=consent` 、などのように役立ちます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.authentication.forward-params` map parameter can be used to choose which of the original user request URL's query parameters are included in the redirect URI that Quarkus creates before redirecting the user to authenticate. Use this property with care."
msgstr "`quarkus.oidc.authentication.forward-params` mapパラメータを使用すると、Quarkusがユーザーを認証するためにリダイレクトする前に作成するリダイレクトURIに、元のユーザーリクエストURLのクエリパラメータを含めるかどうかを選択できます。このプロパティは注意して使用してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.force-redirect-https-scheme` can be used to build a correct redirect URI when the original user request is made over HTTPS but the firewall terminates it and Quarkus sees the `http://` scheme.\n"
"By setting `quarkus.oidc.authentication.force-redirect-https-scheme=true`, you tell Quarkus to use the `https://` scheme, even when Quarkus OIDC sees the `http://` scheme in the current request URL, to ensure the user is correctly redirected to the HTTPS based OIDC authorization endpoint. Setting this property may not be necessary if you already enabled Quarkus to recognize adoc:http-reference#reverse-proxy[Forwarded or X-Forwarded headers]."
msgstr "`quarkus.oidc.authentication.force-redirect-https-scheme` を使用すると、元のユーザーリクエストはHTTPSで作成されたものの、ファイアウォールによって終了され、Quarkusに スキームが表示された場合に、正しいリダイレクトURIを作成できます。 を設定すると、Quarkus OIDCで現在のリクエストURLの スキームが確認された場合でも、 スキームを使用するようにQuarkusに指示し、ユーザーがHTTPSベースのOIDC認証エンドポイントに正しくリダイレクトされるようになります。すでにQuarkusでadoc:http-reference#reverse-proxy[ForwardedまたはX-Forwardedヘッダー]を認識できるようにしている場合は、このプロパティを設定する必要はありません。 `http://` `quarkus.oidc.authentication.force-redirect-https-scheme=true` `http://` `https://`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.allow-multiple-code-flows` allows multi-tab authentication by default. For example, a user starts an authorization code flow in one tab, is about to enter the requested credentials, does not complete it because of some interruption, later opens another tab and starts and completes another authorization code flow, with the original one still pending in the first tab. Now, the already authenticated user returns to the first tab and completes it as well. If this kind of authentication flow flexibility is considered too much for the stricter authentication policies you may have, set `quarkus.oidc.authentication.allow-multiple-code-flows=false`. See also the `quarkus.oidc.authentication.fail-on-missing-kid` property description below."
msgstr "`quarkus.oidc.authentication.allow-multiple-code-flows` では、デフォルトでマルチタブ認証が可能です。例えば、あるユーザがあるタブで認証コードフローを開始し、要求された認証情報を入力しようとしたところ、何らかの割り込みにより入力が完了しなかったとします。ここで、既に認証されたユーザは最初のタブに戻り、同様に認証を完了します。このような認証フローの柔軟性が、より厳格な認証ポリシーに対して過剰であると考えられる場合は、 を設定してください。以下の プロパティの説明も参照してください。 `quarkus.oidc.authentication.allow-multiple-code-flows=false` `quarkus.oidc.authentication.fail-on-missing-kid` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow completion"
msgstr "認証コードフローの完了"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A completion stage (second leg) of the authorization code flow requires Quarkus OIDC to exchange the authorizaion code for ID, access and refresh tokens."
msgstr "認証コードフローの完了段階（2番目のレグ）では、Quarkus OIDCが認証コードをID、アクセス、リフレッシュトークンと交換する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow completion properties"
msgstr "認証コードフロー補完プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.code-grant.extra-params"
msgstr "quarkus.oidc.code-grant.extra-params"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.code-grant.headers"
msgstr "quarkus.oidc.code-grant.headers"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Extra headers"
msgstr "追加ヘッダー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.restore-path-after-redirect"
msgstr "quarkus.oidc.authentication.restore-path-after-redirect"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Restore path after redirect"
msgstr "リダイレクト後のパスの復元"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.remove-redirect-parameters"
msgstr "quarkus.oidc.authentication.remove-redirect-parameters"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Remove redirect parameters after redirect"
msgstr "リダイレクト後にリダイレクトパラメータを削除"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.nonce-required"
msgstr "quarkus.oidc.authentication.nonce-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If nonce is required"
msgstr "nonceが必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.pkce-required"
msgstr "quarkus.oidc.authentication.pkce-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If Proof Key for Code Exchange (PKCE) is required"
msgstr "コード交換のための証明鍵（PKCE）が必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.user-info-required"
msgstr "quarkus.oidc.authentication.user-info-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If UserInfo is required"
msgstr "UserInfo が必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.code-grant.extra-params` is a map property which can be used to set additional parameters that must be sent to the OIDC token endpoint to complete the authorization code flow, after the user authenticated and got redirected to Quarkus with the authorization `code`. Often, this `code` and the `redirect_uri` which must match the one included in the initial authorization code flow redirect are sent as form parameters, in addition to the client authentication credentials."
msgstr "`quarkus.oidc.code-grant.extra-params` `code` はマッププロパティで、ユーザーが認証され、認証コードフローを完了させるためにOIDCトークンのエンドポイントに送信する必要がある追加パラメータを設定するために使用できます。多くの場合、この と、最初の認証コードフローのリダイレクトに含まれるものと一致する必要がある は、クライアント認証クレデンシャルに加えて、フォームパラメータとして送信されます。 `code` `redirect_uri` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Sometimes, additional HTTP headers must also be provided to complete the authorization code flow. Use the `quarkus.oidc.code-grant.headers` map property in such cases."
msgstr "認証コード・フローを完成させるために、追加の HTTP ヘッダを提供しなければならない場合もあります。そのような場合は `quarkus.oidc.code-grant.headers` map プロパティを使用してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.restore-path-after-redirect` can be used to restore the original request path which was used to initiate the authorization code flow.\n"
"For example, let's assume your application provides a lot of endpoints that require a secured access, and registering all possible initial secure Quarkus endpoint URLs as OIDC callback URLs is not possible. In such cases, `quarkus.oidc.authentication.restore-path-after-redirect=true` can be set to get Quarkus OIDC redirect the authenticated user to the original request URL after this user was returned to the callback URL configured with `quarkus.oidc.authenticaion.redirect-path`. In this case, the callback URL is expected to be virtual, there is no need to allocate a JAX-RS callback endpoint to support it."
msgstr "`quarkus.oidc.authentication.restore-path-after-redirect` を使用すると、認証コードフローの開始に使用された元のリクエストパスを復元できます。たとえば、アプリケーションが、セキュリティで保護されたアクセスを必要とする多くのエンドポイントを提供しており、OIDCコールバックURLとして、可能な限り初期のセキュリティで保護されたQuarkusエンドポイントURLをすべて登録することは不可能であるとします。このような場合、 を設定することで、Quarkus OIDCが、認証されたユーザーを、 で設定されたコールバックURLに戻した後に、元のリクエストURLにリダイレクトさせることができます。この場合、コールバックURLは仮想であることが想定されるため、JAX-RSコールバックエンドポイントを割り当ててサポートする必要はありません。 `quarkus.oidc.authentication.restore-path-after-redirect=true` `quarkus.oidc.authenticaion.redirect-path`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.remove-redirect-parameters` forces an additional redirect after the authenticated user got redirected to Quarkus and the authorization code got exchanged for tokens and a session was established. This is done to drop the authorization code flow specific properties such as `code` and `state` from the URL, which, if the application does not follow with its own redirects, may remain visible in the browser as URL query parameters.\n"
"Note though that the `code` is a one time token that can only be exchanged by Quarkus OIDC which knows the client credentials required to complete the authorization code flow. However, in general, dropping these is RECOMMENDED and should be done by default."
msgstr "`quarkus.oidc.authentication.remove-redirect-parameters` は、認証されたユーザーがQuarkusにリダイレクトされ、認証コードがトークンと交換され、セッションが確立された後に、追加のリダイレクトを強制します。これは、 や といった認証コードフロー固有のプロパティをURLから削除するために行われます。アプリケーションが独自のリダイレクトに従わない場合、URLクエリパラメータとしてブラウザに表示されたままになる可能性があります。しかし、 は、認証コードフローを完了するために必要なクライアント認証情報を知っているQuarkus OIDCによってのみ交換可能な、1回限りのトークンであることに注意してください。しかし、一般的には、これらを削除することが推奨され、デフォルトで実行されるべきです。 `code` `state` `code`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.nonce-required` is an authorization code flow security hardening property that can prevent replay attacks. If Quarkus is asked to generate it and include a `nonce=<generated_nonce>` query parameter during an initial authentication redirect, the OIDC provider must return an ID token which includes a `nonce` claim with a matching `nonce` value. It is set to `false` by default because it is not guaranteed to be supported by default by all OIDC and especially OAuth2 providers. Setting this property to `true` is `RECOMMENDED` if your provider supports this feature."
msgstr "`quarkus.oidc.authentication.nonce-required` は、リプレイ攻撃を防ぐことができる認証コードフローのセキュリティ強化プロパティです。Quarkusが最初の認証リダイレクト中に、 クエリパラメータを含むIDトークンの生成を要求された場合、OIDCプロバイダは、 の値が一致する、 クエリパラメータを含むIDトークンを返さなければなりません。デフォルトで に設定されているのは、すべての OIDC プロバイダ、特に OAuth2 プロバイダがデフォルトでサポートしている保証がないためです。プロバイダがこの機能をサポートしている場合、このプロパティを に設定すると になります。 `nonce=<generated_nonce>` `nonce` `nonce` `false` `true` `RECOMMENDED` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.pkce-required` can be used to enable https://www.rfc-editor.org/rfc/rfc7636[Proof Key for Code Exchange (PKCE)]. PKCE is of primary interest to public SPA OIDC clients running in a browser. Typically, Quarkus OIDC acts as a confidential OIDC client which can prove to the OIDC provider that it knows the client secret, when PKCE is not strictly necessary. However you may have to enable it when your provider enforces PKCE for all authorization code flow clients."
msgstr "`quarkus.oidc.authentication.pkce-required` を使用することで、 link:https://www.rfc-editor.org/rfc/rfc7636[コード交換のための証明鍵(PKCE)を] 有効にすることができます。PKCEは、ブラウザで実行されるパブリックSPA OIDCクライアントが主に関心を持つものです。通常、Quarkus OIDCは機密OIDCクライアントとして動作し、OIDCプロバイダに対してクライアントの秘密を知っていることを証明することができます。ただし、プロバイダがすべての認証コードフロークライアントにPKCEを強制する場合は、有効にする必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the authorization code flow is completed, Quarkus gets access to the `ID token` which can provide sufficient information about the currently authenticated user. However, quite often, an additional remote request to the OIDC provider's https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] endpoint is required to get more details about the user."
msgstr "認証コードフローが完了すると、Quarkusは、現在認証されているユーザーに関する十分な情報を提供できる `ID token` 。しかし、多くの場合、OIDCプロバイダの link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] エンドポイントへの追加のリモートリクエストが必要です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.user-info-required` can be used to enable an additional remote `UserInfo` request."
msgstr "`quarkus.oidc.authentication.user-info-required` を使用すると、追加のリモート リクエストを有効にできます。 `UserInfo` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"When you work with pure OAuth2 providers such as GitHub, setting `quarkus.oidc.authentication.user-info-required=true` is always required. The reason is that `OAuth2` does not provide `ID token`, but only an `access token`. In the OAuth2-only world alone, the access token is not even meant for the current client, which is the Quarkus endpoint which acquired it, but for this endpoint to access some downstream service on behalf of the current user.\n"
"But Quarkus needs to have an access to the current user identity, therefore this property must be set in such cases.\n"
"But since OAuth2 providers do not have a standard OIDC `UserInfo` endpoint, `quarkus.oidc.user-info-path` must be configured to point to the OAuth2 provider specific endpoint returning information about the current user, for example, in case of GitHub, it is `https://api.github.com/user`.\n"
"See the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more informatiom."
msgstr "GitHub のような純粋な OAuth2 プロバイダを使う場合、 `quarkus.oidc.authentication.user-info-required=true` を設定する必要があります。その理由は、 `OAuth2` は `ID token` を提供せず、 `access token` のみを提供するからです。 OAuth2 のみの世界では、アクセストークンは現在のクライアント（それを取得した Quarkus のエンドポイント）向けではなく、このエンドポイントが現在のユーザーに代わって下流のサービスにアクセスするためのものです。しかし、Quarkusは現在のユーザーIDにアクセスする必要があるため、このような場合はこのプロパティを設定する必要があります。しかし、OAuth2 プロバイダには標準の OIDC `UserInfo` エンドポイントがないため、 `quarkus.oidc.user-info-path` は、現在のユーザーに関する情報を返す OAuth2 プロバイダ固有のエンドポイントを指すように設定する必要があります。 `https://api.github.com/user` .詳細は xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 プロバイダの] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.user-info-required` is enabled automatically if it is detected that the Quarkus endpoint has `quarkus.oidc.UserInfo` injected - you `do not have to enable` this property in this case."
msgstr "`quarkus.oidc.authentication.user-info-required` は、Quarkusのエンドポイントに が注入されていることが検出されると、自動的に有効になります。この場合、このプロパティは 。 `quarkus.oidc.UserInfo` `do not have to enable` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This property is also enabled automatically if you have to <<verify-access-token-with-user-info>> or work with OAuth2 providers that do not return an ID token but a binary access token only that must be indirectly verified with `UserInfo`, see the <<id-token-availability>> section for more details."
msgstr "`UserInfo` <<id-token-availability>> このプロパティは、 <<verify-access-token-with-user-info>> 、またはIDトークンを返さずバイナリアクセストークンのみを返すOAuth2プロバイダと連携する必要がある場合にも自動的に有効になります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow errors"
msgstr "認証コードフローエラー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow is not always completed successfully. The user may cancel the authentication challenge or fail to provide the correct credentials. In such cases, instead of the `code` parameter, the `error` and `error_description` parameters are returned to Quarkus."
msgstr "認証コードフローが常に正常に完了するとは限りません。ユーザーが認証チャレンジをキャンセルしたり、正しい認証情報を提供できなかったりする場合があります。このような場合、 `code` パラメータの代わりに、 `error` と `error_description` パラメータが Quarkus に返されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow error properties"
msgstr "認証コードフローエラーのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.error-path"
msgstr "quarkus.oidc.authentication.error-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Error path"
msgstr "エラーパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.fail-on-missing-state-param"
msgstr "quarkus.oidc.authentication.fail-on-missing-state-param"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Fail on missing state parameter"
msgstr "状態パラメータが見つからない場合の失敗"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.fail-on-missing-kid"
msgstr "quarkus.oidc.authentication.fail-on-missing-kid"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Fail on missing key"
msgstr "キーの紛失で失敗"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the authorization code flow fails, the user gets HTTP 401 status error by default, but a better user experience can be provided by returning a formatted page explaining to the user what happened. You can use `quarkus.oidc.authentication.error-path` to point to the endpoint resource which can access the `error` and `error_description` parameters forwarded to it by Quarkus OIDC to create such a page."
msgstr "認証コードフローが失敗した場合、デフォルトではHTTP 401ステータスエラーがユーザーに表示されますが、何が起こったかをユーザーに説明する書式化されたページを返すことで、より良いユーザーエクスペリエンスを提供することができます。 `quarkus.oidc.authentication.error-path` を使用して、Quarkus OIDC から転送された `error` と `error_description` パラメータにアクセスできるエンドポイントリソースを指定すると、このようなページを作成できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.fail-on-missing-state-param` is about controlling what should happen when the state cookie is detected, thus indicating that the first leg of the authorization code flow is about to be completed, but no matching `state` query parameter is found in what is expected a return redirect from the OIDC provider to Quarkus OIDC.\n"
"This property is set to `false` by default because it is the case with a multi-tab authentication, where a state cookie related to one tab is available but the current request represents a new tab authentication request (see also the `quarkus.oidc.authentication.allow-multiple-code-flows` property description in the <<authorization-code-flow-initiation>> section above).\n"
"It also makes it much easier to develop and test OIDC secured endpoints, since otherwise, trying to access Quarkus again after the failed or abandoned authentication attempts at the OIDC provider site can cause difficult to explain HTTP 401 status errors due to the loose state cookies, requiring cleaning the browser cache."
msgstr "`quarkus.oidc.authentication.fail-on-missing-state-param` は、ステートクッキーが検出され、認証コードフローの最初のレグが完了しようとしていることを示すが、OIDCプロバイダからQuarkus OIDCへのリターンリダイレクトが期待される中で、 クエリパラメータにマッチするものが見つからない場合の処理を制御するものです。このプロパティがデフォルトで に設定されているのは、マルチタブ認証の場合、1つのタブに関連するステートクッキーが利用可能であるが、現在のリクエストは新しいタブの認証リクエストであるためです（上記の セクションの プロパティの説明も参照してください）。また、OIDCセキュアエンドポイントの開発およびテストが非常に容易になります。OIDCプロバイダサイトで認証に失敗したり、放棄されたりした後、Quarkusに再度アクセスしようとすると、ステートクッキーが緩んでいるために説明が難しいHTTP 401ステータスエラーが発生し、ブラウザのキャッシュを削除する必要があるからです。 `state` `false` <<authorization-code-flow-initiation>> `quarkus.oidc.authentication.allow-multiple-code-flows`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.fail-on-missing-state-param=true` does not relax the security, it is primarily about the user experience: if, for whatever reasons, the authorization code flow can not be completed due to a misssing `state` query parameter, the user is redirected to the OIDC provider to re-authenticate, rather than returning a blank HTTP 401 response to the user."
msgstr "`quarkus.oidc.authentication.fail-on-missing-state-param=true` 何らかの理由で、 クエリパラメータのミスにより認証コードフローが完了できない場合、ユーザは空白の HTTP 401 レスポンスをユーザに返すのではなく、再認証のために OIDC プロバイダにリダイレクトされます。 `state` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.fail-on-missing-kid` property is related to the mult-tab authentication. It can happen that the session's ID token signature can no longer be verified because the authentication in another tab caused a verification key refresh, and the key identifier for the current ID token can no longer be found, causing HTTP `401`. To request the user re-authentication instead, you may want to set this property to `false`. It is set to `true` by default to stress that a situation where a token's signature can not be verified should be treated with care."
msgstr "`quarkus.oidc.authentication.fail-on-missing-kid` プロパティはマルチタブ認証に関連しています。別のタブでの認証によって検証キーが更新され、現在の ID トークンのキー識別子が見つからなくなったため、セッションの ID トークンの署名が検証できなくなり、HTTP 。代わりにユーザの再認証を要求するには、このプロパティを に設定するとよいでしょう。トークンの署名が検証できない状況は慎重に扱われるべきであることを強調するために、デフォルトでは に設定されています。 `401` `false` `true` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "SPA integration"
msgstr "SPAの統合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.java-script-auto-redirect"
msgstr "quarkus.oidc.authentication.java-script-auto-redirect"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if Java Script auto redirect is required"
msgstr "Java Scriptによる自動リダイレクトが必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When you use SPA to delegate to Quarkus OIDC to manage the authorization code flow, `quarkus.oidc.authentication.java-script-auto-redirect` can be used to work around the fact that many OIDC providers do not support CORS for their authorization endpoints which challenge the user with the authentication screen. By setting`quarkus.oidc.authentication.java-script-auto-redirect=true`, you request Quarkus to return HTTP  `499` status, instead of the `302` redirect that would be blocked due to the lack of CORS support for such redirects on the OIDC provider's side, when this redirect is managed by the SPA XHR. The SPA can catch the `499` error and use the `window` API to bypass the browser script restrictions."
msgstr "SPAを使用してQuarkus OIDCに委任し、認証コードフローを管理する場合、 `quarkus.oidc.authentication.java-script-auto-redirect` 、多くのOIDCプロバイダが認証画面でユーザーにチャレンジする認証エンドポイントのCORSをサポートしていないという事実を回避するために使用できます。quarkus.oidc.authentication.java-script-auto-redirect=true`を設定することで、このリダイレクトがSPAのXHRによって管理される場合、OIDCプロバイダ側でそのようなリダイレクトに対するCORSサポートがないためにブロックされる `302` リダイレクトの代わりに、HTTP `499` ステータスを返すようにQuarkusに要求します。SPAは `499` エラーをキャッチし、 `window` APIを使用してブラウザのスクリプト制限を回避することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<custom-java-script-request-checker>> section for details about customizing Java Script request checks."
msgstr "Java Scriptリクエストチェックのカスタマイズの詳細については、 <<custom-java-script-request-checker>> セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "ID token availability"
msgstr "IDトークンの可用性"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.id-token-required"
msgstr "quarkus.oidc.authentication.id-token-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if ID token is required"
msgstr "IDトークンが必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.internal-id-token-lifespan"
msgstr "quarkus.oidc.authentication.internal-id-token-lifespan"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "access token `expires_in` property"
msgstr "アクセストークン `expires_in` プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "internal ID token lifespan"
msgstr "内部IDトークンの寿命"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"OIDC is different from OAuth2 because it adds a new type of token representing the user authentication, `ID token`.\n"
"`quarkus-oidc` works with compliant OIDC providers which return an ID token but also has to support OAuth2 providers which do not return it. Use `quarkus.oidc.authentication.id-token-required=false` to tell Quarkus that your provider can not provide a required ID token.\n"
"In this case, Quarkus generates an internal ID token to represent a session.\n"
"Quarkus OIDC also expects that the OAuth2 provider specific `UserInfo` endpoint path is configured with `quarkus.oidc.user-info-path` to fetch information about the current user."
msgstr "OIDCはOAuth2とは異なり、ユーザー認証を表す新しいタイプのトークン（ `ID token` ）が追加されます。 `quarkus-oidc` 、IDトークンを返すOIDC準拠のプロバイダで動作しますが、IDトークンを返さないOAuth2プロバイダもサポートする必要があります。 `quarkus.oidc.authentication.id-token-required=false` を使用して、Quarkusにプロバイダが必要なIDトークンを提供できないことを伝えます。この場合、Quarkusはセッションを表す内部IDトークンを生成します。Quarkus OIDCはまた、現在のユーザーに関する情報を取得するために、OAuth2プロバイダ固有の `UserInfo` エンドポイントパスが `quarkus.oidc.user-info-path` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Since the session has to be created but the OAuth2 provider does not return an ID token which can be used to calculate the session age, an `quarkus.oidc.authentication.internal-id-token-lifespan` duration property can be used to set the session lifespan. When the OAuth2 server returns an access token `expires_in` property then this property is used as a session age property, if `quarkus.oidc.authentication.internal-id-token-lifespan` is not configured."
msgstr "セッションは作成されなければなりませんが、OAuth2 プロバイダはセッション年齢を計算するために使用できる ID トークンを返さないので、 `quarkus.oidc.authentication.internal-id-token-lifespan` duration プロパティを使用してセッションの寿命を設定することができます。OAuth2 サーバーがアクセストークン `expires_in` プロパティを返す場合、 `quarkus.oidc.authentication.internal-id-token-lifespan` が設定されていなければ、このプロパティがセッション年齢のプロパティとして使用されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow cookies"
msgstr "認証コードフロー・クッキー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC creates a `state` cookie when an authorization code flow is started and a `session` cookie when it is completed."
msgstr "Quarkus OIDCは、認証コードフローが開始されると `state` 、完了すると `session` 、クッキーを作成します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Common cookie properties"
msgstr "一般的なクッキーのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The common cookie properties impact both the authorization code flow session and state cookies."
msgstr "共通のクッキー・プロパティは、認可コード・フロー・セッションとステート・クッキーの両方に影響します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-path"
msgstr "quarkus.oidc.authentication.cookie-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "'/'"
msgstr "'/'"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie path"
msgstr "クッキーのパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-domain"
msgstr "quarkus.oidc.authentication.cookie-domain"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie domain"
msgstr "クッキーのドメイン"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-path-header"
msgstr "quarkus.oidc.authentication.cookie-path-header"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie path header"
msgstr "クッキーのパスヘッダ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-same-site"
msgstr "quarkus.oidc.authentication.cookie-same-site"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "lax"
msgstr "緩い"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie SameSite status"
msgstr "クッキー SameSite ステータス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-suffix"
msgstr "quarkus.oidc.authentication.cookie-suffix"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie suffix"
msgstr "クッキーの接尾辞"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-force-secure"
msgstr "quarkus.oidc.authentication.cookie-force-secure"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie force secure"
msgstr "クッキー・フォース・セキュア"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.cookie-path` and `quarkus.oidc.authentication.cookie-domain` properties control which application paths the state and session cookies will be available at. The wider the cookie-path is (\"/\"), the wider the application secured space can be. You may want to restrict it to more specific paths such as `/secured`, to make it easier to handle the public space available at paths such as `/public`.\n"
"You may also want to restrict it when the specific endpoint paths should only be accessible by users who authenticated with specific providers only. For example, `/keycloak` path can only accessible by users authenticated with Keycloak, `/google` - with Google, etc. See also the <<multi-tenancy>> section for more information."
msgstr "`quarkus.oidc.authentication.cookie-path` プロパティと プロパティは、状態とセッションクッキーがどのアプリケーションパスで利用可能になるかを制御します。クッキー・パスが広い(\"/\")ほど、アプリケーションが確保する空間も広くなります。 のようなパスで利用可能な公開空間を扱いやすくするために、 のような、より具体的なパスに制限したいと思うかもしれません。また、特定のエンドポイント・パスを、特定のプロバイダで認証されたユーザだけがアクセスできるようにしたい場合にも、制限をかけることができます。例えば、 パスは、Keycloak で認証されたユーザのみがアクセスでき、 - Google などで認証されたユーザのみがアクセスできます。詳細は のセクションも参照してください。 `quarkus.oidc.authentication.cookie-domain` `/public` `/secured` `/keycloak` `/google` <<multi-tenancy>>"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path-header` can be used to dynamically set the required cookie path - this property should be used with care and only when it fits your deployment requirements."
msgstr "`quarkus.oidc.authentication.cookie-path-header` を使用して、必要なクッキーのパスを動的に設定することができます。このプロパティは、デプロイの要件に適合する場合にのみ、注意して使用する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-same-site` defines a `Same-Site` attribute as `lax` by default, since setting it to `strict` proved to be breaking some deployments. However, setting it to `strict` is RECOMMENDED when it is known to work in your deployment, for example, when the OIDC provider is hosted in the same domain as the application, etc."
msgstr "`quarkus.oidc.authentication.cookie-same-site` `Same-Site` `lax` `strict` に設定すると一部のデプロイメントが壊れることが判明したためです。しかし、OIDCプロバイダがアプリケーションと同じドメインでホストされている場合など、デプロイメントで動作することが分かっている場合は、 に設定することが推奨されます（RECOMMENDED）。 `strict` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-suffix` can be used to customize the state and session cookie names. For example, by setting `%test.quarkus.oidc.authentication.cookie-suffix=test` you can have the session cookie name qualified with the `_test` suffix in the test profile only."
msgstr "`quarkus.oidc.authentication.cookie-suffix` を使用して、状態とセッションのクッキー名をカスタマイズできます。例えば、 を設定することで、test プロファイルでのみセッションクッキー名を サフィックスで修飾することができます。 `%test.quarkus.oidc.authentication.cookie-suffix=test` `_test` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-force-secure` may only be relevant in some deployments if Quarkus is listening on non-secure HTTP protocol but running behind HTTPS terminating reverse proxy. This property has no impact if Quarkus is listening on HTTPS, when cookies are always secure."
msgstr "`quarkus.oidc.authentication.cookie-force-secure` は、Quarkusが非セキュアなHTTPプロトコルでリッスンしているが、HTTPS終端リバースプロキシの背後で実行されている場合にのみ、一部のデプロイメントで関連する可能性があります。このプロパティは、QuarkusがHTTPSをリッスンしている場合（Cookieが常にセキュアである場合）には影響しません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie"
msgstr "ステートクッキー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie properties"
msgstr "ステートクッキーのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.state-secret"
msgstr "quarkus.oidc.authentication.state-secret"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie encryption secret"
msgstr "ステートクッキーの暗号化シークレット"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.state-cookie-age"
msgstr "quarkus.oidc.authentication.state-cookie-age"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "5 min"
msgstr "5分"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie age"
msgstr "クッキー年齢"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC creates a state cookie whose value must match the `state` query parameter passed between Quarkus and the OIDC provider during two redirects.\n"
"In addition to the actual state value, the state cookie may need to keep the `nonce` value if an ID token is required to contain a `nonce` claim with `quarkus.oidc.authentication.nonce-required=true` and a Proof Key for Code Exchange (PKCE) `code-verifier` if PKCE is required with `quarkus.oidc.authentication.pkce-required=true`. Both of these values must be encrypted. In such cases, the state cookie is encrypted with a generated secret key but you can provide your own, typically a 32 characters long, state cookie encryption secret with `quarkus.oidc.authentication.state-secret`."
msgstr "Quarkus OIDCはステートクッキーを作成し、その値は2回のリダイレクト中にQuarkusとOIDCプロバイダの間で渡されるクエリパラメータ（ `state` ）と一致する必要があります。実際のステート値に加えて、ステートクッキーは、IDトークンが `quarkus.oidc.authentication.nonce-required=true` で `nonce` クレームを含むことが要求される場合、 `nonce` 値を保持する必要があるかもしれません。また、 `quarkus.oidc.authentication.pkce-required=true` でPKCEが要求される場合、Proof Key for Code Exchange (PKCE) `code-verifier` 。これらの値は両方とも暗号化されていなければなりません。このような場合、ステート・クッキーは生成された秘密鍵で暗号化されますが、 `quarkus.oidc.authentication.state-secret` で独自の、通常は 32 文字の長さのステート・クッキー暗号化秘密を提供することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.state-cookie-age` defines a state cookie lifespan."
msgstr "`quarkus.oidc.authentication.state-cookie-age` は状態クッキーの寿命を定義します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session cookie and refresh"
msgstr "セッションクッキーとリフレッシュ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session cookie is created after an authorizaion code flow is completed. An expired session cookie can be refreshed."
msgstr "セッションクッキーは、認証コードフローが完了した後に作成されます。期限切れのセッション・クッキーはリフレッシュすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session properties"
msgstr "セッションのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.refresh-expired"
msgstr "quarkus.oidc.token.refresh-expired"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow refreshing token"
msgstr "トークンのリフレッシュを許可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.refresh-token-time-skew"
msgstr "quarkus.oidc.token.refresh-token-time-skew（トークンのリフレッシュ時間スキュー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Refresh token time skew"
msgstr "リフレッシュトークンタイムスキュー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.session-age-extension"
msgstr "quarkus.oidc.authentication.session-age-extension"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "5 minutes"
msgstr "5分"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session age extension"
msgstr "セッション年齢延長"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.session-expired-path"
msgstr "quarkus.oidc.authentication.session-expired-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session expired path"
msgstr "セッション期限切れパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cache-control"
msgstr "quarkus.oidc.authentication.cache-control"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Set of Cache-Control header directives"
msgstr "Cache-Control ヘッダディレクティブのセット"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.refresh-expired` can be used to enable automatic user session renewal when the user session has expired and the refresh token is available. This property is not enabled by default because with the automatic renewal, the user, after authenticating once, may not be asked to re-authenticate for a very long time. Therefore an admin level decision may be required to enable an automatic session renewal."
msgstr "`quarkus.oidc.token.refresh-expired` を使用すると、ユーザ・セッションの有効期限が切れてリフレッシュ・トークンが使用可能になったときに、ユーザ・セッションの自動更新を有効にできます。このプロパティはデフォルトでは有効になっていません。自動更新を使用すると、ユーザは一度認証した後、非常に長い間再認証を要求されない可能性があるためです。そのため、セッションの自動更新を有効にするには、管理者レベルの判断が必要になる場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you prefer the users to re-authenticate after some rather long idle period of time, consider configuring `quarkus.oidc.authentication.session-expired-path` instead, see below for more details."
msgstr "長いアイドル時間が経過した後にユーザを再認証させたい場合は、代わりに `quarkus.oidc.authentication.session-expired-path` を設定することを検討してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.token.refresh-token-time-skew` can be used to force the refresh when it is allowed with `quarkus.oidc.token.refresh-expired` and the ID token in the session cookie is still valid.\n"
"You can use this property to request the refresh if a still valid ID token is due to expire within the next hour. If you would like to auto-refresh user sessions, then having this property minimizes the risk of the user missing out on the session refresh if the session cookie itself got expired and removed by the browser. When you use SPA, you can have a background thread pinging Quarkus periodically, leading to a session refresh once Quarkus determines the ID token will expire soon within a configured `quarkus.oidc.token.refresh-token-time-skew` period of time."
msgstr "`quarkus.oidc.token.refresh-token-time-skew` を使用すると、 で許可されており、セッション Cookie 内の ID トークンがまだ有効な場合に、強制的にリフレッシュできます。まだ有効な ID トークンが今後 1 時間以内に期限切れになる場合、このプロパティを使用して更新を要求できます。ユーザーセッションを自動リフレッシュしたい場合、このプロパティを持つことで、セッションクッキー自体が期限切れでブラウザによって削除された場合、ユーザーがセッションリフレッシュを逃すリスクを最小限に抑えることができます。SPAを使用する場合、バックグラウンドスレッドが定期的にQuarkusにpingを送信し、Quarkusが設定された 期間内にIDトークンの有効期限が切れると判断すると、セッションが更新されます。 `quarkus.oidc.token.refresh-expired` `quarkus.oidc.token.refresh-token-time-skew`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, let's assume the ID token age is 6 hours and therefore the session cookie age is also 6 hours. If the user accessed Quarkus 1 hour before it was about to expire, and then stayed idle for 2 hours, then, after the user accesses Quarkus again, 7 hours after the session cookie was created and 1 hour after it and the ID token got expired and removed by the browser, Quarkus OIDC can only request the user re-authentication since it can no longer see the session cookie. To minimize a number of re-authentication attempts, consider extending the session age, for example, by 3 hours. Now, given the last example, Quarkus OIDC may still get access to the expired ID token and do somethnig useful with it if required - refresh it or offer a user a session expired page, instead of immediately requesting a new authentication."
msgstr "例えば、IDトークンの年齢が6時間で、したがってセッションクッキーの年齢も6時間であるとします。セッションクッキーの有効期限が切れる1時間前にユーザーがQuarkusにアクセスし、その後2時間アイドル状態が続いたとすると、セッションクッキーが作成されてから7時間後、セッションクッキーとIDトークンの有効期限が切れてブラウザから削除されてから1時間後にユーザーが再びQuarkusにアクセスした場合、Quarkus OIDCはセッションクッキーを見ることができなくなるため、ユーザーに再認証を要求するしかありません。再認証の試行回数を最小限にするには、セッション年齢を例えば3時間延長することを検討してください。最後の例では、Quarkus OIDCは期限切れのIDトークンにアクセスすることができ、新しい認証をすぐに要求する代わりに、IDトークンをリフレッシュしたり、ユーザーにセッション期限切れのページを提供したりすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.token.refresh-token` property is automatically enabled if the `quarkus.oidc.token.refresh-token-time-skew` property is configured."
msgstr "`quarkus.oidc.token.refresh-token-time-skew` プロパティが設定されている場合、 `quarkus.oidc.token.refresh-token` プロパティは自動的に有効になります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.session-expired-path` can be used to present the user whose session has expired with the page explaining that the session has expired and letting user follow a link to re-authenticate. It improves the user experience, since otherwise, the authenticated user, whose session has expired, may get surprised after getting an unexpected OIDC provider's authentication challenge screen, when accessing the Quarkus application, following some delay after successfully authenticating earlier."
msgstr "`quarkus.oidc.authentication.session-expired-path` を使用すると、セッションの有効期限が切れたユーザーに、セッションの有効期限が切れたことを説明するページを表示し、ユーザーにリンクをたどって再認証させることができます。そうしないと、セッションが期限切れになった認証済みユーザーが、Quarkusアプリケーションにアクセスしたときに、予期しないOIDCプロバイダの認証チャレンジ画面が表示されて驚く可能性があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<token-state-manager>> section for more information about managing session cookies."
msgstr "セッションクッキーの管理については、 <<token-state-manager>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"When a new session cookie is created, either after a successful authorization code flow completion or a token refresh, it may be necessary to control how the session cookie is managed by HTTP cache intermediaries and the browser cache.\n"
"Currently, only a `Cache-Control` `no-store` directive that prohibits caching the session cookie anywhere in the client request chain can be configured."
msgstr "新しいセッションクッキーが生成されるとき、認証コードフローが正常に完了した後かトークンが更新された後かに、セッ ションクッキーが HTTP キャッシュ仲介とブラウザキャッシュによってどのように管理されるかを制御する必要があるかもしれませ ん。現在のところ、 `Cache-Control` `no-store` ディレクティブだけが、クライアント・リクエスト・チェーンのどこでもセッション・クッキーのキャッシュを禁止するように設定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Store authorization code flow tokens"
msgstr "認証コード・フロー・トークンの保存"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "After the authorization code flow is finished, ID token, access token, and refresh token must be retained to support the user session."
msgstr "認可コードフローが終了した後、IDトークン、アクセストークン、およびリフレッシュトークンは、ユーザーセッションをサポートするために保持されなければなりません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By defaut, Quarkus OIDC stores all three tokens in an encrypted session cookie, making Quarkus OIDC stateless.\n"
"Quarkus OIDC also provides the stateful xref:security-oidc-code-flow-authentication.adoc#db-token-state-manager[Database TokenStateManager] to store tokens in your database of choice and the xref:security-oidc-code-flow-authentication.adoc#redis-token-state-manager[Redis TokenStateManager] to store them in the Redis cache. Users can also register custom `quarkus.oidc.TokenStateManager` to store these tokens as required."
msgstr "デフォルトでは、Quarkus OIDCは3つのトークンをすべて暗号化されたセッションクッキーに保存し、Quarkus OIDCをステートレスにします。Quarkus OIDCには、トークンを任意のデータベースに保存するステートフルな xref:security-oidc-code-flow-authentication.adoc#db-token-state-manager[Database TokenStateManagerと] 、トークンをRedisキャッシュに保存する xref:security-oidc-code-flow-authentication.adoc#redis-token-state-manager[Redis TokenStateManagerも] あります。ユーザーは、必要に応じてこれらのトークンを保存するカスタム `quarkus.oidc.TokenStateManager` を登録することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default TokenStateManager"
msgstr "デフォルトのTokenStateManager"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-required"
msgstr "quarkus.oidc.token-state-manager.encryption-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encrypt session cookie by default"
msgstr "デフォルトでセッションクッキーを暗号化"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-secret"
msgstr "quarkus.oidc.token-state-manager.encryption-secret"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encryption secret, with falling back to the client secret and finally a generated secret key"
msgstr "暗号化秘密鍵、クライアント秘密鍵にフォールバック、最後に生成された秘密鍵"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-algorithm"
msgstr "quarkus.oidc.token-state-manager.encryption-algorithm"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A256GCMKW"
msgstr "A256GCMKW"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encryption algorithm"
msgstr "暗号化アルゴリズム"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.split-tokens"
msgstr "quarkus.oidc.token-state-manager.split-tokens"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Cookie per token"
msgstr "トークンごとのクッキー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.strategy"
msgstr "quarkus.oidc.token-state-manager.strategy"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Keep ID, access and refresh tokens"
msgstr "ID、アクセス、リフレッシュ・トークンの保管"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Keep all or some of ID, access and refresh tokens"
msgstr "ID、アクセス、リフレッシュ・トークンのすべてまたは一部を保持します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default `TokenStateManager` keeps tokens in an encrypted session cookie by default. Encrypting the tokens increases the session cookie size - you might want to consider disabling the session cookie encryption when the Quarkus application and its clients all operate within an internal, secure network."
msgstr "`TokenStateManager` デフォルトでは、トークンは暗号化されたセッションクッキーに保存されます。トークンを暗号化すると、セッションクッキーのサイズが大きくなります。Quarkusアプリケーションとそのクライアントがすべて内部の安全なネットワーク内で動作している場合、セッションクッキーの暗号化を無効にすることを検討するとよいでしょう。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A session cookie encryption secret can be configured with `quarkus.oidc.token-state-manager.encryption-secret`. Quarkus OIDC fallbacks to the configured client secret if the encryption secret is not configured, and, if the client secret is also not available (for example, when the JWT `private_key_jwt` or MTLS client authentication method is used) -  generates a secure random secret itself. Be aware that generating an encryption secret can cause re-authentication failures in a multi-pod container deployment where one pod may not be able to decrypt a session cookie encrypted by the secret known to another pod only."
msgstr "セッションクッキーの暗号化シークレットは、 `quarkus.oidc.token-state-manager.encryption-secret` で設定できます。Quarkus OIDCは、暗号化シークレットが設定されていない場合、設定されたクライアントシークレットにフォールバックし、クライアントシークレットも使用できない場合（JWT `private_key_jwt` またはMTLSクライアント認証メソッドが使用されている場合など）、安全なランダムシークレットを生成します。暗号化シークレットを生成すると、マルチポッドコンテナのデプロイメントで再認証に失敗する可能性があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWE encryption is used to encrypt the session cookie, using the `A256GCMKW` algorithm to wrap the generated content encryption key by default. You can try to use the JWE `dir` encryption with `quarkus.oidc.token-state-manager.encryption-algorithm=dir` which can produce shorter JWE sequences as the encryption and decryption is done with the same session cookie encryption key directly, avoiding the need to generate and wrap a content encryption key."
msgstr "JWE暗号化は、デフォルトで生成されたコンテンツ暗号化キーをラップするために `A256GCMKW` アルゴリズムを使用して、セッションクッキーを暗号化するために使用されます。 `dir` 暗号化と復号化が同じセッションクッキー暗号化キーで直接行われるため、コンテンツ暗号化キーを生成してラップする必要性を回避し、より短いJWEシーケンスを生成できる `quarkus.oidc.token-state-manager.encryption-algorithm=dir` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The encrypted session cookie with up to three tokens may exceed a 4096 bytes cookie size limit, causing the browser to drop it. If it happens, Quarkus OIDC attempts to split the large session cookie into individual session cookie chunks by default and re-assemble them into a single session cookie when the user returns, before decrypting it. But you can try the `quarkus.oidc.token-state-manager.split-tokens=true` option in order to have one session cookie per token - where the main session cookie keeps an ID token, and two more session cookies - access and refresh tokens."
msgstr "最大3つのトークンを持つ暗号化されたセッションクッキーは、4096バイトのクッキーサイズ制限を超える可能性があり、ブラウザがそれをドロップする原因になります。このような場合、Quarkus OIDCはデフォルトで、大きなセッションクッキーを個々のセッションクッキーのチャンクに分割し、ユーザーが戻ったときにそれらを1つのセッションクッキーに組み立て直してから復号化しようとします。 `quarkus.oidc.token-state-manager.split-tokens=true` メインセッションクッキーがIDトークンを保持し、さらに2つのセッションクッキーがアクセストークンとリフレッシュトークンを保持します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token-state-manager.strategy` can be used to optimize the token storage by not storing the tokens your application does not intend to use."
msgstr "`quarkus.oidc.token-state-manager.strategy` を使用すると、アプリケーションが使用する予定のないトークンを保存しないことで、トークンの保存を最適化できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, you can do `quarkus.oidc.token-state-manager.strategy=id-refresh-tokens` which means that your application is not intending to use an access token directly or propagate it to downstream services, all it wants is to use ID token to interact with the user and keep refreshing the session."
msgstr "例えば、 `quarkus.oidc.token-state-manager.strategy=id-refresh-tokens` 。これは、アプリケーションがアクセストークンを直接使用したり、下流のサービスに伝搬したりすることを意図していないことを意味します。アプリケーションが望んでいるのは、ユーザとの対話にIDトークンを使用し、セッションを更新し続けることだけです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If your application does not need to use access tokens but only interact with the authenticated user who must always re-authenticate when the session expires, consider `quarkus.oidc.token-state-manager.strategy=idtoken` - which retains ID token only, ignoring both access and refresh tokens."
msgstr "もしアプリケーションがアクセストークンを使用する必要がなく、認証されたユーザとのみやり取りを行い、セッションの有効期限が切れると常に再認証を行う必要がある場合は、 `quarkus.oidc.token-state-manager.strategy=idtoken` を検討してください。この場合、アクセストークンとリフレッシュトークンの両方を無視し、ID トークンのみを保持します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Logout"
msgstr "ログアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC supports three standard OIDC logout options: <<rp-initiated-logout>>, <<back-channel-logout>>, and <<front-channel-logout>>, as well as a local logout option. See the xref:security-oidc-code-flow-authentication.adoc#logout-and-expiration[OIDC logout] section for more information."
msgstr "Quarkus OIDCは、3つの標準的なOIDCログアウトオプションをサポートしています： <<rp-initiated-logout>> <<back-channel-logout>> 、 <<front-channel-logout>> 、およびローカルログアウトオプションです。詳細については、 xref:security-oidc-code-flow-authentication.adoc#logout-and-expiration[OIDCログアウトの] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "RP-initiated Logout"
msgstr "RPによるログアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`RP-initiated` logout involves the logged-in user initiating a logout request by calling an application logout endpoint. Quarkus OIDC intercepts this request, clears the session cookie and redirects the user to the OIDC provider's logout endpoint."
msgstr "`RP-initiated` ログアウトでは、ログインしているユーザーがアプリケーションのログアウトエンドポイントを呼び出してログアウト要求を開始します。Quarkus OIDCはこのリクエストをインターセプトし、セッションクッキーをクリアして、ユーザーをOIDCプロバイダーのログアウトエンドポイントにリダイレクトします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "RP-initiated logout properties"
msgstr "RP起動ログアウトプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.path"
msgstr "ログアウトパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout path"
msgstr "ログアウトパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.post-logout-path"
msgstr "quarkus.oidc.logout.post-logout-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Post logout path"
msgstr "ログアウト後のパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.post-logout-uri-param"
msgstr "quarkus.oidc.logout.post-logout-uri-param"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Post logout uri param"
msgstr "ログアウト後の uri パラメータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.extra-params"
msgstr "quarkus.oidc.logout.extra-params"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout extra params"
msgstr "ログアウトの追加パラメータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.logout-mode"
msgstr "ログアウトモード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout mode"
msgstr "ログアウトモード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.path` is a relative path where a user logout request should be sent to. For example, given `quarkus.oidc.logout.path=/logout`, a `Logout` link in the SPA page can point to `http://localhost:8080/logout`. This path can be virtual, you do not have to create a JAX-RS endpoint or route handler listening on `/logout`. But for the `quarkus.oidc.logout.path` be effective, it must be secured, see the https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[User-initiated logout] section for more details."
msgstr "`quarkus.oidc.logout.path` はユーザーログアウトリクエストの送信先となる相対パスです。たとえば、 を指定すると、SPA ページ内の リンクは次の場所を指すようになります。 `quarkus.oidc.logout.path=/logout` `Logout` `http://localhost:8080/logout` .このパスは仮想パスでも構いません。 `/logout` をリッスンする JAX-RS エンドポイントやルートハンドラを作成する必要はありません。しかし、 `quarkus.oidc.logout.path` を有効にするためには、セキュリティが確保されている必要があります。詳細については、 link:https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[ユーザーによるログアウトの] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.logout.post-logout-path` points to a public endpoint where you would like the provider redirect the looged-out user to.\n"
"For example, the logged out user can be returned to the application's welcome page with `quarkus.oidc.logout.post-logout-path=/welcome.html` where this user can choose to login again.\n"
"For the post logout redirect to work, OIDC providers usually require registering absolute post logout URLs such as `http://localhost:8080/welcome.html`. Please do not forget, it must be a public endpoint, otherwise the user will be requested to login immediately after choosing to logout."
msgstr "`quarkus.oidc.logout.post-logout-path` は、プロバイダがログアウトしたユーザーをリダイレクトするパブリックエンドポイントを指定します。例えば、ログアウトしたユーザーをアプリケーションのウェルカムページに で戻すことができます。ログアウト後のリダイレクトを機能させるために、OIDC プロバイダは通常、次のような絶対的なログアウト後の URL を登録する必要があります。 `quarkus.oidc.logout.post-logout-path=/welcome.html` `http://localhost:8080/welcome.html` .そうしないと、ログアウトを選択した直後にログインを要求されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.post-logout-uri-param` and `quarkus.oidc.logout.extra-params` can be used to customize the RP-initiated logout query parameters, for example, Auth0 might expect Auth0-specific logout query parameters, see the https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[User-initiated logout] section for more details."
msgstr "`quarkus.oidc.logout.post-logout-uri-param` `quarkus.oidc.logout.extra-params` 例えば、Auth0はAuth0固有のログアウトクエリパラメータを期待することができます。詳細は「 link:https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[ユーザーによるログアウト] 」のセクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By default, all the logout parameters are serialized as logout URL query parameters.\n"
"Some OIDC providers may require that logout parameters are encoded as HTML form values and auto-submitted in the browser with the HTTP POST method and the `application/x-www-form-urlencoded` content type: set `quarkus.oidc.logout.logout-mode=form-post` in this case."
msgstr "デフォルトでは、すべてのログアウトパラメータはログアウト URL クエリパラメータとしてシリアライズされます。OIDCプロバイダによっては、ログアウトパラメータをHTMLフォーム値としてエンコードし、HTTP POSTメソッドと `application/x-www-form-urlencoded` コンテンツタイプを使用してブラウザで自動送信することを要求する場合があります：この場合、 `quarkus.oidc.logout.logout-mode=form-post` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel Logout"
msgstr "バックチャンネルログアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Back-channel logout should be used for complex Quarkus applications involving several services, possibly on different hosts or ports, when supporting a global logout is required. The user, by choosing to logout from one of the services, also gets logged out from all other services.\n"
"The OIDC provider detects the logout request (for example, an RP-initiated one) from one of the services and sends back-channel notifications to all other Quarkus OIDC applications. See the xref:security-oidc-code-flow-authentication.adoc#back-channel-logout[OIDC Back-channel logout] section for more details."
msgstr "バックチャネルログアウトは、複数のサービスを含む複雑なQuarkusアプリケーションで、異なるホストやポート上にある可能性があり、グローバルなログアウトをサポートする必要がある場合に使用します。ユーザーは、あるサービスからのログアウトを選択すると、他のすべてのサービスからもログアウトされます。OIDCプロバイダは、サービスの1つからのログアウト要求（例えば、RPが開始したもの）を検出し、他のすべてのQuarkus OIDCアプリケーションにバックチャネル通知を送信します。詳細については、「 xref:security-oidc-code-flow-authentication.adoc#back-channel-logout[OIDCバックチャネルログアウト] 」のセクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "PLease be aware that supporting the back-channel logout option requires managing a cache of pending back-channel notifications. It may take awhile to clear them as it requires a user whose back-channel logout is pending to access Quarkus. The more users your application deals with, the larger the cache size can be."
msgstr "バックチャネルログアウトオプションをサポートするには、保留中のバックチャネル通知のキャッシュを管理する必要があります。バックチャネルログアウトが保留中のユーザーがQuarkusにアクセスする必要があるため、キャッシュをクリアするのに時間がかかる場合があります。アプリケーションで扱うユーザーが多ければ多いほど、キャッシュのサイズは大きくなります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout properties"
msgstr "バックチャネル・ログアウト・プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.path"
msgstr "quarkus.oidc.logout.backchannel.path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout path"
msgstr "バックチャネルのログアウトパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.logout-token-key"
msgstr "Quarkus.oidc.logout.backchannel.logout-token-key。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`sub` claim"
msgstr "`sub` 請求"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token key"
msgstr "バックチャネル・ログアウト・トークン・キー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.token-cache-size"
msgstr "quarkus.oidc.logout.backchannel.token-cache-size"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "10"
msgstr "10"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache size"
msgstr "バックチャネルのログアウトトークンのキャッシュサイズ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.token-cache-time-to-live"
msgstr "quarkus.oidc.logout.backchannel.token-cache-time-to-live（トークンキャッシュの有効期限"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "10 minutes"
msgstr "10分"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache time to live"
msgstr "バックチャネル・ログアウト・トークン・キャッシュの有効時間"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.clean-up-timer-interval"
msgstr "quarkus.oidc.logout.backchannel.clean-up-timer-interval（クリーンアップタイマー間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache clean up interval"
msgstr "バックチャネル・ログアウト・トークン・キャッシュのクリーンアップ間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.backchannel.path` is a relative path the OIDC provider must send the back-channel logout notifications to."
msgstr "`quarkus.oidc.logout.backchannel.path` は、OIDC プロバイダがバックチャネルのログアウト通知を送信する必要がある相対パスです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The back-channel notification contains a logout token. It must be cached so that when one of the authenticated users tries to access Quarkus, this user's ID token can be matched against this logout token. The subject (`sub`) claim value is used by default to match the ID and logout tokens, but the session id (`sid`) claim can be used instead."
msgstr "バックチャネル通知にはログアウトトークンが含まれています。認証されたユーザーがQuarkusにアクセスしようとしたときに、このユーザーのIDトークンとログアウトトークンを照合できるように、ログアウトトークンをキャッシュしておく必要があります。IDトークンとログアウトトークンの照合には、デフォルトで件名（ `sub` ）のクレーム値が使用されますが、代わりにセッションID（ `sid` ）のクレームを使用することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.backchannel.token-cache-size`, `quarkus.oidc.logout.backchannel.token-cache-time-to-live` and `quarkus.oidc.logout.backchannel.clean-up-timer-interval` are properties for managing the back-channel notification cache."
msgstr "`quarkus.oidc.logout.backchannel.token-cache-size` `quarkus.oidc.logout.backchannel.token-cache-time-to-live` と は、バックチャネル通知キャッシュを管理するためのプロパティです。 `quarkus.oidc.logout.backchannel.clean-up-timer-interval` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Front-channel logout"
msgstr "フロントチャネルログアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout is conceptually similar to the <<back-channel-logout>> but the notifications are forwarded to Quarkus via the browser. See the xref:security-oidc-code-flow-authentication.adoc#front-channel-logout[OIDC Front-channel logout] section for more details."
msgstr "フロントチャネルログアウトは、概念的には <<back-channel-logout>> と似ていますが、通知はブラウザ経由でQuarkusに転送されます。詳細は xref:security-oidc-code-flow-authentication.adoc#front-channel-logout[OIDCフロントチャンネルログアウトの] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout properties"
msgstr "フロントチャンネルのログアウトプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.frontchannel.path"
msgstr "quarkus.oidc.logout.frontchannel.path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout path"
msgstr "フロントチャンネルのログアウトパス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.frontchannel.path` is a secure path where the browser will send the front-channel logout request to."
msgstr "`quarkus.oidc.logout.frontchannel.path` はブラウザがフロントチャネルのログアウトリクエストを送る安全なパスです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Clear site data"
msgstr "クリアなサイトデータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "After the logout, you can request Quarkus OIDC to send a https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Clear-Site-Data[Clear-Site-Data] response header with one or more directives instructing the browser how to clear the browser cache."
msgstr "ログアウト後、Quarkus OIDCに対して、ブラウザのキャッシュをクリアする方法を指示する1つ以上のディレクティブを含む link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Clear-Site-Data[Clear-Site-Data] レスポンスヘッダを送信するよう要求できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Clear-Site-Data header directives"
msgstr "Clear-Site-Data ヘッダディレクティブ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.clear-site-data"
msgstr "Quarkus.oidc.logout.clear-サイト-データ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A list of Clear-Site-Data header directives"
msgstr "Clear-Site-Data ヘッダディレクティブの一覧"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `cache`, `client-hints`, `cookies`, `execution-contexts` and wildcard `*` directives can be configured."
msgstr "`cache` , `client-hints` , `cookies` , `execution-contexts` およびワイルドカード `*` ディレクティブを設定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification"
msgstr "トークンの検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token properties cover a lot of requirements related to the token verification, introspection, key verification management, etc."
msgstr "トークンのプロパティは、トークンの検証、イントロスペクション、キー検証管理などに関連する多くの要件をカバーしています。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token preprocessing"
msgstr "トークンの前処理"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "ID and access tokens may have to be decrypted or their headers preprocessed for the verification process to start and succeed."
msgstr "IDおよびアクセストークンは、検証プロセスを開始し成功させるために、復号化またはヘッダーの前処理が必要な場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token preprocessing properties"
msgstr "トークンの前処理プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decryption-key-location"
msgstr "Quarkus.oidc.token.decryption-key-location（解読キーの場所"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decryption key location"
msgstr "復号キーの場所"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decrypt-id-token"
msgstr "Quarkus.oidc.token.decrypt-id-token。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decrypt ID token if this property is `true` or if `quarkus.oidc.token.decryption-key-location` is set"
msgstr "このプロパティが `true` の場合、または `quarkus.oidc.token.decryption-key-location` が設定されている場合、ID トークンを復号化します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decrypt-access-token"
msgstr "quarkus.oidc.token.decrypt-access-token"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decrypt access token"
msgstr "アクセストークンの復号化"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.customizer-name"
msgstr "quarkus.oidc.token.customizer-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Customizer name"
msgstr "カスタマイザー名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC providers usually issue signed ID and access tokens but may also additionally encrypt these tokens which Quarkus needs to decrypt to verify them. Choose which token types must be decrypted: the ID token with `quarkus.oidc.token.decrypt-id-token`, or the access token with `quarkus.oidc.token.decrypt-access-token`."
msgstr "OIDCプロバイダは通常、署名されたIDトークンとアクセストークンを発行しますが、これらのトークンを暗号化する場合もあります。どのトークンタイプを復号化する必要があるかを選択します：IDトークンは `quarkus.oidc.token.decrypt-id-token` 、アクセストークンは `quarkus.oidc.token.decrypt-access-token` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both ID and access tokens are considered encrypted if they contain 5 parts separated by the dot character, indicating that the JWE encryption was used."
msgstr "IDトークンもアクセストークンも、ドット文字で区切られた5つの部分があれば暗号化されているとみなされ、JWE暗号化が使用されたことを示します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For backward compatibility reasons, ID token decryption is attempted if  `quarkus.oidc.token.decryption-key-location` is configured, but using an optional `quarkus.oidc.token.decrypt-id-token` boolean property is RECOMMENDED instead, to allow for more flexibility in selecting decryption keys."
msgstr "後方互換性の理由から、 `quarkus.oidc.token.decryption-key-location` が設定されている場合、IDトークンの復号化が試みられますが、より柔軟に復号化キーを選択できるように、オプションの `quarkus.oidc.token.decrypt-id-token` booleanプロパティを使用することが推奨されます（RECOMMENDED）。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When either ID or access token must be decrypted, `quarkus.oidc.token.decryption-key-location` is checked first. If this property is not configured, then the <<jwt-client-credentials>> key, if available, is used. Finally, if the decryption key is still not initialized, the configured client secret is used as a decryption key."
msgstr "ID またはアクセストークンのいずれかを復号化する必要がある場合、 `quarkus.oidc.token.decryption-key-location` が最初にチェックされます。このプロパティが設定されていない場合、 <<jwt-client-credentials>> 鍵が使用可能であれば、その鍵が使用されます。最後に、復号化キーがまだ初期化されていない場合は、設定されているクライアント・シークレットが復号化キーとして使用されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.customizer-name` is an advanced property that may be used to select a specific `io.quarkus.oidc.TokenCustomizer` implementation which can pre-process JWT token headers before its signature can be verified. The main use-case is to support verifying legacy Azure JWT tokens which must have their `nonce` header recalculated for the signature verification to succeed."
msgstr "`quarkus.oidc.token.customizer-name` は、署名を検証する前に JWT トークン・ヘッダを前処理できる特定の 実装を選択するために使用できる高度なプロパティです。主なユースケースは、署名検証を成功させるために ヘッダーを再計算する必要があるレガシー Azure JWT トークンの検証をサポートすることです。 `io.quarkus.oidc.TokenCustomizer` `nonce` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token claims"
msgstr "トークンの請求"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification claim properties impact the core token verification process, where the token claims or introspection properties must meet specific issuer, audience, age and other restrictions."
msgstr "トークン検証のクレーム・プロパティは、中核となるトークン検証プロセスに影響します。トークン検証のクレームまたはイントロスペクション・プロパティは、特定の発行者、利用者、年齢などの制限を満たす必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token claims properties"
msgstr "トークンの請求プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.issuer"
msgstr "quarkus.oidc.token.issuer"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Discovered value"
msgstr "発見された価値"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token issuer"
msgstr "トークン発行者"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.audience"
msgstr "quarkus.oidc.token.audience"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "List of audiences"
msgstr "観客リスト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.subject-required"
msgstr "quarkus.oidc.token.subject-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if the subject ('sub') claim is required"
msgstr "サブジェクト（'サブ'）クレームが必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.issued-at-required"
msgstr "quarkus.oidc.token.issued-at-required"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if the issued at ('iat') claim is required"
msgstr "発行時（IAT）クレームが必要な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.age"
msgstr "quarkus.oidc.token.age"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token age"
msgstr "トークン年齢"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.lifespan-grace"
msgstr "quarkus.oidc.token.lifespan-grace"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Lifespan grace"
msgstr "寿命の恵み"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.token-type"
msgstr "quarkus.oidc.token.token-type"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token type"
msgstr "トークン・タイプ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.principal-claim"
msgstr "quarkus.oidc.token.principal-claim"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Principal claim"
msgstr "主な請求"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.required-claims"
msgstr "quarkus.oidc.token.required-claims"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Map of required string claims"
msgstr "必要な文字列クレームのマップ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.signature-algorithm"
msgstr "Quarkus.oidc.token.signature-algorithm"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Required signature algorithm"
msgstr "必要な署名アルゴリズム"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enforcing that a token has been issued by the specific issuer is RECOMMENDED. The token issuer is discovered when the provider supports the discovery, otherwise `quarkus.oidc.token.issuer` can be set to a specific value."
msgstr "トークンが特定の発行者によって発行されたことを強制することが推奨されます（RECOMMENDED）。トークン発行者は、プロバイダがディスカバリをサポートしている場合に発見されます。そうでない場合は、 `quarkus.oidc.token.issuer` を特定の値に設定することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enforcing that a token is intended for a specific audience is RECOMMENDED. ID tokens are required to have an audience value matching the `quarkus.oidc.client-id` property by default. For bearer access tokens, the audiences are not standardized, for example, they can be URLs representing a target endpoint. When possible, bearer access tokens should also be restricted to have specific audience values."
msgstr "トークンが特定のオーディエンス向けであることを強制することが推奨されます（RECOMMENDED）。ID トークンは、デフォルトで `quarkus.oidc.client-id` プロパティに一致するオーディエンス値を持つ必要があります。ベアラアクセストークンの場合、対象者は標準化されていません。例えば、対象エンドポイントを表す URL であってもかまいません。可能であれば、ベアラアクセストークンも特定のオーディエンス値を持つように制限されるべきです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.subject-required` can be used to enforce that a token has a unique subject value. If your provider allocates a subject to the token then requiring it is RECOMMENDED, especially when you deal with multiple OIDC and OAuth2 providers and would like to get a unique user identifier. This property is not set by defaul since some providers may not always set it. For example, a Keycloak lightweight access token may not have a subject (`sub`) claim set."
msgstr "`quarkus.oidc.token.subject-required` を使用すると、トークンに一意な Subject の値を持たせることができます。特に、複数の OIDC や OAuth2 プロバイダを扱っていて、一意なユーザ識別子を取得したい場合に推奨します (RECOMMENDED)。このプロパティはデフォルトでは設定されていません。たとえば、Keycloak の軽量アクセストークンには subject ( ) が設定されていないかもしれません。 `sub`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.issued-at-required` can be set to `false` when you have to deal with the providers which do not set a token `issued at time` (`iat`) claim."
msgstr "`quarkus.oidc.token.issued-at-required` は、 ( ) というトークンを設定しないプロバイダに対応する必要がある場合、 に設定することができます。 `issued at time` `iat` `false` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.age` property can be used to enforce how long an otherwise valid token can be used for. For example, some providers may issue tokens that are valid for several months - what if you do not want your users be able to access Quarkus with access tokens valid for a very long time ? In this case you can set a token age to some reasonable value such as 1 day, etc."
msgstr "`quarkus.oidc.token.age` プロパティを使用することで、有効なトークンの使用期間を強制することができます。例えば、プロバイダによっては数ヶ月間有効なトークンを発行している場合があります。この場合、トークンの有効期限を1日など、妥当な値に設定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.lifespan-grace` property should only be used to avoid token verification failures due to the possible clock skews."
msgstr "`quarkus.oidc.token.lifespan-grace` プロパティは、クロック・スキューの可能性によるトークン検証の失敗を避けるためにのみ使用されるべきです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.token-type` can be used to enforce the token type when you know the provider sets a type (`typ`) claim. For example, Keycloak issues the ID token, access token and refresh token in JWT format, how how can you prevent SPA sending an ID token to Quarkus as if it were a bearer access token ? Setting `quarkus.oidc.token.token-type=bearer` enforces that only a JWT access token that contains a type (`typ`) claim with the `bearer` value can be accepted."
msgstr "`quarkus.oidc.token.token-type` は、プロバイダがトークンのタイプ（ ）を指定していることが分かっている場合に、トークンのタイプを強制するために使用できます。例えば、KeycloakはJWT形式でIDトークン、アクセストークン、リフレッシュトークンを発行します。 を設定すると、 の値を持つタイプ（ ）のクレームを含む JWT アクセストークンのみを受け入れることができます。 `typ` `quarkus.oidc.token.token-type=bearer` `bearer` `typ`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.principal-claim` can be used to customize which token claim should be used to support Java Security `Principal` and MicroProfile JWT  `JsonWebToken` APIs for getting the principal name. The `upn`, `preferred_username`, `sub` are some of the claims that are used to find the principal name by default, but some tokens may have it in the `name` or some other claim, which is when you can set `quarkus.oidc.token.principal-claim=name`, etc."
msgstr "`quarkus.oidc.token.principal-claim` は、Java Security と MicroProfile JWT API をサポートしてプリンシパル名を取得するために、どのトークンクレームを使用するかをカスタマイズするために使用できます。 、 、 は、デフォルトでプリンシパル名を見つけるために使用されるクレームの一部です。しかし、トークンによっては、 やその他のクレームにそれを持つ場合があります。その場合は、 などを設定します。 `Principal` `JsonWebToken` `upn` `preferred_username` `sub` `name` `quarkus.oidc.token.principal-claim=name`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.required-claims` map property can be used to provide an additional simple check that the token contains specific string claim values."
msgstr "`quarkus.oidc.token.required-claims` map プロパティを使用すると、トークンに特定の文字列クレーム値が含まれているかどうかを簡単にチェックすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-jose4j-validator>> section for details about customizing the JWT token verification."
msgstr "JWT トークン検証のカスタマイズの詳細については、 <<custom-jose4j-validator>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, Quarkus uses available verification keys to verify JWT token signatures with whatever assymetric algorithm is supported by the OIDC provider and the available key set. For example, a token signed with either `RS256` or `PS256` algorithm can be accepted if the JWK set constains a public key that can verify the RSA signature created with either of these two algorithms. However, you may have a policy that requires that only a specific algorithm such as `RS512` must be used - use `quarkus.oidc.token.signature-algorithm=RS512` to enforce it."
msgstr "デフォルトでは、Quarkusは利用可能な検証キーを使用して、OIDCプロバイダと利用可能なキーセットでサポートされているアサイメトリックアルゴリズムを使用して、JWTトークン署名を検証します。たとえば、 `RS256` または `PS256` アルゴリズムで署名されたトークンは、JWKセットにこれら2つのアルゴリズムのいずれかで作成されたRSA署名を検証できる公開鍵が含まれていれば、受け入れることができます。しかし、 `RS512` のような特定のアルゴリズムのみを使用しなければならないポリシーがある場合は、 `quarkus.oidc.token.signature-algorithm=RS512` を使用してそれを強制します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token"
msgstr "コードフローアクセストークン"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token verification"
msgstr "コードフローによるアクセストークンの検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.verify-access-token"
msgstr "quarkus.oidc.authentication.verify-access-token"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify code flow access token"
msgstr "コードフロー・アクセストークンの検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC has a concept of a `primary` token. The bearer access token is a primary token because it is the only token which is used in the bearer access token flow and it is used by the external client to access Quarkus. Bearer access token `is always verified`.\n"
"ID token is a `primary` token in the authorizaion code flow - it represents the current authenticated user. ID token is `always verified`."
msgstr "Quarkus OIDCには、 `primary` トークンという概念があります。ベアラアクセストークンは、ベアラアクセストークンフローで使用される唯一のトークンであり、外部クライアントがQuarkusにアクセスするために使用されるため、プライマリトークンです。ベアラアクセストークン `is always verified` 。ID トークンは、認証コードフローにおける `primary` トークンです。IDトークンは、 `always verified` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token is not a primary token because it is not meant to be used to access the current Quarkus application which has completed the authorization code flow. Be it OIDC or OAuth2, the code flow access token is meant to be used to access another service on behalf of the currently authenticated user. For example, sending an `openid` scope during the authentication redirect to the provider leads to it issuing an access token that Quarkus application can use to fetch UserInfo from this provider on behalf of the user."
msgstr "コードフローアクセストークンは、認証コードフローを完了した現在のQuarkusアプリケーションにアクセスするために使用されるものではないため、プライマリトークンではありません。OIDCであれOAuth2であれ、コードフローアクセストークンは、現在認証されているユーザーに代わって別のサービスにアクセスするために使用されます。たとえば、認証のリダイレクト中に `openid` スコープをプロバイダに送信すると、プロバイダはアクセストークンを発行し、Quarkusアプリケーションはそのアクセストークンを使用して、ユーザーに代わってプロバイダからUserInfoを取得することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "It is the job of the OIDC provider or one of the downstream Quarkus services that this Quarkus application needs to access with the code flow access token to verify it. This is one of the reasons the code flow access tokens are often provided as binary tokens."
msgstr "このQuarkusアプリケーションがコードフローアクセストークンを使ってアクセスする必要があるのは、OIDCプロバイダまたはQuarkusの下流サービスの1つで、それを検証するのが仕事です。これが、コードフローアクセストークンがしばしばバイナリートークンとして提供される理由の1つです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "However, if you have designed your application with an expectation that the code flow access token, typically in JWT format, can be used as a source of roles or other information relevant to your application then do `quarkus.oidc.authentication.verify-access-token=true`. Quarkus enables this property automatically if it can detect that `JsonWebToken` without an `@IdToken` qualifier is injected in the application code, indicating that the application intends to access a code flow access token."
msgstr "ただし、コードフローアクセストークン（通常はJWT形式）を、アプリケーションに関連するロールやその他の情報のソースとして使用することを想定してアプリケーションを設計している場合は、 `quarkus.oidc.authentication.verify-access-token=true` 。Quarkusは、アプリケーションコードに `JsonWebToken` （ `@IdToken` 修飾子なし）が挿入され、アプリケーションがコードフローアクセストークンにアクセスする意図があることを検出すると、自動的にこのプロパティを有効にします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify access token with UserInfo"
msgstr "UserInfoでアクセストークンを検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.verify-access-token-with-user-info"
msgstr "Quarkus.oidc.token.verify-access-token-with-user-infoを検証します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify access token indirectly by requesting UserInfo"
msgstr "UserInfoをリクエストすることで、間接的にアクセストークンを検証します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the incoming bearer access token is in binary format or when you login users with OAuth2 providers which give Quarkus only a binary access token, with no remote introspection endpoint available in both cases, how to verify this binary token ?"
msgstr "受信するベアラアクセストークンがバイナリ形式である場合、またはQuarkusにバイナリアクセストークンのみを提供するOAuth2プロバイダーでユーザーにログインする場合、どちらの場合もリモートイントロスペクションエンドポイントが利用できません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The only option is an indirect access token verification by attempting to use this binary token to access an OIDC standard or OAuth2 provider specific UserInfo endpoint, when a valid access token must be forwarded to the UserInfo endpoint. Set `quarkus.oidc.token.verify-access-token-with-user-info=true` if it is what is necessary in your case."
msgstr "唯一のオプションは、有効なアクセストークンをUserInfoエンドポイントに転送する必要がある場合に、このバイナリートークンを使用してOIDC標準またはOAuth2プロバイダ固有のUserInfoエンドポイントにアクセスしようとすることによる間接的なアクセストークン検証です。必要であれば `quarkus.oidc.token.verify-access-token-with-user-info=true` を設定してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more information."
msgstr "詳細は xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 プロバイダの] セクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verification key refresh"
msgstr "検証キーの更新"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification key refresh properties"
msgstr "トークン検証キーのリフレッシュ・プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.forced-jwk-refresh-interval"
msgstr "quarkus.oidc.token.forced-jwk-refresh-interval"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK refresh interval"
msgstr "JWKリフレッシュ間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"When the JWT token's signature must be verified, this token's key identifier (`kid`) header value is used to find a matching JWK key from the local verification public key set. However, since providers tend to periodically recycle signing key pairs and start signing newly issued tokens with new private keys, at some point the local key set may not have the matching public key to verify the current JWT.\n"
"In this case, Quarkus attempts to refresh the verification key set, but blocks additional JWK key set refresh attempts for the `quarkus.oidc.token.forced-jwk-refresh-interval` period of time, to minimize the risk of many random tokens causing too many remote JWK set refresh attempts."
msgstr "JWTトークンの署名が検証されなければならないとき、このトークンの鍵識別子( `kid` )ヘッダー値は、ローカル検証公開鍵セットから一致するJWK鍵を見つけるために使用されます。しかし、プロバイダは定期的に署名鍵ペアを再利用し、新しく発行されたトークンに新しい秘密鍵で署名を開始する傾向があるため、ある時点で、ローカルの鍵セットに、現在のJWTを検証するための一致する公開鍵がない場合があります。この場合、Quarkusは検証キーセットのリフレッシュを試みますが、 `quarkus.oidc.token.forced-jwk-refresh-interval` の期間、追加のJWKキーセットのリフレッシュ試行をブロックします。これは、多くのランダムなトークンによって、リモートのJWKセットのリフレッシュ試行が多発するリスクを最小限に抑えるためです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection"
msgstr "トークン内観"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection properties"
msgstr "トークンのイントロスペクション・プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.allow-jwt-introspection"
msgstr "quarkus.oidc.token.allow-jwt-introspection"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow JWT introspection"
msgstr "JWTのイントロスペクションを許可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.require-jwt-introspection-only"
msgstr "quarkus.oidc.token.require-jwt-introspection-only"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Require JWT introspection only"
msgstr "JWTイントロスペクションのみを要求"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.allow-opaque-token-introspection"
msgstr "quarkus.oidc.token.allow-opaque-token-introspection"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Some OIDC providers support remote token introspecion endpoints and Quarkus fallbacks to introspecting JWT tokens if it can not find a matching JWK verification key even after refreshing the key set. However, just because the provider supports the introspection endpoint, your deployment policy may forbid the remote JWT token introspection: because the token may have sensitive claims, or for performance reasons, especially if you know that, for example, ID tokens can not be introspected remotely, but only verified locally with the JWK keys. Set `quarkus.oidc.token.allow-jwt-introspection=false` if you do not want JWT tokens sent for the remote introspection."
msgstr "一部のOIDCプロバイダはリモートトークン・イントロスペクション・エンドポイントをサポートしており、Quarkusはキーセットを更新しても一致するJWK検証キーが見つからない場合、JWTトークンのイントロスペクションにフォールバックします。ただし、プロバイダがイントロスペクションエンドポイントをサポートしているからといって、デプロイメントポリシーがリモートJWTトークンのイントロスペクションを禁止している場合があります。トークンに機密性の高いクレームが含まれている可能性があるため、またはパフォーマンス上の理由（特に、たとえばIDトークンはリモートではイントロスペクションできず、JWKキーでローカルでのみ検証されることがわかっている場合）です。リモートイントロスペクションのためにJWTトークンを送信したくない場合は、 `quarkus.oidc.token.allow-jwt-introspection=false` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "On the other hand, `quarkus.oidc.token.require-jwt-introspection-only` enforces that a decision as to whether the current JWT token is valid or not can only be taken by the OIDC provider itself, for example, in order to immediately recognize that the current token has already been revoked, etc. In this case you would also likely disable the discovery with `quarkus.oidc.discovery-enabled=false` to prevent Quarkus discovering the JWKs endpoint and fetching the verification keys which are not going to be used anyway."
msgstr "一方、 `quarkus.oidc.token.require-jwt-introspection-only` 、現在のJWTトークンが有効かどうかの判断は、OIDCプロバイダ自身によってのみ行われます。例えば、現在のトークンがすでに失効していることを即座に認識するためなどです。この場合、QuarkusがJWKsエンドポイントを検出し、いずれにせよ使用される予定のない検証キーを取得するのを防ぐために、 `quarkus.oidc.discovery-enabled=false` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.allow-opaque-token-introspection` is a hardening type of property. Quarkus OIDC attempts to verify any access token which comes its way by default. But if you deal with JWT tokens, especially if you prefer to verify them only locally with `quarkus.oidc.token.allow-jwt-introspection=false`, then what if someone sends a binary (opaque) access token which your application does not really expect ? Setting `quarkus.oidc.token.allow-opaque-token-introspection=false` prevents possibly disruptive remote introspection calls and causes an immediate verification error when an opaque token is received."
msgstr "`quarkus.oidc.token.allow-opaque-token-introspection` はハードニングタイプのプロパティです。Quarkus OIDCはデフォルトで、送られてきたアクセストークンの検証を試みます。しかし、JWTトークンを扱う場合、特に 、ローカルでのみ検証することを好む場合、アプリケーションが本当に期待していないバイナリ（不透明な）アクセストークンを誰かが送信してきたらどうしますか？ を設定することで、おそらく破壊的なリモート introspection 呼び出しを防ぎ、不透明なトークンを受信したときに即座に検証エラーを発生させます。 `quarkus.oidc.token.allow-jwt-introspection=false` `quarkus.oidc.token.allow-opaque-token-introspection=false` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token roles"
msgstr "トークンの役割"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.role-claim-path"
msgstr "quarkus.oidc.roles.role-claim-path"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Role claim path"
msgstr "役割請求パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.role-claim-separator"
msgstr "quarkus.oidc.roles.role-claim-separator"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Role claim separator"
msgstr "役割主張のセパレーター"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.source"
msgstr "quarkus.oidc.roles.source"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Primary token"
msgstr "プライマリトークン"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Source of roles"
msgstr "役割の源泉"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By default, a token `groups` array claim is expected to contain roles. The `realm_access/roles` and `realm_access/<client-id>/roles` claims are also checked in case the token was issued by Keycloak. But if the token has another custom claim containing roles, you can point to it with `quarkus.oidc.roles.role-claim-path`. It can be used to select a top-level array claim or a nested claim using a `/` path separator.\n"
"Make sure to use double quotes for namespace qualified claim names, for example, `quarkus.oidc.roles.role-claim-path=\"http://auth0.customroles/roles\"`."
msgstr "デフォルトでは、トークン `groups` の配列クレームにはロールが含まれていることが期待されます。トークンがKeycloakによって発行されたものである場合は、 `realm_access/roles` と `realm_access/<client-id>/roles` のクレームもチェックされます。しかし、トークンにロールを含む別のカスタムクレームがある場合は、 `quarkus.oidc.roles.role-claim-path` 。 これは、トップレベルの配列クレームや、 `/` パスセパレータを使用してネストされたクレームを選択するために使用できます。名前空間修飾されたクレーム名には必ず二重引用符を使用してください。例えば、 `quarkus.oidc.roles.role-claim-path=\"http://auth0.customroles/roles\"` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you would like to treat a `scope` claim as a source of roles, then each space separated value in the `scope` claim is a role name. But string claims containing multiple role values can also be separated by the comma `,` or other characters. Use `quarkus.oidc.roles.role-claim-separator=,`, etc, in such cases."
msgstr "`scope` 、ロールのソースとして扱いたい場合は、 `scope` 、スペースで区切られたそれぞれの値がロール名となります。しかし、複数のロール値を含む文字列クレームは、カンマ `,` または他の文字で区切ることもできます。そのような場合は `quarkus.oidc.roles.role-claim-separator=,` 、などを使用してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Primary token is a source of roles by default: ID token is checked for roles in the authorization code flow and the access token is checked for roles in the bearer token flow.\n"
"If the application uses the authorization code flow, and you need to check the access token, as opposed to the primary ID token, then you can do `quarkus.oidc.roles.source=access_token` - you do not need to set this property if you deal with bearer access tokens."
msgstr "プライマリ・トークンはデフォルトでロールのソースとなります。ID トークンは認可コード・フローでロールをチェックし、アクセストークンはベアラ・トークン・フローでロールをチェックします。アプリケーションが認可コードフローを使用し、プライマリ ID トークンではなくアクセストークンをチェックする必要がある場合は、 `quarkus.oidc.roles.source=access_token` 。ベアラアクセストークンを扱う場合は、このプロパティを設定する必要はありません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Sometimes the roles are contained in the UserInfo response - do `quarkus.oidc.roles.source=userinfo` in this case."
msgstr "ロールがUserInfoレスポンスに含まれていることがあります。この場合は `quarkus.oidc.roles.source=userinfo` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token binding"
msgstr "トークン結合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token bindings are tools for sender-constraining access tokens."
msgstr "トークン・バインディングは、アクセストークンの送信者を制限するためのツールです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "MTLS token binding"
msgstr "MTLSトークンバインド"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.binding.certificate"
msgstr "バインディング証明書"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.binding.certificate=true` can be used to constrain the bearer access token to the MTLS client which is sending it as described in the https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS token binding] specification."
msgstr "`quarkus.oidc.token.binding.certificate=true` は、 link:https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS token binding] specification で説明されているように、ベアラ・アクセストークンを送信する MTLS クライアントに制約を与えるために使用できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Please see the xref:security-oidc-bearer-token-authentication.adoc#mutual-tls-token-binding[Mutual TLS token binding] section for more information."
msgstr "詳細については、 xref:security-oidc-bearer-token-authentication.adoc#mutual-tls-token-binding[相互TLSトークンバインディングの] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<bearer-token-source-properties>> section for details about enabling a Demonstrating Proof of Posession (DPoP) binding."
msgstr "Demonstrating Proof of Posession（DPoP）バインディングの有効化については、 <<bearer-token-source-properties>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer token header"
msgstr "ベアラートークンヘッダ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"HTTP `Authorization` header with the `Bearer` scheme is typically used to send the bearer access token.\n"
"For example: `Authorization: Bearer <token>`."
msgstr "ベアラ・アクセストークンの送信には、通常、 `Bearer` スキームの HTTP `Authorization` ヘッダが使用されます。例： `Authorization: Bearer <token>` ."

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In some cases, both the header and the scheme may have to customized."
msgstr "場合によっては、ヘッダーとスキームの両方をカスタマイズしなければならないかもしれません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer token header properties"
msgstr "ベアラートークンヘッダのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.header"
msgstr "quarkus.oidc.token.header"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Authorization"
msgstr "認可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token header"
msgstr "トークン・ヘッダ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.authorization-scheme"
msgstr "quarkus.oidc.token.authorization-scheme"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer"
msgstr "ベアラー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token authorization scheme"
msgstr "トークン認証スキーム"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.header` and `quarkus.oidc.token.authorization-scheme` can be used to customize which HTTP header contains a bearer access token. You can customize the header and, when the HTTP `Authorization` is used - the scheme."
msgstr "`quarkus.oidc.token.header` および を使用して、ベアラ・アクセストークンを含む HTTP ヘッダをカスタマイズできます。ヘッダと、HTTP 、スキームをカスタマイズできます。 `quarkus.oidc.token.authorization-scheme` `Authorization` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"For example, you can set `quarkus.oidc.token.authorization-scheme=DPoP` to accept the DPoP access tokens sent as `Authorization: DPoP <token>`.\n"
"See the xref:security-oidc-bearer-token-authentication#demonstrating-proof-of-possession-dpop[Demonstrating Proof of Posession] section for more information."
msgstr "例えば、 `Authorization: DPoP <token>` として送信された DPoP アクセストークンを受け入れるように `quarkus.oidc.token.authorization-scheme=DPoP` を設定することができます。詳細については、「 xref:security-oidc-bearer-token-authentication.adoc#demonstrating-proof-of-possession-dpop[占有証明のデモ] 」のセクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<token-binding>> section."
msgstr "<<token-binding>> のセクションもご参照ください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Token introspection and UserInfo cache"
msgstr "トークンのイントロスペクションと UserInfo のキャッシュ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Caching verification and Userinfo results"
msgstr "検証結果とUserinfo結果のキャッシュ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.default-token-cache-enabled"
msgstr "Quarkus.oidc.default-token-cache-enabled（デフォルトトークンキャッシュ有効"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable default token introspection and userinfo cache"
msgstr "デフォルト・トークン・イントロスペクションとユーザー情報キャッシュの有効化"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.max-size"
msgstr "quarkus.oidc.token-cache.max-size"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "0"
msgstr "0"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache size"
msgstr "トークン・キャッシュのデフォルト・サイズ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.time-to-live"
msgstr "quarkus.oidc.token-cache.time-to-live"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "3 minutes"
msgstr "3分"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache time-to-live"
msgstr "デフォルトのトークンキャッシュの有効期限"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.clean-up-timer-interval"
msgstr "Quarkus.oidc.token-cache.clean-up-timer-interval（クリーンアップタイマー間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache clean up time interval"
msgstr "トークン・キャッシュのクリーンアップのデフォルトの時間間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.allow-token-introspection-cache"
msgstr "quarkus.oidc.allow-token-introspection-cache"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow token introspection cache"
msgstr "トークンのイントロスペクション・キャッシュを許可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.allow-user-info-cache"
msgstr "quarkus.oidc.allow-user-info-cache"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow UserInfo cache"
msgstr "UserInfo キャッシュの許可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.cache-user-info-in-idtoken"
msgstr "Quarkus.oidc.cache-user-info-in-idtoken。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow caching UserInfo in the internal ID token"
msgstr "内部IDトークンにUserInfoのキャッシュを許可"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Remote token introspection and UserInfo results can be shared across multiple requests to avoid doing remote introspection and/or UserInfo calls for every token all the time.\n"
"By doing so the application may miss out on the immediate token status changes, for example, the token could have been revoked or de-activated, or the current user may not be actually working for the organization which issued this token any longer, making the cached token introspection or `UserInfo` information stale. Therefore, the properties related to caching token introspection and UserInfo results must be enabled by users after carefully evaluating the risks."
msgstr "リモートトークンのイントロスペクションやUserInfoの結果は、複数のリクエストで共有することができます。例えば、トークンが失効または無効化されたり、現在のユーザがトークンを発行した組織で実際に働いていない可能性があるため、キャッシュされたトークン・イントロスペクションや `UserInfo` の情報が古くなります。したがって、トークンのイントロスペクションやUserInfoの結果のキャッシュに関連するプロパティは、リスクを慎重に評価した上で、ユーザが有効にする必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC provides a default token introspection and `UserInfo` cache for `all` OIDC tenants. For example, if you support GitHub and Strava OAuth2 authentication, the GitHib and Strava UserInfo responses can be stored in the same default cache, keyed by either GitHib or Strava access tokens.\n"
"This cache is enabled by default with the `quarkus.oidc.default-token-cache-enabled` build-time property, but no entries are added to it unless you choose to cache either the token introspection or UserInfo or both in this cache."
msgstr "Quarkus OIDCは、 `all` OIDCのテナント向けに、デフォルトのトークンイントロスペクションと `UserInfo` キャッシュを提供します。たとえば、GitHub と Strava の OAuth2 認証をサポートしている場合、GitHib と Strava の UserInfo レスポンスを、GitHib または Strava のアクセストークンをキーとして同じデフォルトキャッシュに保存できます。このキャッシュは `quarkus.oidc.default-token-cache-enabled` build-time プロパティでデフォルトで有効になっていますが、トークンのイントロスペクションか UserInfo のどちらか、あるいは両方をキャッシュすることにしない限りエントリは追加されません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.allow-token-introspection-cache` and `quarkus.oidc.allow-user-info-cache` can be used to enable caching token introspection and UserInfo results respectively on a `per OIDC tenant` basis."
msgstr "`quarkus.oidc.allow-token-introspection-cache` と を使用すると、トークンの introspection と UserInfo の結果をそれぞれ ベースでキャッシュできるようになります。 `quarkus.oidc.allow-user-info-cache` `per OIDC tenant` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token-cache.max-size`, `quarkus.oidc.token-cache.time-to-live` and `quarkus.oidc.token-cache.clean-up-timer-interval` are properties for managing the default token introspection and `UserInfo` cache."
msgstr "`quarkus.oidc.token-cache.max-size` `quarkus.oidc.token-cache.time-to-live` と は、デフォルト・トークン・イントロスペクションと キャッシュを管理するためのプロパティです。 `quarkus.oidc.token-cache.clean-up-timer-interval` `UserInfo` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-token-introspection-cache>> and <<custom-user-info-cache>> sections for details about customizing both the token introspection and `UserInfo` result caches."
msgstr "トークン内観と `UserInfo` 結果キャッシュのカスタマイズの詳細については、 <<custom-token-introspection-cache>> と <<custom-user-info-cache>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.cache-user-info-in-idtoken` is a possible cache optimization option when you work with OAuth2 providers, when an internal ID token is generated and encrypted in the session cookie. In this case, the UserInfo JSON can be saved directly in the generated ID token, before it is encrypted, avoiding the need for keeping the server-side `UserInfo` cache."
msgstr "`quarkus.oidc.cache-user-info-in-idtoken` は、OAuth2 プロバイダを使用する際に、内部 ID トークンが生成され、セッション Cookie 内で暗号化される場合に、キャッシュを最適化するオプションです。この場合、UserInfo JSON は暗号化される前に、生成された ID トークンに直接保存することができ、サーバサイドの キャッシュを保持する必要がなくなります。 `UserInfo` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tokens with certificate chain"
msgstr "証明書チェーン付きトークン"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"In some cases, incoming JWT tokens have no matching verification keys at all, and they can not be introspected.\n"
"These tokens only have an `x5c` claim which contains a certificate chain with a public key that can be used to verify this token's signature.\n"
"For example, SCIM provisioning agents, WebAuthn systems might produce such tokens."
msgstr "場合によっては、受信するJWTトークンは一致する検証キーをまったく持たず、イントロスペクトできません。これらのトークンは、このトークンの署名を検証するために使用できる公開鍵を持つ証明書チェーンを含む `x5c` 。たとえば、SCIMプロビジョニング・エージェントやWebAuthnシステムがこのようなトークンを生成するかもしれません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC can not use the public key inlined in the token until it proves that the applications trusts the token certificate chain which contains this public key."
msgstr "Quarkus OIDCは、アプリケーションがこの公開鍵を含むトークン証明書チェーンを信頼していることを証明するまで、トークンにインライン化された公開鍵を使用することはできません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tokens with certificate chains"
msgstr "証明書チェーン付きトークン"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-file"
msgstr "Quarkus.OIDC.証明書チェーン.トラストストアファイル"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store file"
msgstr "トラストストアファイル"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-file-type"
msgstr "quarkus.oidc.certificate-chain.trust-store-file-type"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store file type"
msgstr "トラストストアのファイルタイプ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-password"
msgstr "quarkus.oidc.certificate-chain.trust-store-password"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store password"
msgstr "トラストストアのパスワード"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-cert-alias"
msgstr "quarkus.oidc.certificate-chain.trust-store-cert-alias"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store certificate alias"
msgstr "トラストストア証明書のエイリアス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.leaf-certificate-name"
msgstr "quarkus.oidc.certificate-chain.leaf-certificate-name"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Leaf certificate name"
msgstr "リーフ証明書名"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.trust-store-file` must be available and point to the file containing `at least` a root certificate. `quarkus.oidc.certificate-chain.trust-store-password` and `quarkus.oidc.certificate-chain.trust-store-file-type` can be used to facilitate access to this truststore."
msgstr "`quarkus.oidc.certificate-chain.trust-store-file` が利用可能で、 ルート証明書を含むファイルを指している必要があります。 と は、このトラストストアへのアクセスを容易にするために使用できます。 `at least` `quarkus.oidc.certificate-chain.trust-store-password` `quarkus.oidc.certificate-chain.trust-store-file-type` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.trust-store-cert-alias` can be used to select a specific certificate to match the token's certificate chain root certificate."
msgstr "`quarkus.oidc.certificate-chain.trust-store-cert-alias` を使用して、トークンの証明書チェーンのルート証明書に一致する特定の証明書を選択できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.leaf-certificate-name` can also require that the trustore contains a leaf chain certificate."
msgstr "`quarkus.oidc.certificate-chain.leaf-certificate-name` は、トラストアにリーフチェーン証明書が含まれていることを要求することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC enforces the root certificate match, and also runs other certificate chain checks to confirm that each certificate in the chain is not expired, and correctly signed by the next certificate in the chain (except the root certificate)."
msgstr "Quarkus OIDCは、ルート証明書の一致を強制し、その他の証明書チェーンのチェックも実行して、チェーン内の各証明書が期限切れでなく、チェーン内の次の証明書（ルート証明書を除く）によって正しく署名されていることを確認します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-certificate-validator>> section for details about providing additional certificate chain checks."
msgstr "証明書チェーンの追加チェックの詳細については、 <<custom-certificate-validator>> のセクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Local verification"
msgstr "ローカル検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Local verification properties"
msgstr "ローカル検証プロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.public-key"
msgstr "quarkus.oidc.public-key"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Public verification key"
msgstr "公開検証キー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.public-key` can contain an inlined public verification key and used for OIDC tests."
msgstr "`quarkus.oidc.public-key` は、インライン化された公開検証鍵を含むことができ、OIDC テストに使用されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Managing JWK keys"
msgstr "JWKキーの管理"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.resolve-early"
msgstr "quarkus.oidc.jwks.resolve-early"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resolve verification keys on start-up"
msgstr "起動時の検証キーの解決"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.cache-size"
msgstr "quarkus.oidc.jwks.cache-size"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK cache size"
msgstr "JWKキャッシュサイズ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.cache-time-to-live"
msgstr "quarkus.oidc.jwks.cache-time-to-live"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK cache time to live"
msgstr "JWKのキャッシュに残された時間"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.clean-up-timer-interval"
msgstr "クリーンアップタイマー間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK clean-up timer interval"
msgstr "JWKクリーンアップタイマー間隔"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.try-all"
msgstr "quarkus.oidc.jwks.try-all"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Check all JWKS if no ley matching the token key id ('kid') is found"
msgstr "トークン・キーID('kid')にマッチするreyが見つからない場合、すべてのJWKSをチェックします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token JWK verification keys are resolved at the application start-up by default and perodically refreshed when no matching key is available to verify the current token."
msgstr "トークン JWK 検証キーは、デフォルトではアプリケーションの起動時に解決され、現在のトークンを検証するために一致するキーがない場合は定期的にリフレッシュされます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"However, some applications require access to the current JWT token in order to formulate a correct JWK key request.\n"
"`quarkus.oidc.jwks.resolve-early=false` delays the JWK key retrieval until the moment the first JWT token arrives.\n"
"And since the token content determines which JWK keys should be used to verify it, a number of verification keys can be potentially large, therefore, when the JWKs have to be retrieved at the request time,  `quarkus.oidc.jwks.cache-size`, `quarkus.oidc.jwks.cache-time-to-live` and `quarkus.oidc.jwks.clean-up-timer-interval` properties can be used to control the JWK cache."
msgstr "しかし、アプリケーションによっては、正しいJWK鍵要求を策定するために、現在のJWTトークンへのアクセスを必要とします。 `quarkus.oidc.jwks.resolve-early=false` 、最初のJWTトークンが到着する瞬間までJWK鍵の取得を遅らせます。また、トークンの内容によって、どのJWKキーを検証に使用すべきかが決まるため、検証キーの数は潜在的に大きくなる可能性があります。したがって、リクエスト時にJWKを取得する必要がある場合は、 `quarkus.oidc.jwks.cache-size` 、 `quarkus.oidc.jwks.cache-time-to-live` 、 `quarkus.oidc.jwks.clean-up-timer-interval` プロパティを使用してJWKキャッシュを制御することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In most cases, when the token arrives, its key identifier `kid` header value is used to find a matching JWK verification key. However, some providers do not set a token `kid` header but provide a JWK key set which may contain more than one verification key. Set `quarkus.oidc.jwks.try-all=true` only to support such cases, letting Quarkus OIDC iterate over all the keys in the JWK set and find the key that can be used to verify the current token's signature."
msgstr "ほとんどの場合、トークンが到着すると、その鍵識別子 `kid` ヘッダー値が、マッチするJWK検証鍵を見つけるために使用されます。しかし、プロバイダによっては、トークン `kid` ヘッダーを設定せず、複数の検証キーを含むJWKキーセットを提供する場合があります。 `quarkus.oidc.jwks.try-all=true` Quarkus OIDCにJWKセット内のすべてのキーを繰り返し処理させ、現在のトークンの署名を検証するために使用できるキーを見つけさせます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Composite provider properties"
msgstr "複合プロバイダのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Provider properties"
msgstr "プロバイダーのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.provider"
msgstr "プロバイダ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Provider"
msgstr "プロバイダー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC simplifies working with many xref:security-openid-connect-providers.adoc[well known OIDC and OAuth2 providers] by offering a `quarkus.oidc.provider` configuration option."
msgstr "Quarkus OIDCは、 `quarkus.oidc.provider` 設定オプションを提供することで、多くの xref:security-openid-connect-providers.adoc[有名なOIDCプロバイダーやOAuth2プロバイダーとの] 連携を簡素化します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.provider` is a composite property. For example, when you do `quarkus.oidc.provider=github`, it is expanded into many more properties that are required to have Quarkus OIDC successfully working with the GitHub OAuth2 provider."
msgstr "`quarkus.oidc.provider` は複合プロパティです。例えば、 を実行すると、Quarkus OIDCがGitHub OAuth2プロバイダと正常に動作するために必要な、より多くのプロパティに展開されます。 `quarkus.oidc.provider=github`"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Everything that can be covered by a provider declaration such as `quarkus.oidc.provider=github` can be directly supported by individual configuration properties. Each property set internally by the `quarkus.oidc.provider` declarations can be overridden, for example, see the xref:security-openid-connect-providers.adoc#provider-scope[Provider scopes] section."
msgstr "`quarkus.oidc.provider=github` のようなプロバイダ宣言でカバーできることはすべて、個々の構成プロパティで直接サポートできます。 `quarkus.oidc.provider` 宣言によって内部的に設定された各プロパティは、例えば、 xref:security-openid-connect-providers.adoc#provider-scope[プロバイダのスコープ] セクションを参照して、オーバーライドすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "As mentioned in the <<tenant-properties>> section, when you configure OIDC tenants in `application.properties`, the tenant name is declared directly in the property name, for example, a `keycloak-realm-a` tenant is a 3rd token in the property name: `quarkus.oidc.keycloak-realm-a.auth-server-url=${keycloak-realm-a.url}`, etc."
msgstr "<<tenant-properties>> セクションで述べたように、 `application.properties` で OIDC テナントを構成する場合、テナント名はプロパティ名で直接宣言されます。例えば、 `keycloak-realm-a` テナントは、プロパティ名の 3 番目のトークン: `quarkus.oidc.keycloak-realm-a.auth-server-url=${keycloak-realm-a.url}` などです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Each OIDC tenant configuration represents specific requirements associated with a single OIDC provider, an individual tenant or realm among multiple OIDC provider tenants or realms.\n"
"For example, you may have one tenant for Keycloak, another tenant for Azure. Or you can have many tenants representing individual Keycloak realms or clients in a single Keycloak realm, or multiple Azure tenants."
msgstr "各OIDCテナント構成は、単一のOIDCプロバイダー、複数のOIDCプロバイダーのテナントまたはレルム間の個々のテナントまたはレルムに関連する特定の要件を表します。例えば、Keycloak用のテナントとAzure用のテナントがあります。または、1つのKeycloakレルム内の個々のKeycloakレルムやクライアントを表すテナントや、複数のAzureテナントを持つこともできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC must decide which tenant configuration can support the current request and it provides many security-openid-connect-multitenancy.adoc#tenant-resolution[tenant resolution options]. Some of these resilution options must be enabled through the configuration."
msgstr "Quarkus OIDCは、現在の要求をサポートできるテナント構成を決定する必要があり、多くのsecurity-openid-connect-multitenancy.adoc#tenant-resolution[テナント解決オプション]を提供しています。これらの解決オプションの一部は、設定によって有効にする必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant resolution properties"
msgstr "テナント解決物件"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resolve-tenants-with-issuer"
msgstr "quarkus.oidc.resolve-テナントと発行者の関係"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Issuer based tenant resolution"
msgstr "発行体ベースのテナント決議"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-paths"
msgstr "quarkus.oidc.tenant-paths"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The tenant-paths"
msgstr "テナント・パス"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resolve-tenants-with-issuer` tenant resolution property allows Quarkus to iterate over all tenants configured in `application.properties` until it finds the one with a discovered or configured `issuer` property which matches the current token's issuer (`iss`) claim."
msgstr "`quarkus.oidc.resolve-tenants-with-issuer` テナント解決プロパティにより、Quarkusは、 で設定されているすべてのテナントを、現在のトークンの発行者（ ）と一致する プロパティが検出または設定されるまで繰り返し検索します。 `application.properties` `iss` `issuer` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.tenant-paths` tenant resolution property can be used to restrict a given tenant to specific request paths only. Quarkus OIDC will know which tenant configuration to choose if the current request is made to one of the paths listed in the `quarkus.oidc.tenant-paths` property."
msgstr "`quarkus.oidc.tenant-paths` テナント解決プロパティを使用すると、特定のテナントを特定のリクエストパスのみに制限できます。Quarkus OIDCは、現在のリクエストが プロパティにリストされたパスのいずれかに行われた場合、どのテナント構成を選択すべきかを認識します。 `quarkus.oidc.tenant-paths` "

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Creating configuration programmatically"
msgstr "プログラムによる設定の作成"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Would you rather create OIDC tenants programmatically, instead of having to deal with all the required configuration properties in `application.properties` ? Quarkus OIDC offers two options if it is what you prefer to do."
msgstr "`application.properties` 、必要な設定プロパティをすべて処理する代わりに、プログラムでOIDCテナントを作成したいですか？Quarkus OIDCには2つのオプションがあります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Create OIDC configuration at start-up"
msgstr "起動時にOIDC設定を作成"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can observe an https://quarkus.io/guides/security-openid-connect-multitenancy#programmatic-startup[Oidc startup event] and register one or more OIDC tenants using `OicTenantConfig` builder API."
msgstr "`OicTenantConfig` builder API を使用して、 link:https://quarkus.io/guides/security-openid-connect-multitenancy#programmatic-startup[OIDC の起動イベントを] 監視し、1 つまたは複数の OIDC テナントを登録できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Create OIDC configuration at request time"
msgstr "リクエスト時にOIDC設定を作成"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolver] and build the configuration dynamically, using `OicTenantConfig` builder API, using the request properties such as request path and headers for additional hints or retrieve the matching configuration from the external sources."
msgstr "xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolverを] 登録し、 `OicTenantConfig` builder APIを使用して動的に設定を構築します。リクエストパスやヘッダなどのリクエストプロパティを使用して追加のヒントを得たり、外部ソースから一致する設定を取得したりできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC Health Check"
msgstr "OIDCヘルスチェック"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.health.enabled"
msgstr "quarkus.oidc.health.enabled"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the OIDC Health Readiness Check must be registered."
msgstr "OIDC健康準備チェックを登録しなければならない場合。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This build-time property can be used to register an `OIDC Provider Health Readiness Check` when the `quarkus-smallrye-health` dependency is included. When the health check is registered, it uses HTTP HEAD to ping the well-known OIDC provider configuration endpoint for every configured OIDC tenant."
msgstr "このビルド時プロパティは、 `quarkus-smallrye-health` 依存関係が含まれている場合に `OIDC Provider Health Readiness Check` を登録するために使用できます。ヘルスチェックが登録されると、HTTP HEAD を使用して、構成されたすべての OIDC テナントのよく知られた OIDC プロバイダ構成エンドポイントに ping を送信します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Individual OIDC tenant statuses are `OK`, `Not Ready`, `Disabled`, `Unknown` and `Error`."
msgstr "個々の OIDC テナントのステータスは、 `OK` 、 `Not Ready` 、 `Disabled` 、 `Unknown` 、 `Error` です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The OIDC Health check status is `UP` if at least one of the OIDC tenants has an `OK` status and `DOWN` otherwise."
msgstr "`UP` OIDCヘルスチェックのステータスは、OIDCテナントの少なくとも1つが `OK` 、それ以外は `DOWN` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Typical property combinations"
msgstr "代表的な物件の組み合わせ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A number of OIDC property combinations required to address various OIDC and OAuth2 requirements can be very large."
msgstr "様々なOIDCやOAuth2の要件に対応するために必要なOIDCプロパティの組み合わせの数は、非常に多くなる可能性があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Here are four options which you may want to consider, and we will continue expanding this list."
msgstr "ここでは、あなたが検討したいと思うかもしれない4つのオプションを紹介します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Simple bearer access token support"
msgstr "シンプルなベアラアクセストークンのサポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You only need one property to get started with supporting bearer access tokens:"
msgstr "ベアラ・アクセストークンのサポートを開始するために必要なプロパティは 1 つだけです："

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This single property combination works if your OIDC provider supports the metadata discovery and the incoming bearer access tokens are in JWT format which can be verified by the keys fetched from the provider's JWK endpoint."
msgstr "この単一のプロパティの組み合わせは、OIDCプロバイダがメタデータ・ディスカバリーをサポートし、着信ベアラ・アクセストークンがプロバイダのJWKエンドポイントからフェッチされたキーで検証できるJWT形式である場合に機能します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You do not have to configure anything at all to get started with bearer access tokens xref:security-openid-connect-dev-services.adoc[in the dev mode]."
msgstr "xref:security-openid-connect-dev-services.adoc[devモードで] ベアラ・アクセストークンを使い始めるには、何も設定する必要はありません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Simple authorizaion code flow support"
msgstr "シンプルな認証コードフローをサポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You need four properties to get started with the authorization code flow:"
msgstr "認可コードフローを開始するには、4つのプロパティが必要です："

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This property combination works if your OIDC provider supports the metadata discovery."
msgstr "このプロパティの組み合わせは、OIDCプロバイダがメタデータ・ディスカバリーをサポートしている場合に機能します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Very often, when your application secure space is wider than a single URL, you have to add a redirect-path property to support OIDC providers requiring that only specific callback URLs can be registered, for example: `quarkus.oidc.authentication.redirect-path=/callback`."
msgstr "`quarkus.oidc.authentication.redirect-path=/callback` アプリケーションのセキュアスペースが1つのURLよりも広い場合、特定のコールバックURLのみを登録することを要求するOIDCプロバイダをサポートするために、redirect-pathプロパティを追加する必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You only have to configure `quarkus.oidc.application-type=web-app` to get started with the authorization code flow xref:security-openid-connect-dev-services.adoc[in the dev mode]."
msgstr "`quarkus.oidc.application-type=web-app` を設定するだけで、 xref:security-openid-connect-dev-services.adoc[開発モードでの] 認証コードフローを開始できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict bearer access token support"
msgstr "厳密なベアラアクセストークンのサポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict bearer access token support implies enforcing that the claims such as issuer, audience and other key claims are set to specific values or available."
msgstr "厳密なベアラアクセストークンのサポートは、発行者、オーディエンス、その他のキークレームが特定の値に設定されているか、利用可能であることを強制することを意味します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict authorization code flow support"
msgstr "厳格な認可コードフローをサポート"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict authorization code flow support implies enforcing that the claims such as issuer, audience and other key claims are set to specific values or available."
msgstr "厳格な認可コードフローのサポートは、発行者、利用者、その他の主要なクレームが特定の値に設定されているか、利用可能であることを強制することを意味します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Even stricter configuration setup"
msgstr "さらに厳しいコンフィギュレーション設定"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "What constitues a strict bearer access token or authorization code flow support can vary significantly between deployments. For example, one OIDC provider may require MTLS client authentication, another one - DPoP binding or PKCE support. There are too many combinations for us to cover in this document."
msgstr "厳密なベアラ・アクセストークンや認証コードフロー・サポートを構成するものは、デプロイメントによって大きく異なる可能性があります。例えば、ある OIDC プロバイダは MTLS クライアント認証を必要とし、別のプロバイダは DPoP バインディングまたは PKCE サポートを必要とするかもしれません。この文書ではカバーしきれないほど多くの組み合わせがあります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"We are here to help should you require further guidance with creating stricter, tighter OIDC configurations.\n"
"Do open issues, and reach out to the team on Quarkus Discussions, Zulip users channel."
msgstr "より厳密で厳格なOIDC設定を作成するためのガイダンスが必要な場合は、私たちがお手伝いします。Quarkus DiscussionsのZulipユーザーチャンネルで、問題をオープンし、チームに連絡してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the configuration is not enough"
msgstr "コンフィギュレーションが不十分な場合"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This expanded configuration reference document demonstrates that Quarkus OIDC supports a lot of OIDC requirements with properties alone. But it is impossible to cover all the possible requirements only with the properties."
msgstr "この拡張設定リファレンスドキュメントは、Quarkus OIDCがプロパティだけで多くのOIDC要件をサポートしていることを示しています。しかし、プロパティだけですべての可能な要件をカバーすることは不可能です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In this section we will look at how your real world OIDC requirements can be supported by complementing the configuration with the custom code."
msgstr "このセクションでは、設定をカスタムコードで補完することで、実際のOIDC要件をどのようにサポートできるかを見ていきます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token validation"
msgstr "トークンの検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Jose4 Validator"
msgstr "Jose4 バリデータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a custom xref:security-oidc-bearer-token-authentication.adoc#jose4j-validator-bearer[Jose4j Validator] to verify the JWT token content, in addition to the checks described in the <<token-verification>> section above."
msgstr "上記の <<token-verification>> セクションで説明したチェックに加えて、JWT トークンの内容を検証するカスタム xref:security-oidc-bearer-token-authentication.adoc#jose4j-validator-bearer[Jose4j Validator] を登録できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Certificate chain validation"
msgstr "証明書チェーンの検証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a custom xref:security-oidc-bearer-token-authentication.adoc#jwt-token-certificate-chain[TokenCertificateValidator] to provide inlined  certificate chain checks, in addition to the checks described in the <<tokens-with-certificate-chains>> section above."
msgstr "カスタムの xref:security-oidc-bearer-token-authentication.adoc#jwt-token-certificate-chain[TokenCertificateValidator] を登録すると、上記の <<tokens-with-certificate-chains>> セクションで説明したチェックに加えて、インラインの証明書チェーン・チェックを提供できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, you may want to enforce that the token is bound to the inlined certificate chain with one of its claims."
msgstr "例えば、トークンがインライン化された証明書チェーンにそのクレームの1つでバインドされていることを強制したい場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token header customizer"
msgstr "トークン ヘッダー カスタマイザー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Custom `quarkus.oidc.TokenCustomizer` can be used in advanced cases requiring JWT token header pre-processing for the token signature verification to succeed."
msgstr "トークン署名の検証を成功させるためにJWTトークン・ヘッダの前処理を必要とする高度なケースでは、カスタム `quarkus.oidc.TokenCustomizer` 。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token authorization"
msgstr "トークンの認証"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As discussed in the <<token-roles>> section above, a token `groups` claims is used by default to check the identity roles, and custom claims containing the roles can also be selected with the configuration.\n"
"However, additional customization and checks may be required in order to correctly determine the roles and permissions associated with the current token identity."
msgstr "上記の <<token-roles>> セクションで説明したように、トークン `groups` クレームはデフォルトで ID の役割をチェックするために使用されます。ただし、現在のトークン ID に関連付けられたロールと権限を正しく判断するには、追加のカスタマイズとチェックが必要な場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-customization.adoc#security-identity-customization[io.quarkus.security.identity.SecurityIdentityAugmentor] to augment the identity created from the primary ID or access token."
msgstr "プライマリ ID またはアクセストークンから作成された ID を補強するには、io xref:security-customization.adoc#security-identity-customization[.quarkus.security.identity.SecurityIdentityAugmentor] を使用します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the xref:security-authorize-web-endpoints-reference.adoc#custom-http-security-policy[HttpSecurityPolicy] and xref:security-authorize-web-endpoints-reference.adoc#permission-checker[PermissionChecker] sections for more authorization control options."
msgstr "権限制御のオプションについては、 xref:security-authorize-web-endpoints-reference.adoc#custom-http-security-policy[HttpSecurityPolicy] と xref:security-authorize-web-endpoints-reference.adoc#permission-checker[PermissionChecker の] セクションも参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection cache"
msgstr "トークンのイントロスペクション・キャッシュ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a `quarkus.oidc.TokenIntrospectionCache` provider to support a custom token introspection cache implementation, as an alternative to the default cache implementation described in the <<caching-verification-results>> section."
msgstr "<<caching-verification-results>> セクションで説明されているデフォルトのキャッシュ実装の代わりに、カスタム・トークン・イントロスペクション・キャッシュ実装をサポートする `quarkus.oidc.TokenIntrospectionCache` プロバイダを登録することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "UserInfo cache"
msgstr "ユーザー情報キャッシュ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a `quarkus.oidc.UserInfoCache` provider to support a custom `UserInfo` cache implementation, as an alternative to the default cache implementation described in the <<caching-verification-results>> section."
msgstr "<<caching-verification-results>> セクションで説明するデフォルトのキャッシュ実装の代替として、カスタムの `UserInfo` キャッシュ実装をサポートする `quarkus.oidc.UserInfoCache` プロバイダを登録することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "TokenStateManager"
msgstr "TokenStateManager"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As discussed in the <<token-state-manager>> section above, Quarkus OIDC already provides stateless (default) and stateful options for storing  authorization code flow tokens.\n"
"You can also provide your own custom `quarkus.oidc.TokenStateManager` implementation."
msgstr "上記の <<token-state-manager>> のセクションで説明したように、Quarkus OIDCには、認可コードフロートークンを保存するためのステートレス（デフォルト）とステートフルなオプションがすでに用意されています。また、独自のカスタム実装（ `quarkus.oidc.TokenStateManager` ）を提供することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Request, response and redirect filters"
msgstr "リクエスト、レスポンス、リダイレクトフィルタ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC filters to observe requests and responses to all OIDC endpoints."
msgstr "OIDCフィルターを使用すると、すべてのOIDCエンドポイントへのリクエストとレスポンスを観察できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can also intercept OIDC redirect requests."
msgstr "OIDCリダイレクトリクエストを傍受することもできます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC requests"
msgstr "OIDCからのお願い"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC request filters to observe requests, add additional headers, customize a request body, and set context properties for coordinating with OIDC response filters."
msgstr "OIDC リクエストフィルタを使用して、リクエストを観察したり、追加のヘッダを追加したり、リクエストボディをカスタマイズしたり、OIDC レスポンスフィルタと連携するためのコンテキストプロパティを設定したりすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-request-filters[quarkus.oidc.common.OidcRequestFilter] to implement a request filter and if necessary, restrict it to the specific OIDC endpoint or endpoints only with the `quarkus.oidc.common.OidcEndpoint` annotation."
msgstr "xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-request-filters[quarkus.oidc.common.OidcRequestFilterを] 使用してリクエストフィルターを実装し、必要に応じて、 `quarkus.oidc.common.OidcEndpoint` アノテーションを使用して特定のOIDCエンドポイントまたはエンドポイントのみに制限します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC responses"
msgstr "OIDCの回答"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC response filters to observe responses, customize a response body, and use the context properties for coordinating with OIDC request filters."
msgstr "OIDC レスポンスフィルターを使ってレスポンスを観察したり、レスポンスボディをカスタマイズしたり、OIDC リクエストフィルターと連携するためにコンテキストプロパティを使ったりすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-response-filters[quarkus.oidc.common.OidcResponseFilter] to implement a response filter and if necessary, restrict it to the specific OIDC endpoint or endpoints only with the `quarkus.oidc.common.OidcEndpoint` annotation."
msgstr "xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-response-filters[quarkus.oidc.common.OidcResponseFilter] を使用して応答フィルタを実装し、必要に応じて `quarkus.oidc.common.OidcEndpoint` アノテーションを使用して特定の OIDC エンドポイントまたはエンドポイントのみに制限します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC redirects"
msgstr "OIDCリダイレクト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC redirect filters to observe redirect requests to both OIDC authorization and logout endpoints."
msgstr "OIDC リダイレクトフィルターを使用して、OIDC 認証エンドポイントとログアウトエンドポイントの両方へのリダイレクト要求を監視することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#oidc-redirect-filters[quarkus.oidc.OidcRedirectFilter] to implement a redirect filter and if necessary, restrict it to the specific OIDC endpoint only with the `quarkus.oidc.Redirect` annotation."
msgstr "xref:security-oidc-code-flow-authentication.adoc#oidc-redirect-filters[quarkus.oidc.OidcRedirectFilter] を使用してリダイレクトフィルターを実装し、必要に応じて `quarkus.oidc.Redirect` アノテーションを使用して特定の OIDC エンドポイントのみに制限します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JavaScript request checker"
msgstr "JavaScriptリクエストチェッカー"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As described in the <<authorization-code-flow-spa>> section, Quarkus OIDC can return an error to initiate an authorization code flow for SPA\n"
"to intercept it and work around the fact that some OIDC providers do not support CORS for the authorization endpoint."
msgstr "<<authorization-code-flow-spa>> のセクションで説明したように、Quarkus OIDCはエラーを返して認可コードフローを開始し、それをSPAが傍受することで、一部のOIDCプロバイダが認可エンドポイントのCORSをサポートしていないという事実を回避することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For Quarkus OIDC to do it, it needs to know if the request came from SPA. By default. it checks if the `X-Requested-With` request header with its value set to either `JavaScript` or `XMLHttpRequest` is available."
msgstr "Quarkus OIDCがこれを行うには、リクエストがSPAから来たかどうかを知る必要があります。デフォルトでは、 `JavaScript` または `XMLHttpRequest` に設定された `X-Requested-With` リクエストヘッダが利用可能かどうかをチェックします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the xref:security-oidc-code-flow-authentication.adoc#single-page-applications[Integrating with SPA] documentation for more information about customizing JavaScript request checks with custom `quarkus.oidc.JavaScriptRequestChecker` request checkers."
msgstr "カスタムの `quarkus.oidc.JavaScriptRequestChecker` リクエストチェッカーによる JavaScript リクエストチェックのカスタマイズの詳細については、 xref:security-oidc-code-flow-authentication.adoc#single-page-applications[SPA との統合 の] ドキュメントを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "Local logout"
msgstr "ローカルログアウト"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The logout configuration described in the <<logout-properties>> section supports standard OIDC logout mechanism, with the Quarkus endpoint coordinating the logout process with the OIDC provider.\n"
"Sometimes, you may want to do the xref:security-oidc-code-flow-authentication.adoc#local-logout[local logout] only to clear the local session cookie."
msgstr "<<logout-properties>> のセクションで説明されているログアウト設定は、QuarkusエンドポイントがOIDCプロバイダとログアウトプロセスを調整する、標準的なOIDCログアウトメカニズムをサポートしています。 xref:security-oidc-code-flow-authentication.adoc#local-logout[ローカル] セッションCookieをクリアするためだけに xref:security-oidc-code-flow-authentication.adoc#local-logout[ローカルログアウトを] 行いたい場合があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Listen to OIDC events"
msgstr "OIDCのイベントを聴く"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"You can observe OIDC events related to the authentication, logout, etc.\n"
"See the xref:security-oidc-code-flow-authentication.adoc#listen-to-authentication-events[Listento OIDC events] section for more information."
msgstr "認証、ログアウトなどに関連するOIDCイベントを観察することができます。詳しくは xref:security-oidc-code-flow-authentication.adoc#listen-to-authentication-events[Listento OIDC events] セクションをご覧ください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token propagation and exchange"
msgstr "トークンの伝播と交換"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Quarkus OIDC token propagation feature] if you need to propagate the current bearer or authorization code flow access token to the downstream service. The tokens which must be propagated can be exchanged."
msgstr "現在のベアラまたは認証コードフローのアクセストークンをダウンストリームサービスに伝播する必要がある場合は、 xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Quarkus OIDCトークンパパゲーション機能を] 使用します。伝播させる必要があるトークンは、交換することができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Revoke OIDC tokens"
msgstr "OIDCトークンの失効"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"You may need to revoke access tokens, for example, in case of the local logout.\n"
"See the xref:security-oidc-code-flow-authentication#oidc-token-revocation[Token revocation] section for more information."
msgstr "ローカル・ログアウトの場合など、アクセストークンを失効させる必要があるかもしれません。詳細については、 xref:security-oidc-code-flow-authentication.adoc#oidc-token-revocation[トークンの失効] セクションを参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Protected Resource Metadata"
msgstr "保護されたリソースのメタデータ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] specification defines a metadata format enabling OAuth 2.0 clients to obtain information needed to interact with an OAuth 2.0 protected resource."
msgstr "link:https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] 仕様は、OAuth 2.0 クライアントが OAuth 2.0 で保護されたリソースと対話するために必要な情報を取得できるようにするメタデータ形式を定義します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC provides an initial https://datatracker.ietf.org/doc/rfc9728/[Protected Resource Metadata] support allowing a Quarkus endpoint to return a URL of the OIDC or OAuth2 provider that secures this endpoint.\n"
"In turn, a client that requested the protected resource metadata can use its properties, such as an authorization server URL, to discover the provider's metadata and bootstrap itself to work with this provider, for example, to login SPA users and access Quarkus on their behalf with bearer access tokens."
msgstr "Quarkus OIDCは、Quarkusエンドポイントが、このエンドポイントを保護するOIDCまたはOAuth2プロバイダのURLを返すことを可能にする、初期の link:https://datatracker.ietf.org/doc/rfc9728/[保護されたリソースメタデータを] サポートします。これにより、保護されたリソースのメタデータを要求したクライアントは、認証サーバーのURLなどのプロパティを使用してプロバイダーのメタデータを検出し、このプロバイダーと連携するようにブートストラップすることができます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resource Metadata properties"
msgstr "リソース・メタデータのプロパティ"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.enabled"
msgstr "quarkus.oidc.resource-metadata.enabled"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable resource metadata properties"
msgstr "リソース・メタデータのプロパティを有効にします。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.resource"
msgstr "quarkus.oidc.resource-metadata.resource"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resource identifier"
msgstr "リソース識別子"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.authorization-server"
msgstr "quarkus.oidc.resource-metadata.authorization-server"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization server URL"
msgstr "認証サーバーURL"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.force-https-scheme"
msgstr "quarkus.oidc.resource-metadata.force-https-scheme"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Force that a resource identifier URL has an HTTPS scheme"
msgstr "リソース識別子 URL が HTTPS スキームであることを強制します。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resource-metadata.enabled` property allows Quarkus OIDC to return the protected resource metadata and it is disabled by default. The reason behind it is that letting public clients see a list of authorization server(s) that the endpoint is secured with can be considered a security information leak, therefore it should only be enabled when publishing such information is considered to be safe."
msgstr "`quarkus.oidc.resource-metadata.enabled` プロパティは、Quarkus OIDCが保護されたリソースのメタデータを返すことを許可するもので、デフォルトでは無効になっています。その理由は、エンドポイントが保護されている認証サーバーのリストをパブリッククライアントに見せることは、セキュリティ情報の漏洩と見なされる可能性があるためです。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.resource-metadata.resource` represents a protected resource identifier.\n"
"According to the https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] specification, it must be presented as an HTTPS-based URL in the published metadata and the structure of this URL must be aligned with the well-known URL that the client used to access the protected resource metadata."
msgstr "`quarkus.oidc.resource-metadata.resource` は保護されたリソースの識別子を表します。 link:https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] 仕様によると、これは公開されたメタデータにおいてHTTPSベースのURLとして提示されなければならず、このURLの構造はクライアントが保護されたリソースメタデータにアクセスするために使用したよく知られたURLと一致していなければなりません。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resource-metadata.resource` can be configured as an absolute URL."
msgstr "`quarkus.oidc.resource-metadata.resource` は絶対URLとして設定できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If it is configured as a relative path then it is added to the current request URL's host and port to build a resource identifier URL. If it is not configured at all then, unless it is a default tenant id, the tenand id is added to the current request URL's host and port to build a resource identifier URL."
msgstr "相対パスとして設定されている場合は、現在のリクエストURLのホストと ポートに追加されてリソース識別子URLが作成されます。全く設定されていない場合は、デフォルトのテナント ID でない限り、テナント ID が現在のリクエスト URL のホストとポートに追加されてリソース識別子 URL が作成されます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, when no `quarkus.oidc.resource-metadata.resource` is configured, a protected resource metadata route is available at a `/.well-known/oauth-protected-resource` relative address."
msgstr "デフォルトでは、 `quarkus.oidc.resource-metadata.resource` が設定されていない場合、保護されたリソースのメタデータルートは `/.well-known/oauth-protected-resource` の相対アドレスで利用できます。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Setting `quarkus.oidc.resource-metadata.resource` to a relative value impacts the protected resource metadata route's address. For example, setting `quarkus.oidc.resource-metadata.resource=resource` for a default OIDC tenant makes its protected resource metadata route available at `/.well-known/oauth-protected-resource/resource`."
msgstr "`quarkus.oidc.resource-metadata.resource` を相対値に設定すると、保護されたリソースのメタデータルートのアドレスに影響します。たとえば、デフォルトのOIDCテナントに `quarkus.oidc.resource-metadata.resource=resource` を設定すると、その保護されたリソースのメタデータルートは `/.well-known/oauth-protected-resource/resource` で利用できるようになります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The resource identifier URL scheme is set to `HTTPS` by default. You can enable an `HTTP` URL scheme with `quarkus.oidc.resource-metadata.force-https-scheme=false`, it can be particularly useful in simple demos and tests."
msgstr "リソース識別子のURLスキームは、デフォルトで `HTTPS` に設定されています。 `quarkus.oidc.resource-metadata.force-https-scheme=false` を使って `HTTP` URL スキームを有効にすることができます。これは特に簡単なデモやテストに便利です。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resource-metadata.authorization-server` allows to customize an authorization server URL that will be included in the resource metadata. The `quarkus.oidc.auth-server-url` URL is included by default, however, for some cases where an OIDC proxy interposes over the actual OIDC provider, returning the OIDC proxy's URL is required instead."
msgstr "`quarkus.oidc.resource-metadata.authorization-server` を使用すると、リソースのメタデータに含まれる認証サーバーの URL をカスタマイズすることができます。デフォルトでは `quarkus.oidc.auth-server-url` URL が含まれますが、OIDC プロキシが実際の OIDC プロバイダを介在する場合には、代わりに OIDC プロキシの URL を返す必要があります。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<oidc-metadata-properties>> for details about the OIDC provider metadata that Quarkus OIDC uses for its work."
msgstr "Quarkus OIDCが作業に使用するOIDCプロバイダのメタデータの詳細については、 <<oidc-metadata-properties>> も参照してください。"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "References"
msgstr "参照"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラートークン認証]"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC Authorization code flow authentication]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[OIDC 認証コードフロー認証]"

#: _versions/main/guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[Generated OIDC Configuration]"
msgstr "xref:security-oidc-configuration-properties-reference.adoc[生成されたOIDCコンフィギュレーション]"
