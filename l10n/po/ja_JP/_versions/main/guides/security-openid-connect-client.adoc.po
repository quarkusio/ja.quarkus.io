msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.5\n"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "OpenID Connect client and token propagation quickstart"
msgstr "OpenID Connectクライアントとトークン伝搬クイックスタート"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Learn how to use OpenID Connect (OIDC) and OAuth2 clients with filters to get, refresh, and propagate access tokens in your applications."
msgstr "OpenID Connect (OIDC) と OAuth2 クライアントにフィルタを使用して、アプリケーションでアクセストークンを取得、更新、伝播する方法を学びます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "For more information about `OIDC Client` and `Token Propagation` support in Quarkus, see the xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference guide]."
msgstr "Quarkus での `OIDC Client` と `Token Propagation` のサポートの詳細は、xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) と OAuth2 クライアントおよびフィルターのリファレンスガイド] を参照してください。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To protect your applications by using Bearer Token Authorization, see the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] guide."
msgstr "Bearer Token Authorization を使用してアプリケーションを保護するには、xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) ベアラートークン認証] ガイドを参照してください。"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"In this example, an application is built with two Jakarta REST resources, `FrontendResource` and `ProtectedResource`.\n"
"Here, `FrontendResource` uses one of three methods to propagate access tokens to `ProtectedResource`:"
msgstr ""
"この例では、アプリケーションは 2 つの Jakarta REST リソース FrontendResource と ProtectedResource を使用して構築されます。\n"
"ここで、 `FrontendResource` は 3 つの方法のいずれかを使用してアクセストークンを `ProtectedResource` に伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It can get a token by using an OIDC client filter before propagating it."
msgstr "トークンを伝播する前に、OIDC クライアントフィルターを使用してトークンを取得できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It can get a token by using a programmatically created OIDC client and propagate it by passing it to a REST client method as an HTTP `Authorization` header value."
msgstr "プログラムで作成された OIDC クライアントを使用してトークンを取得し、それを HTTP `Authorization` ヘッダー値として REST クライアントメソッドに渡すことで伝播できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It can use an OIDC token propagation filter to propagate the incoming access token."
msgstr "OIDC トークン伝播フィルターを使用して、受信したアクセストークンを伝播できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` has eight endpoints:"
msgstr "`FrontendResource` には 8 つのエンドポイントがあります。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-oidc-client-token`"
msgstr "`/frontend/user-name-with-oidc-client-token`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-oidc-client-token`"
msgstr "`/frontend/admin-name-with-oidc-client-token`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-oidc-client-token-header-param`"
msgstr "`/frontend/user-name-with-oidc-client-token-header-param`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-oidc-client-token-header-param`"
msgstr "`/frontend/admin-name-with-oidc-client-token-header-param`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-oidc-client-token-header-param-blocking`"
msgstr "`/frontend/user-name-with-oidc-client-token-header-param-blocking`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-oidc-client-token-header-param-blocking`"
msgstr "`/frontend/admin-name-with-oidc-client-token-header-param-blocking`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-propagated-token`"
msgstr "`/frontend/user-name-with-propagated-token`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-propagated-token`"
msgstr "`/frontend/admin-name-with-propagated-token`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"When either `/frontend/user-name-with-oidc-client-token` or `/frontend/admin-name-with-oidc-client-token` endpoint is called, `FrontendResource` uses a REST client with an OIDC client filter to get and propagate an access token to `ProtectedResource` .\n"
"When either `/frontend/user-name-with-oidc-client-token-header-param` or `/frontend/admin-name-with-oidc-client-token-header-param` endpoint is called, `FrontendResource` uses a programmatically created OIDC client to get and propagate an access token to `ProtectedResource` by passing it to a REST client method as an HTTP `Authorization` header value.\n"
"When either `/frontend/user-name-with-propagated-token` or `/frontend/admin-name-with-propagated-token` endpoint is called, `FrontendResource` uses a REST client with `OIDC Token Propagation Filter` to propagate the current incoming access token to `ProtectedResource`."
msgstr ""
"`/frontend/user-name-with-oidc-client-token` または `/frontend/admin-name-with-oidc-client-token` エンドポイントのいずれかが呼び出されると、 `FrontendResource` は OIDC クライアントフィルターを備えた REST クライアントを使用してアクセストークンを取得し、 `ProtectedResource` に伝播します。\n"
"`/frontend/user-name-with-oidc-client-token-header-param` または `/frontend/admin-name-with-oidc-client-token-header-param` エンドポイントのいずれかが呼び出されると、 `FrontendResource` はプログラムで作成された OIDC クライアントを使用してアクセストークンを取得し、それを HTTP `Authorization` ヘッダー値として REST クライアントメソッドに渡すことで `ProtectedResource` に伝播します。\n"
"`/frontend/user-name-with-propagated-token` または `/frontend/admin-name-with-propagated-token` エンドポイントのいずれかが呼び出されると、 `FrontendResource` は `OIDC Token Propagation Filter` を備えた REST クライアントを使用して、現在の受信アクセストークンを `ProtectedResource` に伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`ProtectedResource` has two endpoints:"
msgstr "`ProtectedResource` には 2 つのエンドポイントがあります。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/protected/user-name`"
msgstr "`/protected/user-name`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/protected/admin-name`"
msgstr "`/protected/admin-name`"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Both endpoints return the username extracted from the incoming access token, which was propagated to `ProtectedResource` from `FrontendResource`.\n"
"The only difference between these endpoints is that calling `/protected/user-name` is only allowed if the current access token has a `user` role, and calling `/protected/admin-name` is only allowed if the current access token has an `admin` role."
msgstr "どちらのエンドポイントも、 `FrontendResource` から `ProtectedResource` に伝搬された受信アクセストークンから抽出したユーザー名を返します。これらのエンドポイントの唯一の違いは、 `/protected/user-name` の呼び出しは、現在のアクセストークンに `user` ロールがある場合にのみ、 `/protected/admin-name` の呼び出しは、現在のアクセストークンに `admin` ロールがある場合のみ許可されることです。"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "The solution is in the `security-openid-connect-client-quickstart` link:{quickstarts-tree-url}/security-openid-connect-client-quickstart[directory]."
msgstr "解決策は ` link:{quickstarts-tree-url}/security-openid-connect-client-quickstart[ディレクトリー] にあります。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"First, you need a new project.\n"
"Create a new project with the following command:"
msgstr ""
"まず、新しいプロジェクトが必要です。\n"
"以下のコマンドで新規プロジェクトを作成します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It generates a Maven project, importing the `oidc`, `rest-client-oidc-filter`, `rest-client-oidc-token-propagation`, and `rest` extensions."
msgstr "Maven プロジェクトが生成され、 `oidc`、 `rest-client-oidc-filter`、 `rest-client-oidc-token-propagation`、および `rest` エクステンションがインポートされます。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "If you already have your Quarkus project configured, you can add these extensions to your project by running the following command in your project base directory:"
msgstr "すでに Quarkus プロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトにこれらのエクステンションを追加できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It adds the following extensions to your build file:"
msgstr "ビルドファイルに次のエクステンションが追加されます。"

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Writing the application"
msgstr "アプリケーションの記述"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Start by implementing `ProtectedResource`:"
msgstr "まず、 `ProtectedResource` を実装します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"`ProtectedResource` returns a name from both `userName()` and `adminName()` methods.\n"
"The name is extracted from the current `JsonWebToken`."
msgstr "`ProtectedResource` は `userName()` と `adminName()` の両方のメソッドから名前を返します。この名前は、現在の `JsonWebToken` から抽出されたものです。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, add the following REST clients:"
msgstr "次に、以下の REST クライアントを追加します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`RestClientWithOidcClientFilter`, which uses an OIDC client filter provided by the `quarkus-rest-client-oidc-filter` extension to get and propagate an access token."
msgstr "`RestClientWithOidcClientFilter`: これは、 `quarkus-rest-client-oidc-filter` エクステンションによって提供される OIDC クライアントフィルターを使用して、アクセストークンを取得および伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`RestClientWithTokenHeaderParam`, which accepts a token already acquired by the programmatically created OidcClient as an HTTP `Authorization` header value."
msgstr "`RestClientWithTokenHeaderParam`: これは、プログラムで作成された OidcClient によってすでに取得されたトークンを HTTP `Authorization` ヘッダー値として受け入れます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`RestClientWithTokenPropagationFilter`, which uses an OIDC token propagation filter provided by the `quarkus-rest-client-oidc-token-propagation` extension to get and propagate an access token."
msgstr "`RestClientWithTokenPropagationFilter`: これは、 `quarkus-rest-client-oidc-token-propagation` エクステンションによって提供される OIDC トークン伝播フィルターを使用して、アクセストークンを取得および伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Add the `RestClientWithOidcClientFilter` REST client:"
msgstr "`RestClientWithOidcClientFilter` REST クライアントを追加します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Register an OIDC client filter with the REST client to get and propagate the tokens."
msgstr "REST クライアントに OIDC クライアントフィルターを登録して、トークンを取得および伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Add the `RestClientWithTokenHeaderParam` REST client:"
msgstr "`RestClientWithTokenHeaderParam` REST クライアントを追加します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`RestClientWithTokenHeaderParam` REST client expects that the tokens will be passed to it as HTTP `Authorization` header values."
msgstr "`RestClientWithTokenHeaderParam` REST クライアントは、トークンが HTTP `Authorization` ヘッダー値として渡されることを要求します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Add the `RestClientWithTokenPropagationFilter` REST client:"
msgstr "`RestClientWithTokenPropagationFilter` REST クライアントを追加します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Register an OIDC token propagation filter with the REST client to propagate the incoming already-existing tokens."
msgstr "REST クライアントに OIDC トークン伝播フィルターを登録して、既存の受信トークンを伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Do not use the `RestClientWithOidcClientFilter` and `RestClientWithTokenPropagationFilter` interfaces in the same REST client because they can conflict, leading to issues.\n"
"For example, the OIDC client filter can override the token from the OIDC token propagation filter, or the propagation filter might not work correctly if it attempts to propagate a token when none is available, expecting the OIDC client filter to obtain a new token instead."
msgstr ""
"`RestClientWithOidcClientFilter` インターフェイスと `RestClientWithTokenPropagationFilter` インターフェイスを同じ REST クライアントで使用しないでください。競合して問題が発生する可能性があります。\n"
"たとえば、OIDC クライアントフィルターは、OIDC トークン伝播フィルターからのトークンをオーバーライドできます。また、利用可能なトークンがない場合に伝播フィルターがトークンを伝播しようとして、代わりに OIDC クライアントフィルターが新しいトークンを取得するように要求し、伝播フィルターが正しく機能しない可能性があります。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Also, add `OidcClientCreator` to create an OIDC client programmatically at startup. `OidcClientCreator` supports `RestClientWithTokenHeaderParam` REST client calls:"
msgstr "また、起動時にプログラムで OIDC クライアントを作成する `OidcClientCreator` を追加します。 `OidcClientCreator` は、 `RestClientWithTokenHeaderParam` REST クライアント呼び出しをサポートします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`OidcClients` can be used to retrieve the already initialized, named OIDC clients and create new OIDC clients on demand."
msgstr "`OidcClients` を使用して、すでに初期化され、名前が付けられた OIDC クライアントを取得できるほか、必要に応じて新しい OIDC クライアントを作成できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now, finish creating the application by adding `FrontendResource`:"
msgstr "次に、 `FrontendResource` を追加してアプリケーションの作成を完了します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` uses the injected `RestClientWithOidcClientFilter` REST client with the OIDC client filter to get and propagate an access token to `ProtectedResource` when either `/frontend/user-name-with-oidc-client-token` or `/frontend/admin-name-with-oidc-client-token` is called."
msgstr "`FrontendResource` は、 `/frontend/user-name-with-oidc-client-token` または `/frontend/admin-name-with-oidc-client-token` のいずれかが呼び出されたときに、注入された `RestClientWithOidcClientFilter` REST クライアントと OIDC クライアントフィルターを使用し、アクセストークンを取得して `ProtectedResource` に伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` uses the injected `RestClientWithTokenPropagationFilter` REST client with the OIDC token propagation filter to propagate the current incoming access token to `ProtectedResource` when either `/frontend/user-name-with-propagated-token` or `/frontend/admin-name-with-propagated-token` is called."
msgstr "`FrontendResource` は、 `/frontend/user-name-with-propagated-token` または `/frontend/admin-name-with-propagated-token` のいずれかが呼び出されたときに、注入された `RestClientWithTokenPropagationFilter` REST クライアントと OIDC トークン伝播フィルターを使用して、現在の受信アクセストークンを `ProtectedResource` に伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` uses the programmatically created OIDC client to get and propagate an access token to `ProtectedResource` by passing it directly to the injected `RestClientWithTokenHeaderParam` REST client's method as an HTTP `Authorization` header value, when either `/frontend/user-name-with-oidc-client-token-header-param` or `/frontend/admin-name-with-oidc-client-token-header-param` is called."
msgstr "`FrontendResource` は、 `/frontend/user-name-with-oidc-client-token-header-param` または `/frontend/admin-name-with-oidc-client-token-header-param` のいずれかが呼び出されたときに、プログラムで作成された OIDC クライアントを使用してアクセストークンを取得し、注入された `RestClientWithTokenHeaderParam` REST クライアントのメソッドに HTTP `Authorization` ヘッダー値として直接アクセストークンを渡すことで `ProtectedResource` に伝播します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Sometimes, one may have to acquire tokens in a blocking manner before propagating them with the REST client. This example shows how to acquire the tokens in such cases."
msgstr "場合によっては、REST クライアントでトークンを伝播する前に、ブロック方式でトークンを取得する必要があります。この例では、そのような場合にトークンを取得する方法を示します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`io.quarkus.oidc.client.runtime.TokensHelper` is a useful tool when OIDC client is used directly, without the OIDC client filter. To use `TokensHelper`, pass OIDC Client to it to get the tokens and `TokensHelper` acquires the tokens and refreshes them if necessary in a thread-safe way."
msgstr "`io.quarkus.oidc.client.runtime.TokensHelper` は、OIDC クライアントフィルターを使用せずに OIDC クライアントを直接使用する場合に便利なツールです。 `TokensHelper` を使用するには、OIDC クライアントを渡してトークンを取得します。 `TokensHelper` はトークンを取得し、必要に応じてスレッドセーフな方法でトークンを更新します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Finally, add a Jakarta REST `ExceptionMapper`:"
msgstr "最後に、Jakarta REST `ExceptionMapper` を追加します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This exception mapper is only added to verify during the tests that `ProtectedResource` returns `403` when the token has no expected role.\n"
"Without this mapper, Quarkus REST (formerly RESTEasy Reactive) would correctly convert the exceptions that escape from REST client calls to `500` to avoid leaking the information from the downstream resources such as `ProtectedResource`.\n"
"However, in the tests, it would not be possible to assert that `500` is caused by an authorization exception instead of some internal error."
msgstr ""
"この例外マッパーは、トークンに想定するロールがない場合に `ProtectedResource` が 403 を返すことをテスト中に検証するためにのみ追加されます。このマッパーがないと、Quarkus REST (旧 RESTEasy Reactive) は、REST クライアント呼び出しからエスケープされる例外を `500` に正しく変換して、 `ProtectedResource` などのダウンストリームリソースからの情報漏えいを回避します。\n"
"ただし、テストでは `500` が実際は内部エラーではなく、認可例外が原因であることをアサートできません。"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Having prepared the code, you configure the application:"
msgstr "コードを準備したら、アプリケーションを設定します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"The preceding configuration references Keycloak, which is used by `ProtectedResource` to verify the incoming access tokens and by `OidcClient` to get the tokens for a user `alice` by using a `password` grant.\n"
"Both REST clients point to ``ProtectedResource``'s HTTP address."
msgstr "上記の設定は Keycloak を参照します。Keycloak は、受信アクセストークンを検証するために `ProtectedResource` によって使用され、 `password` グラントを使用してユーザー `alice` のトークンを取得するために `OidcClient` によって使用されます。どちらの REST クライアントも ``ProtectedResource`` の HTTP アドレスを指しています。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that `Dev Services for Keycloak` launches a container for you when the application is run in dev or test modes.\n"
"For more information, see the <<oidc-client-keycloak-dev-mode,Running the application in dev mode>> section."
msgstr ""
"`quarkus.oidc.auth-server-url` に `%prod.` プロファイル接頭辞を追加すると、アプリケーションが開発モードまたはテストモードで実行されているときに、 `Dev Services for Keycloak` がコンテナーを起動するようになります。\n"
"詳細は、<<oidc-client-keycloak-dev-mode,Running the application in dev mode>> セクションを参照してください。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Starting and configuring the Keycloak server"
msgstr "Keycloak サーバーの起動と設定"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Do not start the Keycloak server when you run the application in dev or test modes; `Dev Services for Keycloak` launches a container.\n"
"For more information, see the <<oidc-client-keycloak-dev-mode,Running the application in dev mode>> section.\n"
"Ensure you put the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath, in the `target/classes` directory.\n"
"This placement ensures that the file is automatically imported in dev mode.\n"
"However, if you have already built a link:{quickstarts-tree-url}/security-openid-connect-quickstart[complete solution], you do not need to add the realm file to the classpath because the build process has already done so."
msgstr ""
"アプリケーションを開発モードまたはテストモードで実行するときは、Keycloak サーバーを起動しないでください。 `Dev Services for Keycloak` がコンテナーを起動します。\n"
"詳細は、<<oidc-client-keycloak-dev-mode,Running the application in dev mode>> セクションを参照してください。\n"
"必ず、 `target/classes` ディレクトリーのクラスパス上に link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[レルム設定ファイル] を挿入してください。\n"
"この配置により、ファイルが開発モードで自動的にインポートされるようになります。\n"
"ただし、すでに link:{quickstarts-tree-url}/security-openid-connect-quickstart[全ソリューション] を構築している場合は、ビルドプロセスによってすでに実行されているため、レルムファイルをクラスパスに追加する必要はありません。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To start a Keycloak Server, you can use Docker and just run the following command:"
msgstr "Docker を使用して次のコマンドを実行するだけで、Keycloak サーバーを起動できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "Set `{keycloak.version}` to `26.3.4` or later."
msgstr "`{keycloak.version}` を `26.3.4` 以降に設定してください。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "Keycloak サーバーには http://localhost:8180[localhost:8180] からアクセスできます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log in as the `admin` user to access the Keycloak Administration Console.\n"
"The password is `admin`."
msgstr ""
"Keycloak 管理コンソールにアクセスするには、 `admin` ユーザーとしてログインします。\n"
"パスワードは `admin` です。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Import the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr ""
"新しいレルムを作成するには、link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[レルム設定ファイル] をインポートします。\n"
"https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成する] 方法は Keycloakのドキュメントを参照してください。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This `quarkus` realm file adds a `frontend` client, and `alice` and `admin` users.\n"
"`alice` has a `user` role.\n"
"`admin` has both `user` and `admin` roles."
msgstr ""
"この `quarkus` レルムファイルでは、 `frontend` クライアントと、 `alice` および `admin` ユーザーが追加されます。\n"
"`alice` は `user` ロールを持ち、\n"
"`admin` は `user` と `admin` の両方のロールを持ちます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in dev mode"
msgstr "開発モードでのアプリケーションの実行"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To run the application in a dev mode, use:"
msgstr "アプリケーションを開発モードで実行するには、次を使用します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] launches a Keycloak container and imports `quarkus-realm.json`."
msgstr "xref:security-openid-connect-dev-services.adoc[Keycloak の Dev Services] は Keycloak コンテナーを起動し、 `quarkus-realm.json` をインポートします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Keycloak provider` link in the *OpenID Connect Dev UI* card."
msgstr "http://localhost:8080/q/dev-ui[/q/dev-ui] で入手可能な xref:dev-ui.adoc[Dev UI] を開き、*OpenID Connect Dev UI* カードの `Keycloak provider` リンクをクリックします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "When asked, log in to a `Single Page Application` provided by the OpenID Connect Dev UI:"
msgstr "求められたら、OpenID Connect Dev UI によって提供される `Single Page Application` にログインします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log in as `admin`, with the password, `admin`.\n"
"This user has both `admin` and `user` roles."
msgstr "パスワード `admin` を使用して、 `admin` としてログインします。このユーザーには、 `admin` と `user` の両方の役割があります。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/user-name-with-propagated-token`, which returns `200`."
msgstr "`/frontend/user-name-with-propagated-token` にアクセスすると、 `200` が返されます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/admin-name-with-propagated-token`, which returns `200`."
msgstr "`/frontend/admin-name-with-propagated-token` にアクセスすると、 `200` が返されます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log out and back in as `alice` with the password, `alice`.\n"
"This user has a `user` role."
msgstr ""
"ログアウトし、パスワード `alice` を使用して `alice` として再度ログインします。\n"
"このユーザーには `user` ロールがあります。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/admin-name-with-propagated-token`, which returns `403`."
msgstr "`/frontend/admin-name-with-propagated-token` にアクセスすると、 `403` が返されます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You have tested that `FrontendResource` can propagate the access tokens from the OpenID Connect Dev UI."
msgstr "これで、 `FrontendResource` が OpenID Connect Dev UI からアクセストークンを伝播できることをテストできました。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in JVM mode"
msgstr "JVM モードでのアプリケーションの実行"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr "開発モードでアプリケーションを試した後、標準の Java アプリケーションとして実行できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "First, compile it:"
msgstr "まず、コンパイルします:"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Then, run it:"
msgstr "そして、実行してみてください:"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in native mode"
msgstr "ネイティブモードでアプリケーションの実行"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can compile this demo into native code; no modifications are required."
msgstr "このデモはネイティブコードにコンパイルできます。変更は必要ありません。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This implies that you no longer need to install a JVM on your\n"
"production environment, as the runtime technology is included in\n"
"the produced binary and optimized to run with minimal resources."
msgstr ""
"これは、生成されたバイナリーにランタイムテクノロジーが含まれ、\n"
"最小限のリソースで実行するように最適化されているため、\n"
"実稼働環境に JVM をインストールする必要がなくなることを意味します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Compilation takes longer, so this step is turned off by default.\n"
"To build again, enable the `native` profile:"
msgstr ""
"コンパイルには時間がかかるため、この手順はデフォルトでオフになっています。\n"
"再度ビルドするには、 `native` プロファイルを有効にします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "After a little while, when the build finishes, you can run the native binary directly:"
msgstr "しばらくしてビルドが完了すると、ネイティブバイナリーを直接実行できます。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Testing the application"
msgstr "アプリケーションのテスト"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "For more information about testing your application in dev mode, see the preceding <<oidc-client-keycloak-dev-mode,Running the application in dev mode>> section."
msgstr "開発モードでのアプリケーションのテストの詳細は、前述の<<oidc-client-keycloak-dev-mode,Running the application in dev mode>> セクションを参照してください。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "`curl` を使用して、JVM またはネイティブモードで起動したアプリケーションをテストできます。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Obtain an access token for `alice`:"
msgstr "`alice` のアクセストークンを取得します:"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Use this token to call `/frontend/user-name-with-propagated-token`. This command returns the `200` status code and the name `alice`:"
msgstr "このトークンを使用して、 `/frontend/user-name-with-propagated-token` を呼び出します。このコマンドは、 `200` ステータスコードと名前 `alice` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Use the same token to call `/frontend/admin-name-with-propagated-token`. In contrast to the preceding command, this command returns `403` because `alice` has only a `user` role:"
msgstr "同じトークンを使用して `/frontend/admin-name-with-propagated-token` を呼び出します。前のコマンドとは対照的に、このコマンドは `alice` に `user` ロールしかないため `403` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, obtain an access token for `admin`:"
msgstr "次に `admin` 用のアクセストークンを取得します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Use this token to call `/frontend/user-name-with-propagated-token`. This command returns a `200` status code and the name `admin`:"
msgstr "このトークンを使用して `/frontend/user-name-with-propagated-token` を呼び出します。このコマンドは `200` ステータスコードと名前 `admin` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Use the same token to call `/frontend/admin-name-with-propagated-token`. This command also returns the `200` status code and the name `admin` because `admin` has both `user` and `admin` roles:"
msgstr "同じトークンを使用して、 `/frontend/admin-name-with-propagated-token` を呼び出します。このコマンドは、 `admin` に `user` と `admin` の両方のロールがあるため、 `200` ステータスコードと名前 `admin` も返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Next, check the `FrontendResource` methods, which do not propagate the existing tokens but use `OidcClient` to get and propagate the tokens.\n"
"As already shown, `OidcClient` is configured to get the tokens for the `alice` user."
msgstr ""
"次に、既存のトークンを伝播せず、 `OidcClient` を使用してトークンを取得および伝播する `FrontendResource` メソッドを確認します。\n"
"すでに示したように、 `OidcClient` は `alice` ユーザーのトークンを取得するように設定されています。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command returns the `200` status code and the name `alice`."
msgstr "このコマンドは、ステータスコード `200` と名前 `alice` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "In contrast with the preceding command, this command returns a `403` status code."
msgstr "前のコマンドとは対照的に、このコマンドは `403` ステータスコードを返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, test that the programmatically created OIDC client correctly acquires and propagates the token with `RestClientWithTokenHeaderParam` both in reactive and imperative (blocking) modes."
msgstr "次に、プログラムで作成された OIDC クライアントが、リアクティブモードと命令型 (ブロッキング) モードの両方で、 `RestClientWithTokenHeaderParam` を使用してトークンを正しく取得して伝播することをテストします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Call the `/user-name-with-oidc-client-token-header-param`. This command returns the `200` status code and the name `alice`:"
msgstr "`/user-name-with-oidc-client-token-header-param` を呼び出します。このコマンドは、 `200` ステータスコードと名前 `alice` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Call the `/admin-name-with-oidc-client-token-header-param`. In contrast with the preceding command, this command returns a `403` status code:"
msgstr "`/admin-name-with-oidc-client-token-header-param` を呼び出します。前のコマンドとは対照的に、このコマンドは `403` ステータスコードを返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, test the endpoints which use OIDC client in in the blocking mode."
msgstr "次に、ブロッキングモードで OIDC クライアントを使用するエンドポイントをテストします。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Call the `/user-name-with-oidc-client-token-header-param-blocking`. This command returns the `200` status code and the name `alice`:"
msgstr "`/user-name-with-oidc-client-token-header-param-blocking` を呼び出します。このコマンドは、 `200` ステータスコードと名前 `alice` を返します。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Call the `/admin-name-with-oidc-client-token-header-param-blocking`. In contrast with the preceding command, this command returns a `403` status code:"
msgstr "`/admin-name-with-oidc-client-token-header-param-blocking` を呼び出します。前のコマンドとは対照的に、このコマンドは `403` ステータスコードを返します。"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "References"
msgstr "リファレンス"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect Client and Token Propagation Reference Guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[OpenID Connect Client と Token Propagation のリファレンスガイド]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
