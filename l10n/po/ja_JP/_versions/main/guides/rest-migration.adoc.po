msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/rest-migration.adoc
msgid "Migrating to Quarkus REST (formerly RESTEasy Reactive)"
msgstr "Quarkus REST（旧RESTEasy Reactive）への移行"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Migrating from RESTEasy Classic to Quarkus REST (formerly RESTEasy Reactive) is straightforward in most cases, however there are a few cases that require some attention.\n"
"This document provides a list of issues users attempting the migration should be aware of."
msgstr ""
"RESTEasy Classicから Quarkus REST (旧: RESTEasy Reactive) への移行は、ほとんどの場合簡単ですが、いくつかの注意が必要なケースがあります。\n"
"この文書では、移行を試みるユーザが注意すべき問題のリストを提供します。"

#: _versions/main/guides/rest-migration.adoc
msgid "The reference documentation of Quarkus REST can be found xref:rest.adoc[here]."
msgstr "Quarkus REST のリファレンスドキュメントは xref:rest.adoc[こちら] にあります。"

#: _versions/main/guides/rest-migration.adoc
msgid "Server"
msgstr "サーバー"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"The server part of Quarkus REST (`quarkus-rest` and its dependencies) provide an implementation of the Jakarta REST specification, but leverage Quarkus' build time processing\n"
"and the unified I/O model provided by Vert.x."
msgstr ""
"Quarkus REST (旧: RESTEasy Reactive) のサーバー部分 ( `quarkus-resteasy-reactive` とその依存関係) は、Jakarta REST仕様の実装を提供しますが、\n"
"Quarkusのビルド時処理とVert.xが提供する統一I/Oモデルを活用しています。"

#: _versions/main/guides/rest-migration.adoc
msgid "Dependencies"
msgstr "依存関係"

#: _versions/main/guides/rest-migration.adoc
msgid "The following table matches the legacy RESTEasy dependencies with the new Quarkus REST ones."
msgstr "次の表は、従来の RESTEasy 依存関係と新しい Quarkus REST 依存関係を対応付けています。"

#: _versions/main/guides/rest-migration.adoc
msgid "Legacy"
msgstr "Legacy"

#: _versions/main/guides/rest-migration.adoc
msgid "Quarkus REST"
msgstr "Quarkus REST"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy`"
msgstr "`quarkus-resteasy`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest`"
msgstr "`quarkus-rest`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-jackson`"
msgstr "`quarkus-resteasy-jackson`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-jackson`"
msgstr "`quarkus-rest-jackson`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-jsonb`"
msgstr "`quarkus-resteasy-jsonb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-jsonb`"
msgstr "`quarkus-rest-jsonb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-jaxb`"
msgstr "`quarkus-resteasy-jaxb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-jaxb`"
msgstr "`quarkus-rest-jaxb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-qute`"
msgstr "`quarkus-resteasy-qute`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-qute`"
msgstr "`quarkus-rest-qute`"

#: _versions/main/guides/rest-migration.adoc
msgid "The `quarkus-resteasy-mutiny` does not have a corresponding dependency, as Quarkus REST provides Mutiny integration out of the box."
msgstr "`quarkus-resteasy-mutiny` は、Quarkus REST が Mutiny のインテグレーションを最初から提供するため、対応する依存関係がありません。"

#: _versions/main/guides/rest-migration.adoc
msgid "Annotations"
msgstr "アノテーション"

#: _versions/main/guides/rest-migration.adoc
msgid "Quarkus REST does not support the various custom annotation under the `org.jboss.resteasy.annotations` package."
msgstr "Quarkus REST は、 `org.jboss.resteasy.annotations` パッケージの各種カスタムアノテーションには対応していません。"

#: _versions/main/guides/rest-migration.adoc
msgid "The following table matches the legacy RESTEasy annotations with the new Quarkus REST ones."
msgstr "次の表は、従来の RESTEasy アノテーションと新しい Quarkus REST アノテーションを対応させたものです。"

#: _versions/main/guides/rest-migration.adoc
msgid "Comments"
msgstr "Comments"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.PathParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.PathParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestPath`"
msgstr "`org.jboss.resteasy.reactive.RestPath`"

#: _versions/main/guides/rest-migration.adoc
msgid "This annotation is not necessary when the path part matches the method parameter name"
msgstr "パス部分がメソッドパラメータ名と一致する場合は、このアノテーションは必要ありません"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.QueryParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.QueryParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestQuery`"
msgstr "`org.jboss.resteasy.reactive.RestQuery`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.FormParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.FormParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestForm`"
msgstr "`org.jboss.resteasy.reactive.RestForm`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.HeaderParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.HeaderParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestHeader`"
msgstr "`org.jboss.resteasy.reactive.RestHeader`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.CookieParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.CookieParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestCookie`"
msgstr "`org.jboss.resteasy.reactive.RestCookie`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.jaxrs.MatrixParam`"
msgstr "`org.jboss.resteasy.annotations.jaxrs.MatrixParam`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestMatrix`"
msgstr "`org.jboss.resteasy.reactive.RestMatrix`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.cache.Cache`"
msgstr "`org.jboss.resteasy.annotations.cache.Cache`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.Cache`"
msgstr "`org.jboss.resteasy.reactive.Cache`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.cache.NoCache`"
msgstr "`org.jboss.resteasy.annotations.cache.NoCache`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.NoCache`"
msgstr "`org.jboss.resteasy.reactive.NoCache`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.SseElementType`"
msgstr "`org.jboss.resteasy.annotations.SseElementType`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.RestStreamElementType`"
msgstr "`org.jboss.resteasy.reactive.RestStreamElementType`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.annotations.Separator`"
msgstr "`org.jboss.resteasy.annotations.Separator`"

#: _versions/main/guides/rest-migration.adoc
msgid "`org.jboss.resteasy.reactive.Separator`"
msgstr "`org.jboss.resteasy.reactive.Separator`"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"The previous table does not include the `org.jboss.resteasy.annotations.Form` annotation because there is no Quarkus REST specific replacement for it.\n"
"Users are instead encouraged to use the Jakarta REST standard `jakarta.ws.rs.BeanParam` annotation which is supported on both the server and the client."
msgstr ""
"前の表には `org.jboss.resteasy.annotations.Form` アノテーションは含まれていません。これは、Quarkus REST 固有の代替が存在しないためです。\n"
"代わりに、サーバーとクライアントの両方でサポートされている Jakarta REST 標準の `jakarta.ws.rs.BeanParam` アノテーションを使用することを推奨します。"

#: _versions/main/guides/rest-migration.adoc
msgid "Jakarta REST providers"
msgstr "Jakarta RESTプロバイダー"

#: _versions/main/guides/rest-migration.adoc
msgid "Although Quarkus REST provides the same spec compliant behavior as RESTEasy Classic does, it does not include the same exact provider implementations at runtime."
msgstr "Quarkus REST は RESTEasy Classic と同じ仕様に準拠した動作を提供しますが、実行時にまったく同じプロバイダー実装は含まれません。"

#: _versions/main/guides/rest-migration.adoc
msgid "The most common case where the difference in providers might result in different behavior, is the included `jakarta.ws.rs.ext.ExceptionMapper` implementations. To see what classes are included in the application, launch the application in dev mode and navigate to http://localhost:8080/q/dev-ui/quarkus-rest/exception-mappers."
msgstr "プロバイダの違いによって動作が異なる最も一般的なケースは、 `jakarta.ws.rs.ext.ExceptionMapper` の実装です。アプリケーションに含まれるクラスを確認するには、開発モードでアプリケーションを起動し、 link:http://localhost:8080/q/dev-ui/quarkus-rest/exception-mappers[http://localhost:8080/q/dev-ui/quarkus-rest/exception-mappers] を開いてください。"

#: _versions/main/guides/rest-migration.adoc
msgid "Service Loading"
msgstr "サービスローディング"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"RESTEasy Classic supports determining providers at build time using Java's Service Loader. In order to ensure that all providers are determined at build time,\n"
"Quarkus REST does not support this feature. Instead, users that have providers in application dependencies are encouraged to index those dependencies\n"
"using one of the methods described in the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr ""
"RESTEasy Classic は、すべてのプロバイダーがビルド時に決定されるように、Java のサービスローダーを使用してビルド時にプロバイダーを決定するサポートを提供します。\n"
"Quarkus REST はこの機能をサポートしていません。代わりに、アプリケーションの依存関係にプロバイダーを持つユーザーは、それらの依存関係をインデックス化することが推奨されます。\n"
"CDI ガイドの xref:cdi-reference.adoc#bean_discovery[Bean Discovery] セクションで説明されている方法のいずれかを使用します。"

#: _versions/main/guides/rest-migration.adoc
msgid "Multipart support"
msgstr "マルチパート対応"

#: _versions/main/guides/rest-migration.adoc
msgid "HTTP Multipart support in Quarkus REST does **not** reuse the same types or annotations as RESTEasy Classic and thus users are encouraged to read <<rest.adoc#multipart,this>> part of the reference documentation."
msgstr "Quarkus REST の HTTP マルチパートサポートは、RESTEasy Classic と同じ型やアノテーションを再利用しないため、ユーザーには、<<rest.adoc#multipart,this>> リファレンスドキュメントの一部を参照することを推奨します。"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Users migrating multipart resources to Quarkus REST should be aware of the configuration parameter `quarkus.http.limits.max-form-attribute-size`, as this poses an upper limit to the size of each part.\n"
"Any request with a part size exceeding this configuration value will result in HTTP status code 413."
msgstr ""
"マルチパートリソースを Quarkus REST に移行するユーザーは、各パーツのサイズに上限を設定する設定パラメーター `quarkus.http.limits.max-form-attribute-size` に注意する必要があります。\n"
"この設定値を超える部分サイズのリクエストには、HTTP ステータスコード 413 が返されます。"

#: _versions/main/guides/rest-migration.adoc
msgid "Default media types"
msgstr "デフォルトのメディアタイプ"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Quarkus uses smart defaults when determining the media type of Jakarta REST methods in order to simplify common use cases.\n"
"The difference between `quarkus-rest` and `quarkus-resteasy` is the use of `text/plain` as the default media type instead of `text/html`\n"
"when the method returns a `String`."
msgstr ""
"Quarkusでは、一般的なユースケースで簡単に使えるようにするために、Jakarta RESTメソッドのメディアタイプを決定する際にスマートデフォルトを使用しています。\n"
"`quarkus-rest` と `quarkus-resteasy` の違いは、メソッドが `String` を返すときに、\n"
"`text/html` の代わりに `text/plain` をデフォルトのメディアタイプとして使用することです。"

#: _versions/main/guides/rest-migration.adoc
msgid "Injection of `@SessionScoped` beans"
msgstr "`@SessionScoped` Bean の注入"

#: _versions/main/guides/rest-migration.adoc
msgid "`@SessionScoped` beans are currently not supported. Should you really need this functionality, you'll need to use RESTEasy Classic instead of RESTEasy Reactive."
msgstr "`@SessionScoped` Bean は現在サポートされていません。この機能が本当に必要な場合は、RESTEasy Reactive ではなく RESTEasy Classic を使用する必要があります。"

#: _versions/main/guides/rest-migration.adoc
msgid "Servlets"
msgstr "サーブレット"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Quarkus REST does **not** support servlets.\n"
"If your project depends on servlets you have to migrate them.\n"
"A servlet-based JAX-RS implementation must support injections of these types with the `@Context` annotation: `ServletConfig`, `ServletContext`, `HttpServletRequest` and `HttpServletResponse`.\n"
"Since Quarkus REST is not servlet-based these injections will not work."
msgstr ""
"Quarkus REST はサーブレットをサポートして *いません* 。\n"
"プロジェクトが servlet に依存している場合は、それらを移行する必要があります。\n"
"サーブレット・ベースの JAX-RS 実装では、 `@Context` アノテーションを使用して、これらの型の注入をサポートする必要があります： `ServletConfig` 、 `ServletContext` 、 `HttpServletRequest` 、および `HttpServletResponse` 。\n"
"RESTEasy Reactive はサーブレットベースではないため、これらの注入は機能しません。"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"It is not always obvious that this will fail especially if you depend on an extension like `quarkus-undertow` which supplies the interfaces.\n"
"For example, if you write this you could compile it but get an exception on calling it:"
msgstr ""
"特に、 `quarkus-undertow` のような、インターフェイスを提供するエクステンションに依存している場合、これが失敗するとは限りません。\n"
"たとえば、これをコンパイル出来ても、呼び出すときに例外が発生します："

#: _versions/main/guides/rest-migration.adoc
msgid ""
"The same is true for your third-party libraries.\n"
"If they happen to depend on servlets you need to find a migration path for them."
msgstr "サードパーティのライブラリも同様です。もしそれらがサーブレットに依存しているのであれば、移行パスを見つける必要があります。"

#: _versions/main/guides/rest-migration.adoc
msgid "Log authentication and authorization failures"
msgstr "認証と認可の失敗をログに記録"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"The Quarkus REST endpoint security checks are performed before xref:cdi.adoc#interceptors[CDI interceptors] are invoked.\n"
"The safest approach to log Quarkus Security authentication exceptions is to ensure that proactive authentication is enabled and to use Vert.x HTTP route failure handlers.\n"
"For more information, see the xref:security-proactive-authentication.adoc#customize-auth-exception-responses[Customize authentication exception responses] section of the Proactive authentication guide."
msgstr ""
"Quarkus REST エンドポイントのセキュリティーチェックは、xref:cdi.adoc#interceptors[CDI インターセプター] が呼び出される前に実行されます。\n"
"Quarkus Security 認証例外をログに記録する最も安全な方法として、プロアクティブ認証が有効になっていることを確認し、Vert.x HTTP ルート失敗ハンドラーを使用することが挙げられます。\n"
"詳細は、プロアクティブ認証ガイドの xref:security-proactive-authentication.adoc#customize-auth-exception-responses[認証例外応答のカスタマイズ] セクションを参照してください。"

#: _versions/main/guides/rest-migration.adoc
msgid "Client"
msgstr "クライアント"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"The REST Client (`quarkus-rest-client` and its dependencies) replaces the legacy RESTEasy Classic-based `quarkus-resteasy-client` and leverages Quarkus' build time processing\n"
"and the unified I/O model provided by Vert.x."
msgstr ""
"REST クライアント (`quarkus-rest-client`とその依存関係) は、従来の RESTEasy Classic ベースの `quarkus-resteasy-client` を置き換え、Quarkus のビルド時処理と\n"
"Vert.x が提供する統合 I/O モデルを活用します。"

#: _versions/main/guides/rest-migration.adoc
msgid "The following table matches the legacy RESTEasy Classic-based REST Client dependencies with the new REST Client ones."
msgstr "次の表は、従来の RESTEasy Classic ベースの REST クライアントの依存関係と新しい REST クライアントの依存関係を対応付けています。"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-client`"
msgstr "`quarkus-resteasy-client`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-client`"
msgstr "`quarkus-rest-client`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-client-jackson`"
msgstr "`quarkus-resteasy-client-jackson`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-client-jackson`"
msgstr "`quarkus-rest-client-jackson`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-client-jsonb`"
msgstr "`quarkus-resteasy-client-jsonb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-client-jsonb`"
msgstr "`quarkus-rest-client-jsonb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-client-jaxb`"
msgstr "`quarkus-resteasy-client-jaxb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-rest-client-jaxb`"
msgstr "`quarkus-rest-client-jaxb`"

#: _versions/main/guides/rest-migration.adoc
msgid "`quarkus-resteasy-client-mutiny`"
msgstr "`quarkus-resteasy-client-mutiny`"

#: _versions/main/guides/rest-migration.adoc
msgid "No replacement, natively supports Mutiny"
msgstr "代替はありません。Mutinyをネイティブにサポートしています"

#: _versions/main/guides/rest-migration.adoc
msgid "Keycloak admin client"
msgstr "Keycloak adminクライアント"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"When using `quarkus-rest-client`, users can use the `quarkus-keycloak-admin-rest-client` to administer the target Keycloak instance\n"
"by leveraging the rest client."
msgstr ""
"`quarkus-rest-client` を使用する場合、ユーザーは `quarkus-keycloak-admin-rest-client` を使用して、\n"
"RESTクライアントを活用してターゲットの Keycloakインスタンスを管理できます。"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"When using `quarkus-resteasy-client` however, users must use `quarkus-keycloak-admin-resteasy-client` to access the same functionality\n"
"and use the legacy RESTEasy Classic-based REST Client."
msgstr ""
"ただし、 `quarkus-resteasy-client` を使用する場合、ユーザーは同じ機能にアクセスするために `quarkus-keycloak-admin-resteasy-client` を使用する必要があります。\n"
"従来の RESTEasy Classic ベースの REST クライアントを使用します。"

#: _versions/main/guides/rest-migration.adoc
msgid "OIDC"
msgstr "OIDC"

#: _versions/main/guides/rest-migration.adoc
msgid "When using `quarkus-rest-client`, users can use the `quarkus-rest-client-oidc-filter` extension to acquire and refresh access tokens from OpenID Connect and OAuth 2.0 compliant Authorization Servers."
msgstr "`quarkus-rest-client` を使用する場合、ユーザーは `quarkus-rest-client-oidc-filter` エクステンションを使用して、OpenID Connect および OAuth 2.0 準拠の認可サーバーからアクセストークンを取得および更新できます。"

#: _versions/main/guides/rest-migration.adoc
msgid "When using `quarkus-resteasy-client` however, users must use `quarkus-resteasy-client-oidc-filter` to access the same functionality."
msgstr "ただし、 `quarkus-resteasy-client` を使用する場合、ユーザーは同じ機能にアクセスするために `quarkus-resteasy-client-oidc-filter` を使用する必要があります。"

#: _versions/main/guides/rest-migration.adoc
msgid "Similarly, `quarkus-rest-client-oidc-token-propagation` allows user of the legacy REST to propagate the current `Bearer` or `Authorization Code Flow` access tokens."
msgstr "同様に、 `quarkus-rest-client-oidc-token-propagation` は、従来の REST のユーザーが現在の `Bearer` または `Authorization Code Flow` のアクセストークンを伝搬することを可能にします。"

#: _versions/main/guides/rest-migration.adoc
msgid "When using `quarkus-resteasy-client` however, users must use `quarkus-resteasy-client-oidc-token-propagation` to access the same functionality."
msgstr "ただし、 `quarkus-resteasy-client` を使用する場合、ユーザーは同じ機能にアクセスするために `quarkus-resteasy-client-oidc-token-propagation` を使用する必要があります。"

#: _versions/main/guides/rest-migration.adoc
msgid "Custom extensions"
msgstr "カスタムエクステンション"

#: _versions/main/guides/rest-migration.adoc
msgid "This is an advanced section that only needs to be read by users who have developed custom extensions that depend on Jakarta REST and / or REST Client functionality."
msgstr "このセクションは、Jakarta RESTおよび/またはREST Client機能に依存するカスタムエクステンションを開発したユーザーだけが読む必要のある高度なセクションです。"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"A first concern is whether custom extensions should depend on Quarkus REST explicitly, or alternatively support both RESTEasy flavors and leave it to the user to decide.\n"
"If the extension is some general purpose extension, it probably makes sense to choose the latter option, while the former option is easiest to adopt when the custom\n"
"extension is used by a specific set of users / applications."
msgstr ""
"最初の懸念は、カスタムエクステンションが Quarkus REST に明示的に依存する必要があるか、または代わりに両方の RESTEasy フレーバーをサポートしてユーザーに決定させるかということです。\n"
"エクステンションが汎用的である場合は、後者のオプションを選択するのが理にかなっている可能性がありますが、前者は、カスタムのエクステンションが\n"
"特定のユーザー/アプリケーションセットによって使用されている場合には最も簡単なオプションです。"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"When opting for supporting both extensions, the deployment module of the custom extension will usually depend on the SPI modules - `quarkus-jaxrs-spi-deployment`, `quarkus-resteasy-common-spi`, `quarkus-rest-spi-deployment`,\n"
"while the runtime modules will have `optional` dependencies on the runtime modules of both RESTEasy flavors."
msgstr ""
"両方のエクステンションをサポートすることを選択した場合、カスタムエクステンションのデプロイメントモジュールは通常、SPIモジュール - `quarkus-jaxrs-spi-deployment` , `quarkus-resteasy-common-spi` , `quarkus-rest-spi-deployment` に依存し、\n"
"ランタイムモジュールは両方のRESTEasy フレーバーのランタイムモジュールに `optional` 依存することになります。"

#: _versions/main/guides/rest-migration.adoc
msgid "A couple good examples of how Quarkus uses this strategy to support both RESTEasy flavors in the core repository can be seen https://github.com/quarkusio/quarkus/pull/21089[here] and https://github.com/quarkusio/quarkus/pull/20874[here]."
msgstr "Quarkusがこの戦略を用いて、コアリポジトリでRESTEasyの両方のフレーバーをサポートしている適切な例が https://github.com/quarkusio/quarkus/pull/21089[こちら] と https://github.com/quarkusio/quarkus/pull/20874[こちら] で確認できます。"

#: _versions/main/guides/rest-migration.adoc
msgid "In general, it should not be needed to have two different versions of the custom extension to support both flavors. Such a choice is only strictly necessary if it is desired for the extension consumers (i.e. Quarkus applications) to not have to select a RESTEasy version themselves."
msgstr "一般に、両方のフレーバーをサポートするために、カスタムエクステンションの2つの異なるバージョンを用意する必要はないはずです。このような選択が厳密に必要なのは、エクステンションの消費者（Quarkusアプリケーションなど）がRESTEasyのバージョンを自分で選択する必要がない場合のみです。"

#: _versions/main/guides/rest-migration.adoc
msgid "Resource and Provider discovery"
msgstr "リソースとプロバイダーのディスカバリー"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Custom extensions that contain Jakarta REST Resources, Providers or REST Client interfaces in their runtime modules and depend on Jandex indexing for\n"
"their discovery (for example because they have an empty `META-INF/beans.xml` file) don't have to perform any additional setup to make\n"
"these discoverable by Quarkus REST."
msgstr ""
"Jakarta REST Resources、Providers、REST Clientインターフェースを実行時モジュールに含み、\n"
"Jandexインデックスに依存するカスタムエクステンションは（たとえば、空の `META-INF/beans.xml` ファイルを持つため）、\n"
"Quarkus REST でこれらを検出できるように、追加で設定を行う必要はありません。"

#: _versions/main/guides/rest-migration.adoc
msgid "Provider registration via Build Items"
msgstr "ビルドアイテムによるプロバイダー登録"

#: _versions/main/guides/rest-migration.adoc
msgid ""
"Extensions that register providers via build items use the `io.quarkus.resteasy.common.spi.ResteasyJaxrsProviderBuildItem` build item in RESTEasy Classic.\n"
"With Quarkus REST however, extensions need to use specific build items, such as `io.quarkus.resteasy.reactive.spi.MessageBodyWriterBuildItem` and `io.quarkus.resteasy.reactive.spi.MessageBodyWriterBuildItem`."
msgstr ""
"ビルド アイテムを介してプロバイダーを登録するエクステンションは、RESTEasy Classic の `io.quarkus.resteasy.common.spi.ResteasyJaxrsProviderBuildItem` ビルド アイテムを使用します。\n"
"ただし、Quarkus REST では、エクステンションは `io.quarkus.resteasy.reactive.spi.MessageBodyWriterBuildItem` や `io.quarkus.resteasy.reactive.spi.MessageBodyWriterBuildItem` などの特定のビルド アイテムを使用する必要があります。"

#: _versions/main/guides/rest-migration.adoc
msgid "REST Client"
msgstr "RESTクライアント"

#: _versions/main/guides/rest-migration.adoc
msgid "Any code that is run as part of a Quarkus application that used the RESTEasy Client, can safely use the REST Client, as all necessary setup for it has been done at the application's static-init phase."
msgstr "RESTEasy クライアントを使用した Quarkus アプリケーションの一部として実行されるコードは、必要なすべてのセットアップがアプリケーションの静的初期化フェーズで完了しているため、REST クライアントを安全に使用できます。"
