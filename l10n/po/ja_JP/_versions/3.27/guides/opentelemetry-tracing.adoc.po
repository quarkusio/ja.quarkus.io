msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Using OpenTelemetry Tracing"
msgstr "OpenTelemetry Tracing の使用"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] (OTel) to provide\n"
"distributed tracing for interactive web applications."
msgstr "このガイドでは、Quarkusアプリケーションで link:https://opentelemetry.io/[OpenTelemetry] （OTel）を利用して、インタラクティブなWebアプリケーションに分散トレースを提供する方法について説明します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "This document is part of the xref:observability.adoc[Observability in Quarkus reference guide] which features this and other observability related components."
msgstr "このドキュメントは、このコンポーネントとその他のオブザーバビリティ関連コンポーネントを特集した xref:observability.adoc[Quarkus のオブザーバビリティリファレンス ガイド] の一部です。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "The xref:opentelemetry.adoc[OpenTelemetry Guide] is available with signal independent information about the OpenTelemetry extension."
msgstr "xref:opentelemetry.adoc[OpenTelemetry ガイド] には、信号に依存しない、OpenTelemetry エクステンションに関する情報が記載されています。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "If you search more information about OpenTelemetry Metrics, please refer to the xref:opentelemetry-metrics.adoc[OpenTelemetry Metrics Guide]."
msgstr "OpenTelemetry Metrics の詳細情報を検索する場合は、xref:opentelemetry-metrics.adoc[OpenTelemetry Metrics ガイド] を参照してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "このガイドでは、分散トレースを実証するための簡単なRESTアプリケーションを作成します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、すぐに完成した例に飛んでも構いません。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "The solution is located in the `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "ソリューションは `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry` extension,\n"
"which includes the default OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr "このコマンドはMavenプロジェクトを生成し、 `quarkus-opentelemetry` エクステンションをインポートします。このエクステンションには、デフォルトのOpenTelemetryサポートと、 https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]のgRPC spanエクスポーターが含まれています。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Quarkusプロジェクトがすでに設定されている場合、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `quarkus-opentelemetry` エクステンションをプロジェクトに追加できます："

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "`src/main/java/org/acme/opentelemetry/TracedResource.java` のファイルを開くと、以下の内容が表示されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Notice that there is no tracing specific code included in the application. By default, requests sent to this\n"
"endpoint will be traced without any required code changes."
msgstr "このアプリケーションには、トレースのためのコードが含まれていないことに注意してください。デフォルトでは、このエンドポイントに送信されたリクエストは、コードの変更を必要とせずにトレースされます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Run the application"
msgstr "アプリケーションの実行"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"First we need to start a system to visualise the OpenTelemetry data.\n"
"We have 2 options:"
msgstr ""
"まず、OpenTelemetry データを視覚化するシステムを起動する必要があります。\n"
"2 つの選択肢があります。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Start an all-in-one Grafana OTel LGTM system for traces and metrics."
msgstr "トレースとメトリクス用のオールインワン Grafana OTel LGTM システムの開始。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Jaeger system just for traces."
msgstr "トレース専用の Jaeger システム。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Grafana OTel LGTM option"
msgstr "Grafana OTel LGTM オプション"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Take a look at: xref:observability-devservices-lgtm.adoc[Getting Started with Grafana-OTel-LGTM]."
msgstr "xref:observability-devservices-lgtm.adoc[Grafana-OTel-LGTM のスタートガイド] を参照してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "This features a Quarkus Dev service including a Grafana for visualizing data, Loki to store logs, Tempo to store traces and Prometheus to store metrics. Also provides an OTel collector to receive the data."
msgstr "これには、データを視覚化するための Grafana、ログを保存するための Loki、トレースを保存するための Tempo、メトリクスを保存するための Prometheus を含む Quarkus Dev Service が含まれています。また、データを受信するための OTel コレクターも提供されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Jaeger to see traces option"
msgstr "トレースオプションを表示するための Jaeger。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] を設定して起動し、テレメトリーデータを受信、処理、およびエクスポートして、キャプチャされたトレースを https://www.jaegertracing.io/[Jaeger] に表示できるようにします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Jaeger-all-in-one includes the Jaeger agent, an OTel collector, and the query service/UI.\n"
"You do not need to install a separated collector. You can directly send the trace data to Jaeger (after enabling OTLP receivers there, see e.g. this\n"
"https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[blog entry] for details)."
msgstr "Jaeger-all-in-oneは、Jaegerエージェント、OTelコレクター、クエリサービス/UIを含みます。分離型コレクタをインストールする必要はありません。トレースデータを直接Jaegerに送ることができます（OTLPレシーバーを有効にした後、詳細はこちらの link:https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[ブログエントリ] などをご覧ください）。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "`docker-compose up -d` OpenTelemetry CollectorとJaegerシステムを、以下の `docker-compose.yml` ファイルを介して起動します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "You should remove the optional ports you don't need them."
msgstr "オプションのポートは必要ないものは外しておいた方が良いです。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Start the application"
msgstr "アプリケーションを起動します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "これでアプリケーションを実行する準備が整いました。トレーサーの設定に `application.properties` を使用している場合:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "または、JVM引数でOTLP gRPCエンドポイントを設定する場合:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "With the OpenTelemetry Collector, the Jaeger system and the application running, you can make a request to the provided endpoint:"
msgstr "OpenTelemetry Collector、Jaegerシステム、アプリケーションが動作している状態で、提供されているエンドポイントにリクエストを出すことができます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "When the first request has been submitted, you will be able to see the tracing information in the logs:"
msgstr "最初のリクエストが送信された時点で、ログにトレース情報が表示されるようになります:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "その後、 link:http://localhost:16686[Jaeger UI] にアクセスしてトレース情報を確認します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Hit `CTRL+C` or type `q` to stop the application."
msgstr "`CTRL+C` を押すか、 `q` と入力して、アプリケーションを停止してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "JDBC"
msgstr "JDBC"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
#, fuzzy
msgid "The https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] bundled with this extension will add a span for each JDBC queries done by your application."
msgstr "この拡張モジュールにバンドルされている link:https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC インスツルメンテーションは] 、 アプリケーションが実行する JDBC クエリごとにスパンを追加します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
#, fuzzy
msgid "As it uses a dedicated JDBC datasource wrapper, you must enable telemetry for your datasource with the `quarkus.datasource.jdbc.telemetry` property, as in the following example:"
msgstr "専用の JDBC データソース・ラッパーを使用するため、次の例のように、 `quarkus.datasource.jdbc.telemetry` プロパティでデータソースの遠隔測定を有効にする必要があります："

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Additional configuration"
msgstr "追加設定"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Some use cases will require custom configuration of OpenTelemetry.\n"
"These sections will outline what is necessary to properly configure it."
msgstr "一部のユースケースでは、OpenTelemetryのカスタム設定が必要になります。 これらのセクションでは、適切に構成するために必要なものについて概説します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "ID Generator"
msgstr "IDジェネレーター"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator]\n"
"when creating the trace and span identifier."
msgstr "OpenTelemetry エクステンションでは、トレースおよびスパンの識別子を作成する際に、デフォルトでランダムな link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID ジェネレーター]を使用します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.\n"
"The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr "ベンダー固有のプロトコルの中には、カスタム ID ジェネレーターを必要とするものがありますが、プロデューサーを作成することで、デフォルトの ID ジェネレーターを上書きすることができます。OpenTelemetryエクステンションは、 `IdGenerator` CDI Beanを検出し、トレーサープロデューサーを構成する際にそれを使用します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Propagators"
msgstr "プロパゲーター"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accessing\n"
"data across the lifespan of a distributed transaction."
msgstr "OpenTelemetry は、 https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[プロパゲーター] を介して分野横断的な関心事を伝播し、状態を保存するための基になる\"コンテキスト\"を共有します 分散トランザクションの存続期間全体にわたってデータにアクセスします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage]\n"
"propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the <<configuration-reference>>."
msgstr "デフォルトでは、OpenTelemetryエクステンションは、 link:https://www.w3.org/TR/trace-context/[W3C Trace Context]と link:https://www.w3.org/TR/baggage/[W3C Baggage]プロパゲータを有効にしていますが、 link:#configuration-reference[設定リファレンス]で説明されている `propagators` 設定を設定することで、サポートされているOpenTelemetryプロパゲータのいずれかを選択することができます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Additional Propagators"
msgstr "追加プロパゲーター"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]\n"
"extension to be added as a dependency to your project."
msgstr "`b3`, `b3multi`, `jaeger`, `ottrace` のプロパゲータは、プロジェクトに link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]エクステンションを依存関係として追加する必要があります。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws]\n"
"extension to be added as a dependency to your project."
msgstr "`xray` プロパゲーターは、お客様のプロジェクトに link:https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws] エクステンションを依存関係として追加することを必要とします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Customise Propagator"
msgstr "プロパゲーターをカスタマイズする"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "To customise the propagation header you can implement the `TextMapPropagatorCustomizer` interface. This can be used, as an example, to restrict propagation of OpenTelemetry trace headers and prevent potentially sensitive data to be sent to third party systems."
msgstr "伝播ヘッダーをカスタマイズするには、 `TextMapPropagatorCustomizer` インターフェイスを実装します。たとえば、これを使用して、OpenTelemetry トレースヘッダーの伝播を制限し、機密性の高いデータがサードパーティーのシステムに送信されないようにすることができます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Resource"
msgstr "リソース"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "See the main xref:opentelemetry.adoc#resource[OpenTelemetry Guide resources] section."
msgstr "メインの xref:opentelemetry.adoc#resource[OpenTelemetry ガイドリソース] セクションを参照してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "End User attributes"
msgstr "エンドユーザー属性"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"When enabled, Quarkus adds OpenTelemetry End User attributes as Span attributes.\n"
"Before you enable this feature, verify that Quarkus Security extension is present and configured.\n"
"More information about the Quarkus Security can be found in the xref:security-overview.adoc[Quarkus Security overview]."
msgstr ""
"有効にすると、Quarkus は OpenTelemetry エンドユーザー属性を Span 属性として追加します。\n"
"この機能を有効にする前に、Quarkus Security エクステンションが存在し、設定されていることを確認してください。\n"
"Quarkus Security の詳細は、xref:security-overview.adoc[Quarkus Security の概要] を参照してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"The attributes are only added when authentication has already happened on a best-efforts basis.\n"
"Whether the End User attributes are added as Span attributes depends on authentication and authorization configuration of your Quarkus application.\n"
"If you create custom Spans prior to the authentication, Quarkus cannot add the End User attributes to them.\n"
"Quarkus is only able to add the attributes to the Span that is current after the authentication has been finished.\n"
"Another important consideration regarding custom Spans is active CDI request context that is used to propagate Quarkus `SecurityIdentity`.\n"
"In principle, Quarkus is able to add the End User attributes when the CDI request context has been activated for you before the custom Spans are created."
msgstr ""
"属性は、ベストエフォート方式で認証がすでに行われている場合にのみ追加されます。\n"
"End User 属性が Span 属性として追加されるかどうかは、Quarkus アプリケーションの認証および認可の設定によって異なります。\n"
"認証前にカスタム Span を作成した場合、Quarkus はそれらに End User 属性を追加できません。\n"
"Quarkus は、認証が完了した後にのみ、現在の Span に属性を追加できます。\n"
"カスタム Span に関するもう 1 つの重要な考慮事項は、Quarkus の `SecurityIdentity` を伝播するために使用されるアクティブな CDI リクエストコンテキストです。\n"
"原則として、カスタム Span が作成される前に CDI リクエストコンテキストがアクティブ化されている場合、Quarkus は End User 属性を追加できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Enable the End User Attributes feature so that the `SecurityIdentity` principal and roles are added as Span attributes.\n"
"The End User attributes are personally identifiable information, therefore make sure you want to export them before you enable this feature."
msgstr ""
"End User 属性機能を有効にして、 `SecurityIdentity` プリンシパルとロールが Span 属性として追加されるようにします。\n"
"End User 属性は個人を特定できる情報であるため、この機能を有効にする前にエクスポートすることを確認してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Optionally enable proactive authentication.\n"
"The best possible results are achieved when proactive authentication is enabled because the authentication happens sooner.\n"
"A good way to determine whether proactive authentication should be enabled in your Quarkus application is to read the Quarkus xref:security-proactive-authentication.adoc[Proactive authentication] guide."
msgstr ""
"必要に応じて、プロアクティブ認証を有効にします。\n"
"プロアクティブ認証を有効にすると、認証がより早く行われるため、最良の結果が得られます。\n"
"Quarkus アプリケーションでプロアクティブ認証を有効にする必要があるかどうかを判断する良い方法は、Quarkus の xref:security-proactive-authentication.adoc[プロアクティブ認証] ガイドを読むことです。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "This feature is not supported when a custom xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] is used."
msgstr "この機能は、カスタム xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] が使用されている場合にはサポートされません。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Sampler"
msgstr "サンプラー"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether a trace should be discarded or forwarded, effectively managing noise and reducing overhead by limiting the number of collected traces sent to the collector."
msgstr "https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[サンプラー] は、トレースを破棄するか転送するかを決定し、コレクターに送信される収集されたトレースの数を制限することで、ノイズを効果的に管理し、オーバーヘッドを削減します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Quarkus comes equipped with a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler], and you also have the option to create your custom sampler."
msgstr "Quarkus には https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[組み込みサンプラー] が装備されており、カスタムサンプラーを作成するオプションもあります。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "To use the built-in sampler, you can configure it by setting the desired sampler parameters as detailed in the <<configuration-reference>>. As an example, you can configure the sampler to retain 50% of the traces:"
msgstr "組み込みサンプラーを使用するには、<<configuration-reference>> の説明にあるように、必要なサンプラーパラメーターを設定することで、設定できます。たとえば、トレースの 50% を保持するようにサンプラーを設定できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "An interesting use case for the sampler is to activate and deactivate tracing export at runtime, according to this example:"
msgstr "サンプラーの興味深いユースケースは、次の例のように、実行時にトレーシングのエクスポートをアクティブ化または非アクティブ化することです。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "If you need to use a custom sampler there are now 2 different ways:"
msgstr "カスタムサンプラーを使用する必要がある場合、現在2種類の方法があります:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Sampler CDI Producer"
msgstr "サンプラー CDI プロデューサー"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "You can create a sampler CDI producer. The Quarkus OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the Tracer."
msgstr "サンプラー CDI プロデューサーを作成できます。Quarkus OpenTelemetry エクステンションは `Sampler` CDI Bean を検出し、Tracer を設定するときにそれを使用します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "OTel Sampler SPI"
msgstr "OTelサンプラーSPI"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"This will use the SPI hooks available with the OTel Autoconfiguration.\n"
"You can create a simple Sampler class:"
msgstr ""
"これにより、OTel 自動設定で使用可能な SPI フックが使用されます。\n"
"シンプルな Sampler クラスを作成できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Then a Sampler Provider:"
msgstr "次に Sampler Provider を作成できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Write the SPI loader text file at `resources/META-INF/services` with name `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` containing the full qualified name of the `CustomSPISamplerProvider` class."
msgstr "`resources/META-INF/services` に `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` という名前の SPI ローダーテキストファイルを作成し、その中に `CustomSPISamplerProvider` クラスの完全修飾名を記述します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Then activate on the configuration:"
msgstr "次に、設定を有効にします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "As you can see, CDI is much simpler to work with."
msgstr "ご覧のとおり、CDI の方が操作がはるかに簡単です。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Additional instrumentation"
msgstr "追加の計器"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.\n"
"These sections will outline what is necessary to propagate traces across process boundaries."
msgstr "Quarkusエクステンションの中には、トレースが後続の実行に伝搬されることを保証するために追加のコードを必要とするものがあります。これらのセクションでは、プロセスの境界を越えてトレースを伝搬するために必要なことを説明します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "このセクションで説明されている計器は、Quarkusでテストされており、標準モードとネイティブモードの両方で動作します。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "CDI"
msgstr "CDI"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Annotating a method in any CDI aware bean with the `io.opentelemetry.instrumentation.annotations.WithSpan`\n"
"annotation will create a new Span and establish any required relationships with the current Trace context."
msgstr ""
"CDI 対応の任意の Bean のメソッドに `io.opentelemetry.instrumentation.annotations.WithSpan` \n"
"アノテーションを付与すると、新しい Span が作成され、現在の Trace コンテキストとの必要な関係が確立されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Annotating a method in any CDI aware bean with the `io.opentelemetry.instrumentation.annotations.AddingSpanAttributes` will not create a new span but will add annotated method parameters to attributes in the current span."
msgstr "CDI 対応の任意の Bean のメソッドに `io.opentelemetry.instrumentation.annotations.AddingSpanAttributes` アノテーションを付与すると、新しい Span は作成されませんが、アノテーションが付けられたメソッドのパラメーターが現在の Span の属性として追加されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "If a method is annotated by mistake with `@AddingSpanAttributes` and `@WithSpan` annotations, the `@WithSpan` annotation will take precedence."
msgstr "メソッドに誤って `@AddingSpanAttributes` アノテーションと `@WithSpan` アノテーションが付けられている場合は、 `@WithSpan` アノテーションが優先されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"Method parameters can be annotated with the `io.opentelemetry.instrumentation.annotations.SpanAttribute` annotation to\n"
"indicate which method parameters should be part of the span. The parameter name can be customized as well."
msgstr ""
"メソッドのパラメーターに `io.opentelemetry.instrumentation.annotations.SpanAttribute` アノテーションを付与することで、\n"
"どのメソッドパラメーターが Span の一部となるべきかを示すことができます。また、パラメーター名はカスタマイズすることも可能です。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Example:"
msgstr "例:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Available OpenTelemetry CDI injections"
msgstr "使用可能なOpenTelemetry CDI依存関係注入"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"As per MicroProfile Telemetry Tracing specification, Quarkus supports the CDI injections of the\n"
"following classes:"
msgstr "MicroProfile Telemetry Tracingの仕様に基づき、Quarkusは以下のクラスのCDI依存関係注入をサポートしています。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "`io.opentelemetry.api.OpenTelemetry`"
msgstr "`io.opentelemetry.api.OpenTelemetry`"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "`io.opentelemetry.api.trace.Tracer`"
msgstr "`io.opentelemetry.api.trace.Tracer`"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "`io.opentelemetry.api.trace.Span`"
msgstr "`io.opentelemetry.api.trace.Span`"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "`io.opentelemetry.api.baggage.Baggage`"
msgstr "`io.opentelemetry.api.baggage.Baggage`"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "You can inject these classes in any CDI enabled bean. For instance, the `Tracer` is particularly useful to start custom spans:"
msgstr "これらのクラスは、CDIが有効なBeanに注入することができます。例えば、 `Tracer` は、カスタムスパンを開始するために特に有用です。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Mutiny"
msgstr "Mutiny"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Methods returning reactive types can also be annotated with `@WithSpan` and `@AddingSpanAttributes` to create a new span or add attributes to the current span."
msgstr "リアクティブな型を返すメソッドには、 `@WithSpan` と `@AddingSpanAttributes` のアノテーションを付けて、新しいスパンを作成したり、現在のスパンに属性を追加したりすることもできます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "If you need to create spans manually within a mutiny pipeline, use `wrapWithSpan` method from `io.quarkus.opentelemetry.runtime.tracing.mutiny.MutinyTracingHelper`."
msgstr "mutiny パイプライン内でスパンを手動で作成する必要がある場合は、 `io.quarkus.opentelemetry.runtime.tracing.mutiny.MutinyTracingHelper` の `wrapWithSpan` メソッドを使用してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Example. Assuming you have the following pipeline:"
msgstr "例えば、次のようなパイプラインがあるとします:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "wrap it like this:"
msgstr "このようにラップして下さい:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "for multi-pipelines it works similarly:"
msgstr "マルチパイプラインの場合も同様です："

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Instead of `transformToMultiAndConcatenate` you can use `transformToMultiAndMerge` if you don't care about the order of the items."
msgstr "アイテムの順番を気にしないのであれば、 `transformToMultiAndConcatenate` の代わりに `transformToMultiAndMerge` を使うこともできます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Quarkus Messaging - Kafka"
msgstr "Quarkus Messaging - Kafka"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"When using the Quarkus Messaging extension for Kafka,\n"
"we are able to propagate the span into the Kafka Record with:"
msgstr ""
"Kafka の Quarkus Messaging エクステンションを使用する場合、\n"
"以下のようにして、スパンを Kafka レコードに伝播できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid ""
"The above creates a `TracingMetadata` object we can add to the `Message` being produced,\n"
"which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr "上記は、生成されている `Message` に追加できる `TracingMetadata` オブジェクトを作成し、OpenTelemetry `Context` を取得して、伝播のために現在のスパンを抽出しています。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Quarkus Security Events"
msgstr "Quarkus Security イベント"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Quarkus supports exporting of the xref:security-customization.adoc#observe-security-events[Security events] as OpenTelemetry Span events."
msgstr "Quarkus は、xref:security-customization.adoc#observe-security-events[セキュリティーイベント] を OpenTelemetry Span イベントとしてエクスポートすることをサポートしています。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Export Quarkus Security events as OpenTelemetry Span events."
msgstr "Quarkus Security イベントを OpenTelemetry Span イベントとしてエクスポートします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Exporters"
msgstr "エクスポーター"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "See the main xref:opentelemetry.adoc#exporters[OpenTelemetry Guide exporters] section."
msgstr "メインの xref:opentelemetry.adoc#exporters[OpenTelemetry ガイドのエクスポーター] セクションを参照してください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Quarkus core extensions instrumented with OpenTelemetry tracing"
msgstr "OpenTelemetry Tracing で計装された Quarkus コアエクステンション"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr "https://quarkus.io/guides/redis[`quarkus-redis-client`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/rest[`quarkus-rest`]"
msgstr "https://quarkus.io/guides/rest[`quarkus-rest`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/rest[`quarkus-rest-client`]"
msgstr "https://quarkus.io/guides/rest[`quarkus-rest-client`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-rest-client-jaxrs[`quarkus-rest-client-jaxrs`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-rest-client-jaxrs[`quarkus-rest-client-jaxrs`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy`]"
msgstr "https://quarkus.io/guides/resteasy[`quarkus-resteasy`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/resteasy-client[`quarkus-resteasy-client`]"
msgstr "https://quarkus.io/guides/resteasy-client[`quarkus-resteasy-client`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-mongodb-client[`quarkus-mongodb-client`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-mongodb-client[`quarkus-mongodb-client`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-messaging[`quarkus-messaging`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-messaging[`quarkus-messaging`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "AMQP 1.0"
msgstr "AMQP 1.0"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "RabbitMQ"
msgstr "RabbitMQ"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Kafka"
msgstr "Kafka"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Pulsar"
msgstr "Pulsar"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http リクエスト)"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "xref:websockets-next-reference.adoc[`websockets-next`]"
msgstr "xref:websockets-next-reference.adoc[`websockets-next`]"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Disable parts of the automatic tracing"
msgstr "自動トレースの一部を無効にする"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Automatic tracing instrumentation parts can be disabled by setting `quarkus.otel.instrument.*` properties to `false`."
msgstr "`quarkus.otel.instrument.*` プロパティーを `false` に設定することで、自動トレーシング計装部分を無効にすることができます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Examples:"
msgstr "例:"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Disabling Specific Traces for Application Endpoints"
msgstr "アプリケーションエンドポイントの特定のトレースを無効にする"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "You can use the `quarkus.otel.traces.suppress-application-uris` property to exclude specific endpoints from being traced."
msgstr "`quarkus.otel.traces.suppress-application-uris` プロパティーを使用して、特定のエンドポイントをトレース対象から除外できます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Example Configuration"
msgstr "設定例"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "This configuration will:"
msgstr "この設定では、以下が実行されます。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Disable tracing for the `/trace` URI."
msgstr "`/trace` URI のトレーシングを無効にします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Disable tracing for the `/ping` URI."
msgstr "`/ping` URI のトレーシングを無効にします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "Disable tracing for the `/people` URI and all subpaths, such as `/people/1` and `/people/1/cars`."
msgstr "`/people` URI と、 `/people/1` や `/people/1/cars` などのすべてのサブパスのトレーシングを無効にします。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "If you are using `quarkus.http.root-path`, ensure you include the root path in the configuration."
msgstr "`quarkus.http.root-path` を使用している場合は、設定にルートパスを含めるようにしてください。"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "OpenTelemetry Configuration Reference"
msgstr "OpenTelemetry 設定リファレンス"

#: _versions/3.27/guides/opentelemetry-tracing.adoc
msgid "See the main xref:opentelemetry.adoc#configuration-reference[OpenTelemetry Guide configuration] reference."
msgstr "メインの xref:opentelemetry.adoc#configuration-reference[OpenTelemetry ガイド設定] リファレンスを参照してください。"
