msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Quarkus Virtual Thread support with Reactive Messaging"
msgstr "Reactive MessagingによるQuarkus仮想スレッドのサポート"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "This guide explains how to benefit from Java virtual threads when writing message processing applications in Quarkus."
msgstr "このガイドでは、Quarkusでメッセージ処理アプリケーションを記述する際に、Java仮想スレッドを利用する方法について説明します。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"This guide focuses on using virtual threads with Reactive Messaging extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support for REST services."
msgstr ""
"このガイドでは、Reactive Messaging エクステンションを使用した仮想スレッドの使用に焦点を当てます。\n"
"Java 仮想スレッド全般と、REST サービスに対する Quarkus 仮想スレッドのサポートについて、詳しくは xref:virtual-threads.adoc[Quarkus 仮想スレッドのサポートを使用してシンプルなりアクティブ RESTORE サービスを作成する] を参照してください。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"For reference guides of specific Reactive Messaging extensions see xref:kafka.adoc[Apache Kafka Reference Guide],\n"
"xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 Connector], xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ Connector] or xref:pulsar.adoc[Apache Pulsar Reference Guide]."
msgstr "特定の Reactive Messaging エクステンションのリファレンスガイドについては、xref:kafka.adoc[Apache Kafka リファレンスガイド]、xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 コネクター]、xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ コネクター]、または xref:pulsar.adoc[Apache Pulsar リファレンスガイド] を参照してください。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"By default, Reactive Messaging invokes message processing methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you sometimes need to combine Reactive Messaging with blocking processing such as calling external services or database operations.\n"
"For this, you can use the link:{rm_blocking_annotation}[@Blocking] annotation indicating that the processing is _blocking_ and should be run on a worker thread.\n"
"You can read more on the blocking processing in link:{rm_blocking_docs}[SmallRye Reactive Messaging documentation]."
msgstr ""
"デフォルトでは、Reactive Messaging はイベントループスレッドでメッセージ処理メソッドを呼び出します。\n"
"このトピックの詳細は、xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture ドキュメント] を参照してください。\n"
"ただし、外部サービスの呼び出しやデータベース操作などのブロッキング処理と Reactive Messaging を組み合わせる必要がある場合もあります。\n"
"これには、処理が _ブロッキング_ であり、ワーカースレッドで実行する必要があることを示す link:{rm_blocking_annotation}[@Blocking] アノテーションを使用できます。\n"
"ブロッキング処理の詳細は、link:{rm_blocking_docs}[SmallRye Reactive Messaging ドキュメント] を参照してください。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"The idea behind Quarkus Virtual Thread support for Reactive Messaging is to offload the message processing on virtual threads,\n"
"instead of running it on an event-loop thread or a worker thread."
msgstr "Quarkus のリアクティブメッセージングにおける仮想スレッドのサポートは、メッセージ処理をイベントループスレッドまたはワーカースレッドで実行するのではなく、仮想スレッドにオフロードすることを目的としています。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"To enable virtual thread support on a message consumer method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions, we recommend 21+) then each incoming message will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr ""
"メッセージコンシューマーメソッドで仮想スレッドのサポートを有効にするには、link:{runonvthread}[@RunOnVirtualThread] アノテーションをメソッドに追加します。\n"
"JDK に互換性がある場合 (Java 19 以降のバージョン、推奨は 21 以降)、各着信メッセージが新しい仮想スレッドにオフロードされます。\n"
"こうすることで、仮想スレッドがマウントされているプラットフォームスレッドをブロックせずに、ブロッキング操作を実行できるようになります。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Example using the Reactive Messaging Kafka extension"
msgstr "Reactive Messaging Kafka エクステンションの使用例"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"Let's see an example of how to process Kafka records on virtual threads.\n"
"First, make sure to have a reactive messaging extension dependency to your build file:"
msgstr ""
"仮想スレッドで Kafka レコードを処理する方法の例を見てみましょう。\n"
"まず、ビルドファイルにリアクティブメッセージングエクステンションの依存関係があることを確認します。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "You also need to make sure that you are using Java 19 or later (we recommend 21+), this can be enforced in your `pom.xml` file with the following:"
msgstr "Java 19 以降 (推奨は 21 以降) を使用していることを確認する必要があります。これは、次のように `pom.xml` ファイルで強制できます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Run the application with:"
msgstr "次のコマンドでアプリケーションを実行します。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr "または、 `quarkus-maven-plugin` 設定に以下を注入して Quarkus 開発モードを使用します。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"Then you can start using the annotation `@RunOnVirtualThread` on your consumer methods also annotated with `@Incoming`.\n"
"In the following example we'll use the xref:rest-client.adoc[REST Client] to make a blocking call to a REST endpoint:"
msgstr ""
"その後、 `@Incoming` アノテーションが付けられたコンシューマーメソッドで、アノテーション `@RunOnVirtualThread` を使い始めることができます。\n"
"次の例では、xref:rest-client.adoc[REST クライアント] を使用して、REST エンドポイントへのブロッキング呼び出しを行います。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@RunOnVirtualThread` annotation on the `@Incoming` method ensures that the method will be called on a virtual thread."
msgstr "`@Incoming` メソッドの `@RunOnVirtualThread` アノテーションにより、メソッドが仮想スレッドで呼び出されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "the REST client stub is injected with the `@RestClient` annotation."
msgstr "REST クライアントスタブには `@RestClient` アノテーションが注入されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`alert` method blocks the virtual thread until the REST call returns."
msgstr "`alert` メソッドは、REST 呼び出しが返されるまで仮想スレッドをブロックします。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "This `@Outgoing` method generates random prices and writes them a Kafka topic to be consumed back by the application."
msgstr "この `@Outgoing` メソッドは、ランダムな価格を生成し、アプリケーションによって消費される Kafka トピックにその価格を書き込みます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"Note that by default Reactive Messaging message processing happens sequentially, preserving the order of messages.\n"
"In the same way, `@Blocking(ordered = false)` annotation changes this behaviour,\n"
"using `@RunOnVirtualThread` enforces concurrent message processing without preserving the order."
msgstr ""
"デフォルトでは、Reactive Messaging のメッセージ処理はメッセージの順序を維持しながら順番に実行されることに注意してください。\n"
"同様に、 `@Blocking(ordered = false)`アノテーションはこの動作を変更します。\n"
"`@RunOnVirtualThread` を使用すると、順序を保持せずにメッセージの同時処理が強制されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Use the @RunOnVirtualThread annotation"
msgstr "@RunOnVirtualThread アノテーションの使用"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Methods signatures eligible to @RunOnVirtualThread"
msgstr "@RunOnVirtualThread に適格なメソッドシグネチャー"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"Only method can be annotated with `@Blocking` can use `@RunOnVirtualThreads`.\n"
"The eligible method signatures are:"
msgstr ""
"`@Blocking` でアノテーションを付けることができるメソッドのみが `@RunOnVirtualThreads` を使用できます。\n"
"適格なメソッドシグネチャーは次のとおりです。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Outgoing(\"channel-out\") O generator()`"
msgstr "`@Outgoing(\"channel-out\") O generator()`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Outgoing(\"channel-out\")  Message<O> generator()`"
msgstr "`@Outgoing(\"channel-out\")  Message<O> generator()`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") void consume(I in)`"
msgstr "`@Incoming(\"channel-in\") void consume(I in)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Use of @RunOnVirtualThread annotation on methods and classes"
msgstr "メソッドとクラスでの @RunOnVirtualThread アノテーションの使用"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "You can use the `@RunOnVirtualThread` annotation:"
msgstr "`@RunOnVirtualThread` アノテーションは、次のような形で使用できます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "directly on a reactive messaging method - this method will be considered _blocking_ and executed on a virtual thread"
msgstr "リアクティブメッセージングメソッドで直接使用 - このメソッドはブロッキングとみなされ、仮想スレッドで実行されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "on the class containing reactive messaging methods - the methods from this class annotation with `@Blocking` will be executed on virtual thread, except if the annotation defines a pool name configured to use regular worker threads"
msgstr "リアクティブメッセージングメソッドを含むクラスで使用 - `@Blocking` を持つこのクラスアノテーションのメソッドは、通常のワーカースレッドを使用するように設定されたプール名がアノテーションによって定義されている場合を除き、仮想スレッドで実行されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "For example, you can use `@RunOnVirtualThread` directly on the method:"
msgstr "たとえば、次のようにメソッドで直接 `@RunOnVirtualThread` を使用できます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Alternatively, you can use `@RunOnVirtualThread` on the class itself:"
msgstr "または、クラス自体で `@RunOnVirtualThread` を使用することもできます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Control the maximum concurrency"
msgstr "最大同時実行数の制御"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid ""
"In order to leverage the lightweight nature of virtual threads, the default maximum concurrency for methods annotated with `@RunOnVirtualThread` is 1024.\n"
"As opposed to platform threads, virtual threads are not pooled and created per message. Therefore the maximum concurrency applies separately to all `@RunOnVirtualThread` methods."
msgstr ""
"仮想スレッドの軽量な性質を活用するために、 `@RunOnVirtualThread` アノテーションが付けられたメソッドのデフォルトの最大同時実行数は 1024 です。\n"
"プラットフォームスレッドとは異なり、仮想スレッドはプールされず、メッセージごとに作成されます。したがって、最大同時実行数はすべての `@RunOnVirtualThread` メソッドに個別に適用されます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "There are two ways to customize the concurrency level:"
msgstr "同時実行レベルをカスタマイズする方法は 2 つあります。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "The `@RunOnVirtualThread` annotation can be used together with the link:{rm_blocking_annotation}[@Blocking] annotation to specify a worker name."
msgstr "`@RunOnVirtualThread` アノテーションは、ワーカー名を指定するための link:{rm_blocking_annotation}[@Blocking] アノテーションと一緒に使用できます。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "Then, for example, to set the maximum concurrency of this method down to 30, set using the config property `smallrye.messaging.worker.my-worker.max-concurrency=30`."
msgstr "次に、たとえば、このメソッドの最大同時実行数を 30 に設定するには、設定プロパティー `smallrye.messaging.worker.my-worker.max-concurrency=30` を使用して設定します。"

#: _versions/3.27/guides/messaging-virtual-threads.adoc
msgid "For every `@RunOnVirtualThread` method that is not configured with a worker name, you can use the config property `smallrye.messaging.worker.<virtual-thread>.max-concurrency`."
msgstr "ワーカー名が設定されていないすべての `@RunOnVirtualThread` メソッドに対して、設定プロパティー `smallrye.messaging.worker.<virtual-thread>.max-concurrency` を使用できます。"
