msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client"
msgstr "Kubernetesクライアント"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Quarkus includes the `kubernetes-client` extension which enables the use of the https://github.com/fabric8io/kubernetes-client[Fabric8 Kubernetes Client]\n"
"in native mode while also making it easier to work with."
msgstr "Quarkusには、 link:https://github.com/fabric8io/kubernetes-client[Fabric8 Kubernetesクライアント] をネイティブモードで使用できるようにする `kubernetes-client` エクステンションが含まれています。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Having a Kubernetes Client extension in Quarkus is very useful in order to unlock the power of Kubernetes Operators.\n"
"Kubernetes Operators are quickly emerging as a new class of Cloud Native applications.\n"
"These applications essentially watch the Kubernetes API and react to changes on various resources and can be used to manage the lifecycle of all kinds of complex systems like databases, messaging systems and much more.\n"
"Being able to write such operators in Java with the very low footprint that native images provide is a great match."
msgstr "Kubernetes Operatorのパワーを引き出すためには、QuarkusにKubernetesクライアントエクステンションがあると非常に便利です。Kubernetes Operatorは、クラウドネイティブアプリケーションの新しい種類として急速に台頭してきています。これらのアプリケーションは、基本的にKubernetes APIを監視し、様々なリソースの変更に反応し、データベースやメッセージングシステムなど、あらゆる種類の複雑なシステムのライフサイクルを管理するために使用することができます。ネイティブイメージが提供する非常に低いフットプリントで、このようなOperatorをJavaで書くことができるということは、非常にマッチしています。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Configuration"
msgstr "設定"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Once you have your Quarkus project configured you can add the `kubernetes-client` extension\n"
"to your project by running the following command in your project base directory."
msgstr "Quarkusプロジェクトを設定したら、プロジェクトのベースディレクトリーで次のコマンドを実行して、 `kubernetes-client` エクステンションをプロジェクトに追加できます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Usage"
msgstr "使用方法"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Quarkus configures a Bean of type `KubernetesClient` which can be injected into application code using the well known CDI methods.\n"
"This client can be configured using various properties as can be seen in the following example:"
msgstr "Quarkusは、よく知られたCDIメソッドを使用してアプリケーションコードに注入できる `KubernetesClient` タイプのBeanを設定します。このクライアントは、以下の例にあるように、さまざまなプロパティーを使用して設定することができます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that the full list of properties is available in the <<quarkus-kubernetes-client_section_quarkus-kubernetes-client-devservices,Dev Services section of the configuration reference>>."
msgstr "なお、プロパティの全リストは、 xref:quarkus-kubernetes-client_section_quarkus-kubernetes-client-devservices[設定リファレンスのDev Servicesセクション] にあります。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "In dev mode and when running tests, xref:kubernetes-dev-services.adoc[Dev Services for Kubernetes] automatically starts a Kubernetes API server."
msgstr "devモードやテスト実行時には、 link:kubernetes-dev-services.html[Dev Services for Kubernetes] が自動的にKubernetes APIサーバーを起動します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Customizing and overriding"
msgstr "カスタマイズとオーバーライド"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Quarkus provides multiple integration points for influencing the Kubernetes Client provided as a CDI bean."
msgstr "Quarkusは、CDI Beanとして提供されるKubernetes Clientに影響を与えるための複数の統合ポイントを提供します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client Config customization"
msgstr "Kubernetes クライアント設定のカスタマイズ"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The first integration point is the use of the `io.quarkus.kubernetes.client.KubernetesConfigCustomizer` interface. When such a bean exists,\n"
"it allows for arbitrary customizations of the `io.fabric8.kubernetes.client.Config` created by Quarkus (which takes into account the `quarkus.kubernetes-client.*` properties)."
msgstr "最初の統合ポイントは、 `io.quarkus.kubernetes.client.KubernetesConfigCustomizer` インターフェイスの使用です。このようなBeanが存在する場合、Quarkusが作成した `io.fabric8.kubernetes.client.Config` （ `quarkus.kubernetes-client.*` のプロパティを考慮します）を任意にカスタマイズすることができます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Alternatively, application code can override the  `io.fabric8.kubernetes.client.Config` or even the `io.fabric8.kubernetes.client.KubernetesClient` bean (which are\n"
"normally provided by the extension) by simply declaring custom versions of those beans."
msgstr "あるいは，アプリケーションコードは，単にそれらのBeanのカスタムバージョンを宣言することによって，（通常エクステンションによって提供される） `io.fabric8.kubernetes.client.Config` ，あるいは `io.fabric8.kubernetes.client.KubernetesClient` Beanをオーバーライドすることもできます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "An example of this can be seen in the following snippet:"
msgstr "この例は、次のスニペットの通りです:"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client ObjectMapper customization"
msgstr "KubernetesクライアントObjectMapperのカスタマイズ"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The Fabric8 Kubernetes Client uses its own `ObjectMapper` instance for serialization and deserialization of Kubernetes resources.\n"
"This mapper is provided to the client through a `KubernetesSerialization` instance that's injected into\n"
"the `KubernetesClient` bean."
msgstr "Fabric8 Kubernetes Clientは、Kubernetesリソースのシリアライズとデシリアライズのために独自の `ObjectMapper` インスタンスを使用します。このマッパーは、 `KubernetesClient` Beanに注入された `KubernetesSerialization` インスタンスを通してクライアントに提供されます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "If for some reason you must customize the default `ObjectMapper` bean provided by this extension and used by the Kubernetes Client, you can do so by declaring a bean that implements the `KubernetesClientObjectMapperCustomizer` interface."
msgstr "何らかの理由で、このエクステンションによって提供され、Kubernetes Clientによって使用されるデフォルトの `ObjectMapper` Beanをカスタマイズする必要がある場合は、 `KubernetesClientObjectMapperCustomizer` インターフェイスを実装するBeanを宣言することでカスタマイズできます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "The following code snippet contains an example of a `KubernetesClientObjectMapperCustomizer` to set the `ObjectMapper` locale:"
msgstr "次のコード・スニペットには、 `ObjectMapper` ロケールを設定する `KubernetesClientObjectMapperCustomizer` の例が含まれています："

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Furthermore, if you must replace the default `ObjectMapper` bean used by the Kubernetes Client that the extension creates automatically, you can do so by declaring a bean of type `@KubernetesClientObjectMapper`.\n"
"The following code snippet shows how you can declare this bean:"
msgstr "さらに、エクステンションが自動的に作成する Kubernetes Client が使用するデフォルトの `ObjectMapper` Bean を置き換える必要がある場合は、 `@KubernetesClientObjectMapper` 型の Bean を宣言することで置き換えることができます。次のコードスニペットは、このBeanを宣言する方法を示しています："

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The static `io.fabric8.kubernetes.client.utils.Serialization` utils class is deprecated and should not be used.\n"
"Access to `Serialization.jsonMapper()` should be replaced by the usage of @KubernetesClientObjectMapperCustomizer` declared beans."
msgstr "静的な `io.fabric8.kubernetes.client.utils.Serialization` utils クラスは非推奨であり、使用すべきではありません。 `Serialization.jsonMapper()` へのアクセスは @KubernetesClientObjectMapperCustomizer` で宣言された Bean を使用することで置き換える必要があります。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Testing"
msgstr "テスト"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"To make testing against a mock Kubernetes API extremely simple, Quarkus provides the `WithKubernetesTestServer` annotation which automatically launches\n"
"a mock of the Kubernetes API server and sets the proper environment variables needed so that the Kubernetes Client configures itself to use said mock.\n"
"Tests can inject the mock server and set it up in any way necessary for the particular testing using the `@KubernetesTestServer` annotation."
msgstr "モックのKubernetes APIに対するテストを非常に簡単にするために、Quarkusでは、Kubernetes APIサーバーのモックを自動的に起動し、Kubernetesクライアントがそのモックを使用するように設定するために必要な適切な環境変数を設定する `KubernetesMockServerTestResource` を提供しています。テストは、 `@MockServer` アノテーションを使用して、特定のテストに必要な方法でモックを注入し、設定することができます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Let's assume we have a REST endpoint defined like so:"
msgstr "このようにRESTエンドポイントが定義されているとします。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "We could write a test for this endpoint very easily like so:"
msgstr "このエンドポイントのテストは次のように簡単に書けます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that to take advantage of these features, the `quarkus-test-kubernetes-client` dependency needs to be added, for example like so:"
msgstr "これらの機能を利用するには、例えば次のように `quarkus-test-kubernetes-client` 依存関係を追加する必要があることに注意してください。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"By default, the mock server will be in CRUD mode, so you have to use the client to build your state before your application can retrieve it,\n"
"but you can also set it up in non-CRUD mode and mock all HTTP requests made to Kubernetes:"
msgstr "デフォルトでは、モックサーバはCRUDモードになっているので、アプリケーションがステートを取得する前に、クライアントを使ってステートを構築する必要がありますが、非CRUDモードに設定して、KubernetesへのすべてのHTTPリクエストをモックすることもできます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "You can also use the `setup` attribute on the `@WithKubernetesTestServer` annotation to provide a class that will configure the `KubernetesServer` instance:"
msgstr "また、 `@WithKubernetesTestServer` アノテーションの `setup` 属性を使用して、 `KubernetesServer` インスタンスを設定するクラスを提供することもできます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Alternately, you can create an extension of the `KubernetesServerTestResource` class to ensure all your `@QuarkusTest` enabled test classes share the same mock server setup via the `QuarkusTestResource` annotation:"
msgstr "または、 `KubernetesServerTestResource`クラスの拡張を作成して、 ` @ QuarkusTest`が有効なすべてのテストクラスが `QuarkusTestResource`アノテーションを介して同じモックサーバーセットアップを共有するようにすることもできます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "and use this in your other test classes as follows:"
msgstr "そして、これを次のように他のテストクラスで使用します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note on implementing or extending generic types"
msgstr "ジェネリック型の実装または拡張に関する注意"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Due to the restrictions imposed by GraalVM, extra care needs to be taken when implementing or extending generic types provided by the client if the application is intended to work in native mode.\n"
"Essentially every implementation or extension of generic classes such as `Watcher`, `ResourceHandler` or `CustomResource` needs to specify their associated Kubernetes model class (or, in the case of `CustomResource`, regular Java types) at class definition time.\n"
"To better understand this, suppose we want to watch for changes to Kubernetes `Pod` resources.\n"
"There are a couple ways to write such a `Watcher` that are guaranteed to work in native:"
msgstr "GraalVMによって課せられた制限のため、アプリケーションがネイティブモードで動作することを意図している場合、 クライアントによって提供されるジェネリック型を実装または拡張する際には特別な注意が必要です。基本的に、 `Watcher`、 ` ResourceHandler`、 `CustomResource`などのジェネリッククラスのすべての実装または拡張は、クラス定義時に関連するKubernetesモデルクラス（または、 ` CustomResource` の場合は通常のJavaタイプ）を指定する必要があります。 よく理解するために、例えばKubernetesの `Pod`リソースへの変更を監視するとします。 ネイティブでの動作が保証されているこのような `Watcher` を作成するには、いくつかの方法があります。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "or"
msgstr "あるいは\n"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that defining the generic type via a class hierarchy similar to the following example will also work correctly:"
msgstr "以下の例のようにクラス階層を介してジェネリック型を定義した場合も、正しく動作することに注目してください。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The following example will **not** work in native mode because the generic type of watcher cannot be determined by looking at the class and method definitions\n"
"thus making Quarkus unable to properly determine the Kubernetes model class for which reflection registration is needed:"
msgstr "以下の例では、クラスやメソッドの定義を見てウォッチャーのジェネリック型を判断できないため、Quarkusはリフレクション登録が必要なKubernetesモデルクラスを適切に判断できないため、ネイティブモードでは動作 *しません* 。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note on using Elliptic Curve keys"
msgstr "楕円曲線鍵使用時の注意点"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Please note that if you would like to use Elliptic Curve keys with Kubernetes Client then adding a BouncyCastle PKIX dependency is required:"
msgstr "なお、Kubernetes Clientで楕円曲線鍵を使用したい場合は、BouncyCastle PKIXの依存関係を追加する必要があります:"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that internally an `org.bouncycastle.jce.provider.BouncyCastleProvider` provider will be registered if it has not already been registered."
msgstr "内部では、 `org.bouncycastle.jce.provider.BouncyCastleProvider` プロバイダーがまだ登録されていない場合、それが登録されます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "You can have this provider registered as described in the xref:security-customization.adoc#bouncy-castle[BouncyCastle] or xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] sections."
msgstr "xref:security-customization.adoc#bouncy-castle[BouncyCastle] または xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] セクションの説明に従って、このプロバイダーを登録できます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Access to the Kubernetes API"
msgstr "Kubernetes APIへのアクセス"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"In many cases in order to access the Kubernetes API server a `ServiceAccount`, `Role` and `RoleBinding` will be necessary.\n"
"An example that allows listing all pods could look something like this:"
msgstr "多くの場合、Kubernetes API サーバーにアクセスするには `ServiceAccount` 、 `Role` 、 `RoleBinding` が必要になります。すべてのPodをリスト可能な例は以下のようになります。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Replace `<applicationName>` and `<namespace>` with your values.\n"
"Have a look at https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[Configure Service Accounts for Pods] to get further information."
msgstr "`<applicationName>` と `<namespace>` は値に置き換えてください。 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[PodのService Accountの設定] を参照して、詳細な情報を入手してください。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "OpenShift Client"
msgstr "OpenShiftクライアント"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"If the targeted Kubernetes cluster is an OpenShift cluster, it is possible to access it through\n"
"the `openshift-client` extension, in a similar way. This leverages the dedicated fabric8\n"
"openshift client, and provides access to `OpenShift` proprietary objects (e.g. `Route`, `ProjectRequest`, `BuildConfig` ...)"
msgstr "対象となるKubernetesクラスターがOpenShiftクラスターであれば、同様の方法で、 `openshift-client` エクステンションを利用してアクセスすることが可能です。これは専用の fabric8 openshift クライアントを利用し、 `OpenShift` 固有のオブジェクト(例: `Route` , `ProjectRequest` , `BuildConfig` ...)へのアクセスを提供します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Note that the configuration properties are shared with the `kubernetes-client` extension. In\n"
"particular, they have the same `quarkus.kubernetes-client` prefix."
msgstr "設定プロパティーは `kubernetes-client` エクステンションと共有されていることに注意してください。特に、これらは同じ `quarkus.kubernetes-client` プレフィックスを持っています。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Add the extension with:"
msgstr "以下のコマンドでエクステンションを追加します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that `openshift-client` extension has a dependency on the `kubernetes-client` extension."
msgstr "`openshift-client` エクステンションは `kubernetes-client` エクステンションに依存していることに注意してください。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "To use the client, inject an `OpenShiftClient` instead of the `KubernetesClient`:"
msgstr "クライアントを使用するには、 `KubernetesClient` の代わりに `OpenShiftClient` を注入します。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "If you need to override the default `OpenShiftClient`, provide a producer such as:"
msgstr "デフォルトの `OpenShiftClient` を上書きする必要がある場合は、次のようなプロデューサーを提供してください。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Mock support is also provided in a similar fashion by using the `@WithKubernetesTestServer` explained in the previous section:"
msgstr "前節で説明した `@WithKubernetesTestServer` を使用することで、同様の方法でモック・サポートも提供されます："

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "To use this feature, you have to add a dependency on `quarkus-test-kubernetes-client`:"
msgstr "この機能を使うには、 `quarkus-test-kubernetes-client` への依存関係を追加する必要があります："

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid "Optimizing the Native Image"
msgstr "ネイティブ画像の最適化"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"The Kubernetes and OpenShift client extensions aim to provide a great *developer experience* while enabling the client to work in *native mode*.\n"
"When building a native image, the Kubernetes Client extension will register all the accessible Kubernetes model classes for reflection.\n"
"Unfortunately, this can lead to large native image sizes and longer build times."
msgstr "KubernetesとOpenShiftのクライアントエクステンションは、クライアントが *ネイティブモードで* 動作できるようにしながら、優れた *開発者体験を* 提供することを目指しています。ネイティブイメージをビルドする際、Kubernetes Clientエクステンションはリフレクションのためにアクセス可能なすべてのKubernetesモデルクラスを登録します。残念ながら、これはネイティブイメージのサイズが大きくなり、ビルド時間が長くなる可能性があります。"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid "Once you've completed your application implementation, if you want to distribute and deploy your application as a *native image*, you should consider reducing its size by following these guidelines."
msgstr "アプリケーションの実装が完了した後、アプリケーションを *ネイティブイメージとして* 配布・展開したい場合は、以下のガイドラインに従ってサイズを小さくすることを検討する必要があります。"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid "Use the Kubernetes Client extension"
msgstr "Kubernetes Clientエクステンションの使用"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"The <<openshift-client, OpenShift Client>> provides domain-specific language (DSL) accessors to common OpenShift resources.\n"
"In addition, the extension supplies the necessary project configuration to bring in the OpenShift model type modules."
msgstr "xref:openshift-client[OpenShift Client] は、一般的な OpenShift リソースへのドメイン固有言語 (DSL) アクセッサを提供します。さらに、この拡張機能は、OpenShift モデル型モジュールを取り込むために必要なプロジェクト設定を提供します。"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"In JVM mode, this works great because, as a developer, you don't need to worry about the configuration.\n"
"However, in native mode, by depending on the OpenShift extension you're bringing in many resources that your application might not need unnecessarily increasing its size."
msgstr "JVMモードでは、開発者として設定を気にする必要がないため、これはとてもうまくいきます。しかし、ネイティブ・モードでは、OpenShift拡張に依存することで、アプリケーションが必要としないかもしれない多くのリソースを取り込むことになり、不必要にサイズが大きくなります。"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid "In this context, it's better to depend only on what you need, by adding a dependency to the Kubernetes Client extension and only the minimum OpenShift model dependencies:"
msgstr "この文脈では、Kubernetes Clientエクステンションに依存関係を追加し、最小限のOpenShiftモデルの依存関係のみを追加することで、必要なものだけに依存する方が良いでしょう："

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"The OpenShift-specific DSL accessors won't be available since you'll now have a Bean of type `KubernetesClient` instead of `OpenShiftClient`.\n"
"However, the Fabric8 Kubernetes Client provides generic entry-points to perform operations on any resource:"
msgstr "OpenShift固有のDSLアクセサは、 `OpenShiftClient` の代わりに `KubernetesClient` 型のBeanを持つことになるため、利用できません。 しかし、Fabric8 Kubernetes Clientは、あらゆるリソースに対して操作を実行するための汎用的なエントリポイントを提供します："

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid "Depend only on the modules you need"
msgstr "必要なモジュールのみに依存"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"The Kubernetes Client extension has transitive dependencies to all of the vanilla Kubernetes API model types.\n"
"This is very convenient in JVM mode, since you don't need to worry about configuring the project."
msgstr "Kubernetes Clientエクステンションは、すべてのバニラKubernetes APIモデルタイプに対する推移的依存関係を持っています。JVMモードでは、プロジェクトの設定を心配する必要がないので、これは非常に便利です。"

#: _versions/3.27/guides/kubernetes-client.adoc
#, fuzzy
msgid ""
"However, in native mode, this implies registering for reflection model types that you very likely won't use in your application.\n"
"You can mitigate this by providing a more granular project configuration and depending only on those models you are sure the application uses."
msgstr "しかし、ネイティブ・モードでは、これはアプリケーションで使わない可能性が非常に高いリフレクション・モデル・タイプを登録することを意味します。より詳細なプロジェクト構成を提供し、アプリケーションが使うことが確実なモデルだけに依存することで、これを緩和することができます。"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
