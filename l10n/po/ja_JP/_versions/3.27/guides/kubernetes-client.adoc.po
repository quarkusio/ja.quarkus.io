msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Quarkus includes the `kubernetes-client` extension which enables the use of the https://github.com/fabric8io/kubernetes-client[Fabric8 Kubernetes Client]\n"
"in native mode while also making it easier to work with."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Having a Kubernetes Client extension in Quarkus is very useful in order to unlock the power of Kubernetes Operators.\n"
"Kubernetes Operators are quickly emerging as a new class of Cloud Native applications.\n"
"These applications essentially watch the Kubernetes API and react to changes on various resources and can be used to manage the lifecycle of all kinds of complex systems like databases, messaging systems and much more.\n"
"Being able to write such operators in Java with the very low footprint that native images provide is a great match."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Configuration"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Once you have your Quarkus project configured you can add the `kubernetes-client` extension\n"
"to your project by running the following command in your project base directory."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Usage"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Quarkus configures a Bean of type `KubernetesClient` which can be injected into application code using the well known CDI methods.\n"
"This client can be configured using various properties as can be seen in the following example:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that the full list of properties is available in the <<quarkus-kubernetes-client_section_quarkus-kubernetes-client-devservices,Dev Services section of the configuration reference>>."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "In dev mode and when running tests, xref:kubernetes-dev-services.adoc[Dev Services for Kubernetes] automatically starts a Kubernetes API server."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Customizing and overriding"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Quarkus provides multiple integration points for influencing the Kubernetes Client provided as a CDI bean."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client Config customization"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The first integration point is the use of the `io.quarkus.kubernetes.client.KubernetesConfigCustomizer` interface. When such a bean exists,\n"
"it allows for arbitrary customizations of the `io.fabric8.kubernetes.client.Config` created by Quarkus (which takes into account the `quarkus.kubernetes-client.*` properties)."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Alternatively, application code can override the  `io.fabric8.kubernetes.client.Config` or even the `io.fabric8.kubernetes.client.KubernetesClient` bean (which are\n"
"normally provided by the extension) by simply declaring custom versions of those beans."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "An example of this can be seen in the following snippet:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Kubernetes Client ObjectMapper customization"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The Fabric8 Kubernetes Client uses its own `ObjectMapper` instance for serialization and deserialization of Kubernetes resources.\n"
"This mapper is provided to the client through a `KubernetesSerialization` instance that's injected into\n"
"the `KubernetesClient` bean."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "If for some reason you must customize the default `ObjectMapper` bean provided by this extension and used by the Kubernetes Client, you can do so by declaring a bean that implements the `KubernetesClientObjectMapperCustomizer` interface."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "The following code snippet contains an example of a `KubernetesClientObjectMapperCustomizer` to set the `ObjectMapper` locale:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Furthermore, if you must replace the default `ObjectMapper` bean used by the Kubernetes Client that the extension creates automatically, you can do so by declaring a bean of type `@KubernetesClientObjectMapper`.\n"
"The following code snippet shows how you can declare this bean:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The static `io.fabric8.kubernetes.client.utils.Serialization` utils class is deprecated and should not be used.\n"
"Access to `Serialization.jsonMapper()` should be replaced by the usage of @KubernetesClientObjectMapperCustomizer` declared beans."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Testing"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"To make testing against a mock Kubernetes API extremely simple, Quarkus provides the `WithKubernetesTestServer` annotation which automatically launches\n"
"a mock of the Kubernetes API server and sets the proper environment variables needed so that the Kubernetes Client configures itself to use said mock.\n"
"Tests can inject the mock server and set it up in any way necessary for the particular testing using the `@KubernetesTestServer` annotation."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Let's assume we have a REST endpoint defined like so:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "We could write a test for this endpoint very easily like so:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that to take advantage of these features, the `quarkus-test-kubernetes-client` dependency needs to be added, for example like so:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"By default, the mock server will be in CRUD mode, so you have to use the client to build your state before your application can retrieve it,\n"
"but you can also set it up in non-CRUD mode and mock all HTTP requests made to Kubernetes:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "You can also use the `setup` attribute on the `@WithKubernetesTestServer` annotation to provide a class that will configure the `KubernetesServer` instance:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Alternately, you can create an extension of the `KubernetesServerTestResource` class to ensure all your `@QuarkusTest` enabled test classes share the same mock server setup via the `QuarkusTestResource` annotation:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "and use this in your other test classes as follows:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note on implementing or extending generic types"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Due to the restrictions imposed by GraalVM, extra care needs to be taken when implementing or extending generic types provided by the client if the application is intended to work in native mode.\n"
"Essentially every implementation or extension of generic classes such as `Watcher`, `ResourceHandler` or `CustomResource` needs to specify their associated Kubernetes model class (or, in the case of `CustomResource`, regular Java types) at class definition time.\n"
"To better understand this, suppose we want to watch for changes to Kubernetes `Pod` resources.\n"
"There are a couple ways to write such a `Watcher` that are guaranteed to work in native:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "or"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that defining the generic type via a class hierarchy similar to the following example will also work correctly:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The following example will **not** work in native mode because the generic type of watcher cannot be determined by looking at the class and method definitions\n"
"thus making Quarkus unable to properly determine the Kubernetes model class for which reflection registration is needed:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note on using Elliptic Curve keys"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Please note that if you would like to use Elliptic Curve keys with Kubernetes Client then adding a BouncyCastle PKIX dependency is required:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that internally an `org.bouncycastle.jce.provider.BouncyCastleProvider` provider will be registered if it has not already been registered."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "You can have this provider registered as described in the xref:security-customization.adoc#bouncy-castle[BouncyCastle] or xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] sections."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Access to the Kubernetes API"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"In many cases in order to access the Kubernetes API server a `ServiceAccount`, `Role` and `RoleBinding` will be necessary.\n"
"An example that allows listing all pods could look something like this:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Replace `<applicationName>` and `<namespace>` with your values.\n"
"Have a look at https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[Configure Service Accounts for Pods] to get further information."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "OpenShift Client"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"If the targeted Kubernetes cluster is an OpenShift cluster, it is possible to access it through\n"
"the `openshift-client` extension, in a similar way. This leverages the dedicated fabric8\n"
"openshift client, and provides access to `OpenShift` proprietary objects (e.g. `Route`, `ProjectRequest`, `BuildConfig` ...)"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"Note that the configuration properties are shared with the `kubernetes-client` extension. In\n"
"particular, they have the same `quarkus.kubernetes-client` prefix."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Add the extension with:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Note that `openshift-client` extension has a dependency on the `kubernetes-client` extension."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "To use the client, inject an `OpenShiftClient` instead of the `KubernetesClient`:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "If you need to override the default `OpenShiftClient`, provide a producer such as:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Mock support is also provided in a similar fashion by using the `@WithKubernetesTestServer` explained in the previous section:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "To use this feature, you have to add a dependency on `quarkus-test-kubernetes-client`:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Optimizing the Native Image"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The Kubernetes and OpenShift client extensions aim to provide a great *developer experience* while enabling the client to work in *native mode*.\n"
"When building a native image, the Kubernetes Client extension will register all the accessible Kubernetes model classes for reflection.\n"
"Unfortunately, this can lead to large native image sizes and longer build times."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Once you've completed your application implementation, if you want to distribute and deploy your application as a *native image*, you should consider reducing its size by following these guidelines."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Use the Kubernetes Client extension"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The <<openshift-client, OpenShift Client>> provides domain-specific language (DSL) accessors to common OpenShift resources.\n"
"In addition, the extension supplies the necessary project configuration to bring in the OpenShift model type modules."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"In JVM mode, this works great because, as a developer, you don't need to worry about the configuration.\n"
"However, in native mode, by depending on the OpenShift extension you're bringing in many resources that your application might not need unnecessarily increasing its size."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "In this context, it's better to depend only on what you need, by adding a dependency to the Kubernetes Client extension and only the minimum OpenShift model dependencies:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The OpenShift-specific DSL accessors won't be available since you'll now have a Bean of type `KubernetesClient` instead of `OpenShiftClient`.\n"
"However, the Fabric8 Kubernetes Client provides generic entry-points to perform operations on any resource:"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Depend only on the modules you need"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"The Kubernetes Client extension has transitive dependencies to all of the vanilla Kubernetes API model types.\n"
"This is very convenient in JVM mode, since you don't need to worry about configuring the project."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid ""
"However, in native mode, this implies registering for reflection model types that you very likely won't use in your application.\n"
"You can mitigate this by providing a more granular project configuration and depending only on those models you are sure the application uses."
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/kubernetes-client.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
