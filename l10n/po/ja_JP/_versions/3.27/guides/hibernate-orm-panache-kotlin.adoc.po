msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Simplified Hibernate ORM with Panache and Kotlin"
msgstr "Simplified Hibernate ORM with PanacheとKotlin"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"Hibernate ORM is the de facto standard Jakarta Persistence (formerly known as JPA) implementation and is well-known in the Java ecosystem. Hibernate ORM with Panache offers a\n"
"new layer atop this familiar framework.  This guide will not dive in to the specifics of either as those are already\n"
"covered in the xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache guide].  In this guide, we'll cover the Kotlin specific changes\n"
"needed to use Hibernate ORM with Panache in your Kotlin-based Quarkus applications."
msgstr "Hibernate ORMは、デファクトスタンダードであるJakarta Persistence（旧称JPA）実装であり、Javaエコシステムでよく知られています。Hibernate ORM with Panacheは、このおなじみのフレームワークの上に、新しいレイヤーを提供します。このガイドでは、 xref:hibernate-orm-panache.adoc[Hibernate ORM with Panacheのガイド] ですでにカバーされているため、どちらの仕様にも深入りしません。このガイドでは、KotlinベースのQuarkusアプリケーションでHibernate ORM with Panacheを使用するために必要なKotlin固有の変更点を説明します。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "When using the Kotlin version of Hibernate ORM with Panache, note that the `PanacheEntity`, `PanacheQuery` and `PanacheRepository` are in a different package: `io.quarkus.hibernate.orm.panache.kotlin`."
msgstr "KotlinバージョンのHibernate ORMをPanacheで使用する場合、 `PanacheEntity` 、 `PanacheQuery` 、 `PanacheRepository` は別のパッケージ: `io.quarkus.hibernate.orm.panache.kotlin` であることに注意してください。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "First: an example"
msgstr "最初に:例"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"As we saw in the Hibernate with Panache guide, it allows us to extend the functionality in our entities and repositories (also known as DAOs) with some automatically\n"
"provided functionality.  When using Kotlin, the approach is very similar to what we see in the Java version with a slight\n"
"change or two.  To Panache-enable your entity, you would define it something like:"
msgstr "Hibernate ORM with Panacheガイドで見たように、Hibernate ORM with Panacheを使うと、エンティティーやリポジトリ(DAOとも呼ばれます)の機能を自動で提供される機能で拡張することができます。Kotlin を使用する場合のアプローチは Java 版と非常によく似ていますが、若干の変更点があります。エンティティーを Panache で有効にするには、次のように定義します。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"As you can see our entities remain simple.  There is, however, a slight difference from the Java version.  The Kotlin\n"
"language doesn't support the notion of static methods in quite the same way as Java does.  Instead, we must use a\n"
"https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[companion object]:"
msgstr "ご覧のように、私たちのエンティティーはシンプルなままです。しかし、Java版とは少し違いがあります。Kotlin 言語は Java のように静的メソッドの概念をサポートしていません。その代わり、 link:https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[コンパニオンオブジェクト] を使わなければなりません。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"The companion object holds all the methods not related to a specific instance allowing for general management and\n"
"querying bound to a specific type."
msgstr "コンパニオンオブジェクトは、特定のインスタンスに関連しないすべてのメソッドを保持し、特定の型にバインドされた一般的な管理とクエリを可能にします。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"Here there are options, but we've chosen the `lateinit` approach.  This allows us to declare these fields as non-null\n"
"knowing they will be properly assigned either by the constructor (not shown) or by hibernate loading data from the\n"
"database."
msgstr "幾つか選択肢がありますが、ここでは `lateinit` のアプローチを選択しました。これにより、コンストラクタ(表示されていません)やHibernateがデータベースからデータをロードすることで適切に代入されることがわかっているので、これらのフィールドを非 null として宣言することができます。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"These types differ from the Java types mentioned in those tutorials.  For Kotlin support, all the Panache\n"
"types will be found in the `io.quarkus.hibernate.orm.panache.kotlin` package.  This subpackage allows for the distinction\n"
"between the Java and Kotlin variants and allows for both to be used unambiguously in a single project."
msgstr "これらの型は、それらのチュートリアルで言及されている Java のタイプとは異なります。Kotlin のサポートのために、すべての Panache の型は `io.quarkus.hibernate.orm.panache.kotlin` パッケージにあります。このサブパッケージは、Java と Kotlin の違いを区別し、単一のプロジェクトで両方を明確に使用することを可能にします。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"In the Kotlin version, we've simply moved the bulk of the link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[`active record pattern`]\n"
"functionality to the `companion object`.  Apart from this slight change, we can then work with our types in ways that map easily\n"
"from the Java side of world."
msgstr "Kotlin版では、単純に link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[`active record pattern`] の機能を `companion object` に追加しました。このわずかな変更を別にすれば、私たちは、世界のJava側から簡単にマップする方法で私たちの型を使用して作業することができます。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "The solution is located in the `hibernate-orm-panache-kotlin-quickstart` link:{quickstarts-tree-url}/hibernate-orm-panache-kotlin-quickstart[directory]."
msgstr "ソリューションは `hibernate-orm-panache-kotlin-quickstart` link:{quickstarts-tree-url}/hibernate-orm-panache-kotlin-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Setting up and configuring Hibernate ORM with Panache and Kotlin"
msgstr "Hibernate ORM with PanacheとKotlinのセットアップと設定"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"To get started using Hibernate ORM with Panache and Kotlin, you can, generally, follow the steps laid out in the Java tutorial. The biggest\n"
"change to configuring your project is the Quarkus artifact to include.  You can, of course, keep the Java version if you\n"
"need but if all you need are the Kotlin APIs then include the following dependency instead:"
msgstr "KotlinでHibernate ORM with Panacheを使い始めるには、一般的には、Javaチュートリアルで説明されている手順に従います。プロジェクトを設定する上で最も大きな変更点は、インクルードするQuarkusのアーティファクトです。もちろん、必要であればJavaバージョンのままでも構いませんが、KotlinのAPIだけが必要な場合は、代わりに以下の依存関係をインクルードしてください。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"Note the addition of `-kotlin` on the end. Generally you'll only need this version but if your project will be using\n"
"both Java and Kotlin code, you can safely include both artifacts."
msgstr "最後に `-kotlin` が追加されていることに注意してください。通常はこのバージョンのみが必要ですが、プロジェクトでJavaとKotlinの両方のコードを使用する場合は、両方のアーティファクト含めても大丈夫です。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Using the repository pattern"
msgstr "リポジトリパターンの使用"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Defining your entity"
msgstr "エンティティの定義"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "When using the repository pattern, you can define your entities as regular Jakarta Persistence entities."
msgstr "リポジトリパターンを使用する場合、エンティティを通常のJakarta Persistenceエンティティとして定義することができます。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Defining your repository"
msgstr "リポジトリの定義"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"When using Repositories, you get the exact same convenient methods as with the active record pattern, injected in your Repository,\n"
"by making them implement `PanacheRepository`:"
msgstr "リポジトリを使用する場合、 `PanacheRepository` を実装することでアクティブレコードパターンをリポジトリに注入した場合と全く同じ便利なメソッドを得ることができます。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"All the operations that are defined on `PanacheEntityBase` are available on your repository, so using it\n"
"is exactly the same as using the active record pattern, except you need to inject it:"
msgstr "`PanacheEntityBase` で定義されている操作はすべてリポジトリ上で利用可能なので、これを使用することはアクティブレコードパターンを使用するのと全く同じですが、それを注入する必要があります。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Most useful operations"
msgstr "最も便利な操作"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "Once you have written your repository, here are the most common operations you will be able to perform:"
msgstr "リポジトリを書くことで実行可能な最も一般的な操作は以下の通りです。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "All `list` methods have equivalent `stream` versions."
msgstr "すべての `list` メソッドは、同等の `stream` バージョンがあります。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid "The `stream` methods require a transaction to work."
msgstr "`stream` メソッドが動作するにはトランザクションが必要です。"

#: _versions/3.27/guides/hibernate-orm-panache-kotlin.adoc
msgid ""
"For more examples, please consult the xref:hibernate-orm-panache.adoc[Java version] for complete details.  Both APIs\n"
"are the same and work identically except for some Kotlin-specific tweaks to make things feel more natural to\n"
"Kotlin developers.  These tweaks include things like better use of nullability and the lack of `Optional` on API\n"
"methods."
msgstr "更なるサンプルについては、 link:hibernate-orm-panache[Java 版] を参照してください。どちらの API も同じで、Kotlin 開発者がより自然に感じられるように Kotlin 固有の調整が行われている点を除いては同じように動作します。これらの調整には、nullability の使用方法の改善や、API メソッドの `Optional` がないことなどが含まれます。"
