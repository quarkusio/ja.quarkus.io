msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Extension for Spring Data API"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"While users are encouraged to use Hibernate ORM with Panache for Relational Database access, Quarkus provides a compatibility layer for\n"
"Spring Data JPA repositories in the form of the `spring-data-jpa` extension."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The solution is located in the `spring-data-jpa-quickstart` link:{quickstarts-tree-url}/spring-data-jpa-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Creating the Maven project"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "This command generates a Maven project and imports the `spring-data-jpa` extension."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `spring-data-jpa` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Define the Entity"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Throughout the course of this guide, the following JPA Entity will be used:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Configure database access properties"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Add the following properties to `application.properties` to configure access to a local PostgreSQL instance."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "This configuration assumes that PostgreSQL will be running locally."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "A very easy way to accomplish that is by using the following Docker command:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "If you plan on using a different setup, please change your `application.properties` accordingly."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Prepare the data"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"To make it easier to showcase some capabilities of Spring Data JPA on Quarkus, some test data should be inserted into the database\n"
"by adding the following content to a new file named `src/main/resources/import.sql`:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Hibernate ORM will execute these queries on application startup."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Users can also use a file named `data.sql` in addition to `import.sql`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Define the repository"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"It is now time to define the repository that will be used to access `Fruit`.\n"
"In a typical Spring Data fashion create a repository like so:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"The `FruitRepository` above extends Spring Data's `org.springframework.data.repository.CrudRepository` which means that all the latter's methods are\n"
"available to `FruitRepository`.\n"
"Additionally `findByColor` is defined whose purpose is to return all Fruit entities that match the specified color."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Update the Jakarta REST resource"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"With the repository in place, the next order of business is to create the Jakarta REST resource that will use the `FruitRepository`.\n"
"Create `FruitResource` with the following content:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`FruitResource` now provides a few REST endpoints that can be used to perform CRUD operation on `Fruit`."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Note on Spring Web"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"The Jakarta REST resource can also be substituted with a Spring Web controller as Quarkus supports REST endpoint definition using Spring controllers.\n"
"See the xref:spring-web.adoc[Spring Web guide] for more details."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Update the test"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "To test the capabilities of `FruitRepository` proceed to update the content of `FruitResourceTest` to:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The test can be easily run by issuing:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Package and run the application"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"Quarkus dev mode works with the defined repositories just like with any other Quarkus extension, greatly enhancing your productivity during the dev cycle.\n"
"The application can be started in dev mode as usual using:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Run the application as a native binary"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "You can of course create a native executable following the instructions of xref:building-native-image.adoc[this guide]."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Supported Spring Data JPA functionalities"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Quarkus currently supports a subset of Spring Data JPA's features, namely the most useful and most commonly used features."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"An important part of this support is that all repository generation is done at build time thus ensuring that all supported features work correctly in native mode.\n"
"Moreover, developers know at build time whether their repository method names can be converted to proper JPQL queries.\n"
"This also means that if a method name indicates that a field should be used that is not part of the Entity, developers will get\n"
"the relevant error at build time."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "What is supported"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The following sections described the most important supported features of Spring Data JPA."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Automatic repository implementation generation"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Interfaces that extend any of the following Spring Data repositories are automatically implemented:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.repository.Repository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.repository.CrudRepository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.repository.ListCrudRepository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.repository.PagingAndSortingRepository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.repository.ListPagingAndSortingRepository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "`org.springframework.data.jpa.repository.JpaRepository`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"The generated repositories are also registered as beans so they can be injected into any other bean.\n"
"Furthermore, the methods that update the database are automatically annotated with `@Transactional`."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Fine-tuning of repository definition"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"This allows user defined repository interfaces to cherry-pick methods from any of the supported Spring Data repository interfaces without having to extend those interfaces.\n"
"This is particularly useful when for example a repository needs to use some methods from `CrudRepository` but it's undesirable to expose the full list of methods of said interface."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"Assume for example that a `PersonRepository` that shouldn't extend `CrudRepository` but would like to use `save` and `findById` methods which are defined in said interface.\n"
"In such a case, `PersonRepository` would look like so:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Customizing individual repositories using repository fragments"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"Repositories can be enriched with additional functionality or override the default implementation of methods of the supported Spring Data repositories.\n"
"This is best shown with an example."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "A repository fragment is defined as so:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The implementation of that fragment looks like this:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Then the actual `PersonRepository` interface to be used would look like:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Derived query methods"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"Methods of repository interfaces that follow the Spring Data conventions can be automatically implemented (unless they fall into one of the unsupported cases listed later on).\n"
"This means that methods like the following will all work:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "User defined queries"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "User supplied queries contained in the `@Query` annotation. For example things like the following all work:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "All methods that are annotated with `@Modifying` will automatically be annotated with `@Transactional`."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "In Quarkus, `@Param` is optional when parameter names have been compiled to bytecode (which is active by default in generated projects)."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Naming Strategies"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Hibernate ORM maps property names using a physical naming strategy and an implicit naming strategy. If you wish to use Spring Boot's default naming strategies, the following properties need to be set:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "More examples"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "An extensive list of examples can be seen in the https://github.com/quarkusio/quarkus/tree/main/integration-tests/spring-data-jpa[integration tests] directory which is located inside the Quarkus source code."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "What is currently unsupported"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Methods of the `org.springframework.data.repository.query.QueryByExampleExecutor` interface - if any of these are invoked, a Runtime exception will be thrown."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "QueryDSL support. No attempt will be made to generate implementations of the QueryDSL related repositories."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Using `org.springframework.data.jpa.repository.JpaSpecificationExecutor`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Customizing the base repository for all repository interfaces in the code base."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"In Spring Data JPA this is done by registering a class that extends `org.springframework.data.jpa.repository.support.SimpleJpaRepository` however in Quarkus this class\n"
"is not used at all (since all the necessary plumbing is done at build time). Similar support might be added to Quarkus in the future."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Using `java.util.concurrent.Future` and classes that extend it as return types of repository methods."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Native and named queries when using `@Query`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"https://github.com/spring-projects/spring-data-jpa/blob/main/src/main/asciidoc/jpa.adoc#entity-state-detection-strategies[Entity State-detection Strategies]\n"
"via `EntityInformation`."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The use of `org.springframework.data.jpa.repository.Lock`"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "The Quarkus team is exploring various alternatives to bridging the gap between the JPA and Reactive worlds."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Important Technical Note"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid ""
"Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.\n"
"Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types."
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "More Spring guides"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr ""

#: _versions/3.27/guides/spring-data-jpa.adoc
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr ""
