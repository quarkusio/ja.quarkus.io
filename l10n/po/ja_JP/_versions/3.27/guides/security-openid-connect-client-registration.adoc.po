msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OpenID Connect (OIDC) and OAuth2 dynamic client registration"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"Typically, you have to register an OIDC client (application) manually in your OIDC provider's dashboard.\n"
"During this process, you specify the human readable application name, allowed redirect and post logout URLs, and other properties.\n"
"After the registration has been completed, you copy the generated client id and secret to your Quarkus OIDC application properties."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"OpenID Connect and OAuth2 dynamic client registration allows you to register OIDC clients dynamically, and manage individual client registrations.\n"
"You can read more about it in the https://openid.net/specs/openid-connect-registration-1_0.html[OIDC client registration] and https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 Dynamic Client Registration Management Protocol] specification documents."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can use Quarkus `quarkus-oidc-client-registration` extension to register one or more clients using OIDC client registration configurations and read, update and delete metadata of the registered clients."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver] can be used to create OIDC tenant configurations using the metadata of the registered clients."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"Currently, Quarkus `quarkus-oidc-client-registration` extension has an `experimental` status.\n"
"Dynamic client registration API provided by this extension may change while this extension has an experiemental status."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC Client Registration"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Add the following dependency:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The `quarkus-oidc-client-registration` extension allows register one or more clients using OIDC client registration configurations, either on start-up or on demand, and read, update and delete metadata of the registered clients."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can register and manage client registrations from the custom xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver]."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Alternatively, you can register clients without even using OIDC. For example, it can be a command line tool which registers clients and passes metadata of the registered clients to Quarkus services which require them."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Each OIDC client registration configuration represents an OIDC client registration endpoint which can accept many individual client registrations."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Register clients on start-up"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You start with declaring one or more OIDC client registration configurations, for example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The above configuration will lead to two new client registrations created in your OIDC provider."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You or may not need to acquire an initial registration access token. If you don't, then you will have to enable one or more client registration policies in your OIDC provider's dashboard. For example, see https://www.keycloak.org/docs/latest/securing_apps/#_client_registration_policies[Keycloak client registration policies]."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The next step is to inject either `quarkus.oidc.client.registration.OidcClientRegistration` if only a single default client registration is done, or `quarkus.oidc.client.registration.OidcClientRegistrations` if more than one registration is configured, and use metadata of the clients registered with these configurations."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Register clients on demand"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"You can register new clients on demand.\n"
"You can add new clients to the existing, already configured `OidcClientConfiguration` or to a newly created `OidcClientConfiguration`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Start from configuring one or more OIDC client registrations:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The above configuration is sufficient for registering new clients using this configuration. For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Alternatively, you can use `OidcClientRegistrations` to prepare a new `OidcClientRegistration` and use `OidcClientRegistration` to register a client. For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Managing registered clients"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"`io.quarkus.oidc.client.registration.RegisteredClient` represents a registered client and can be used to read and update its metadata.\n"
"It can also be used to delete this client."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Avoiding duplicate registrations"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "When you register clients in startup, as described in the <<register-clients-on-startup>> section, you will most likely want to avoid creating duplicate registrations after a restart."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "In this case, you should configure OIDC client registration to perform the registration at the request time, as opposed to at the startup time:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The next thing you should do is to persist the already registered client's registration URI and registration token at the shutdown time, you can get them from the `io.quarkus.oidc.client.registration.RegisteredClient` instance."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Finally, at the startup time, you should restore the already registered client instead of registering it again."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"If you register clients dynamically, on demand, as described in the <<register-clients-on-demand>> section, the problem of the duplicate client registration should not arise.\n"
"You can persist the already registered client's registration URI and registration token if necessary though and check them too to avoid any duplicate reservation risk."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC request filters"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid "You can filter OIDC client registration and registered client requests registering one or more `OidcRequestFilter` implementations, which can update or add new request headers, as well as customize a request body."
msgstr "OIDCクライアント登録と、1つまたは複数の `OidcRequestFilter` 実装を登録する登録済みクライアントリクエストをフィルタリングすることができ、リクエストヘッダの更新や新規追加、リクエストボディのカスタマイズが可能です。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid "For example, a filter can analyze the request body and add its digest as a new header value:"
msgstr "例えば、フィルタはリクエストボディを分析し、そのダイジェストを 新しいヘッダー値として追加することができます："

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can have a single filter intercepting all the OIDC registration and registered client requests, or use an `@OidcEndpoint` annotation to apply this filter to either OIDC registration or registered client endpoint responses only. For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Restrict this filter to requests targeting the OIDC client registration endpoint only."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the 'client_name' property in the request metadata JSON."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"`OidcRequestContextProperties` can be used to access request properties.\n"
"Currently, you can use a `client_id` key to access the client tenant id and a `grant_type` key to access the grant type which the OIDC client uses to acquire tokens."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid ""
"`OidcRequestFilter` can customize a request body by preparing an instance of `io.vertx.mutiny.core.buffer.Buffer`\n"
"and setting it on a request context, for example:"
msgstr "`OidcRequestFilter` は、 のインスタンスを用意してリクエストコンテキストに設定するなどして、リクエストボディをカスタマイズすることができます： `io.vertx.mutiny.core.buffer.Buffer`"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC response filters"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can filter responses to OIDC client registration and registered client requests by registering one or more `OidcResponseFilter` implementations, which can check the response status, headers and body in order to log them or perform other actions."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can have a single filter intercepting responses to all the OIDC registration and registered client requests, or use an `@OidcEndpoint` annotation to apply this filter to responses from either OIDC registration or registered client endpoint only. For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the response `Content-Type` header."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the 'client_name' property in the response metadata JSON."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "or"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Restrict this filter to requests targeting the registered OIDC client endpoint only."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Confirm the client name property was updated."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid ""
"`OidcResponseFilter` can customize a response body by preparing an instance of `io.vertx.mutiny.core.buffer.Buffer`\n"
"and setting it as a property on a response context, for example:"
msgstr "`OidcResponseFilter` は、 のインスタンスを用意し、レスポンスコンテキストのプロパティに設定するなどして、レスポンスボディをカスタマイズすることができます： `io.vertx.mutiny.core.buffer.Buffer`"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://openid.net/specs/openid-connect-registration-1_0.html[OIDC client registration]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 Dynamic Client Registration Management Protocol]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://www.keycloak.org/docs/latest/securing_apps/#_client_registration[Keycloak Dynamic Client Registration Service]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
