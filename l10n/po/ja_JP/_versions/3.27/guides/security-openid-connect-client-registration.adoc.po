msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OpenID Connect (OIDC) and OAuth2 dynamic client registration"
msgstr "OpenID Connect (OIDC) と OAuth2 の動的クライアント登録"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"Typically, you have to register an OIDC client (application) manually in your OIDC provider's dashboard.\n"
"During this process, you specify the human readable application name, allowed redirect and post logout URLs, and other properties.\n"
"After the registration has been completed, you copy the generated client id and secret to your Quarkus OIDC application properties."
msgstr ""
"通常、OIDC プロバイダーのダッシュボードで OIDC クライアント (アプリケーション) を手動で登録する必要があります。\n"
"このプロセスでは、人間が判読できるアプリケーション名、許可されるリダイレクト URL とログアウト後の URL、およびその他のプロパティーを指定します。\n"
"登録が完了したら、生成されたクライアント ID とシークレットを Quarkus OIDC アプリケーションプロパティーにコピーします。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"OpenID Connect and OAuth2 dynamic client registration allows you to register OIDC clients dynamically, and manage individual client registrations.\n"
"You can read more about it in the https://openid.net/specs/openid-connect-registration-1_0.html[OIDC client registration] and https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 Dynamic Client Registration Management Protocol] specification documents."
msgstr ""
"OpenID Connect と OAuth2 の動的クライアント登録を使用すると、OIDC クライアントを動的に登録し、個々のクライアント登録を管理できます。\n"
"詳細は、 https://openid.net/specs/openid-connect-registration-1_0.html[OIDC クライアント登録] および https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 動的クライアント登録管理プロトコル] の仕様ドキュメントを参照してください。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can use Quarkus `quarkus-oidc-client-registration` extension to register one or more clients using OIDC client registration configurations and read, update and delete metadata of the registered clients."
msgstr "Quarkus の `quarkus-oidc-client-registration` エクステンションを使用すると、OIDC クライアント登録設定を使用して 1 つ以上のクライアントを登録し、登録されたクライアントのメタデータを読み取り、更新、削除できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver] can be used to create OIDC tenant configurations using the metadata of the registered clients."
msgstr "xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver] は、登録されたクライアントのメタデータを使用してOIDCテナントコンフィギュレーションを作成するために使用できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"Currently, Quarkus `quarkus-oidc-client-registration` extension has an `experimental` status.\n"
"Dynamic client registration API provided by this extension may change while this extension has an experiemental status."
msgstr ""
"現在、Quarkus の `quarkus-oidc-client-registration` エクステンションは `experimental` ステータスです。\n"
"このエクステンションが experimental ステータスである間、このエクステンションによって提供される動的クライアント登録 API は変更される可能性があります。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC Client Registration"
msgstr "OIDC クライアント登録"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Add the following dependency:"
msgstr "次の依存関係を追加します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The `quarkus-oidc-client-registration` extension allows register one or more clients using OIDC client registration configurations, either on start-up or on demand, and read, update and delete metadata of the registered clients."
msgstr "`quarkus-oidc-client-registration` エクステンションを使用すると、起動時または必要に応じて OIDC クライアント登録設定を使用して 1 つ以上のクライアントを登録し、登録されたクライアントのメタデータを読み取り、更新、削除できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can register and manage client registrations from the custom xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver]."
msgstr "カスタム xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[OIDC TenantConfigResolver] からクライアント登録を登録・管理することができます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Alternatively, you can register clients without even using OIDC. For example, it can be a command line tool which registers clients and passes metadata of the registered clients to Quarkus services which require them."
msgstr "または、OIDC を使用せずにクライアントを登録することもできます。たとえば、クライアントを登録し、登録されたクライアントのメタデータを必要とする Quarkus サービスにそのメタデータを渡すコマンドラインツールを使用できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Each OIDC client registration configuration represents an OIDC client registration endpoint which can accept many individual client registrations."
msgstr "各 OIDC クライアント登録設定は、多数の個別のクライアント登録を受け入れることができる OIDC クライアント登録エンドポイントを表します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Register clients on start-up"
msgstr "起動時のクライアント登録"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You start with declaring one or more OIDC client registration configurations, for example:"
msgstr "まず、1 つ以上の OIDC クライアント登録設定を宣言します。次に例を示します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The above configuration will lead to two new client registrations created in your OIDC provider."
msgstr "上記の設定により、OIDC プロバイダーに 2 つの新しいクライアント登録が作成されます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You or may not need to acquire an initial registration access token. If you don't, then you will have to enable one or more client registration policies in your OIDC provider's dashboard. For example, see https://www.keycloak.org/docs/latest/securing_apps/#_client_registration_policies[Keycloak client registration policies]."
msgstr "初期登録アクセストークンを取得する必要がない場合もあります。取得しない場合は、OIDC プロバイダーのダッシュボードで 1 つ以上のクライアント登録ポリシーを有効にする必要があります。たとえば、 https://www.keycloak.org/docs/latest/securing_apps/#_client_registration_policies[Keycloak クライアント登録ポリシー] を参照してください。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The next step is to inject either `quarkus.oidc.client.registration.OidcClientRegistration` if only a single default client registration is done, or `quarkus.oidc.client.registration.OidcClientRegistrations` if more than one registration is configured, and use metadata of the clients registered with these configurations."
msgstr "次のステップで、デフォルトのクライアント登録を 1 つだけ行う場合は `quarkus.oidc.client.registration.OidcClientRegistration` を、複数の登録を設定する場合は `quarkus.oidc.client.registration.OidcClientRegistrations` を挿入し、これらの設定で登録されたクライアントのメタデータを使用します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "For example:"
msgstr "例えば、以下のようになります:"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Register clients on demand"
msgstr "必要に応じたクライアント登録"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"You can register new clients on demand.\n"
"You can add new clients to the existing, already configured `OidcClientConfiguration` or to a newly created `OidcClientConfiguration`."
msgstr ""
"必要に応じて新しいクライアントを登録できます。\n"
"既存の設定済みの `OidcClientConfiguration` または新しく作成された `OidcClientConfiguration` に新しいクライアントを追加できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Start from configuring one or more OIDC client registrations:"
msgstr "まず、1 つ以上の OIDC クライアント登録を設定します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The above configuration is sufficient for registering new clients using this configuration. For example:"
msgstr "上記の設定は、この設定を使用して新しいクライアントを登録するのに十分なものです。次に例を示します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Alternatively, you can use `OidcClientRegistrations` to prepare a new `OidcClientRegistration` and use `OidcClientRegistration` to register a client. For example:"
msgstr "または、 `OidcClientRegistrations` を使用して新しい `OidcClientRegistration` を準備し、 `OidcClientRegistration` を使用してクライアントを登録することもできます。次に例を示します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Managing registered clients"
msgstr "登録クライアントの管理"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"`io.quarkus.oidc.client.registration.RegisteredClient` represents a registered client and can be used to read and update its metadata.\n"
"It can also be used to delete this client."
msgstr ""
"`io.quarkus.oidc.client.registration.RegisteredClient` は登録されたクライアントを表し、そのメタデータの読み取りと更新に使用できます。\n"
"このクライアントを削除する場合にも使用できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Avoiding duplicate registrations"
msgstr "重複した登録の回避"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "When you register clients in startup, as described in the <<register-clients-on-startup>> section, you will most likely want to avoid creating duplicate registrations after a restart."
msgstr "<<register-clients-on-startup>> セクションの説明に従って起動時にクライアントを登録する場合は、おそらく再起動後に重複した登録を作成しないようにする必要があるでしょう。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "In this case, you should configure OIDC client registration to perform the registration at the request time, as opposed to at the startup time:"
msgstr "この場合、起動時ではなくリクエスト時に登録を実行するように OIDC クライアント登録を設定する必要があります。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "The next thing you should do is to persist the already registered client's registration URI and registration token at the shutdown time, you can get them from the `io.quarkus.oidc.client.registration.RegisteredClient` instance."
msgstr "次に、シャットダウン時にすでに登録されているクライアントの登録 URI と登録トークンを保持する必要があります。これらは、 `io.quarkus.oidc.client.registration.RegisteredClient` インスタンスから取得できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Finally, at the startup time, you should restore the already registered client instead of registering it again."
msgstr "最後に、起動時に、すでに登録されているクライアントを再度登録するのではなく、そのクライアントを復元する必要があります。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"If you register clients dynamically, on demand, as described in the <<register-clients-on-demand>> section, the problem of the duplicate client registration should not arise.\n"
"You can persist the already registered client's registration URI and registration token if necessary though and check them too to avoid any duplicate reservation risk."
msgstr ""
"<<register-clients-on-demand>> セクションの説明に従ってクライアントを動的に必要に応じて登録する場合は、重複したクライアント登録の問題は発生しないはずです。\n"
"ただし、必要に応じて、すでに登録されているクライアントの登録 URI と登録トークンを保持し、それらを確認することで、重複した予約が発生するリスクを回避できます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC request filters"
msgstr "OIDCリクエストフィルター"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid "You can filter OIDC client registration and registered client requests registering one or more `OidcRequestFilter` implementations, which can update or add new request headers, as well as customize a request body."
msgstr "OIDCクライアント登録と、1つまたは複数の `OidcRequestFilter` 実装を登録する登録済みクライアントリクエストをフィルタリングすることができ、リクエストヘッダの更新や新規追加、リクエストボディのカスタマイズが可能です。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid "For example, a filter can analyze the request body and add its digest as a new header value:"
msgstr "例えば、フィルタはリクエストボディを分析し、そのダイジェストを 新しいヘッダー値として追加することができます："

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can have a single filter intercepting all the OIDC registration and registered client requests, or use an `@OidcEndpoint` annotation to apply this filter to either OIDC registration or registered client endpoint responses only. For example:"
msgstr "すべての OIDC 登録と登録済みクライアントリクエストをインターセプトする単一のフィルターを使用することも、 `@OidcEndpoint` アノテーションを使用してこのフィルターを OIDC 登録または登録済みクライアントエンドポイントレスポンスのみに適用することもできます。次に例を示します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Restrict this filter to requests targeting the OIDC client registration endpoint only."
msgstr "このフィルターを、OIDC クライアント登録エンドポイントのみを対象とするリクエストに制限します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the 'client_name' property in the request metadata JSON."
msgstr "リクエストメタデータ JSON の 'client_name' プロパティーを確認します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid ""
"`OidcRequestContextProperties` can be used to access request properties.\n"
"Currently, you can use a `client_id` key to access the client tenant id and a `grant_type` key to access the grant type which the OIDC client uses to acquire tokens."
msgstr ""
"`OidcRequestContextProperties` を使用して、リクエストプロパティーにアクセスできます。\n"
"現在、 `client_id` キーを使用してクライアントテナント ID にアクセスし、 `grant_type` キーを使用して、OIDC クライアントがトークンの取得に使用するグラントタイプにアクセスできます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid ""
"`OidcRequestFilter` can customize a request body by preparing an instance of `io.vertx.mutiny.core.buffer.Buffer`\n"
"and setting it on a request context, for example:"
msgstr "`OidcRequestFilter` は、 のインスタンスを用意してリクエストコンテキストに設定するなどして、リクエストボディをカスタマイズすることができます： `io.vertx.mutiny.core.buffer.Buffer`"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "OIDC response filters"
msgstr "OIDC レスポンスフィルター"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can filter responses to OIDC client registration and registered client requests by registering one or more `OidcResponseFilter` implementations, which can check the response status, headers and body in order to log them or perform other actions."
msgstr "1 つ以上の `OidcResponseFilter` 実装を登録することで、OIDC クライアント登録および登録済みクライアントリクエストへのレスポンスをフィルタリングできます。これにより、レスポンスのステータス、ヘッダー、ボディーをチェックしてログに記録したり、その他のアクションを実行したりできます。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "You can have a single filter intercepting responses to all the OIDC registration and registered client requests, or use an `@OidcEndpoint` annotation to apply this filter to responses from either OIDC registration or registered client endpoint only. For example:"
msgstr "すべての OIDC 登録および登録済みクライアントリクエストへのレスポンスをインターセプトする単一のフィルターを使用することも、 `@OidcEndpoint` アノテーションを使用してこのフィルターを OIDC 登録または登録済みクライアントエンドポイントからのレスポンスにのみ適用することもできます。次に例を示します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the response `Content-Type` header."
msgstr "レスポンスの `Content-Type` ヘッダーを確認します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Check the 'client_name' property in the response metadata JSON."
msgstr "レスポンスメタデータ JSON の 'client_name' プロパティーを確認します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "or"
msgstr "あるいは\n"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Restrict this filter to requests targeting the registered OIDC client endpoint only."
msgstr "このフィルターを、登録済み OIDC クライアントエンドポイントのみを対象とするリクエストに制限します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Confirm the client name property was updated."
msgstr "クライアント名プロパティーが更新されたことを確認します。"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
#, fuzzy
msgid ""
"`OidcResponseFilter` can customize a response body by preparing an instance of `io.vertx.mutiny.core.buffer.Buffer`\n"
"and setting it as a property on a response context, for example:"
msgstr "`OidcResponseFilter` は、 のインスタンスを用意し、レスポンスコンテキストのプロパティに設定するなどして、レスポンスボディをカスタマイズすることができます： `io.vertx.mutiny.core.buffer.Buffer`"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://openid.net/specs/openid-connect-registration-1_0.html[OIDC client registration]"
msgstr "https://openid.net/specs/openid-connect-registration-1_0.html[OIDC クライアント登録]"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 Dynamic Client Registration Management Protocol]"
msgstr "https://datatracker.ietf.org/doc/html/rfc7592[OAuth2 動的クライアント登録管理プロトコル]"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "https://www.keycloak.org/docs/latest/securing_apps/#_client_registration[Keycloak Dynamic Client Registration Service]"
msgstr "https://www.keycloak.org/docs/latest/securing_apps/#_client_registration[Keycloak 動的クライアント登録サービス]"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証]"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[ウェブアプリケーションを保護するOIDCコードフローメカニズム]"

#: _versions/3.27/guides/security-openid-connect-client-registration.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
