msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Dev Services for Kubernetes"
msgstr "Dev Services for Kubernetes"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Dev Services for Kubernetes automatically starts a Kubernetes API server (plus the required etcd) in dev mode and when running tests. So you don't have to start it manually.\n"
"The application is configured automatically."
msgstr "Dev Services for Kubernetesは、開発モードとテスト実行時にKubernetes APIサーバ（と必要なetcd）を自動的に起動します。そのため、手動で起動する必要はありません。アプリケーションは自動的に設定されます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "The following https://github.com/dajudge/kindcontainer?tab=readme-ov-file#container-flavors[testcontainers] are supported: https://kind.sigs.k8s.io/[kind], https://k3s.io/[k3s] or api only(default)"
msgstr "以下の link:https://github.com/dajudge/kindcontainer?tab=readme-ov-file#container-flavors[testcontainers] がサポートされています: link:https://kind.sigs.k8s.io/[kind] 、 link:https://k3s.io/[k3s] 、apiのみ(デフォルト)"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Enabling / Disabling Dev Services for Kubernetes"
msgstr "Dev Services for Kubernetesの有効化／無効化"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "To use the Kubernetes Dev Service, you simply need to add the `quarkus-kubernetes-client` extension to your project:"
msgstr "Kubernetes Dev Serviceを使用するには、 `quarkus-kubernetes-client` エクステンションをプロジェクトに追加するだけです："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "A Kubernetes API server is automatically started in dev or test modes whenever the `quarkus-kubernetes-client` extension is configured for a project. However, the dev service is disabled in some cases to prevent potential confusing situations:"
msgstr "Kubernetes API サーバーは、 `quarkus-kubernetes-client` 拡張機能がプロジェクトに設定されるたびに、dev または test モードで自動的に開始されます。しかし、潜在的な混乱を防ぐために、場合によってはdevサービスが無効になります："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if the dev service is explicitly disabled by setting `quarkus.kubernetes-client.devservices.enabled` to `false`"
msgstr "dev サービスが明示的に無効にされている場合は、 `quarkus.kubernetes-client.devservices.enabled` を `false`"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if the client is explicitly configured to access a given API server via `quarkus.kubernetes-client.api-server-url`"
msgstr "を介して指定されたAPIサーバにアクセスするようにクライアントが明示的に設定されている場合、そのAPIサーバは `quarkus.kubernetes-client.api-server-url`"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if a valid Kube config file is found, in which case that configuration will be used by the client. It is, however, possible to force the dev service to start anyway by setting `quarkus.kubernetes-client.devservices.override-kubeconfig` to `true` to disregard the existing configuration"
msgstr "有効なKube設定ファイルが見つかった場合、その設定がクライアントで使用されます。ただし、 `quarkus.kubernetes-client.devservices.override-kubeconfig` を `true` に設定し、既存の設定を無視することで、devサービスを強制的に開始できます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if you include the `quarkus-test-kubernetes-client` dependency as, presumably, in that case, you have tests that rely on the Fabric8 mock server and don't need to start a cluster"
msgstr "`quarkus-test-kubernetes-client` の依存関係を含めると、おそらくその場合、Fabric8 のモックサーバに依存するテストがあり、クラスタを起動する必要がないからです。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Dev Services for Kubernetes relies on a container engine (Docker or Podman) to start the server.\n"
"If your environment does not support such a container engine, you will have to start a Kubernetes cluster running in a VM, in the cloud, etc.\n"
"In this case, you can configure the Kubernetes cluster access using either a Kube config file or the various properties available as specified in the xref:kubernetes-client.adoc[Kubernetes client configuration guide]."
msgstr "Dev Services for Kubernetesは、サーバーの起動にコンテナエンジン（DockerまたはPodman）に依存しています。お使いの環境がそのようなコンテナエンジンをサポートしていない場合は、VMやクラウドなどで実行されているKubernetesクラスタを起動する必要があります。この場合、Kube設定ファイルまたは xref:kubernetes-client.adoc[Kubernetesクライアント設定ガイドで] 指定されているさまざまなプロパティを使用して、Kubernetesクラスタアクセスを設定できます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Shared cluster"
msgstr "共有クラスター"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Applications often need to share access to the same cluster. For that purpose, Dev Services for Kubernetes implements a _service discovery_ mechanism for multiple Quarkus applications running in dev mode to share a single cluster."
msgstr "アプリケーションはしばしば、同じクラスタへのアクセスを共有する必要があります。そのため、Dev Services for Kubernetesは、devモードで動作する複数のQuarkusアプリケーションが1つのクラスタを共有するための _サービス検出_ メカニズムを実装しています。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Dev Services for Kubernetes starts the api server container with the `quarkus-dev-service-kubernetes` label which is used to identify it."
msgstr "Dev Services for Kubernetesは、apiサーバーコンテナを識別するための `quarkus-dev-service-kubernetes` ラベルを付けて起動します。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "If you need multiple (shared) clusters, you can provide a value for the `quarkus.kubernetes-client.devservices.service-name` configuration property to specify the name of the cluster that will be shared among the selected applications. The dev service support will look for an already existing container with that specified name or starts a new one if none can be found.The default service name is `kubernetes`."
msgstr "複数の（共有）クラスタが必要な場合は、 `quarkus.kubernetes-client.devservices.service-name` 構成プロパティに値を指定して、選択したアプリケーション間で共有されるクラスタの名前を指定できます。devサービスサポートは、指定された名前の既存のコンテナを検索するか、見つからない場合は新しいコンテナを開始します。デフォルトのサービス名は `kubernetes` です。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Sharing is enabled by default in dev mode, but disabled in test mode.\n"
"You can disable the sharing with `quarkus.kubernetes-client.devservices.shared=false`."
msgstr "共有は、devモードではデフォルトで有効ですが、testモードでは無効です。共有は `quarkus.kubernetes-client.devservices.shared=false` で無効にできます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Configuring the cluster"
msgstr "クラスタの設定"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Dev Services for Kubernetes provides three different flavors of Kubernetes cluster. Each flavor supports different Kubernetes API versions.\n"
"You can configure the flavor and version using the `quarkus.kubernetes-client.devservices.flavor` and `quarkus.kubernetes-client.devservices.api-version` properties:"
msgstr "Dev Services for Kubernetesは、3つの異なるフレーバーのKubernetesクラスタを提供します。各フレーバーは、異なるKubernetes APIバージョンをサポートしています。フレーバーとバージョンは、 `quarkus.kubernetes-client.devservices.flavor` と `quarkus.kubernetes-client.devservices.api-version` プロパティを使用して設定することができます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "You can also configure a custom image compatible with standard images (kind, k3s & api-server) using the `quarkus.kubernetes-client.devservices.image-name` property. However, it must be consistent with the flavor and api-version properties:"
msgstr "`quarkus.kubernetes-client.devservices.image-name` プロパティを使って、標準のイメージ（kind, k3s & api-server）と互換性のあるカスタムイメージを設定することもできます。しかしながら、それはflavorとapi-versionプロパティと一貫していなければなりません："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "`api-only` only starts a Kubernetes API Server (plus the required etcd). If you need a fully-featured Kubernetes cluster that can spin up Pods, you can use `k3s` or `kind`. `k3s` requires to start the container with `privileged mode`. The `kind` test container now also supports using podman's rootless mode."
msgstr "`api-only` はKubernetes API Server（と必要なetcd）のみを起動します。Podをスピンアップできる完全な機能のKubernetesクラスタが必要な場合は、 または を使用できます。 を使用するには、 でコンテナを起動する必要があります。 テストコンテナは、podman のルートレスモードの使用もサポートするようになりました。 `k3s` `kind` `k3s` `privileged mode` `kind` "

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "If `api-version` is not set, the latest version for the given flavor will be used. Otherwise, the version must match a https://github.com/dajudge/kindcontainer/blob/master/k8s-versions.json[version supported by the given flavor]."
msgstr "`api-version` が設定されていない場合は、与えられた flavor の最新版が使用されます。それ以外の場合は、 link:https://github.com/dajudge/kindcontainer/blob/master/k8s-versions.json[定められた flavor がサポート] するバージョンと一致しなければなりません。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Once the cluster is configured, you can access it easily as you normally would, for example, by injecting a client instance in your test."
msgstr "一旦クラスタが設定されると、例えばテストにクライアントインスタンスを注入するなど、通常と同じように簡単にクラスタにアクセスすることができます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Applying manifests to the cluster"
msgstr "クラスタへのマニフェストの適用"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Within Quarkus it is possible to apply Kubernetes manifests to the cluster dev service on startup. This is especially useful if your application expects certain resources to be present in the cluster, such as for example a specific namespace or certain Custom Resource Definitions that the application interacts with."
msgstr "Quarkusでは、起動時にクラスタdevサービスにKubernetesマニフェストを適用できます。これは、アプリケーションが特定の名前空間やアプリケーションが相互作用する特定のカスタムリソース定義など、特定のリソースがクラスタに存在することをアプリケーションが期待している場合に特に便利です。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "You can configure the manifests to be applied using the `quarkus.kubernetes-client.devservices.manifests` property. This property accepts a list of files within the application's `resources` directory."
msgstr "`quarkus.kubernetes-client.devservices.manifests` プロパティを使用して、適用するマニフェストを構成できます。このプロパティは、アプリケーションの `resources` ディレクトリ内のファイルのリストを受け入れます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "As an example, to ensure the `example-namespace` namespace is present in the dev service, create the file `/src/main/resources/kubernetes/namespace.yml`:"
msgstr "例として、 `example-namespace` ネームスペースがdevサービスに存在するようにするには、 `/src/main/resources/kubernetes/namespace.yml` ："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "And then add the following property to your `application.properties`:"
msgstr "そして、次のプロパティを `application.properties` に追加します："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "When applying multiple properties, you can apply them as:"
msgstr "複数のプロパティを適用する場合は、次のように適用できます："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "It is also possible to apply manifests from a URL. So the following syntax would also be possible:"
msgstr "URL からマニフェストを適用することも可能です。つまり、以下の構文も可能です："

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Quarkus will apply the manifests in the order they are specified in the list."
msgstr "Quarkusは、リストで指定された順序でマニフェストを適用します。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Quarkus will await resources such as deployments to be ready before moving on to the next manifest.\n"
"All applied resources are guaranteed to be ready by the time your application finishes startup."
msgstr "Quarkusは、次のマニフェストに移る前に、デプロイメントなどのリソースの準備が整うのを待ちます。適用されたリソースはすべて、アプリケーションが起動を終了するまでに準備が完了していることが保証されます。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Deploying helm charts"
msgstr "ヘルムチャートの配置"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "`quarkus.kubernetes-client.devservices.manifests` only supports manifests. If you want to deploy a helm chart, you can use the `k3s` flavor and deploy a `HelmChart` manifest. See https://docs.k3s.io/helm for more information on how to use helm charts with k3s."
msgstr "`quarkus.kubernetes-client.devservices.manifests` はマニフェストのみをサポートしています。helmチャートをデプロイしたい場合、 フレーバーを使用し、 マニフェストをデプロイすることができます。k3sでhelmチャートを使う方法については `k3s` `HelmChart` https://docs.k3s.io/helm 。"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"
