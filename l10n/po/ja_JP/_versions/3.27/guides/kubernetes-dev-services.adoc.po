msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Dev Services for Kubernetes"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Dev Services for Kubernetes automatically starts a Kubernetes API server (plus the required etcd) in dev mode and when running tests. So you don't have to start it manually.\n"
"The application is configured automatically."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "The following https://github.com/dajudge/kindcontainer?tab=readme-ov-file#container-flavors[testcontainers] are supported: https://kind.sigs.k8s.io/[kind], https://k3s.io/[k3s] or api only(default)"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Enabling / Disabling Dev Services for Kubernetes"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "To use the Kubernetes Dev Service, you simply need to add the `quarkus-kubernetes-client` extension to your project:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "A Kubernetes API server is automatically started in dev or test modes whenever the `quarkus-kubernetes-client` extension is configured for a project. However, the dev service is disabled in some cases to prevent potential confusing situations:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "if the dev service is explicitly disabled by setting `quarkus.kubernetes-client.devservices.enabled` to `false`"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "if the client is explicitly configured to access a given API server via `quarkus.kubernetes-client.api-server-url`"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "if a valid Kube config file is found, in which case that configuration will be used by the client. It is, however, possible to force the dev service to start anyway by setting `quarkus.kubernetes-client.devservices.override-kubeconfig` to `true` to disregard the existing configuration"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "if you include the `quarkus-test-kubernetes-client` dependency as, presumably, in that case, you have tests that rely on the Fabric8 mock server and don't need to start a cluster"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Dev Services for Kubernetes relies on a container engine (Docker or Podman) to start the server.\n"
"If your environment does not support such a container engine, you will have to start a Kubernetes cluster running in a VM, in the cloud, etc.\n"
"In this case, you can configure the Kubernetes cluster access using either a Kube config file or the various properties available as specified in the xref:kubernetes-client.adoc[Kubernetes client configuration guide]."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Shared cluster"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Applications often need to share access to the same cluster. For that purpose, Dev Services for Kubernetes implements a _service discovery_ mechanism for multiple Quarkus applications running in dev mode to share a single cluster."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Dev Services for Kubernetes starts the api server container with the `quarkus-dev-service-kubernetes` label which is used to identify it."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "If you need multiple (shared) clusters, you can provide a value for the `quarkus.kubernetes-client.devservices.service-name` configuration property to specify the name of the cluster that will be shared among the selected applications. The dev service support will look for an already existing container with that specified name or starts a new one if none can be found.The default service name is `kubernetes`."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Sharing is enabled by default in dev mode, but disabled in test mode.\n"
"You can disable the sharing with `quarkus.kubernetes-client.devservices.shared=false`."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Configuring the cluster"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Dev Services for Kubernetes provides three different flavors of Kubernetes cluster. Each flavor supports different Kubernetes API versions.\n"
"You can configure the flavor and version using the `quarkus.kubernetes-client.devservices.flavor` and `quarkus.kubernetes-client.devservices.api-version` properties:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "You can also configure a custom image compatible with standard images (kind, k3s & api-server) using the `quarkus.kubernetes-client.devservices.image-name` property. However, it must be consistent with the flavor and api-version properties:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "`api-only` only starts a Kubernetes API Server (plus the required etcd). If you need a fully-featured Kubernetes cluster that can spin up Pods, you can use `k3s` or `kind`. `k3s` requires to start the container with `privileged mode`. The `kind` test container now also supports using podman's rootless mode."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "If `api-version` is not set, the latest version for the given flavor will be used. Otherwise, the version must match a https://github.com/dajudge/kindcontainer/blob/master/k8s-versions.json[version supported by the given flavor]."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Once the cluster is configured, you can access it easily as you normally would, for example, by injecting a client instance in your test."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Applying manifests to the cluster"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Within Quarkus it is possible to apply Kubernetes manifests to the cluster dev service on startup. This is especially useful if your application expects certain resources to be present in the cluster, such as for example a specific namespace or certain Custom Resource Definitions that the application interacts with."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "You can configure the manifests to be applied using the `quarkus.kubernetes-client.devservices.manifests` property. This property accepts a list of files within the application's `resources` directory."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "As an example, to ensure the `example-namespace` namespace is present in the dev service, create the file `/src/main/resources/kubernetes/namespace.yml`:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "And then add the following property to your `application.properties`:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "When applying multiple properties, you can apply them as:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "It is also possible to apply manifests from a URL. So the following syntax would also be possible:"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Quarkus will apply the manifests in the order they are specified in the list."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid ""
"Quarkus will await resources such as deployments to be ready before moving on to the next manifest.\n"
"All applied resources are guaranteed to be ready by the time your application finishes startup."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Deploying helm charts"
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "`quarkus.kubernetes-client.devservices.manifests` only supports manifests. If you want to deploy a helm chart, you can use the `k3s` flavor and deploy a `HelmChart` manifest. See https://docs.k3s.io/helm for more information on how to use helm charts with k3s."
msgstr ""

#: _versions/3.27/guides/kubernetes-dev-services.adoc
msgid "Configuration reference"
msgstr ""
