msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduler Reference Guide"
msgstr "スケジューラーリファレンスガイド"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"Modern applications often need to run specific tasks periodically.\n"
"There are two scheduler extensions in Quarkus.\n"
"The `quarkus-scheduler` extension brings the API and a lightweight in-memory scheduler implementation.\n"
"The `quarkus-quartz` extension implements the API from the `quarkus-scheduler` extension and contains a scheduler implementation based on the Quartz library.\n"
"You will only need `quarkus-quartz` for more advanced scheduling use cases, such as persistent tasks and clustering."
msgstr "最近のアプリケーションでは、特定のタスクを定期的に実行する必要があることがよくあります。Quarkusには、2つのスケジューラエクステンションがあります。 `quarkus-scheduler` エクステンションは、APIと軽量のインメモリスケジューラー実装を提供します。 `quarkus-quartz` エクステンションは、 `quarkus-scheduler` エクステンションのAPIを実装し、Quartzライブラリに基づくスケジューラ実装を含んでいます。 `quarkus-quartz` が必要になるのは、永続タスクやクラスタリングなど、より高度なスケジューリングのユースケースだけです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If you add the `quarkus-quartz` dependency to your project the lightweight scheduler implementation from the `quarkus-scheduler` extension is automatically disabled."
msgstr "プロジェクトに `quarkus-quartz` 依存関係を追加すると、 `quarkus-scheduler` エクステンションからの軽量スケジューラーの実装は自動的に無効になります。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduled Methods"
msgstr "スケジュールされたメソッド"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"A method annotated with `@io.quarkus.scheduler.Scheduled` is automatically scheduled for invocation.\n"
"A scheduled method must not be abstract or private.\n"
"It may be either static or non-static.\n"
"A scheduled method can be annotated with interceptor bindings, such as `@jakarta.transaction.Transactional` and `@org.eclipse.microprofile.metrics.annotation.Counted`."
msgstr "`@io.quarkus.scheduler.Scheduled` でアノテーションされたメソッドは、自動的に呼び出しがスケジュールされます。スケジュールされたメソッドは、abstractやprivateであってはなりません。静的または非静的であっても大丈夫です。スケジュールされたメソッドには、 `@jakarta.transaction.Transactional` や `@org.eclipse.microprofile.metrics.annotation.Counted` のようなインターセプターバインディングをアノテーションすることができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If there is a bean class that has no scope and declares at least one non-static method annotated with `@Scheduled` then `@Singleton` is used."
msgstr "スコープを持たないBeanクラスで、 `@Scheduled` でアノテーションされた非静的メソッドが少なくとも一つ宣言されている場合、 `@Singleton` が使用されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Furthermore, the annotated method must return `void` and either declare no parameters or one parameter of type `io.quarkus.scheduler.ScheduledExecution`."
msgstr "さらに、アノテーションされたメソッドは `void` を返し、パラメーターを宣言しないか、 `io.quarkus.scheduler.ScheduledExecution` 型のパラメーターを 1 つだけ宣言する必要があります。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The annotation is repeatable so a single method could be scheduled multiple times."
msgstr "アノテーションは繰り返し可能なので、1つのメソッドを複数回スケジュールすることができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Inheritance of metadata"
msgstr "メタデータの継承"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"A subclass never inherits the metadata of a `@Scheduled` method declared on a superclass.\n"
"For example, suppose the class `org.amce.Foo` is extended by the class `org.amce.Bar`.\n"
"If `Foo` declares a non-static method annotated with `@Scheduled` then `Bar` does not inherit the metadata of the scheduled method.\n"
"In the following example, the `everySecond()` method is only invoked upon the instance of `Foo`."
msgstr ""
"サブクラスは、スーパークラスで宣言された `@Scheduled` メソッドのメタデータを継承しません。\n"
"たとえば、クラス `org.amce.Foo` がクラス `org.amce.Bar` によって拡張されているとします。\n"
"`Foo` が `@Scheduled` アノテーションが付けられた非静的メソッドを宣言する場合、 `Bar` はスケジュールされたメソッドのメタデータを継承しません。\n"
"次の例では、 `everySecond()` メソッドは `Foo` のインスタンスに対してのみ呼び出されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "CDI events"
msgstr "CDI イベント"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Some CDI events are fired synchronously and asynchronously when specific events occur."
msgstr "一部の CDI イベントは、特定のイベントが発生したときに同期的または非同期的に起動されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Type"
msgstr "型"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Event description"
msgstr "イベントの説明"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.SuccessfulExecution`"
msgstr "`io.quarkus.scheduler.SuccessfulExecution`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "An execution of a scheduled job completed successfully."
msgstr "スケジュールされたジョブの実行が正常に完了しました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.FailedExecution`"
msgstr "`io.quarkus.scheduler.FailedExecution`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "An execution of a scheduled job completed with an exception."
msgstr "スケジュールされたジョブの実行が例外を伴って完了しました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.SkippedExecution`"
msgstr "`io.quarkus.scheduler.SkippedExecution`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "An execution of a scheduled job was skipped."
msgstr "スケジュールされたジョブの実行がスキップされました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.SchedulerPaused`"
msgstr "`io.quarkus.scheduler.SchedulerPaused`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The scheduler was paused."
msgstr "スケジューラーが一時停止されました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.SchedulerResumed`"
msgstr "`io.quarkus.scheduler.SchedulerResumed`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The scheduler was resumed."
msgstr "スケジューラーが再開されました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.ScheduledJobPaused`"
msgstr "`io.quarkus.scheduler.ScheduledJobPaused`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A scheduled job was paused."
msgstr "スケジュールされたジョブが一時停止されました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`io.quarkus.scheduler.ScheduledJobResumed`"
msgstr "`io.quarkus.scheduler.ScheduledJobResumed`"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A scheduled job was resumed."
msgstr "スケジュールされたジョブが再開されました。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Triggers"
msgstr "トリガー"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"A trigger is defined either by the `@Scheduled#cron()` or by the `@Scheduled#every()` attribute.\n"
"If both are specified, the cron expression takes precedence.\n"
"If none is specified, the build fails with an `IllegalStateException`."
msgstr "トリガーは、 `@Scheduled#cron()` 属性または `@Scheduled#every()` 属性によって定義されます。両方が指定されている場合、cron 式が優先されます。何も指定されていない場合、ビルドは `IllegalStateException` で失敗します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "CRON"
msgstr "CRON"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"A CRON trigger is defined by a cron-like expression.\n"
"For example `\"0 15 10 * * ?\"` fires at 10:15am every day."
msgstr "CRONトリガーは、cronライクな式で定義されています。例えば `\"0 15 10 * * ?\"` は毎日午前10時15分に起動します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "CRON Trigger Example"
msgstr "CRONトリガーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The syntax used in CRON expressions is controlled by the `quarkus.scheduler.cron-type` property.\n"
"The values can be `cron4j`, `quartz`, `unix` and `spring`.\n"
"`quartz` is used by default."
msgstr "CRON 式で使用される構文は `quarkus.scheduler.cron-type` プロパティーによって制御されます。 値は `cron4j` , `quartz` , `unix` および `spring` のいづれかです。 `quartz` がデフォルトで使用されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The `cron` attribute supports <<config-reference#property-expressions,Property Expressions>> including default values and nested\n"
"Property Expressions. (Note that \"{property.path}\" style expressions are still supported but don't offer the full functionality of Property Expressions.)"
msgstr "`cron` 属性は、デフォルト値やネストされたプロパティ式を含む <<config-reference#using_property_expressions,プロパティ式>> をサポートしています。(なお、\"{property.path}\"スタイルの表現もサポートされていますが、プロパティ式の完全な機能は提供されていません)。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "CRON Config Property Example"
msgstr "CRON設定プロパティーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If you wish to disable a specific scheduled method, you can set its cron expression to `\"off\"` or `\"disabled\"`."
msgstr "特定のスケジュールメソッドを無効にしたい場合は、そのcron式を `\"off\"` または `\"disabled\"` に設定します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "application.properties"
msgstr "application.properties"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Property Expressions allow you to define a default value that is used, if the property is not configured."
msgstr "プロパティ式では、そのプロパティが構成されていない場合に使用されるデフォルト値を定義することができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "CRON Config Property Example with default `0 0 15 ? * MON *`"
msgstr "デフォルト値が `0 0 15 ? * MON *` のCRON設定プロパティーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If the property `myMethod.cron.expr` is undefined or `null`, the default value (`0 0 15 ? * MON *`) will be used."
msgstr "プロパティ `myMethod.cron.expr` が未定義または `null` の場合は、デフォルト値（ `0 0 15 ? * MON *` ）が使用されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Time Zones"
msgstr "タイムゾーン"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The cron expression is evaluated in the context of the default time zone.\n"
"However, it is also possible to associate the cron expression with a specific time zone."
msgstr "cron式は、デフォルトのタイムゾーンのコンテキストで評価されます。しかし、cron式を特定のタイムゾーンに関連付けることも可能です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Time Zone Example"
msgstr "タイムゾーンの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The time zone ID is parsed using `java.time.ZoneId#of(String)`."
msgstr "タイムゾーンIDは、 `java.time.ZoneId#of(String)` を使って解析されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The `timeZone` attribute supports <<config-reference#property-expressions,Property Expressions>> including default values and nested\n"
"Property Expressions."
msgstr ""
"`timeZone` 属性はデフォルト値とネストされた値のプロパティー式を含む\n"
"<<config-reference#property-expressions,Property Expressions>> をサポートします。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Time Zone Configuration Property Example"
msgstr "タイムゾーン設定プロパティの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Intervals"
msgstr "インターバル"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"An interval trigger defines a period between invocations.\n"
"The period expression is based on the ISO-8601 duration format `PnDTnHnMn.nS` and the value of `@Scheduled#every()` is parsed with `java.time.Duration#parse(CharSequence)`.\n"
"However, if an expression starts with a digit and ends with `d`, `P` prefix will be added automatically. If the expression only starts with a digit, `PT` prefix is added automatically.\n"
"So for example, `15m` can be used instead of `PT15M` and is parsed as \"15 minutes\"."
msgstr ""
"インターバルトリガーは、次の呼び出しまでの期間を定義します。\n"
"期間の表現は ISO-8601 期間形式 `PnDTnHnMn.nS` に基づいており、 `@Scheduled#every()` の値は `java.time.Duration#parse (CharSequence)` で解析されます。\n"
"ただし、式が数字で始まり、 `d` で終わる場合、 `P` 接頭辞が自動的に追加されます。式が数字でのみ始まる場合、 `PT` 接頭辞が自動的に追加されます。\n"
"たとえば、 `PT15M` の代わりに `15m` を使用すると、15 分として解析されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Interval Trigger Example"
msgstr "インターバルトリガーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A value less than one second may not be supported by the underlying scheduler implementation. In that case a warning message is logged during build and application start."
msgstr "1 秒未満の値は、基盤となるスケジューラー実装ではサポートされていない可能性があります。その場合、ビルドおよびアプリケーションの起動時に警告メッセージが記録されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The `every` attribute supports <<config-reference#property-expressions,Property Expressions>> including default values and nested\n"
"Property Expressions. (Note that `\"{property.path}\"` style expressions are still supported but don't offer the full functionality of Property Expressions.)"
msgstr "`every` 属性は、デフォルト値やネストされたプロパティ式を含む <<config-reference#property-expressions,プロパティ式>> をサポートしています。(なお、 `\"{property.path}\"` スタイル式はサポートされていますが、プロパティ式の完全な機能は提供されていません)。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Interval Config Property Example"
msgstr "インターバル設定プロパティーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"Intervals can be disabled by setting their value to `\"off\"` or `\"disabled\"`.\n"
"So for example a Property Expression with the default value `\"off\"` can be used to disable the trigger if its Config Property has not been set."
msgstr "Intervals は、その値を `\"off\"` または `\"disabled\"` に設定することで無効にすることができます。そのため、例えば、デフォルト値 `\"off\"` のプロパティ式は、そのConfig Propertyが設定されていない場合、トリガーを無効にするために使用することができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Interval Config Property Example with a Default Value"
msgstr "デフォルト値のあるインターバル設定プロパティーの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Identity"
msgstr "アイデンティティ"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"By default, a unique identifier is generated for each scheduled method.\n"
"This identifier is used in log messages, during debugging and as a parameter of some `io.quarkus.scheduler.Scheduler` methods.\n"
"Therefore, a possibility to specify an explicit identifier may come in handy."
msgstr "デフォルトでは、スケジュールされた各メソッドに対して一意の ID が生成されます。このIDはログメッセージやデバッグ中に使用されます。時には、明示的な id を指定することが便利な場合もあります。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Identity Example"
msgstr "アイデンティティの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The `identity` attribute supports <<config-reference#property-expressions,Property Expressions>> including default values and nested\n"
"Property Expressions. (Note that `\"{property.path}\"` style expressions are still supported but don't offer the full functionality of Property Expressions.)"
msgstr "`identity` 属性は、デフォルト値やネストされたプロパティ式を含む link:config-reference.html#using_property_expressions[プロパティ式]をサポートしています。(なお、 `\"{property.path}\"` スタイル式はサポートされていますが、プロパティ式の完全な機能は提供されていません)。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Delayed Start of a Trigger"
msgstr "トリガーの遅延開始"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`@Scheduled` provides two ways to delay the time a trigger should start firing at."
msgstr "`@Scheduled` では、トリガーが発報を開始時刻を遅らせるための2つの方法を提供しています。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`@Scheduled#delay()` and `@Scheduled#delayUnit()` form the initial delay together."
msgstr "`@Scheduled#delay()` と `@Scheduled#delayUnit()` は初期遅延を一緒に形成します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The trigger fires for the first time two hours after the application start."
msgstr "アプリケーション開始から2時間後に初めてトリガーが発射されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The final value is always rounded to full second."
msgstr "最終的な値は常に1秒単位で丸められます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"`@Scheduled#delayed()` is a text alternative to the properties above.\n"
"The period expression is based on the ISO-8601 duration format `PnDTnHnMn.nS` and the value is parsed with `java.time.Duration#parse(CharSequence)`.\n"
"However, if an expression starts with a digit and ends with `d`, `P` prefix will be added automatically. If the expression only starts with a digit, `PT` prefix is added automatically.\n"
"So for example, `15s` can be used instead of `PT15S` and is parsed as \"15 seconds\"."
msgstr ""
"`@Scheduled#delayed()` は、上記のプロパティーの代替テキストです。\n"
"期間の表現は ISO-8601 の期間形式 `PnDTnHnMn.nS` に基づいており、値は `java.time.Duration#parse (CharSequence)` で解析されます。\n"
"ただし、式が数字で始まり、 `d` で終わる場合、 `P` の接頭辞が自動的に追加されます。式が数字だけで始まる場合、 `PT` 接頭辞が自動的に追加されます。\n"
"たとえば、 `PT15S` の代わりに `15s` を使用すると、15 秒として解析されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If `@Scheduled#delay()` is set to a value greater than zero the value of `@Scheduled#delayed()` is ignored."
msgstr "`@Scheduled#delay()` がゼロよりも大きい値に設定されている場合、 `@Scheduled#delayed()` の値は無視されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The main advantage over `@Scheduled#delay()` is that the value is configurable.\n"
"The `delay` attribute supports <<config-reference#property-expressions,Property Expressions>> including default values and nested Property Expressions.\n"
"(Note that `\"{property.path}\"` style expressions are still supported but don't offer the full functionality of Property Expressions.)"
msgstr "`@Scheduled#delay()` と比較した場合の主な利点は、値が設定可能であることです。 `delay` 属性は、デフォルト値やネストされたプロパティ式を含む link:config-reference.html#using_property_expressions[プロパティ式]をサポートしています。(なお、 `\"{property.path}\"` スタイルの表現はサポートされていますが、プロパティ式の完全な機能は提供されていません)。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The config property `myMethod.delay.expr` is used to set the delay."
msgstr "遅延の設定には、configプロパティー `myMethod.delay.expr` を使用します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Delayed Execution"
msgstr "遅延実行"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"`@Scheduled#executionMaxDelay()` can be set to delay each execution of a scheduled method.\n"
"The value represents the maximum delay between the activation of the trigger and the execution of the scheduled method.\n"
"The actual delay is a randomized number between 0 and the maximum specified delay."
msgstr ""
"`@Scheduled#executionMaxDelay()` を設定すると、スケジュールされたメソッドの各実行を遅延できます。\n"
"この値は、トリガーのアクティブ化とスケジュールされたメソッドの実行との間の最大遅延を表します。\n"
"実際の遅延は、0 から指定された最大遅延までの間でランダムに生成された数値です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The value is parsed with `DurationConverter#parseDuration(String)`.\n"
"It can be a property expression, in which case, the scheduler attempts to use the configured value instead: `@Scheduled(executionMaxDelay = \"${myJob.maxDelay}\")`.\n"
"Additionally, the property expression can specify a default value:\n"
"`@Scheduled(executionMaxDelay = \"${myJob.maxDelay}:500ms}\")`."
msgstr ""
"値は `DurationConverter#parseDuration (String)` で解析されます。\n"
"これはプロパティー式である可能性があり、その場合、スケジューラーは代わりに設定された値 (`@Scheduled (executionMaxDelay = \"${myJob.maxDelay}\")`) を使用しようとします。\n"
"さらに、プロパティー式ではデフォルト値\n"
"(`@Scheduled (実行最大遅延 = \"${myJob.maxDelay}:500ms}\")`) を指定できます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The delay will be a value between 0 and 500 milliseconds. As a result, the period between to `everyTwoSeconds()` executions will be roughly between one and a half and two and a half seconds."
msgstr "遅延の値は 0 - 500 ミリ秒です。その結果、 `everyTwoSeconds()` 実行間隔は、およそ 1.5 - 2.5 秒です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Concurrent Execution"
msgstr "同時実行"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"By default, a scheduled method can be executed concurrently.\n"
"Nevertheless, it is possible to specify the strategy to handle concurrent executions via `@Scheduled#concurrentExecution()`."
msgstr "デフォルトでは、スケジュールされたメソッドは同時に実行することができます。それにもかかわらず、 `@Scheduled#concurrentExecution()` を通じて同時実行を処理するための戦略を指定することが可能です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Concurrent executions are skipped."
msgstr "同時実行はスキップされます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A CDI event of type `io.quarkus.scheduler.SkippedExecution` is fired when an execution of a scheduled method is skipped."
msgstr "スケジュールされたメソッドの実行がスキップされると、 `io.quarkus.scheduler.SkippedExecution` のタイプのCDIイベントが発生します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Note that only executions within the same application instance are considered. This feature is not intended to work across the cluster."
msgstr "同じアプリケーションインスタンス内での実行のみが考慮されることに注意してください。この機能は、クラスター間での動作を意図したものではありません。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Conditional Execution"
msgstr "条件付き実行"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"You can define the logic to skip any execution of a scheduled method via `@Scheduled#skipExecutionIf()`.\n"
"The specified class must implement `io.quarkus.scheduler.Scheduled.SkipPredicate` and the execution is skipped if the result of the `test()` method is `true`.\n"
"The class must either represent a CDI bean or declare a public no-args constructor.\n"
"In case of CDI, there must be exactly one bean that has the specified class in its set of bean types, otherwise the build fails.\n"
"Furthermore, the scope of the bean must be active during execution of the job.\n"
"If the scope is `@Dependent` then the bean instance belongs exclusively to the specific scheduled method and is destroyed when the application is shut down."
msgstr ""
"`@Scheduled#skipExecutionIf()` を使用して、スケジュールされたメソッドの実行をスキップするロジックを定義できます。\n"
"指定されたクラスは `io.quarkus.scheduler.Scheduled.SkipPredicate` を実装する必要があり、 `test()` メソッドの結果が `true` の場合、実行はスキップされます。\n"
"クラスは CDI Bean を表すか、引数なしのパブリックコンストラクターを宣言する必要があります。\n"
"CDI の場合、Bean タイプのセット内に指定されたクラスを持つ Bean が 1 つだけ存在する必要があります。そうでない場合、ビルドは失敗します。\n"
"さらに、ジョブの実行中は Bean のスコープがアクティブである必要があります。\n"
"スコープが `@Dependent` の場合、Bean インスタンスは特定のスケジュールメソッドだけに属し、アプリケーションがシャットダウンされると破棄されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A bean instance of `MyPredicate.class` is used to evaluate whether an execution should be skipped. There must be exactly one bean that has the specified class in its set of bean types, otherwise the build fails."
msgstr "`MyPredicate.class` の Bean インスタンスは、実行をスキップすべきかどうかを評価するために使用されます。Beanタイプのセットに指定されたクラスを持つBeanが正確に1つ存在する必要があり、そうでない場合はビルドが失敗します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The scope of the bean must be active during execution."
msgstr "Beanのスコープは、実行中を通じてアクティブです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`Jobs.everySecond()` is skipped until `MyService.isStarted()` returns `true`."
msgstr "`Jobs.everySecond()` は、 `MyService.isStarted()` が `true` を返すまでスキップされます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Note that this is an equivalent of the following code:"
msgstr "なお、これは以下のコードと同等のものです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The main idea is to keep the logic to skip the execution outside the scheduled business methods so that it can be reused and refactored easily."
msgstr "主なアイデアは、スケジュールされたビジネスメソッドの外で実行をスキップするロジックを維持することで、再利用やリファクタリングが容易にできるようにすることです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "To skip the scheduled executions while the application is starting up/shutting down, you can make use of the `io.quarkus.scheduler.Scheduled.ApplicationNotRunning` skip predicate."
msgstr "アプリケーションの起動/シャットダウン中にスケジュールされた実行をスキップするには、 `io.quarkus.scheduler.Scheduled.ApplicationNotRunning` のスキップ条件を使用できます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Non-blocking Methods"
msgstr "ノンブロッキング方式"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"By default, a scheduled method is executed on the main executor for blocking tasks.\n"
"As a result, a technology that is designed to run on a Vert.x event loop (such as Hibernate Reactive) cannot be used inside the method body.\n"
"For this reason, a scheduled method that returns `java.util.concurrent.CompletionStage<Void>` or `io.smallrye.mutiny.Uni<Void>`, or is annotated with `@io.smallrye.common.annotation.NonBlocking` is executed on the Vert.x event loop instead."
msgstr "デフォルトでは、スケジュールされたメソッドは、ブロッキングタスク用のメインエクゼキュータ上で実行されます。そのため、Vert.xイベントループ上で実行するように設計された技術（Hibernate Reactiveなど）は、メソッド本体内で使用することができません。このため、 `java.util.concurrent.CompletionStage<Void>` または `io.smallrye.mutiny.Uni<Void>` を返す、あるいは `@io.smallrye.common.annotation.NonBlocking` でアノテーションされたスケジュール型メソッドは、代わりに Vert.x のイベントループで実行されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The return type `Uni<Void>` instructs the scheduler to execute the method on the Vert.x event loop."
msgstr "リターンタイプ `Uni<Void>` は、Vert.xのイベントループでメソッドを実行するようにスケジューラに指示します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "How to use multiple scheduler implementations"
msgstr "複数のスケジューラー実装を使用する方法"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"In some cases, it might be useful to choose a scheduler implementation used to execute a scheduled method.\n"
"However, only one `Scheduler` implementation is used for all scheduled methods by default.\n"
"For example, the `quarkus-quartz` extension provides an implementation that supports clustering, but it also removes the simple in-memory implementation from the game.\n"
"Now, if clustering is enabled then it's not possible to define a scheduled method that would be executed locally on a single node.\n"
"Nevertheless, if you set the `quarkus.scheduler.use-composite-scheduler` config property to `true` then a composite `Scheduler` is used instead.\n"
"This means that multiple scheduler implementations are kept running side by side.\n"
"Furthermore, it's possible to choose a specific implementation used to execute a scheduled method using `@Scheduled#executeWith()`."
msgstr ""
"場合によっては、スケジュールされたメソッドを実行するために使用されるスケジューラー実装を選択すると便利な場合があります。\n"
"ただし、デフォルトでは、すべてのスケジュールされたメソッドに対して 1 つの `Scheduler` 実装のみが使用されます。\n"
"たとえば、 `quarkus-quartz` エクステンションはクラスタリングをサポートするスケジューラ実装を提供しますが、その代わりにシンプルなインメモリー実装は使用できなくなります。\n"
"そのため、クラスタリングが有効になっている場合、単一のノードでローカルに実行されるスケジュールされたメソッドを定義できません。\n"
"ただし、 `quarkus.scheduler.use-composite-scheduler` 設定プロパティーを `true` に設定すると、代わりに複合 `Scheduler` が使用されます。\n"
"つまり、複数のスケジューラー実装が並行して実行されます。\n"
"さらに、 `@Scheduled#executeWith()` を使用して、スケジュールされたメソッドの実行に使用される特定の実装を選択することもできます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If the `quarkus-quartz` extension is present then this method will be executed with the Quartz-specific scheduler."
msgstr "`quarkus-quartz` エクステンションが存在する場合、このメソッドは Quartz 固有のスケジューラーで実行されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If `quarkus.scheduler.use-composite-scheduler=true` is set then this method will be executed with the simple in-memory implementation provided by the `quarkus-scheduler` extension."
msgstr "`quarkus.scheduler.use-composite-scheduler=true` が設定されている場合、このメソッドは `quarkus-scheduler` エクステンションによって提供される単純なインメモリー実装を使用して実行されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduler"
msgstr "スケジューラー"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Quarkus provides a built-in bean of type `io.quarkus.scheduler.Scheduler` that can be injected and used to pause/resume the scheduler and individual scheduled methods identified by a specific `Scheduled#identity()`."
msgstr "Quarkusは、 `io.quarkus.scheduler.Scheduler` 型のビルトインBeanを提供しており、これを注入してスケジューラーを一時停止/再開するために使用することができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduler Injection Example"
msgstr "スケジューラーインジェクションの例"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Pause all triggers."
msgstr "すべてのトリガーを一時停止します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Pause a specific scheduled method by its identity"
msgstr "スケジュールされた特定のメソッドをそのIDで一時停止する"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Resume a specific scheduled method by its identity"
msgstr "スケジュールされた特定のメソッドを、そのIDで再開する"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Resume the scheduler."
msgstr "スケジューラーを再開します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "List all jobs in the scheduler."
msgstr "スケジューラーを再開します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Get Trigger metadata for a specific scheduled job by its identity."
msgstr "スケジュールされた特定のメソッドを、そのIDで再開する。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "You can configure the grace period for isOverdue() with quarkus.scheduler.overdue-grace-period"
msgstr "isOverdue()の猶予期間は、quarkus.scheduler.overdue-grace-periodを使用して設定することができます"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A CDI event is fired synchronously and asynchronously when the scheduler or a scheduled job is paused/resumed. The payload is `io.quarkus.scheduler.SchedulerPaused`, `io.quarkus.scheduler.SchedulerResumed`, `io.quarkus.scheduler.ScheduledJobPaused` and `io.quarkus.scheduler.ScheduledJobResumed` respectively."
msgstr "CDIイベントは、スケジューラーやスケジュールされたジョブが一時停止/再開されたときに、同期および非同期で発生します。ペイロードはそれぞれ `io.quarkus.scheduler.SchedulerPaused` , `io.quarkus.scheduler.SchedulerResumed` , `io.quarkus.scheduler.ScheduledJobPaused` , `io.quarkus.scheduler.ScheduledJobResumed` です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduling Long-Running Tasks"
msgstr "長時間タスクのスケジューリング"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Executing a long-running task might yield a warning message similar to the following:"
msgstr "長時間実行されるタスクを実行すると、次のような警告メッセージが表示されることがあります："

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "This is happening because the default worker thread pool is coming from Vert.x which guards against threads being blocked for far too long."
msgstr "これは、デフォルトのワーカースレッドプールがVert.xから来たもので、スレッドがあまりにも長くブロックされるのを防ぐためです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The amount of time for which a Vert.x worker thread can be blocked is also https://quarkus.io/guides/all-config#quarkus-vertx_quarkus-vertx-max-worker-execute-time[configurable]."
msgstr "Vert.x ワーカースレッドをブロックできる時間も link:https://quarkus.io/guides/all-config#quarkus-vertx_quarkus-vertx-max-worker-execute-time[設定可能] です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"Therefore, a proper way to execute long tasks is to offload them from the scheduled method to a custom executor service.\n"
"Here's an example of such setup for a long-running task that we do not expect to execute often:"
msgstr "したがって、長いタスクを実行する適切な方法は、スケジュールメソッドからカスタム実行サービスにオフロードすることです。以下は、頻繁に実行されるとは思っていない長時間タスクのセットアップの例です："

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Create a fitting executor. In this case, a new thread is created per scheduled task and stopped once the task finishes."
msgstr "フィットするエクゼキューターを作成します。この場合、スケジュールされたタスクごとに新しいスレッドが作成され、タスクが終了すると停止します。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "`@PreDestroy` callback is used to shut down the executor service."
msgstr "`@PreDestroy` コールバックは、executorサービスをシャットダウンするために使用されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduled method only delegates the job to the custom executor - this prevent Vert.x thread from being blocked."
msgstr "スケジューリングされたメソッドは、ジョブをカスタムエグゼキュータに委譲するだけです。これにより、Vert.xスレッドがブロックされるのを防ぎます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The bean implements `Runnable`, a format we can directly pass to the executor service as a parameter."
msgstr "このBeanは `Runnable` を実装しています。これは、エグゼキュータ・サービスにパラメータとして直接渡せるフォーマットです。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Programmatic Scheduling"
msgstr "プログラムスケジューリング"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "An injected `io.quarkus.scheduler.Scheduler` can be also used to schedule a job programmatically."
msgstr "注入された `io.quarkus.scheduler.Scheduler` は、プログラム的にジョブをスケジュールするために使用することもできます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "This is a programmatic alternative to a method annotated with `@Scheduled(identity = \"myJob\", cron = \"0/5 * * * * ?\")`."
msgstr "これは、 `@Scheduled(identity = \"myJob\", cron = \"0/5 * * * * ?\")` でアノテーションされたメソッドに代わるプログラム的な代替です。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The business logic is defined in a callback."
msgstr "ビジネスロジックはコールバックで定義されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "The job is scheduled once the `JobDefinition#schedule()` method is called."
msgstr "`JobDefinition#schedule()` メソッドが呼び出されると、ジョブがスケジュールされます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "A job that was added programmatically can be also removed."
msgstr "プログラムによって追加されたジョブも削除することができます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "By default, the scheduler is not started unless a `@Scheduled` business method is found. You may need to force the start of the scheduler for \"pure\" programmatic scheduling via `quarkus.scheduler.start-mode=forced`."
msgstr "デフォルトでは、 `@Scheduled` ビジネスメソッドが見つからない限り、スケジューラは開始されません。「純粋な」プログラムによるスケジューリングでは、 `quarkus.scheduler.start-mode=forced` を使ってスケジューラを強制的に起動させる必要があるかもしれません。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If the xref:quartz.adoc[Quartz extension] is present and the DB store type is used then it's not possible to pass a task instance to the job definition and a task class must be used instead. The Quartz API can be also used to schedule a job programmatically."
msgstr "xref:quartz.adoc[Quartz エクステンション] が存在し、DB ストアタイプが使用されている場合、タスクインスタンスをジョブ定義に渡すことはできず、代わりにタスククラスを使用する必要があります。Quartz API を使用して、プログラムでジョブをスケジュールすることもできます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"In certain cases, a more fine-grained approach might be needed which is why Quarkus also exposes `java.util.concurrent.ScheduledExecutorService` and `java.util.concurrent.ExecutorService` that can be injected as CDI beans.\n"
"However, these executors are used by other Quarkus extensions and therefore should be approached with caution. Furthermore, users are never allowed to shut these executors down manually."
msgstr ""
"場合によっては、詳細にわたるアプローチが必要になることがあります。そのため、Quarkus は CDI Bean として注入できる `java.util.concurrent.ScheduledExecutorService` と `java.util.concurrent.ExecutorService` も公開しています。\n"
"ただし、これらのエグゼキューターは他の Quarkus エクステンションによって使用されるため、注意して使用する必要があります。さらに、ユーザーがこれらのエグゼキューターを手動でシャットダウンすることは許可されていません。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Scheduled Methods and Testing"
msgstr "スケジュールされたメソッドとテスト"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"It is often desirable to disable the scheduler when running the tests.\n"
"The scheduler can be disabled through the runtime config property `quarkus.scheduler.enabled`.\n"
"If set to `false` the scheduler is not started even though the application contains scheduled methods.\n"
"You can even disable the scheduler for particular <<getting-started-testing#testing_different_profiles,Test Profiles>>."
msgstr "テストを実行する際には、スケジューラーを無効にすることが望ましいことがよくあります。スケジューラーは、ランタイム設定プロパティー `quarkus.scheduler.enabled` を通じて無効にすることができます。 `false` に設定すると、アプリケーションにスケジュールされたメソッドが含まれていても、 スケジューラーは起動しません。特定の link:getting-started-testing.html#testing_different_profiles[テストプロファイル] に対してスケジューラーを無効にすることもできます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Metrics"
msgstr "メトリクス"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Some basic metrics are published out of the box if `quarkus.scheduler.metrics.enabled` is set to `true` and a metrics extension is present."
msgstr "`quarkus.scheduler.metrics.enabled` が `true` に設定されていて、metrics エクステンションが存在する場合、いくつかの基本的なメトリクスがすぐに公開されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If the xref:telemetry-micrometer.adoc[Micrometer extension] is present, then a `@io.micrometer.core.annotation.Timed` interceptor binding is added to all `@Scheduled` methods automatically (unless it's already present) and a `io.micrometer.core.instrument.Timer` with name `scheduled.methods` and a `io.micrometer.core.instrument.LongTaskTimer` with name `scheduled.methods.running` are registered. The fully qualified name of the declaring class and the name of a `@Scheduled` method are used as tags."
msgstr "xref:telemetry-micrometer.adoc[Micrometer エクステンション] が存在する場合、すべての `@Scheduled` メソッドに `@io.micrometer.core.annotation.Timed` インターセプター・バインディングが自動的に追加され (すでに存在する場合を除く)、 `scheduled.methods` という名前の `io.micrometer.core.instrument.Timer` と `scheduled.methods.running` という名前の `io.micrometer.core.instrument.LongTaskTimer` が登録されます。宣言するクラスの修飾子名と `@Scheduled` メソッド名がタグとして使用されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If the xref:smallrye-metrics.adoc[SmallRye Metrics extension] is present, then a `@org.eclipse.microprofile.metrics.annotation.Timed`  interceptor binding is added to all `@Scheduled` methods automatically (unless it's already present) and a `org.eclipse.microprofile.metrics.Timer` is created for each `@Scheduled` method. The name consists of the fully qualified name of the declaring class and the name of a `@Scheduled` method. The timer has a tag `scheduled=true`."
msgstr "link:smallrye-metrics[SmallRye Metrics エクステンション]が存在する場合、 `@org.eclipse.microprofile.metrics.annotation.Timed` インターセプターバインディングがすべての `@Scheduled` メソッドに自動的に追加され（すでに存在している場合を除く）、 `org.eclipse.microprofile.metrics.Timer` が各 `@Scheduled` メソッドに対して作成されます。名前は、宣言したクラスの完全修飾名と `@Scheduled` メソッドの名前で構成されます。タイマーには、タグ `scheduled=true` が付いています。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "OpenTelemetry Tracing"
msgstr "OpenTelemetry Tracing"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "If `quarkus.scheduler.tracing.enabled` is set to `true` and the xref:opentelemetry.adoc[OpenTelemetry extension] is present then every job execution, either defined with the `@Scheduled` annotation or scheduled programmatically, automatically creates a span named after the job's <<identity>>."
msgstr "`quarkus.scheduler.tracing.enabled` を `true` に設定し、xref:opentelemetry.adoc[OpenTelemetry エクステンション] が存在する場合、 `@Scheduled` アノテーションで定義されているか、プログラムでスケジュールされているかに関係なく、ジョブの <<identity>> をもとにした名前でスパンが自動的に作成されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Run @Scheduled methods on virtual threads"
msgstr "仮想スレッド上で @Scheduled メソッドを実行"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"Methods annotated with `@Scheduled` can also be annotated with `@RunOnVirtualThread`.\n"
"In this case, the method is invoked on a virtual thread."
msgstr ""
"`@Scheduled` でアノテーションされたメソッドは、 `@RunOnVirtualThread` でアノテーションすることもできます。 \n"
"この場合、メソッドは仮想スレッド上で呼び出されます。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid ""
"The method must return `void` and your Java runtime must provide support for virtual threads.\n"
"Read xref:./virtual-threads.adoc[the virtual thread guide] for more details."
msgstr ""
"メソッドは `void` を返す必要があり、Java ランタイムは仮想スレッドのサポートを提供する必要があります。\n"
"詳細については、 xref:./virtual-threads.adoc[仮想スレッドガイド] をお読みください。"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/scheduler-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
