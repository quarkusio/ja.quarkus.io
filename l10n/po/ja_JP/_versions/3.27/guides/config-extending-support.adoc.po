msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Extending Configuration Support"
msgstr "設定サポートの拡張"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Custom `ConfigSource`"
msgstr "カスタム `ConfigSource`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"It's possible to create a custom `ConfigSource` as specified in\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config]."
msgstr "link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config] で指定されたカスタム `ConfigSource` を作成することが可能です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"With a Custom `ConfigSource` it is possible to read additional configuration values and add them to the `Config`\n"
"instance in a defined ordinal. This allows overriding values from other sources or falling back to other values."
msgstr "カスタム `ConfigSource` では、追加の設定値を読み込んで、定義された順序で `Config` インスタンスに追加することができます。これにより、他のソースからの値をオーバーライドしたり、他の値にフォールバックしたりすることができます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"A custom `ConfigSource` requires an implementation of `org.eclipse.microprofile.config.spi.ConfigSource` or\n"
"`org.eclipse.microprofile.config.spi.ConfigSourceProvider`. Each implementation requires registration via\n"
"the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism, either in\n"
"`META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` or\n"
"`META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` files."
msgstr ""
"カスタム `ConfigSource` には、 `org.eclipse.microprofile.config.spi.ConfigSource` または `org.eclipse.microprofile.config.spi.ConfigSourceProvider` の実装が必要です。\n"
"各実装には、 `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` または `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` ファイルの link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] メカニズムによる登録が必要です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Example"
msgstr "例"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Consider a simple in-memory `ConfigSource`:"
msgstr "単純なインメモリ `ConfigSource` を考えてみましょう。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "org.acme.config.InMemoryConfigSource"
msgstr "org.acme.config.InMemoryConfigSource"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "And registration in:"
msgstr "そして以下に登録します。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"
msgstr "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The `InMemoryConfigSource` will be ordered between the `.env` source, and the `application.properties` source due to\n"
"the `275` ordinal:"
msgstr "`InMemoryConfigSource` は、 `275` の序列により、 `.env` ソースと、 `application.properties` ソースの間に順序付けられます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "ConfigSource"
msgstr "ConfigSource"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Ordinal"
msgstr "序列"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "System Properties"
msgstr "システムプロパティ"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "400"
msgstr "400"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Environment Variables from System"
msgstr "システムからの環境変数"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "300"
msgstr "300"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Environment Variables from `.env` file"
msgstr "`.env` ファイルからの環境変数"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "295"
msgstr "295"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "InMemoryConfigSource"
msgstr "InMemoryConfigSource"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "275"
msgstr "275"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "`application.properties` from `/config`"
msgstr "`/config` からの `application.properties`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "260"
msgstr "260"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "`application.properties` from application"
msgstr "アプリケーションからの `application.properties`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "250"
msgstr "250"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "`microprofile-config.properties` from application"
msgstr "アプリケーションからの `microprofile-config.properties`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "100"
msgstr "100"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"In this case, `my.prop` from `InMemoryConfigSource` will only be used if the config engine is unable to find a value\n"
"in xref:config-reference.adoc#system-properties[System Properties],\n"
"xref:config-reference.adoc#environment-variables[Environment Variables from System] or\n"
"xref:config-reference.adoc#env-file[Environment Variables from .env file] in this order."
msgstr "この場合、 `InMemoryConfigSource` からの `my.prop` は、設定エンジンが link:config-reference.html#system-properties[システムプロパティ]、 link:config-reference.html#environment-variables[システムからの環境変数]、 link:config-reference.html#env-file[.env ファイルからの環境変数]の順に値を見つけられない場合にのみ使用されます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "ConfigSource Init"
msgstr "ConfigSource初期化"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"When a Quarkus application starts, a `ConfigSource` can be initialized twice. One time for _STATIC INIT_ and a second\n"
"time for _RUNTIME INIT_:"
msgstr "Quarkusアプリケーションの起動時に、 `ConfigSource` を2回初期化することができます。1回目は _STATIC INIT_ で、2回目は _RUNTIME INIT_ です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "STATIC INIT"
msgstr "STATIC INIT"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"Quarkus starts some of its services during static initialization, and `Config` is usually one of the first things that\n"
"is created. In certain situations it may not be possible to add a custom `ConfigSource`. For instance, if the\n"
"`ConfigSource` requires other services, like a database access, it will not be available at this stage, and cause a\n"
"chicken-egg problem. For this reason, any custom `ConfigSource` requires the annotation\n"
"`@io.quarkus.runtime.configuration.StaticInitSafe` to mark the source as safe to be used at this stage."
msgstr "Quarkusは静的初期化中にいくつかのサービスを開始しますが、 `Config` は通常、最初に作成されるものの1つです。特定の状況では、カスタムの `ConfigSource` を追加できない場合があります。例えば、 `ConfigSource` がデータベースアクセスのような他のサービスを必要とする場合、この段階では利用できず、鶏と卵の問題が発生してしまいます。このため、カスタム `ConfigSource` には、この段階で使用しても安全であるとソースをマークするためのアノテーション `@io.quarkus.runtime.configuration.StaticInitSafe` が必要です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Consider:"
msgstr "以下だとすると、"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "The `InMemoryConfigSource` will be available during _STATIC INIT_."
msgstr "`InMemoryConfigSource` は、 _STATIC INIT_ 中に利用可能になります。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"A custom `ConfigSource` is not automatically added during Quarkus _STATIC INIT_. It requires to be marked with\n"
"the `@io.quarkus.runtime.configuration.StaticInitSafe` annotation."
msgstr "カスタム `ConfigSource` は、Quarkusの _STATIC INIT_ 中に自動的に追加されません。 `@io.quarkus.runtime.configuration.StaticInitSafe` のアノテーションを付ける必要があります。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "RUNTIME INIT"
msgstr "RUNTIME INIT"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The _RUNTIME INIT_ stage happens after _STATIC INIT_. In this stage a `ConfigSource` can be initialized again. There\n"
"are no restrictions at this stage, and a custom source is added to the `Config` instance as expected."
msgstr "_RUNTIME INIT_ ステージは、 _STATIC INIT_ の後に起こります。このステージでは、 `ConfigSource` を再び初期化することができます。この段階では特に制限はなく、期待通りにカスタムソースが `Config` インスタンスに追加されます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "`ConfigSourceFactory`"
msgstr "`ConfigSourceFactory`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"Another way to create a `ConfigSource` is via the https://github.com/smallrye/smallrye-config[SmallRye Config]\n"
"`io.smallrye.config.ConfigSourceFactory` API. The difference between the\n"
"https://github.com/smallrye/smallrye-config[SmallRye Config] factory and the standard way to create a `ConfigSource` as\n"
"specified in\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config],\n"
"is the factory ability to provide a context with access to the available configuration."
msgstr "`ConfigSource` を作成するもう一つの方法は、 link:https://github.com/smallrye/smallrye-config[SmallRye Config] `io.smallrye.config.ConfigSourceFactory` API を使用することです。 link:https://github.com/smallrye/smallrye-config[SmallRye Config]のファクトリーと、 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config] で指定されている `ConfigSource` を作成する標準的な方法との違いは、利用可能な構成にアクセスできるコンテキストを提供するファクトリーの機能です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"Each implementation of `io.smallrye.config.ConfigSourceFactory` requires registration via\n"
"the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceFactory` file."
msgstr "`io.smallrye.config.ConfigSourceFactory` の各実装には、 `META-INF/services/io.smallrye.config.ConfigSourceFactory` ファイル内の link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] メカニズムによる登録が必要です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "org.acme.config.URLConfigSourceFactory"
msgstr "org.acme.config.URLConfigSourceFactory"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "META-INF/services/io.smallrye.config.ConfigSourceFactory"
msgstr "META-INF/services/io.smallrye.config.ConfigSourceFactory"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"By implementing `io.smallrye.config.ConfigSourceFactory`, a list of `ConfigSource` may be provided via the\n"
"`Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` method. The `ConfigSourceFactory` may also\n"
"assign a priority by overriding the method `OptionalInt getPriority()`. The priority values is used to sort\n"
"multiple `io.smallrye.config.ConfigSourceFactory` (if found)."
msgstr "`io.smallrye.config.ConfigSourceFactory` を実装することで、 `Iterable&amp;lt;ConfigSource> getConfigSources(ConfigSourceContext context)` メソッドを介して `ConfigSource` のリストを提供することができます。また、 `ConfigSourceFactory` は、 `OptionalInt getPriority()` メソッドをオーバーライドすることで、優先度を割り当てることができます。優先度の値は、複数の `io.smallrye.config.ConfigSourceFactory` をソートするために使用されます（見つかった場合）。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"`io.smallrye.config.ConfigSourceFactory` priority does not affect the `ConfigSource` ordinal. These are\n"
"sorted independently."
msgstr "`io.smallrye.config.ConfigSourceFactory` の優先順位は、 `ConfigSource` の序列には影響しません。これらは独立してソートされます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"When the Factory is initializing, the provided `ConfigSourceContext` may call the method\n"
"`ConfigValue getValue(String name)`. This method looks up configuration names in all ``ConfigSource``s that were already\n"
"initialized by the `Config` instance, including sources with lower ordinals than the ones defined in the\n"
"`ConfigSourceFactory`. The `ConfigSource` list provided by a `ConfigSourceFactory` is not taken into consideration to\n"
"configure other sources produced by a lower priority `ConfigSourceFactory`."
msgstr "ファクトリーの初期化中、提供された `ConfigSourceContext` は、メソッド `ConfigValue getValue(String name)` を呼び出すことができます。このメソッドは、 `Config` インスタンスによってすでに初期化されたすべての `ConfigSource` の設定名を検索します。これには、 `ConfigSourceFactory` で定義されたものよりも低い序列のソースが含まれます。 `ConfigSourceFactory` によって提供された `ConfigSource` リストは、優先順位の低い `ConfigSourceFactory` によって生成された他のソースを構成するためには考慮されません。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Custom `Converter`"
msgstr "カスタム `Converter`"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"It is possible to create a custom `Converter` type as specified by\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config]."
msgstr "link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config]で指定されたカスタム `Converter` 型を作成することが可能です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"A custom `Converter` requires an implementation of `org.eclipse.microprofile.config.spi.Converter<T>`. Each implementation\n"
"requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/org.eclipse.microprofile.config.spi.Converter` file. Consider:"
msgstr ""
"カスタム `Converter` には、 `org.eclipse.microprofile.config.spi.Converter<T>` の実装が必要です。\n"
"各実装には、 `META-INF/services/org.eclipse.microprofile.config.spi.Converter` ファイル内の link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] メカニズムを介した登録が必要です。以下の場合、"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "The corresponding converter will look similar to the one below."
msgstr "対応するコンバータは以下のようになります。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The custom converter class must be `public`, must have a `public` constructor with no arguments, and must not be\n"
"`abstract`."
msgstr "カスタム・コンバータ・クラスは `public` でなければならず、 `public` コンストラクタは引数なしでなければならず、 `abstract` であってはなりません。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "The custom configuration type converts the configuration value automatically:"
msgstr "カスタムコンフィグレーションタイプは、設定値を自動的に変換します。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Converter priority"
msgstr "コンバーターの優先順位"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The `jakarta.annotation.Priority` annotation overrides the `Converter` priority and change converters precedence to fine\n"
"tune the execution order. By default, if no `@Priority` is specified by the `Converter`, the converter is registered\n"
"with a priority of `100`. Consider:"
msgstr "`jakarta.annotation.Priority` アノテーションは、 `Converter` の優先順位を上書きし、コンバータの優先順位を変更して実行順序を微調整します。デフォルトでは、 `Converter` に `@Priority` が指定されていない場合、コンバーターは `100` の優先順位で登録されます。以下の場合、"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"Since it converts the same value type (`MicroProfileCustomValue`) and has a priority of `150`, it will be used\n"
"instead of a `MicroProfileCustomValueConverter` which has a default priority of `100`."
msgstr "同値の型 ( `MicroProfileCustomValue`)を変換し、優先度が `150` であるため、デフォルトの優先度が `100` である `MicroProfileCustomValueConverter` の代わりに使用されます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"All Quarkus core converters use the priority value of `200`. To override any Quarkus specific converter, the\n"
"priority value should be higher than `200`."
msgstr "すべてのQuarkusコアコンバーターは、 `200` の優先値を使用しています。Quarkus特有のコンバーターをオーバーライドするには、優先度の値を `200` よりも高くする必要があります。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "Config Interceptors"
msgstr "設定インターセプター"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"https://github.com/smallrye/smallrye-config[SmallRye Config] provides an interceptor chain that hooks into the\n"
"configuration values resolution. This is useful to implement features like\n"
"xref:config-reference.adoc#profiles[Profiles],\n"
"xref:config-reference.adoc#property-expressions[Property Expressions],\n"
"or just logging to find out where the config value was loaded from."
msgstr "link:https://github.com/smallrye/smallrye-config[SmallRye Config]は、設定値の解決をフックするインターセプターチェーンを提供します。これは、 link:config-reference.html#profiles[プロファイル]や link:config-reference.html#property-expressions[プロパティExpressions]のような機能を実装するのに便利で、また、設定値がどこから読み込まれたかを調べるためのロギングにも役立ちます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"An interceptor requires an implementation of `io.smallrye.config.ConfigSourceInterceptor`. Each implementation\n"
"requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` file."
msgstr ""
"インターセプターには、 `io.smallrye.config.ConfigSourceInterceptor` の実装が必要です。\n"
"各実装には、 `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` ファイル内の link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] メカニズムによる登録が必要です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The `io.smallrye.config.ConfigSourceInterceptor` is able to intercept the resolution of a configuration name with the\n"
"method `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)`. The `ConfigSourceInterceptorContext`\n"
"is used to proceed with the interceptor chain. The chain can be short-circuited by returning an instance of\n"
"`io.smallrye.config.ConfigValue`. The `ConfigValue` objects hold information about the key name, value, config source\n"
"origin and ordinal."
msgstr "`io.smallrye.config.ConfigSourceInterceptor` は、メソッド `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)` で設定名の解決をインターセプトすることができます。 `ConfigSourceInterceptorContext` は、インターセプター・チェーンを進めるために使用されます。このチェーンは、 `io.smallrye.config.ConfigValue` のインスタンスを返すことで短絡させることができます。 `ConfigValue` オブジェクトは、キー名、値、コンフィグソースのオリジン、序列に関する情報を保持しています。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "The interceptor chain is applied before any conversion is performed on the configuration value."
msgstr "インターセプターチェーンは、設定値の変換が行われる前に適用されます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"Interceptors may also be created with an implementation of `io.smallrye.config.ConfigSourceInterceptorFactory`. Each\n"
"implementation requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` file."
msgstr ""
"インターセプターは、 `io.smallrye.config.ConfigSourceInterceptorFactory` の実装で作成することもできます。\n"
"各実装には、 `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` ファイル内の link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] メカニズムによる登録が必要です。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The `ConfigSourceInterceptorFactory` may initialize an interceptor with access to the current chain\n"
"(so it can be used to configure the interceptor and retrieve configuration values) and set the priority."
msgstr "`ConfigSourceInterceptorFactory` は、（インターセプターの設定や設定値の取得に使用できるように）現在のチェーンにアクセスし、インターセプターを初期化し、優先度を設定することができます。"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "org.acme.config.LoggingConfigSourceInterceptor"
msgstr "org.acme.config.LoggingConfigSourceInterceptor"

#: _versions/3.27/guides/config-extending-support.adoc
msgid "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"
msgstr "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"

#: _versions/3.27/guides/config-extending-support.adoc
msgid ""
"The `LoggingConfigSourceInterceptor` logs looks up configuration names in the provided logging platform. The log\n"
"information includes config name and value, the config source origin and location if exists."
msgstr "`LoggingConfigSourceInterceptor` ログは、提供されたログプラットフォームで設定名を検索します。ログ情報には、設定名と値、設定ソースの出所と場所（存在する場合）が含まれます。"
