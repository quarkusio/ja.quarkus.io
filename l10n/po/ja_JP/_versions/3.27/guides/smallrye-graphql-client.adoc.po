msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "SmallRye GraphQL Client"
msgstr "SmallRye GraphQLクライアント"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use the GraphQL client library.\n"
"The client is implemented by the https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL] project.\n"
"This guide is specifically geared towards the client side, so if you need an introduction to GraphQL in\n"
"general, first refer to the xref:smallrye-graphql.adoc[SmallRye GraphQL guide], which provides an introduction\n"
"to the GraphQL query language, general concepts and server-side development."
msgstr "このガイドでは、QuarkusアプリケーションでGraphQLクライアントライブラリを使用する方法を説明します。このクライアントは、 https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL] プロジェクトによって実装されています。このガイドは特にクライアント側を対象としていますので、GraphQL全般の紹介が必要な場合は、まず link:smallrye-graphql.html[SmallRye GraphQLガイド]を参照してください。このガイドでは、GraphQLのクエリ言語、一般的なコンセプト、サーバーサイドの開発について紹介しています。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The guide will walk you through developing and running a simple application that uses both supported\n"
"types of GraphQL clients to retrieve data from a remote resource, that being a database related to Star Wars.\n"
"It's available at https://graphql.org/swapi-graphql[this webpage] if you want to experiment with it manually.\n"
"The web UI allows you to write and execute GraphQL queries against it."
msgstr "このガイドでは、サポートされている両方のタイプのGraphQLクライアントを使用して、リモートリソース（スターウォーズ関連のデータベース）からデータを取得するシンプルなアプリケーションの開発と実行について説明しています。このガイドは link:https://graphql.org/swapi-graphql[このウェブページ]で公開されているので、手動で試してみたい方はぜひご覧ください。Web UIでは、このアプリケーションに対してGraphQLクエリを書いて実行することができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "GraphQL client types introduction"
msgstr "GraphQLクライアントタイプの紹介"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Two types of GraphQL clients are supported."
msgstr "2種類のGraphQLクライアントに対応しています。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The *typesafe* client works very much like the MicroProfile REST Client adjusted for calling GraphQL endpoints.\n"
"A client instance is basically a proxy that you can call like a regular Java object, but under the hood,\n"
"the call will be translated to a GraphQL operation. It works with domain classes directly.\n"
"Any input and output objects for the operation will be translated to/from their representations\n"
"in the GraphQL query language."
msgstr "*typesafe* クライアントは、GraphQLエンドポイントを呼び出すために調整されたMicroProfile REST Clientと非常によく似た動作をします。クライアントのインスタンスは基本的にプロキシであり、通常のJavaオブジェクトのように呼び出すことができますが、中では呼び出しがGraphQL操作に変換されます。クライアントはドメインクラスと直接連携します。操作のための入出力オブジェクトは、GraphQLのクエリ言語での表現に変換されます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The *dynamic* client, on the other hand, works rather like an equivalent of the Jakarta REST client\n"
"from the `jakarta.ws.rs.client` package. It does not require the domain classes to work, it works with\n"
"abstract representations of GraphQL documents instead. Documents are built using a domain-specific language (DSL).\n"
"The exchanged objects are treated as an abstract `JsonObject`, but, when necessary,\n"
"it is possible to convert them to concrete model objects (if suitable model classes are available)."
msgstr "一方、 *ダイナミック* クライアントは、 `jakarta.ws.rs.client` パッケージの Jakarta REST クライアントと同等に動作します。動作にドメイン クラスを必要とせず、代わりに GraphQL ドキュメントの抽象表現で動作します。ドキュメントは、ドメイン固有言語（DSL）を使用して構築されます。交換されたオブジェクトは抽象的な `JsonObject` として扱われますが、必要に応じて（適切なモデルクラスが利用可能な場合）具体的なモデルオブジェクトに変換することが可能です。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The typesafe client can be viewed as a rather high-level and more declarative approach designed for ease of use,\n"
"whereas the dynamic client is lower-level, more imperative, somewhat more verbose to use, but allows finer grained\n"
"control over operations and responses."
msgstr "タイプセーフ・クライアントは、使いやすさを重視したハイレベルで宣言的なアプローチと見ることができます。一方、ダイナミック・クライアントは、低レベルで命令的なアプローチであり、使い勝手はやや冗長ですが、操作や応答をより細かく制御することができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "The solution is located in the `microprofile-graphql-client-quickstart` link:{quickstarts-tree-url}/microprofile-graphql-client-quickstart[directory]."
msgstr "ソリューションは `microprofile-graphql-client-quickstart` link:{quickstarts-tree-url}/microprofile-graphql-client-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"This command generates a project, importing the `smallrye-graphql-client` extension, and also the `rest-jsonb`\n"
"extension, because we will use that too - a REST endpoint will be the entrypoint to allow you to manually trigger\n"
"the GraphQL client to do its work."
msgstr "このコマンドはプロジェクトを生成し、 `smallrye-graphql-client` エクステンションをインポートし、 `rest-jsonb` エクステンションも使用します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-graphql-client` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、 `smallrye-graphql-client` エクステンションをプロジェクトに追加することができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "The application"
msgstr "アプリケーション"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The application we will build makes use of both types of GraphQL clients. In both cases,\n"
"they will connect to the Star Wars service at https://graphql.org/swapi-graphql[SWAPI] and\n"
"query it for a list of Star Wars films, and, for each film, the names of the planets which\n"
"appear in that film."
msgstr "今回作成するアプリケーションでは、どちらのタイプのGraphQLクライアントも使用します。どちらの場合も、 link:https://graphql.org/swapi-graphql[SWAPI]のスター・ウォーズサービスに接続し、スター・ウォーズの映画のリストと、各映画に登場する惑星の名前を問い合わせます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "The corresponding GraphQL query looks like this:"
msgstr "これに対応するGraphQLクエリは次のようになります。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "You may go to https://graphql.org/swapi-graphql[the webpage] to execute this query manually."
msgstr "このクエリを手動で実行するには、 link:https://graphql.org/swapi-graphql[Webページ]にアクセスしてください。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Using the Typesafe client"
msgstr "Typesafeクライアントの使用"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"To use the typesafe client, we need the corresponding model classes that are compatible with\n"
"the schema. There are two ways to obtain them. First is to  use the client generator offered by SmallRye GraphQL,\n"
"which generates classes from the schema document and a list of queries. This generator is considered highly\n"
"experimental for now, and is not covered in this example. If interested, refer to the\n"
"https://github.com/smallrye/smallrye-graphql/tree/main/client/generator[Client Generator] and its documentation."
msgstr "タイプセーフ・クライアントを使うには，スキーマと互換性のある対応するモデルクラスが必要です．それらを入手するには2つの方法があります。1つ目は、SmallRye GraphQLが提供するクライアントジェネレータを使用する方法で、これはスキーマドキュメントとクエリのリストからクラスを生成します。このジェネレーターは今のところ非常に実験的なものとされており、この例では取り上げていません。興味のある方は、 link:https://github.com/smallrye/smallrye-graphql/tree/main/client/generator[Client Generator]とそのドキュメントを参照してください。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"In this example, we will create a slimmed down version of the model classes manually, with only the fields\n"
"that we need, and ignore all the stuff that we don't need. We will need the classes for `Film` and `Planet`.\n"
"But, the service is also using specific wrappers named `FilmConnection` and `PlanetConnection`, which,\n"
"for our purpose, will serve just to contain the actual list of `Film` and `Planet` instances, respectively."
msgstr "この例では、必要なフィールドだけを持ち、必要のないものはすべて無視して、モデルクラスのスリムなバージョンを手動で作成します。必要なのは、 `Film` と `Planet` のクラスです。しかし、このサービスでは、 `FilmConnection` と `PlanetConnection` という名前の特定のラッパーも使用しており、今回の目的では、それぞれ `Film` と `Planet` のインスタンスの実際のリストを格納するだけです。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Let's create all the model classes and put them into the `org.acme.microprofile.graphql.client.model` package:"
msgstr "すべてのモデルクラスを作成して、 `org.acme.microprofile.graphql.client.model` パッケージに入れましょう。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Now that we have the model classes, we can create the interface that represents the actual set\n"
"of operations we want to call on the remote GraphQL service."
msgstr "モデルクラスができたので、次は、リモートのGraphQLサービスを呼び出すための実際の操作セットを表すインターフェースを作成します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"For simplicity, we're only calling the query named `allFilms`. We named our corresponding method\n"
"`allFilms` too. If we named the method differently, we would need to annotate it with\n"
"`@Query(value=\"allFilms\")` to specify the name of the query that should be executed when this\n"
"method is called."
msgstr "わかりやすくするために、 `allFilms` という名前のクエリだけを呼び出しています。対応するメソッドの名前も `allFilms` としました。もしメソッドの名前が違っていたら、このメソッドが呼ばれたときに実行されるべきクエリの名前を指定するために、 `@Query(value=\"allFilms\")` をアノテーションする必要があります。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"The client also needs some configuration, namely at least the URL of the remote service. We can either\n"
"specify that within the `@GraphQLClientApi` annotation (by setting the `endpoint` parameter),\n"
"or move this over to the configuration file, `application.properties`:"
msgstr "クライアントにも設定が必要で、少なくともリモートサービスのURLが必要です。これは、 `@GraphQLClientApi` アノテーション内で指定する（ `endpoint` パラメータを設定する）か、設定ファイル（ `application.properties` ）に移すことができます:"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "quarkus.smallrye-graphql-client.star-wars-typesafe.url=https://swapi-graphql.netlify.app/graphql"
msgstr "quarkus.smallrye-graphql-client.star-wars-typesafe.url=https://swapi-graphql.netlify.app/graphql"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"During *tests only*, the URL is an optional property, and if it's not specified, Quarkus will assume\n"
"that the target of the client is the application that is being tested (typically, `http://localhost:8081/graphql`).\n"
"This is useful if your application contains a GraphQL server-side API as well as a GraphQL client that is used for\n"
"testing the API."
msgstr "*テストのみ* の場合、URL はオプションのプロパティであり、指定されていない場合、Quarkus はクライアントのターゲットがテストされているアプリケーションであると推定します (通常、 `http://localhost:8081/graphql`) 。これは、アプリケーションに GraphQL サーバー側 API と、API のテストに使用される GraphQL クライアントが含まれている場合に役立ちます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"If you need to add an authorization header, or any other custom HTTP header (in our case\n"
"it's not required), this can be done with a configuration in the configuration file as well:"
msgstr "authorizationヘッダやその他のカスタムHTTPヘッダを追加する必要がある場合（私たちのケースでは必須ではありません）、これも設定ファイルのコンフィギュレーションで行うことができます："

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "quarkus.smallrye-graphql-client.star-wars-typesafe.header.HEADER-KEY=HEADER-VALUE"
msgstr "quarkus.smallrye-graphql-client.star-wars-typesafe.header.HEADER-KEY=HEADER-VALUE"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"`star-wars-typesafe` is the name of the configured client instance, and corresponds to the `configKey`\n"
"in the `@GraphQLClientApi` annotation. If you don't want to specify a custom name, you can leave\n"
"out the `configKey`, and then refer to it by using the fully qualified name of the interface."
msgstr "`star-wars-typesafe` は設定されたクライアントインスタンスの名前で、 `@GraphQLClientApi` アノテーションの `configKey` に対応しています。カスタム名を指定したくない場合は、 `configKey` を省略して、インターフェイスの完全修飾名を使って参照することができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Now that we have the client instance properly configured, we need a way to have it\n"
"perform something when we start the application. For that, we will use a REST endpoint that,\n"
"when called by a user, obtains the client instance and lets it execute the query."
msgstr "クライアントインスタンスが適切に設定されたので、アプリケーションの起動時にクライアントインスタンスに何かを実行させる方法が必要になります。そのために、RESTエンドポイントを使用します。ユーザーが呼び出すと、クライアントインスタンスを取得して、クエリを実行させます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"With this REST endpoint included in your application, you can simply send a GET request to `/typesafe`,\n"
"and the application will use an injected typesafe client instance to call the remote service, obtain\n"
"the films and planets, and return the JSON representation of the resulting list."
msgstr "この REST エンドポイントをアプリケーションに組み込むと、 `/typesafe` に GET リクエストを送信するだけで、アプリケーションは注入された typesafe クライアントインスタンスを使用してリモートサービスを呼び出し、映画と惑星を取得し、結果のリストの JSON 表現を返します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Logging"
msgstr "ロギング"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "For debugging purpose, it is possible to log the request generated by the typesafe client and the response sent back by the server by changing the log level of the `io.smallrye.graphql.client` category to `TRACE` (see the xref:logging.adoc#configure-the-log-level-category-and-format[Logging guide] for more details about how to configure logging)."
msgstr "デバッグのために、 `io.smallrye.graphql.client` カテゴリのログレベルを `TRACE` に変更することで、typesafe クライアントによって生成されたリクエストと、サーバーによって送り返されたレスポンスをログに記録することができます(ロギングの設定方法の詳細については、 xref:logging.adoc#configure-the-log-level-category-and-format[ロギングガイド] を参照してください)。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "This can be achieved by adding the following lines to the `application.properties`:"
msgstr "これは、以下の行を `application.properties` に追加することで実現できます："

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Using the Dynamic client"
msgstr "ダイナミッククライアントの使用"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"For the dynamic client, the model classes are optional, because we can work with abstract\n"
"representations of the GraphQL types and documents. The client API interface is not needed at all."
msgstr "ダイナミッククライアントでは、GraphQLのタイプやドキュメントの抽象的な表現を扱うことができるため、モデルクラスはオプションとなります。また、クライアントのAPIインターフェースは全く必要ありません。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "We still need to configure the URL for the client, so let's put this into `application.properties`:"
msgstr "クライアント用のURLを設定する必要がありますので、これを `application.properties` に入れてみましょう。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "quarkus.smallrye-graphql-client.star-wars-dynamic.url=https://swapi-graphql.netlify.app/graphql"
msgstr "quarkus.smallrye-graphql-client.star-wars-dynamic.url=https://swapi-graphql.netlify.app/graphql"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"We decided to name the client `star-wars-dynamic`. We will use this name when injecting a dynamic client\n"
"to properly qualify the injection point."
msgstr "このクライアントの名前を `star-wars-dynamic` としました。動的なクライアントを注入する際には、注入ポイントを適切に特定するためにこの名前を使用します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"If you need to add an authorization header, or any other custom HTTP header (in our case\n"
"it's not required), this can be done by:"
msgstr "認証ヘッダやその他のカスタムHTTPヘッダ（ここでは必須ではありません）を追加する必要がある場合は、以下の方法で行います。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "quarkus.smallrye-graphql-client.star-wars-dynamic.header.HEADER-KEY=HEADER-VALUE"
msgstr "quarkus.smallrye-graphql-client.star-wars-dynamic.header.HEADER-KEY=HEADER-VALUE"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Add this to the `StarWarsResource` created earlier:"
msgstr "これを先ほど作成した `StarWarsResource` に追加します。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Qualifies the injection point so that we know which named client needs to be injected here."
msgstr "インジェクションポイントを修飾することで、どの名前のクライアントをここに注入する必要があるかを知ることができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Here we build a document representing the GraphQL query, using the provided DSL language.\n"
"We use static imports to make the code easier to read. The DSL is designed in a way that\n"
"it looks quite similar to writing a GraphQL query as a string."
msgstr "ここでは、提供されているDSL言語を使って、GraphQLクエリを表すドキュメントを構築します。コードを読みやすくするために、静的なインポートを使用しています。このDSLは、GraphQLクエリを文字列で記述するのとよく似た方法で設計されています。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Execute the query and block while waiting for the response. There is also an asynchronous\n"
"variant that returns a `Uni<Response>`."
msgstr "クエリを実行し、応答を待つ間にブロックします。また、 `Uni<Response>` を返す非同期型もあります．"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Here we did the optional step of converting the response to instances of our model classes,\n"
"because we have the classes available. If you don't have the classes available or don't want to\n"
"use them, simply calling `response.getData()` would get you a `JsonObject` representing\n"
"all the returned data."
msgstr "ここでは、利用可能なクラスがあるため、オプションのステップとして、レスポンスをモデルクラスのインスタンスに変換しています。利用可能なクラスがない場合や、利用したくない場合は、単に `response.getData()` を呼べば、返されたすべてのデータを表す `JsonObject` を得ることができます。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Running the application"
msgstr "アプリケーションの実行"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Launch the application in dev mode using:"
msgstr "次のコマンドでアプリケーションを開発モードで起動します:"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "To execute the queries, you need to send GET requests to our REST endpoint:"
msgstr "クエリを実行するには、RESTエンドポイントにGETリクエストを送信する必要があります。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"Whether you use dynamic or typesafe, the result should be the same.\n"
"If the JSON document is hard to read, you might want to run it through a tool that\n"
"formats it for better readability by humans, for example by piping the output through `jq`."
msgstr "dynamic と typesafe のどちらを使用しても、結果は同じです。JSONドキュメントが読みにくい場合は、人間が読みやすいようにフォーマットしてくれるツールに通したほうがいいかもしれません。たとえば、出力を `jq` に通してみてはいかがでしょうか。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid ""
"This example showed how to use both the dynamic and typesafe GraphQL clients to call an external\n"
"GraphQL service and explained the difference between the client types."
msgstr "この例では、ダイナミックなGraphQLクライアントとタイプセーフなGraphQLクライアントの両方を使って外部のGraphQLサービスを呼び出す方法を示し、クライアントの種類の違いを説明しました。"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "xref:security-openid-connect-client-reference.adoc#quarkus-oidc-client-graphql[Integrating OIDC clients into GraphQL clients]"
msgstr "xref:security-openid-connect-client-reference.adoc#quarkus-oidc-client-graphql[OIDCクライアントのGraphQLクライアントへの統合]"

#: _versions/3.27/guides/smallrye-graphql-client.adoc
msgid "https://smallrye.io/smallrye-graphql/latest/[Upstream SmallRye GraphQL Client documentation]"
msgstr "link:https://smallrye.io/smallrye-graphql/latest/[Upstream SmallRye GraphQL Client ドキュメント]"
