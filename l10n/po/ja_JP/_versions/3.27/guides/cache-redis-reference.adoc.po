msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Redis Cache"
msgstr "Redisキャッシュ"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"By default, Quarkus Cache uses Caffeine as backend.\n"
"It's possible to use Redis instead."
msgstr "デフォルトでは、Quarkus CacheはバックエンドとしてCaffeineを使用します。代わりにRedisを使用することも可能です。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Redis as cache backend"
msgstr "キャッシュバックエンドとしてのRedis"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "When using Redis as the backend for Quarkus cache, each cached item will be stored in Redis:"
msgstr "QuarkusキャッシュのバックエンドとしてRedisを使用する場合、各キャッシュアイテムはRedisに保存されます:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "The backend uses the _<default>_ Redis client (if not configured otherwise), so make sure it's configured (or use the xref:redis-dev-services.adoc[Redis Dev Service])"
msgstr "バックエンドは _<default>_ Redisクライアントを使うので(他に設定されていない場合)、設定されているようにしてください(または xref:redis-dev-services.adoc[Redis Dev Service] を使ってください)"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "the Redis key is built as follows: `cache:{cache-name}:{cache-key}`, where `cache-key` is the key the application uses and `cache:{cache-name}` the prefix."
msgstr "Redisのキーは以下のように構築されます： `cache:{cache-name}:{cache-key}` ここで、 `cache-key` はアプリケーションが使用するキーで、 `cache:{cache-name}` はプレフィックスです。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "the value is encoded to JSON if needed"
msgstr "必要に応じて、値はJSONにエンコードされます。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Use the Redis backend"
msgstr "Redisバックエンドの使用"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "First, you need to add the `quarkus-redis-cache` extension to your project:"
msgstr "まず、 `quarkus-redis-cache` のエクステンションをプロジェクトに追加する必要があります:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Then, use the `@CacheResult` and others cache annotations as explained in the xref:cache.adoc[Quarkus Cache guide]:"
msgstr "その後、 xref:cache.adoc[Quarkus Cacheガイド] で説明されているように、 `@CacheResult` や、その他のキャッシュアノテーションを使用します:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Configure the Redis backend"
msgstr "Redisのバックエンドの設定"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"The Redis backend uses the `<default>` Redis client.\n"
"See the xref:redis-reference.adoc[Redis reference] to configure the access to Redis."
msgstr "Redisバックエンドは、 `<default>` Redisクライアントを使用します。Redisへのアクセスを設定するには、 xref:redis-reference.adoc[Redisリファレンス] を参照してください。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "In dev mode, you can use the xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr "開発モードでは、 xref:redis-dev-services.adoc[Redis Dev Service] を使用することができます。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "If you want to use another Redis for your cache, configure the `client-name` as follows:"
msgstr "キャッシュに別のRedisを使用する場合は、 `client-name` を以下のように設定してください:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"When writing to Redis or reading from Redis, Quarkus needs to know the type.\n"
"Indeed, the objects need to be serialized and deserialized.\n"
"For that purpose, you may need to configure type (class names) of the key and value you want to cache.\n"
"At build time, Quarkus tries to deduce the types from the application code, but that decision can be overridden using:"
msgstr "Redisに書き込んだり、Redisから読み込んだりするとき、Quarkusは型を知っておく必要があります。実際、オブジェクトをシリアライズしたりデシリアライズしたりする必要があります。そのため、キャッシュしたいキーと値の型（クラス名）を設定する必要がある場合があります。ビルド時に、Quarkusはアプリケーションコードから型を推測しようとしますが、この決定は、以下の方法でオーバーライドできます:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "You can also configure the time to live of the cached entries:"
msgstr "また、キャッシュされたエントリーの生存時間(TTL) を設定することも可能です:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"If the `expire-after-write` is not configured, the entry won't be evicted.\n"
"You would need to invalidate the values using the `@CacheInvalidateAll` or `@CacheInvalidate` annotations."
msgstr ""
"`expire-after-write` が構成されていない場合、エントリは退避されません。 \n"
"`@CacheInvalidateAll` または `@CacheInvalidate` アノテーションを使用して値を無効にする必要があります。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "The following table lists the supported properties:"
msgstr "次の表は、サポートされるプロパティの一覧です:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Configure the Redis key"
msgstr "Redisキーの設定"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"By default, the Redis backend stores the entry using the following keys pattern: `cache:{cache-name}:{cache-key}`, where `cache-key` is the key the application uses and `cache:{cache-name}` the prefix. The variable `{cache-name}` is resolved from the value set in the cache annotations.\n"
"So, you can find all the entries for a single cache using the Redis `KEYS` command: `KEYS cache:{cache-name}:*`"
msgstr ""
"デフォルトでは、Redisバックエンドは以下のキーパターンを使用してエントリを保存します： `cache:{cache-name}:{cache-key}` 。ここで、 `cache-key` はアプリケーションが使用するキーで、 `cache:{cache-name}` はプレフィックスです。\n"
"変数 `{cache-name}` はキャッシュアノテーションで設定された値から解決されます。そのため、Redis `KEYS` コマンドを使用すると、単一のキャッシュのすべてのエントリを見つけることができます： `KEYS cache:{cache-name}:*`"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "The prefix can be configured by using the `prefix` property:"
msgstr "プレフィックスは `prefix` プロパティで設定できます："

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "In these cases, you can find all the keys managed by the default cache using `KEYS my-cache:*`, and all the keys managed by the `expensiveResourceCache` cache using: `KEYS my-expensive-cache:*`."
msgstr "このような場合、デフォルトキャッシュで管理されているすべての鍵は `KEYS my-cache:*` で、 `expensiveResourceCache` キャッシュで管理されているすべての鍵は `KEYS my-expensive-cache:*` で検索できます。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"# Default configuration\n"
"# The variable \"{cache-name}\" is resolved from the value set in the cache annotations.\n"
"quarkus.cache.redis.prefix=my-cache-{cache-name}"
msgstr ""
"# Default configuration\n"
"# The variable \"{cache-name}\" is resolved from the value set in the cache annotations.\n"
"quarkus.cache.redis.prefix=my-cache-{cache-name}"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "In this latest example, you can find all the keys managed by the default cache using `KEYS my-cache-{cache-name}:*`."
msgstr "この最新の例では、 `KEYS my-cache-{cache-name}:*` を使って、デフォルト・キャッシュで管理されているすべてのキーを見つけることができます。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "Enable optimistic locking"
msgstr "楽観的ロックの有効化"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid ""
"The access to the cache can be _direct_ or use https://redis.io/docs/manual/transactions/#optimistic-locking-using-check-and-set[optimistic locking].\n"
"By default, optimistic locking is disabled."
msgstr "キャッシュへのアクセスは、 _直接アクセス_ することも、 link:https://redis.io/docs/manual/transactions/#optimistic-locking-using-check-and-set[楽観的ロック] を使用することも可能です。デフォルトでは、楽観的なロックは無効です。"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "You can enable optimistic locking using:"
msgstr "以下を使用して、楽観的なロックを有効にすることができます:"

#: _versions/3.27/guides/cache-redis-reference.adoc
msgid "When used, the key is _watched_ and the _SET_ command is executed in a transaction (`MULTI/EXEC`)."
msgstr "使用すると、キーが _ウォッチ_ され、トランザクション（ `MULTI/EXEC` ）で _SET_ コマンドが実行されます。"
