msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/redis-reference.adoc
msgid "Redis Extension Reference Guide"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Redis Client"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the <<apis>> section."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To use Redis as a cache backend, refer to the xref:cache-redis-reference.adoc[Redis Cache Backend reference]."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "One extension, multiple APIs"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "This extension provides multiple ways to interact with Redis:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "[[inject-the-default-and-named-clients]] Inject the default and named clients"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You can omit the `@Inject` annotation when using `@RedisClientName`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Connect to the Redis server"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Simple client (probably what most users need)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Replication (single shard, one node writes, multiple read)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use Unix Socket"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using unix-socket, you need:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Sentinel Mode"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The host URLs here must be the sentinel servers.\n"
"The client will obtain the URLs of actual Redis servers (master or replicas, depending on `role`) from one of the sentinels, using the `master-name` as an identifier of the \"master set\"."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Note that you practically never want to configure `quarkus.redis.role=sentinel`.\n"
"This setting means that the Redis client will execute commands directly on one of the sentinel servers, instead of an actual Redis server guarded by the sentinels."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Automatic Failover"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "In the sentinel mode, it is possible to configure automatic failover of _master_ connections:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"If enabled, the sentinel client will additionally create a connection to one sentinel node and watch for failover events.\n"
"When new master is elected, all connections to the old master are automatically closed and new connections to the new master are created.\n"
"Automatic failover makes sense for connections executing regular commands, but not for connections used to subscribe to Redis pub/sub channels."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Note that there is a brief period of time between the old master failing and the new master being elected when the existing connections will temporarily fail all operations.\n"
"After the new master is elected, the connections will automatically fail over and start working again."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Cluster Mode"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The host URLs here must be some of the cluster members.\n"
"Not all cluster members need to be configured, as the client will obtain a full cluster topology from one of the known servers.\n"
"However, it is advisable to configure at least 2 or 3 nodes, not just 1."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"By default, all commands are sent to a master node (if the command has a key, it is the master node of the shard that owns the key, otherwise it is a random master node).\n"
"It is possible to configure the Redis client to send read-only commands (queries) to replica nodes.\n"
"Set the `quarkus.redis.replicas` configuration property to:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`never`: never use replica nodes, always send queries to master nodes (this is the default)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`always`: always use replica nodes (if there's more than one replica in the shard, it is selected randomly), never send queries to master nodes"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`share`: use master and replica nodes to execute queries (the specific node for each query is selected randomly)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Note that replication in Redis is asynchronous, so replica nodes may be lagging behind their master nodes."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Replication Mode"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"By default, all commands are sent to the master node.\n"
"It is possible to configure the Redis client to send read-only commands (queries) to replica nodes.\n"
"Set the `quarkus.redis.replicas` configuration property to:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`never`: never use replica nodes, always send queries to the master node (this is the default)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`always`: always use replica nodes (if there's more than one replica, it is selected randomly), never send queries to the master node"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Note that replication in Redis is asynchronous, so replica nodes may be lagging behind the master node."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Static Topology"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "In the replication mode, it is possible to reconfigure the Redis client to skip automatic discovery of the topology:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"With static topology, the first node in the configuration is assumed to be a _master_ node, while the remaining nodes are assumed to be _replicas_.\n"
"The nodes are not verified; it is a responsibility of the application developer to ensure that the static configuration is correct."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Note that automatic discovery of the topology is usually the preferred choice.\n"
"Static configuration should only be used when necessary.\n"
"One such case is _Amazon Elasticache for Redis (Cluster Mode Disabled)_, where:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "master node should be set to the _primary endpoint_, and"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "one replica node should be set to the _reader endpoint_."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Note that the reader endpoint of Elasticache for Redis (Cluster Mode Disabled) is a domain name which resolves to a CNAME record that points to one of the replicas.\n"
"The CNAME record to which the reader endpoint resolves changes over time.\n"
"This form of DNS-based load balancing does not work well with DNS resolution caching and connection pooling.\n"
"As a result, some replicas are likely to be underutilized."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Connect to Redis Cloud"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To connect to redis cloud, you need the following properties:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use TLS"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To use TLS, you need to:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Set the `quarkus.redis.tls.enabled=true` property or use the  xref:./tls-registry-reference.adoc[TLS registry] (recommended)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Make sure that your URL starts with `rediss://` (with two `s`)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using the TLS registry, you need to use a named configuration to avoid conflicts with other TLS configurations:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The default hostname verifier is set to `NONE`, meaning it does not verify the host name. You can change this behavior by setting the `quarkus.redis.tls.hostname-verification-algorithm` property, to `HTTPS` for example."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configure the authentication"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Connection pooling"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Connections to Redis are always pooled.\n"
"By default, maximum number of connections in the pool is 6.\n"
"This can be configured using `quarkus.redis.max-pool-size`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"When the connection pool is depleted, attempts to obtain a connection are put into a queue.\n"
"By default, maximum number of attempts waiting in the queue to obtain a Redis connection is 24.\n"
"This can be configured using `quarkus.redis.max-pool-waiting`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Executing certain commands modifies the server-side state and the behavior of the connection.\n"
"Such connections cannot be reused and when closed, they are not put back into the pool; instead, they are truly closed.\n"
"The commands that cause this behavior are:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "subscription commands (`SUBSCRIBE`, `UNSUBSCRIBE` etc.)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`SELECT`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`AUTH`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use Redis data sources"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Inject data sources"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The default timeout is configured to 10s."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "All about delegation"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Data Source groups"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "As mentioned above, the API is divided into groups:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "bitmap - `.bitmap()`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "key (generic) - `.key()`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "geo - `.geo(memberType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "hash - `.hash(`valueType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "list - `.list(memberType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "pubsub - `pubsub()`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "set - `.set(memberType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "string - `.value(valueType)`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "stream - `.stream(`valueType`)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "transactions - `withTransaction`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "json - `.json()` (requires the https://redis.com/modules/redis-json/[RedisJSON] module on the server side)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "bloom - `.bloom()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "cuckoo - `.cuckoo()` (requires the https://redis.com/modules/redis-bloom/[rRedisBloom] module on the server side, which also provides the cuckoo filter commands)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "count-min - `.countmin()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the count-min filter commands)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "top-k - `.topk()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the top-k filter commands)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"graph - `.graph()` (requires the https://redis.com/modules/redis-graph/[RedisGraph] module on the server side).\n"
"These commands are marked as experimental.\n"
"Also the module has been declared _end of life_ by https://redis.com/blog/redisgraph-eol/[Redis]."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "search - `.search()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "auto-suggest - `.autosuggest()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "time-series - `.timeseries()` (requires the https://redis.com/modules/redis-timeseries/[Redis Time Series] module on the server side)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "These commands are marked as experimental, as we would need feedback before making them stable."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Inject the `RedisDataSource` in the constructor"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Serializing and Deserializing data"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"By default, non-standard types are serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Binary"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To store or retrieve binary data, use `byte[]`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Custom codec"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You can register custom codec by providing a CDI _bean_ implementing the `io.quarkus.redis.datasource.codecs.Codec` interface:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The `canHandle` method is called to check if the codec can handle a specific type.\n"
"The parameter received in the `encode` method matches that type.\n"
"The object returned by the `decode` method must also match that type."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use type reference"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Each group can be configured with `Class`, or with `TypeReference` objects.\n"
"`TypeReference` are useful when dealing with Java generics:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You cannot use type references when using transaction. This is a known limitation."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Manipulate cached and binary data with the `value` group"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Work with cached values"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`nx()` - Only set the key if it does not already exist."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`xx()` - Only set the key if it already exists."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Store binary data"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Store a counter"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You can store counters in Redis as demonstrated below:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`set` - to set an initial value if needed"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Communicate with pub/sub"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the `pubsub` group."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use Redis transactions"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using: `tx.discard();`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as `String` as a second parameter to the `withTransaction` method:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Implement the optimistic locking pattern"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method, allowing the execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The transaction is aborted if the pre-transaction block throws an exception (or produces a failure when using the reactive API)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Execute custom commands"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The reactive variant returns a `Uni<Response>`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "You can also execute custom command in a transaction."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Preload data into Redis"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "On startup, you can configure the Redis client to preload data into the Redis database."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configure the load scripts"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Specify the _load script_ you want to load using:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "`load-script` is a build time property than cannot be overridden at runtime."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Note that each client can have a different script, even a list of scripts.\n"
"In the case of a list, the data is imported in the list order (for example, first `actors.redis`, then `movies.redis` for the `my-redis` client)."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Write load scripts"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The `.redis` file follows a _one command per line_ format:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Quarkus batches all the commands from a single file and sends all the commands.\n"
"The loading process fails if there is any error, but the previous instructions may have been executed.\n"
"To avoid that, you can wrap your command into a Redis _transaction_:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configure the pre-loading"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The data is loaded when the application starts.\n"
"By default, it drops the whole database before importing.\n"
"You can prevent this using `quarkus.redis.flush-before-load=false`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Also, the import process only runs if the database is empty (no key).\n"
"You can force to import even if there is data using the `quarkus.redis.load-only-if-empty=false`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Distinguish dev/test vs. prod when pre-loading"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"As mentioned above, in dev and test modes, Quarkus tries to import data by looking for the `src/main/resources/import.redis`.\n"
"This behavior is disabled in _prod_ mode, and if you want to import even in production, add:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Before importing in _prod_ mode, make sure you configured `quarkus.redis.flush-before-load` accordingly."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "In dev mode, to reload the content of the `.redis` load scripts, you need to add: `%dev.quarkus.vertx.caching=false`"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Vert.x redis client"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configure Redis hosts programmatically"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"The `RedisHostsProvider` programmatically provides redis hosts.\n"
"This allows for configuration of properties like redis connection password coming from other sources."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The host provider can be used to configure the redis client like shown below"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Customize the Redis options programmatically"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Use the Redis Dev Services"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configure Redis observability"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Enable the health checks"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Enable metrics"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid ""
"Redis client metrics are automatically enabled when the application also uses the xref:telemetry-micrometer.adoc[`quarkus-micrometer`] extension.\n"
"Micrometer collects the metrics of all the Redis clients implemented by the application."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "As an example, if you export the metrics to Prometheus, you will get:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The Redis client name can be found in the _tags_."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "The metrics contain both the Redis connection pool metrics (`redis_pool_*`) and the metrics about the command execution (`redis_commands_*`) such as the number of command, successes, failures, and durations."
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Disable metrics"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "To disable the Redis client metrics when `quarkus-micrometer` is used, add the following property to the application configuration:"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/3.27/guides/redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
