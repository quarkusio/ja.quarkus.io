msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Using Security with JDBC"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This guide demonstrates how your Quarkus application can use a database to store your user identities."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "In this example, we build a very simple microservice which offers three endpoints:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/public`"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/users/me`"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/admin`"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The solution is located in the `security-jdbc-quickstart` link:{quickstarts-tree-url}/security-jdbc-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Creating the Maven Project"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"This command generates a new project, importing the `elytron-security-jdbc` extension\n"
"which is an https://docs.wildfly.org/17/WildFly_Elytron_Security.html#jdbc-security-realm[`wildfly-elytron-realm-jdbc`] adapter for Quarkus applications."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `elytron-security-jdbc` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Writing the application"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal, and we return the user's name. This information is loaded from the database."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Configuring the Application"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The `elytron-security-jdbc` extension requires at least one datasource to access to your database."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"In our context, we are using PostgreSQL as identity store, and we initialize the database with users and roles.\n"
"We will use the salted and hashed version of `password` as a password in this example.\n"
"We can use the `BcryptUtil` class to generate passwords in the Modular Crypt Format (MCF)."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "When signing up new users, we can encrypt their password as follows:"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We can now configure the Elytron JDBC Realm."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The `elytron-security-jdbc` extension requires at least one principal query to authenticate the user and its identity."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We define a parameterized SQL statement (with exactly 1 parameter) which should return the user's password plus any additional information you want to load."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The password mapper is configured with the position of the password field in the `SELECT` fields. The hash is stored in the Modular Crypt Format (MCF) because the salt and iteration count indexes are set to `-1` by default. You can override them in order to decompose each element into three separate columns."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We use `attribute-mappings` to bind the `SELECT` projection fields (i.e. `u.role` here) to the target Principal representation attributes."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "In the `principal-query` configuration all the `index` properties start at 1 (rather than 0)."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Testing the Application"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"The application is now protected and the identities are provided by our database.\n"
"The very first thing to check is to ensure the anonymous access works."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Now, let's try to hit a protected resource anonymously."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "So far so good, now let's try with an allowed user."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"By providing the `admin:password` credentials, the extension authenticated the user and loaded their roles.\n"
"The `admin` user is authorized to access to the protected resources."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Finally, using the user `user` works and the security context contains the principal details (username for instance)."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Advanced Configuration"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This guide only covered an easy use case, the extension offers multiple datasources, multiple principal queries configuration as well as a bcrypt password mapper."
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-jdbc.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
