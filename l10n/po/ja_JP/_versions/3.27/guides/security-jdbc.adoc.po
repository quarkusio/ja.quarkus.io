msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Using Security with JDBC"
msgstr "JDBCと共にSecurityを使用"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This guide demonstrates how your Quarkus application can use a database to store your user identities."
msgstr "このガイドでは、Quarkusアプリケーションがデータベースを使用してユーザーIDを保存する方法を説明します。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "In this example, we build a very simple microservice which offers three endpoints:"
msgstr "この例では、3つのエンドポイントを提供する非常にシンプルなマイクロサービスを構築します:"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/public`"
msgstr "`/api/public`"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "`/api/public` エンドポイントは匿名でアクセスできます。 `/api/admin` エンドポイントは RBAC (Role-Based Access Control) で保護されており、 `admin` の役割を与えられたユーザーのみがアクセスできます。このエンドポイントでは、 `@RolesAllowed` アノテーションを使用して、アクセス制約を宣言的に強制します。 `/api/users/me` エンドポイントも RBAC (Role-Based Access Control) で保護されており、 `user` ロールで付与されたユーザーのみがアクセスできます。レスポンスとして、ユーザーに関する詳細を含むJSONドキュメントを返します。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The solution is located in the `security-jdbc-quickstart` link:{quickstarts-tree-url}/security-jdbc-quickstart[directory]."
msgstr "ソリューションは `security-jdbc-quickstart` link:{quickstarts-tree-url}/security-jdbc-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "選択したデータベースコネクタライブラリを追加することを忘れないでください。ここでは、PostgreSQLをIDストアとして使用しています。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"This command generates a new project, importing the `elytron-security-jdbc` extension\n"
"which is an https://docs.wildfly.org/17/WildFly_Elytron_Security.html#jdbc-security-realm[`wildfly-elytron-realm-jdbc`] adapter for Quarkus applications."
msgstr "このコマンドは新しいプロジェクトを生成し、 `elytron-security-jdbc` エクステンションをインポートします。これはQuarkusアプリケーション用の link:https://docs.wildfly.org/17/WildFly_Elytron_Security.html#jdbc-security-realm[`wildfly-elytron-realm-jdbc`] アダプターです。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `elytron-security-jdbc` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `elytron-security-jdbc` エクステンションを追加することができます:"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Writing the application"
msgstr "アプリケーションの記述"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr "まず、 `/api/public` のエンドポイントを実装することから始めましょう。以下のソースコードからわかるように、これは通常のJakarta RESTリソースに過ぎません："

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。ここでの主な違いは、 `admin` ロールで付与されたユーザーだけがエンドポイントにアクセスできるように `@RolesAllowed` アノテーションを使用していることです:"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal, and we return the user's name. This information is loaded from the database."
msgstr "最後に、 `/api/users/me` エンドポイントを考えてみましょう。下のソースコードを見ればわかるように、 `user` のロールを持つユーザのみを信頼しています。現在の認証されているプリンシパルへのアクセスを得るために `SecurityContext` を使用しており、ユーザーの名前を返します。この情報はデータベースから読み込まれます。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Configuring the Application"
msgstr "アプリケーションの設定"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The `elytron-security-jdbc` extension requires at least one datasource to access to your database."
msgstr "`elytron-security-jdbc` エクステンションは、データベースにアクセスするために少なくとも一つのデータソースが必要です。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"In our context, we are using PostgreSQL as identity store, and we initialize the database with users and roles.\n"
"We will use the salted and hashed version of `password` as a password in this example.\n"
"We can use the `BcryptUtil` class to generate passwords in the Modular Crypt Format (MCF)."
msgstr ""
"この例では、PostgreSQLをIDストアとして使用し、ユーザとロールでデータベースを初期化します。\n"
"この例では、 `password` の塩漬けとハッシュ化したものをパスワードとして使用します。 \n"
"`BcryptUtil` クラスを使用して、MCF（Modular Crypt Format）形式のパスワードを生成することができます。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "When signing up new users, we can encrypt their password as follows:"
msgstr "新規ユーザーを登録する際、以下のようにパスワードを暗号化することができます："

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We can now configure the Elytron JDBC Realm."
msgstr "これで、Elytron JDBC Realmを設定することができます。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The `elytron-security-jdbc` extension requires at least one principal query to authenticate the user and its identity."
msgstr "`elytron-security-jdbc` エクステンションは、ユーザーとそのアイデンティティを認証するために、少なくとも一つのプリンシパルのクエリを必要とします。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We define a parameterized SQL statement (with exactly 1 parameter) which should return the user's password plus any additional information you want to load."
msgstr "ユーザーのパスワードと、ロードしたい追加情報を返却するパラメーター化されたSQL文(単一のパラメーター付)を定義しています。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The password mapper is configured with the position of the password field in the `SELECT` fields. The hash is stored in the Modular Crypt Format (MCF) because the salt and iteration count indexes are set to `-1` by default. You can override them in order to decompose each element into three separate columns."
msgstr "パスワードマッパーは、 `SELECT` フィールドのパスワードフィールドの位置で設定されます。ハッシュはモジュラークリプトフォーマット(MCF)に格納されます。これはソルトと反復回数のインデックスがデフォルトで `-1` に設定されているからです。各要素を3つの別々のカラムに分解するために、それらをオーバーライドすることができます。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "We use `attribute-mappings` to bind the `SELECT` projection fields (i.e. `u.role` here) to the target Principal representation attributes."
msgstr "`attribute-mappings` を使用して、 `SELECT` の射影フィールド(例:ここでは `u.role` )をターゲットの Principal 表現の属性にバインドしています。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "In the `principal-query` configuration all the `index` properties start at 1 (rather than 0)."
msgstr "`principal-query` の設定では、 `index` のプロパティーはすべて 1 から始まります (0 ではなく)。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Testing the Application"
msgstr "アプリケーションのテスト"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"The application is now protected and the identities are provided by our database.\n"
"The very first thing to check is to ensure the anonymous access works."
msgstr "アプリケーションが保護され、アイデンティティがデータベースから提供されるようになりました。非常に最初に確認しなければならないことは、匿名アクセスが機能することを確認することです。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Now, let's try to hit a protected resource anonymously."
msgstr "では、匿名で保護されたリソースを攻撃してみましょう。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "So far so good, now let's try with an allowed user."
msgstr "ここまでは順調ですが、今度は許可されたユーザーで試してみましょう。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid ""
"By providing the `admin:password` credentials, the extension authenticated the user and loaded their roles.\n"
"The `admin` user is authorized to access to the protected resources."
msgstr ""
"`admin:password` クレデンシャルを提供することで、エクステンションはユーザーを認証し、そのロールをロードします。 \n"
"`admin` ユーザは保護されたリソースへのアクセスが許可されます。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
msgstr "ユーザー `admin` は、この役割を持っていないので、 `@RolesAllowed(\"user\")` で保護されたリソースへのアクセスを禁止する必要があります。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Finally, using the user `user` works and the security context contains the principal details (username for instance)."
msgstr "最後に、ユーザー `user` を使用すると動作し、セキュリティーコンテキストには主要な詳細(例えばユーザー名)が含まれています。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Advanced Configuration"
msgstr "高度な設定"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "This guide only covered an easy use case, the extension offers multiple datasources, multiple principal queries configuration as well as a bcrypt password mapper."
msgstr "このガイドでは、簡単な使用例のみを取り上げていますが、このエクステンションは複数のデータソース、複数のプリンシパルクエリの設定、および bcrypt パスワードマッパーを提供しています。"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.27/guides/security-jdbc.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
