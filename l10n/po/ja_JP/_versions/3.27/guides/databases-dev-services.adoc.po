msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Dev Services for Databases"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"When testing or running in dev mode Quarkus can provide you with a zero-config database out of the box, a feature we refer to as Dev Services.\n"
"Depending on your database type you may need Docker installed in order to use this feature.\n"
"Dev Services is supported for the following databases:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "DB2 (container) (requires <<#license_acceptance,license acceptance>>)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Derby (in-process)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "H2 (in-process)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "MariaDB (container)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Microsoft SQL Server (container) (requires <<#license_acceptance,license acceptance>>)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "MySQL (container)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Oracle Express Edition (container)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "PostgreSQL (container)"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"If you want to use Dev Services then all you need to do is include the relevant extension for the type of database you want (either reactive or JDBC, or both).\n"
"Don't configure a database URL, username and password - Quarkus will provide the database and you can just start coding without worrying about config."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Production databases need to be configured as normal, so if you want to include a production database config in your\n"
"`application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your database settings."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Enabling / Disabling Dev Services for Database"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Dev Services for databases automatically starts a database server in dev mode and when running tests.\n"
"So, you don't have to start a server manually.\n"
"The application is configured automatically."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "You can disable the automatic database start in `application.properties` via:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Dev Services for databases relies on Docker to start the server (except for H2 and Derby which are run in process).\n"
"If your environment does not support Docker, you will need to start the server manually, or connect to an already running server."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Proprietary Databases - License Acceptance"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"If you are using a proprietary database such as DB2 or MSSQL you will need to accept the license agreement.\n"
"To do this create a `src/main/resources/container-license-acceptance.txt` files in your project and add a line with the image name and tag of the database.\n"
"By default, Quarkus uses the default image for the current version of Testcontainers, if you attempt to start Quarkus the resulting failure will tell you the exact image name in use for you to add to the file."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "An example file is shown below:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "src/main/resources/container-license-acceptance.txt"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"ibmcom/db2:11.5.0.0a\n"
"mcr.microsoft.com/mssql/server:2022-latest"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Capturing Logs"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"By default, logs of the underlying database are not exposed.\n"
"By capturing the logs, they become visible amongst other log statements:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Reusing Dev Services"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "General case"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Within a dev mode session or test suite execution,\n"
"Quarkus will always reuse database Dev Services as long as their configuration\n"
"(username, password, environment, port bindings, ...) did not change."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"When the configuration of any database Dev Services changes,\n"
"Quarkus will always restart all database Dev Services."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"When a dev mode session or test suite execution ends,\n"
"Quarkus will (by default) stop all database Dev Services."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Reusing Dev Service containers across runs"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Assuming you rely on Dev Services based on containers (unlike H2 or Derby),\n"
"if you want to keep Dev Service containers running *after a dev mode session or test suite execution*\n"
"to reuse them in the next dev mode session or test suite execution,\n"
"this is possible as well.\n"
"Just enable https://java.testcontainers.org/features/reuse/[TestContainers reuse]\n"
"by inserting this line in one of your\n"
"https://java.testcontainers.org/features/configuration/[TestContainers configuration file]\n"
"(generally `~/.testcontainers.properties` or `C:/Users/myuser/.testcontainers.properties`):"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Even with container reuse enabled, containers will only be reused if their startup command did not change:\n"
"same environment variables (username/password in particular), same port bindings, same volume mounts, ..."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Reusing containers implies reusing their internal state,\n"
"including the database schema and the content of tables."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"If that's not what you want -- and if your tests write to the database, that's probably not what you want --\n"
"consider xref:hibernate-orm.adoc#dev-mode[configuring Hibernate ORM appropriately],\n"
"or using xref:flyway.adoc[Flyway] or xref:liquibase.adoc[Liquibase]."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"With container reuse enabled, old containers (especially with obsolete configuration)\n"
"might be left running indefinitely, even after starting a new Quarkus dev mode session or test suite execution."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "In that case, you will need to stop and remove these containers manually."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"If you want to reuse containers for some Quarkus applications but not all of them,\n"
"or some Dev Services but not all of them,\n"
"you can disable this feature for a specific Dev Service by setting the configuration property\n"
"xref:quarkus-datasource_quarkus-datasource-devservices_quarkus-datasource-devservices-reuse[`quarkus.datasource.devservices.reuse`/`quarkus.datasource.\"datasource-name\".devservices.reuse`]\n"
"to `false`."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Mapping volumes into Dev Services for Database"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Mapping volumes from the Docker host's filesystem to the containers is handy to provide files like scripts or configuration, but also to preserve database data and reuse it after an application restart."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Mapping volumes will only work in Dev Services with a container-based database like PostgreSQL."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Dev Services volumes can be mapped to the filesystem or the classpath:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "The file or folder \"/path/from\" from the local machine will be accessible at \"/container/to\" in the container."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "When using classpath volumes, the location has to start with \"classpath:\". The file or folder \"./file\" from the project's classpath will be accessible at \"/container/to\" in the container."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "The colon character `:` needs to be escaped in `.properties` files as `\\:`, or it will be interpreted as a key/value separator."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "when using a classpath volume, the container will only be granted read permission. On the other hand, when using a filesystem volume, the container will be granted read and write permission."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Example of mapping volumes to persist the database data"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Let's see an example using PostgreSQL where we'll map a file system volume to keep the database data permantently and use it:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "The appropriate in-container location varies depending on the database vendor. For PostgreSQL is \"/var/lib/postgresql/data\", but for MySQL, you would need this configuration instead:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "When starting Dev Services (for example, in tests or in dev mode), you will see that the folder \"/local/test/data\" will be created at your file sytem and that will contain all the database data. When rerunning again the same Dev Services, this data will contain all the data you might have created beforehand."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"When using Dev Services with Hibernate ORM, by default Quarkus will wipe out the database on application startup, which will wipe out the database data on your Docker host's filesystem.\n"
"Configure `quarkus.hibernate-orm.schema-management.strategy=none` or `quarkus.hibernate-orm.schema-management.strategy=validate` to avoid this behavior."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Also, using Flyway to migrate your schema when starting the application will modify the database data on your Docker hosts's file system."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Database Vendor Specific Configuration"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"All services based on containers are run using Testcontainers but Quarkus is not using the Testcontainers JDBC driver.\n"
"Thus, even though extra JDBC URL properties can be set in your `application.properties` file, specific properties supported by the Testcontainers JDBC driver such as `TC_INITSCRIPT`, `TC_INITFUNCTION`, `TC_DAEMON`, `TC_TMPFS` are not supported."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Quarkus can support *specific* properties sent to the container itself though, e.g. this is the case for `TC_MY_CNF` which allows to override the MariaDB/MySQL configuration file."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Overriding the MariaDB/MySQL configuration would be done as follows:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "This support is database specific and needs to be implemented in each Dev Service specifically."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Connect To Database Run as a Dev Service"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "You can connect to a database running as a Dev Service as you would do with any database running inside a Docker container."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Login credentials are the same for most databases, except when the database requirements don't allow it:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Database"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Username"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Password"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Database name"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "PostgreSQL, MariaDB, MySQL, IBM Db2, H2"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "`quarkus`"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "`quarkus` for the default datasource or name of the datasource"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Microsoft SQL Server"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "`sa`"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "`Quarkus123`"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"The Microsoft SQL Server Testcontainer doesn't support defining the username or database name.\n"
"It also requires a strong password."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"For databases supporting it\n"
"(i.e. all of them except Microsoft SQL Server for which it is only possible to override the password),\n"
"you can override the database name, username and password used by the Dev Service."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "See <<configuration-reference>> for more information."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"Keep in mind that, except if configured otherwise (see below), a Dev Service runs on a random port.\n"
"For instance, when you run PostgreSQL as a Dev Service and have `psql` installed on the host, you can connect via:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "The random port can be found with `docker ps`"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "The random port is `49174`."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "You can require a fixed port for a database Dev Service using:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Fixed port for the default datasource."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Fixed port for a named datasource."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"`docker ps` allows for more advanced retrieval of container information using the `--format` argument.\n"
"For example, to get the running container ID, the image, the labels and the ports, the following command can be used:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "An example output using Dev Services for PostgreSQL is the following:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"In the labels tab, we see that Quarkus added the datasource label, which can be very useful in differentiating containers when multiple\n"
"Dev Services have been started."
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Compose"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid ""
"The Database Dev Services supports xref:compose-dev-services.adoc[Compose Dev Services].\n"
"It relies on a `compose-devservices.yml`, such as:"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/databases-dev-services.adoc
msgid "Dev Services for Databases support the following configuration options:"
msgstr ""
