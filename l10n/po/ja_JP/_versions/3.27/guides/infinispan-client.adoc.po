msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Using the Infinispan Client"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "This guide demonstrates how your Quarkus application can connect to an Infinispan server using the Infinispan Client extension."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "A working Docker environment"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"In this guide, we are going to expose a Greeting Rest API to create and display greeting messages by using\n"
"the https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html#remotecache_api[Infinispan RemoteCache API]\n"
"and `getAsync` and `putAsync` operations."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "We'll be using the Quarkus Infinispan Client extension to connect to interact with Infinispan."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "The solution is located in the `infinispan-client-quickstart` link:{quickstarts-tree-url}/infinispan-client-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating the Maven Project"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "This command generates a new project, importing the Infinispan Client extension."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `infinispan-client` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Mandatory in the Gradle build to enable the generation of the files in the annotation based serialization"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating the Greeting POJO"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"We are going to model our increments using the `Greeting` POJO.\n"
"Create the `src/main/java/org/acme/infinispan/client/Greeting.java` file, with the following content:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "You only need an annotation to tag the record to be marshalled by Protostream"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"Note that we are not going to use Java serialization. https://github.com/infinispan/protostream[Protostream] is\n"
"a serialization library based on Protobuf data format part of Infinispan. Using an annotation based API, we\n"
"will store our data in Protobuf format."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating the Greeting Schema"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"We are going to create our serialization schema using the `GreetingSchema` interface.\n"
"Create the `src/main/java/org/acme/infinispan/client/GreetingSchema.java` file, with the following content:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Includes the `Greeting` pojo with the `@ProtoSchema` annotation"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Extends `GeneratedSchema` Protostream API interface"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"The Protobuf Schema that will be generated and used both on client and Infinispan Server side, will have\n"
"the following content:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating the Infinispan Greeting Resource"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Create the `src/main/java/org/acme/infinispan/client/InfinispanGreetingResource.java` file, with the following content:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"Use the `@Remote` annotation to use a cache. If the cache does not exist, will be created with a\n"
"default configuration *on first access*."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Inject the `RemoteCache`"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Put the greeting id as a key and the Greeting pojo as a value"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Get the greeting by id as the key"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating the test class"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Edit the `pom.xml` file to add the following dependency:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Create the `src/test/java/org/acme/infinispan/client/InfinispanGreetingResourceTest.java` file with the following content:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Get it running"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "We just need to run the application using:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"We should have the Infinispan server running thanks to the Dev Services.\n"
"We can access the Dev Services UI through `http://localhost:8080/q/dev/`.\n"
"The Dev UI should display the Infinispan UI Panel."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"Click on the Web Console link and log using `admin` and `password` default credentials.\n"
"Quarkus has uploaded into the Schemas Tab the Protobuf Schema that is needed to marshall on the server the\n"
"Greeting POJO with Protobuf.\n"
"Check the xref:infinispan-dev-services.adoc[Infinispan Dev Services Guide] to learn more."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Interacting with the Greeting Service"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"As we have seen above, the Greeting API exposes two Rest endpoints.\n"
"In this section we are going to see how to create and display a greeting message."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Creating a Greeting Message"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "With the following command, we will create a greeting message with the id `quarkus`."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "The service should respond with a `Greeting added!` message."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Displaying a Greeting Message"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "With the following command, we will display the greeting message with the id `quarkus`."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "The service should respond with the following json content."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Display the cache and content with the Infinispan Server Console"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"If a requested cache does not exist, Quarkus creates a cache with a Default configuration on first access.\n"
"We should be able to reaload the Infinispan Server Console and display the content of the Cache.\n"
"The Infinispan Server Console uses the https://infinispan.org/docs/stable/titles/rest/rest.html[Infinispan Server REST API].\n"
"The content can be displayed in JSON thanks to the Protobuf Encoding that converts to JSON format."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Configuring for production"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"At this point, Quarkus uses the Infinispan Dev Service to run an Infinispan server and configure the application.\n"
"However, in production, you will run your own Infinispan (or Red Hat Data Grid)."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Let's start an Infinispan server on the port 11222 using:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Then, open the `src/main/resources/application.properties` file and add:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
#, fuzzy
msgid "Sets Infinispan Server address list, separated with semicolons"
msgstr "セミコロンで区切られたInfinispanサーバのアドレスリストを設定します。"

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Sets the authentication username"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Sets the authentication password"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Packaging and running in JVM mode"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "You can run the application as a conventional jar file."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "First, we will need to package it:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "This command will start an Infinispan instance to execute the tests."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Then run it:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Running Native"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"You can also create a native executable from this application without making any\n"
"source code changes. A native executable removes the dependency on the JVM:\n"
"everything needed to run the application on the target platform is included in\n"
"the executable, allowing the application to run with minimal resource overhead."
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid ""
"Compiling a native executable takes a bit longer, as GraalVM performs additional\n"
"steps to remove unnecessary codepaths. Use the  `native` profile to compile a\n"
"native executable:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Once the build is finished, you can run the executable with:"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "Going further"
msgstr ""

#: _versions/3.27/guides/infinispan-client.adoc
msgid "To learn more about the Quarkus Infinispan extension, check xref:infinispan-client-reference.adoc[the Infinispan Client extension reference guide]."
msgstr ""
