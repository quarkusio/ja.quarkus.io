msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services offer a way to define custom dev services using the Compose specification."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"xref:dev-services.adoc[Quarkus Dev Services] automatically provisions unconfigured services in development and test mode.\n"
"Most extensions providing connectivity to services also provide dev services implementation using https://www.testcontainers.org/[Testcontainers] behind the scenes.\n"
"Each dev service has some default configuration, such as the container image to use, but is limited in terms of customization."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "While this level of automation is great for most use cases, there are times when you need more control and coordination over provisioned services."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"*Compose Dev Services* extends the Dev Services concept by allowing you to define custom dev services using the https://compose-spec.io/[Compose specification].\n"
"_The Compose Specification is a developer-focused standard for defining cloud and platform agnostic container-based applications_."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose is a widely used tool for defining and managing multi-container applications, for development and testing purposes.\n"
"A YAML description file, typically named `compose.yml`, defines the services, networks, and volumes required for your application.\n"
"https://docs.docker.com/compose/[Docker Compose] is the reference implementation and https://podman-desktop.io/docs/compose[Podman Desktop] also provides out-of-the-box support for the Compose specification."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Quarkus detects Compose files named `compose-devservices.yml` (or <<compose-devservices-compose-files>>) in your project and starts the defined services when your application runs in development or test mode.\n"
"Extensions providing dev services discover these custom services and use them instead of creating default ones.\n"
"When the dev mode or tests are stopped, the services are automatically stopped and cleaned up."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "This integration provides a seamless development experience while giving you full control over your service configurations."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "To use Compose Dev Services, you need:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "A working *local* container environment: https://docs.docker.com/get-started/get-docker/[Docker] or https://podman.io/docs/installation[Podman]"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose tooling such as `docker-compose` or `podman-compose`\n"
"(Note that `docker compose` and `podman compose` commands internally call these binaries) :"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "For Docker: https://docs.docker.com/compose/install/[Installing Docker Compose]"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "For Podman: https://podman-desktop.io/docs/compose/setting-up-compose[Setting up Compose]"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services is only compatible with Compose V2."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Using Compose Dev Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Let's see how to use Compose Dev Services with examples ranging from simple to more complex scenarios."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Basic Example: PostgreSQL Database"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"In a Quarkus project already configured to use the `quarkus-jdbc-postgresql` extension,\n"
"you can create a `compose-devservices.yml` file in the root of the project and define a custom service using Compose:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"When you run the application in dev mode or execute tests, Compose Dev Services will automatically start the PostgreSQL service defined in the `compose-devservices.yml` file,\n"
"instead of using the default dev service provided by the `quarkus-jdbc-postgresql` extension."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"As per the above configuration, the PostgreSQL container port `5432` will be exposed to a random host port\n"
"and the application datasource will be configured by extracting connection information such as _user_, _password_, and the _database name_."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Multi-Service Example: Custom Network and Dependencies"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "For more complex scenarios, you can define custom networks and service dependencies:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Note that the `compose-devservices.yml` file can be customized as needed with multiple services with dependencies to control the startup order,\n"
"custom networks to isolate service communication, and volumes for data persistence and configuration."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Service Discovery"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Services started by Compose Dev Services are automatically discovered by extensions providing dev services.\n"
"Each extension discovers the services it needs and configures the application accordingly."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Extensions rely on container image names and exposed ports to discover services.\n"
"For example, the PostgreSQL Dev Service looks for a service with the image name *containing* `postgres` and the exposed container port `5432`."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "When a match is found, the extension will:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Extract connection information from the container (connection URL, credentials, database name, etc.)"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Configure the application to use the discovered service"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Skip creating its own default Dev Service container"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Supported Extensions and Discovery Criteria"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "The following is the list of platform extensions with dev services support:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Extension"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Image Names"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Exposed Port"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "AMQP"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "amqp, activemq-artemis, amq-broker, rabbitmq"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "5672"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Apicurio Registry"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "apicurio"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "8080"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "DB2"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "db2"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "50000"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "MySQL"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "mysql"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "3306"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "PostgreSQL"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "postgres"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "5432"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "MariaDB"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "mariadb"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Microsoft SQL Server"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "mssql"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "1433"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Oracle Database"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "oracle"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "1521"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Kafka"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "kafka, strimzi, redpanda"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "9092"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Keycloak"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "keycloak"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Kubernetes"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "kube-apiserver, k3s, kindest/node"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "6443"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "MongoDB"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "mongo"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "27017"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "MQTT"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "hivemq, eclipse-mosquitto"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "1883"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "RabbitMQ"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "rabbitmq"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Pulsar"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "pulsar"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "6650"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Redis"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "redis"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "6379"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Infinispan"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "infinispan, datagrid"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "11222"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Elasticsearch"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "elasticsearch, opensearch"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "9200"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Observability"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "lgtm"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "16686, 9411, 9090, 3000"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Configuring custom images for service discovery"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"You can customize the image names used for service discovery by setting the appropriate properties in your `application.properties` file.\n"
"For example, to use a custom Kafka image:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Each extension that provides Dev Services has its own configuration properties for customizing the image name.\n"
"Refer to the specific extension documentation for details."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Using specific Compose files"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "By default, Compose Dev Services looks for files in the project root named `compose-devservices.[yml|yaml]` or `docker-compose-devservices.[yml|yaml]`."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "You can specify custom files to use by setting the `quarkus.compose.devservices.files` property in the `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"This allows you to use different dev service environments depending on the Quarkus config profiles.\n"
"You can also specify multiple files by separating them with commas:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Using Compose profiles"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"With profiles, Compose files can define a set of active profiles so that started services are adjusted for various usages and environments.\n"
"You can specify the profiles to activate by setting the `quarkus.compose.devservices.profiles` property in the `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Ignoring Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "You can configure Compose Dev Services to not discover specific services by adding the `io.quarkus.devservices.compose.ignore` label to the service in your Compose file:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "When a service has this label set to `true`, it will be excluded from service discovery, and extensions will not use it for Dev Services."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Service Readiness"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services provides several ways to ensure services are ready before your application tries to use them."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Health Checks"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose Dev Services respects the health checks defined in your Compose file.\n"
"It's recommended to configure health checks for your services to ensure they are ready before your application tries to use them:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Wait for Logs"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"You can configure Compose Dev Services to wait for specific log messages to appear in the container logs before considering a service ready.\n"
"This is useful for services that don't provide health checks but log a message when they're ready."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "To wait for a specific log message, add a label with the prefix `io.quarkus.devservices.compose.wait_for.logs` to your service:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"You can also specify how many times a log message should appear by setting the numeric suffix value:\n"
"`io.quarkus.devservices.compose.wait_for.logs.3: .\\*Worker started.*`"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Wait for Ports"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"By default, Compose Dev Services waits for all exposed ports to be available before considering a service ready.\n"
"This behavior can be customized using labels:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Global Timeout"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "You can configure the global timeout for Dev Services startup using the `quarkus.devservices.timeout` property:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "This property sets the maximum time to wait for all Dev Services to start. The default is 60 seconds."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Ordering Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose Dev Services starts services in the order they are defined in the Compose file.\n"
"If you need to start services in a specific order, you can use the `depends_on` attribute:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Exposing Service Configuration into the Application"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose Dev Services automatically exposes the configuration of discovered services to your application.\n"
"For example, when a database service is discovered with the following compose service description:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Following application properties are automatically set:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"The actual values are extracted from the service labels and environment variables.\n"
"The host is set to the Docker host IP address, and the port is set to the mapped port on the host."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "For database services, if the label `io.quarkus.devservices.compose.jdbc.parameters` is set, the parameters are added to the JDBC URL."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Custom config mapping using service labels"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "You can customize how environment variables and exposed ports are mapped to application configuration properties using service labels."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Mapping environment variables"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"To map an environment variable to a specific application configuration property,\n"
"use the `io.quarkus.devservices.compose.config_map.env.<env-var-name>` label."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Let's take the example of an MQTT broker:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "With the `./conf` containing the `mosquitto.conf` file:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "and the `password.txt` file containing the user and encrypted password:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "In this example:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "The `MQTT_USER` environment variable with the value `user` is mapped to the `mp.messaging.connector.smallrye-mqtt.username` property"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "The `MQTT_PASSWORD` environment variable with the value `pass` is mapped to the `mp.messaging.connector.smallrye-mqtt.password` property"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"With the `password_file` is configured in the `mosquitto.conf`,\n"
"environment variables are not used to set the username and password but to map them to the application properties."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Mapping exposed ports"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"To map an exposed port to a specific application configuration property,\n"
"use the `io.quarkus.devservices.compose.config_map.port.<container-port>` label:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"In the example above:\n"
"- Port 7432 is mapped to the `quarkus.datasource.jdbc.port` property\n"
"- Port 9080 is mapped to the `quarkus.http.port` property"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"The mapped properties will contain the host port that is mapped to the container port,\n"
"which may be different from the container port if you're using dynamic port mapping (e.g., `- '5432'` instead of `- '7432:5432'`)."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Exposing port mappings to running containers"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"In some cases, containers need to know the host ports they're mapped to at runtime.\n"
"For example, a Kafka broker needs to advertise its externally accessible address to clients."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "You can use the `io.quarkus.devservices.compose.exposed_ports` label to specify a file path inside the container where port mappings will be written:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "When the container starts, Quarkus will copy a file at the specified path containing environment variable-style port mappings:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Each line follows the format `PORT_<containerPort>=<hostPort>`, where _containerPort_ is the port exposed by the container and _hostPort_ is the dynamically assigned port on the host.\n"
"The container command can wait until the file is present, and then source this file to access these mappings as environment variables:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Controlling Service Lifecycle with Compose"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services provides several configuration options to control how services are started, stopped and shared between application instances."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"When the application starts in development or test mode, Compose Dev Services decides whether to start services or to discover already running services based on the configuration.\n"
"When the application stops, Compose Dev Services stops the services it started."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Project Name"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose uses the project name to identify resources such as services, networks, volumes, etc. in order to namespace and isolate different compose projects.\n"
"This enables the discovery of existing resources and cleanup resources when the application stops."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services determines the project name as follows:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "If the `quarkus.compose.devservices.project-name` property is set, it's used as the project name"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "If the top-level `name` attribute is specified in the Compose file, it's used as the project name"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Otherwise, the default name `quarkus-devservices-<application-name>` is chosen."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Discovering already started Compose Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Once the project name is determined, Compose Dev Services first tries to discover existing services with that project name."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"The already started compose project may have been started by another Quarkus application running locally with the same project name,\n"
"or manually using the `docker compose up` or `podman compose up` commands."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Regardless of how the services were started,\n"
"Compose Dev Services will configure dev services and injected configuration properties,\n"
"but won't stop the services when the application is stopped."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"If no compose files are found in the project, and no `quarkus.compose.devservices.project-name` is set,\n"
"Compose Dev Services won't try to discover any services and will be disabled."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Compose Dev Services used for tests"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"For Quarkus tests, a generated project name in the format `quarkus-devservices-<application-name>-<random-suffix>` is used by default to ensure isolation between test runs and running dev mode services.\n"
"If the top-level name attribute is specified in the Compose file, the project name in the format `<compose-name>-<random-suffix>` is used."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"This way, Quarkus tests start a separate copy of the services defined in the compose files.\n"
"For example, when running continuous testing in development mode, tests will have their own isolated set of services."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"You can change this behavior by setting the `quarkus.compose.devservices.reuse-project-for-tests=true` property.\n"
"This allows tests to reuse services started separately in development mode."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Using Start/Stop Controls"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"In the default lifecycle, Compose Dev Services will start and stop services automatically when the application starts and stops.\n"
"For more fine-grained control, you can use the `start-services` and `stop-services` configuration properties."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"When `quarkus.compose.devservices.start-services=false` is set,\n"
"Compose Dev Services will only try to discover existing services with the determined project name, but won't start any new services, even if compose files are present."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"When `quarkus.compose.devservices.stop-services=false` is set, services will continue running after the application stops.\n"
"This allows services to be reused by other applications or subsequent runs of the same application."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"You can also configure the timeout for stopping services with the `quarkus.compose.devservices.stop-timeout` property.\n"
"After the timeout, Compose Dev Services will forcefully stop the services.\n"
"The default timeout is deliberately chosen to be short (1 second) for fast cleanup, but you can increase it as needed:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Relation to existing Dev Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"Compose Dev Services work alongside existing Dev Services implementations provided by Quarkus extensions.\n"
"The service discovery process follows this order of precedence:"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Dev Service implementations first try locating services via shared service labels (e.g., services started by other applications)"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "If no shared services are found, they fallback to discovering services started by Compose Dev Services"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "If no Compose services are found, the default Dev Services implementation is used (typically starting a Testcontainers-based service)"
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid ""
"When Compose Dev Service creates or discovers a project, regular dev service implementations create containers inside the compose project default network.\n"
"This ensures that all services can communicate with each other using their service names as hostnames within the same network."
msgstr ""

#: _versions/3.27/guides/compose-dev-services.adoc
msgid "Configuration reference"
msgstr ""
