msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying to Google Cloud Platform (GCP)"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "This guide covers:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Login to Google Cloud"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying a function to Google Cloud Functions"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying a JAR to Google App Engine Standard"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying a Docker image to Google App Engine Flexible Custom Runtimes"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying a Docker image to Google Cloud Run"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Using Cloud SQL"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "https://cloud.google.com/[A Google Cloud Account].  Free accounts work."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "https://cloud.google.com/sdk[Cloud SDK CLI Installed]"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "This guide will take as input an application developed in the xref:getting-started.adoc[Getting Started guide]."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Make sure you have the getting-started application at hand, or clone the Git repository: `git clone {quickstarts-clone-url}`,\n"
"or download an {quickstarts-archive-url}[archive]. The solution is located in the `getting-started` directory."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Login to Google Cloud is necessary for deploying the application. It can be done as follows:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying to Google Cloud Functions"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Quarkus supports deploying your application to Google Cloud Functions via the following extensions:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "xref:gcp-functions.adoc[Google Cloud Functions]: Build functions using the Google Cloud Functions API."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"xref:gcp-functions-http.adoc[Google Cloud Functions HTTP binding]: Build functions using Quarkus HTTP APIs: Quarkus REST (formerly RESTEasy Reactive, our Jakarta REST implementation),\n"
"Undertow (Servlet), Vert.x Web, or xref:funqy-http.adoc[Funqy HTTP]."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "xref:funqy-gcp-functions.adoc[Funky Google Cloud Functions]: Build functions using Funqy."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Each extension supports a specific kind of application development,\n"
"follow the specific guides for more information on how to develop, package and deploy your applications using them."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying to Google App Engine Standard"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "First, make sure to have an App Engine environment initialized for your Google Cloud project, if not, initialize one via `gcloud app create --project=[YOUR_PROJECT_ID]`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Then, you will need to create a `src/main/appengine/app.yaml` file, let's keep it minimalistic with only the selected engine:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "This will create a default service for your App Engine application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "You can also use another Java runtime supported by App Engine, for example, for Java 17, use `runtime: java17` instead."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "App Engine Standard does not support the default Quarkus' specific packaging layout, therefore, you must set up your application to be packaged as an uber-jar via your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Then, you can choose to build the application manually or delegating that responsibility to `gcloud` or the Google Cloud Maven plugin."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Building the application manually"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Use Maven to build the application using `mvn clean package`, it will generate a single JAR that contains all the classes of your application including its dependencies."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Finally, use `gcloud` to deploy your application as an App Engine service."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "This command will upload your application jar and launch it on App Engine."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "When it’s done, the output will display the URL of your application (target url), you can use it with curl or directly open it in your browser using `gcloud app browse`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Building the application via gcloud"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "You can choose to let `gcloud` build your application for you, this is the simplest way to deploy to App Engine."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Then, you can just launch `gcloud app deploy` in the root of your project, it will upload all your project files (the list can be reduced via the  `.gcloudignore` file),\n"
"package your JAR via Maven (or Gradle) and launch it on App Engine."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Building the application via the Google Cloud Maven plugin"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "You can also let Maven control the deployment of your application using the App Engine Maven plugin."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "First, add the plugin to your `pom.xml`:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Use the default `gcloud` configuration"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Override the default JAR name to the one generated by the Quarkus Maven plugin"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Then you would be able to use Maven to build and deploy your application to App Engine via `mvn clean package appengine:deploy`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "When it’s done, the output will display the URL of your application (target URL), you can use it with curl or directly open it in your browser using `gcloud app browse`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying to Google App Engine Flexible Custom Runtimes"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Before all, make sure to have an App Engine environment initialized for your Google Cloud project, if not, initialize one via `gcloud app create --project=[YOUR_PROJECT_ID]`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "App Engine Flexible Custom Runtimes uses a Docker image to run your application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "First, create an `app.yaml` file at the root of your project with the following content:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "App Engine Flexible Custom Runtimes deploys your application as a Docker container, you can choose to deploy one of the Dockerfile provided inside your application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Both JVM and native executable versions will work."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "To deploy a JVM application:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Copy the JVM Dockerfile to the root directory of your project: `cp src/main/docker/Dockerfile.jvm Dockerfile`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Build your application using `mvn clean package`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "To deploy a native application:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Copy the native Dockerfile to the root directory of your project: `cp src/main/docker/Dockerfile.native Dockerfile`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Build your application as a native executable using `mvn clean package -Dnative`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Finally, launch `gcloud app deploy` in the root of your project, it will upload all your project files (the list can be reduced via the  `.gcloudignore` file),\n"
"build your Dockerfile and launch it on App Engine Flexible custom runtime."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "It uses Cloud Build to build your Docker image and deploy it to Google Container Registry (GCR)."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "When done, the output will display the URL of your application (target url), you can use it with curl or directly open it in your browser using `gcloud app browse`."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"App Engine Flexible custom runtimes support link:https://cloud.google.com/appengine/docs/flexible/reference/app-yaml?tab=java#updated_health_checks[health checks],\n"
"it is strongly advised to provide them thanks to Quarkus xref:smallrye-health.adoc[SmallRye Health] support."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Deploying to Google Cloud Run"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Google Cloud Run allows you to run your Docker containers inside Google Cloud Platform in a managed way."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"By default, Quarkus listens on port 8080, and it's also the Cloud Run default port.\n"
"No need to use the `PORT` environment variable defined in Cloud Run to customize the Quarkus HTTP port."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Cloud Run will use Cloud Build to build your Docker image and deploy it to Google Container Registry (GCR)."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Then, create a `.gcloudignore` file to tell gcloud which files should be not be uploaded for Cloud Build,\n"
"without it, it defaults to `.gitignore` that usually exclude the target directory where you packaged application has been created."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "In this example, I only exclude the `src` directory:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Then, use Cloud Build to build your image, it will upload to a Google Cloud Storage bucket all the files of your application (except the ones ignored by the `.gcloudignore`file),\n"
"build your Docker image and push it to Google Container Registry (GCR)."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "You can also build your image locally and push it to a publicly accessible Docker registry, then use this image in the next step."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Finally, use Cloud Run to launch your application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Cloud run will ask you questions on the service name, the region and whether unauthenticated calls are allowed.\n"
"After you answer to these questions, it will deploy your application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "When the deployment is done, the output will display the URL to access your application."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Cloud Run supports link:https://cloud.google.com/run/docs/configuring/healthchecks[health checks],\n"
"it is strongly advised to provide them thanks to Quarkus xref:smallrye-health.adoc[SmallRye Health] support."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Google Cloud SQL provides managed instances for MySQL, PostgreSQL and Microsoft SQL Server.\n"
"Quarkus has support for all three databases."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Using Cloud SQL with a JDBC driver"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"To make your applications work with Cloud SQL, you first need to use the corresponding JDBC extension, for example, for PostgreSQL,\n"
"add the `quarkus-jdbc-postgresql` extension."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Then you need to add to your `pom.xml` the Cloud SQL JDBC library that provides the additional connectivity to Cloud SQL.\n"
"For PostgreSQL you will need to include the following dependency:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Finally, you need to configure your datasource specifically to use the socket factory:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "The JDBC URL should not include the hostname / IP of the database."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "We add the `cloudSqlInstance` additional JDBC property to configure the instance id."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"We add the `socketFactory` additional JDBC property to configure the socket factory used to connect to Cloud SQL,\n"
"this one is coming from the `postgres-socket-factory` dependency."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"Using a PostgreSQL socket factory is not possible in dev mode at the moment\n"
"due to issue link:https://github.com/quarkusio/quarkus/issues/15782[#15782]."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Using Cloud SQL with a reactive SQL client"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"You can also use one of our reactive SQL client instead of the JDBC client.\n"
"To do so with Cloud SQL, add the following dependency\n"
"(adjust the classifier depending on your platform):"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Then configure your reactive datasource with no hostname and with the Netty native transport:"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "This only works when your application is running inside a Google Cloud managed runtime like App Engine."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Using Cloud SQL with native executables"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "When generating native executables, you must mark `jnr.ffi.provider.jffi.NativeFinalizer$SingletonHolder` as runtime initialized."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Additionally, starting with `com.google.cloud.sql:postgres-socket-factory:1.17.0`, you must also mark `com.kenai.jffi.internal.Cleaner` as runtime initialized."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "Going further"
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid ""
"You can find a set of extensions to access various Google Cloud Services in the Quarkiverse (a GitHub organization for Quarkus extensions maintained by the community),\n"
"including PubSub, BigQuery, Storage, Spanner, Firestore, Secret Manager (visit the repository for an accurate list of supported services)."
msgstr ""

#: _versions/3.27/guides/deploying-to-google-cloud.adoc
msgid "You can find some documentation about them in the link:https://docs.quarkiverse.io/quarkus-google-cloud-services/main/index.html[Quarkiverse Google Cloud Services documentation]."
msgstr ""
