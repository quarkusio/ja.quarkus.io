msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/amqp.adoc
msgid "Getting Started to Quarkus Messaging with AMQP 1.0"
msgstr "AMQP 1.0を使用したQuarkusのメッセージング入門"

#: _versions/3.27/guides/amqp.adoc
msgid "This guide demonstrates how your Quarkus application can utilize Quarkus Messaging to interact with AMQP 1.0."
msgstr "このガイドでは、QuarkusアプリケーションがQuarkus Messagingを利用してAMQP 1.0とやり取りする方法を示します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"If you want to use RabbitMQ, you should use the xref:rabbitmq.adoc[Quarkus Messaging RabbitMQ extension].\n"
"Alternatively, if you want to use RabbitMQ with AMQP 1.0 you need to enable the AMQP 1.0 plugin in the RabbitMQ broker;\n"
"check the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[connecting to RabbitMQ]\n"
"documentation."
msgstr ""
"RabbitMQを使用する場合は、 xref:rabbitmq.adoc[Quarkus Messaging RabbitMQエクステンション] を使用してください。\n"
"または、RabbitMQをAMQP 1.0で使用する場合は、RabbitMQブローカでAMQP 1.0プラグインを有効にする必要があります。\n"
"https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[RabbitMQへの接続] ドキュメントを参照してください。"

#: _versions/3.27/guides/amqp.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/amqp.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"In this guide, we are going to develop two applications communicating with an AMQP broker.\n"
"We will use https://activemq.apache.org/components/artemis/[Artemis], but you can use any AMQP 1.0 broker.\n"
"The first application sends a _quote request_ to an AMQP queue and consumes messages from the _quote_ queue.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr "このガイドでは、AMQP ブローカーと通信する 2 つのアプリケーションを開発します。 https://activemq.apache.org/components/artemis/[Artemis] を使用しますが、任意の AMQP 1.0 ブローカーを使用できます。最初のアプリケーションは _quote request_ を AMQP キューに送信し、 _quote_ queue からのメッセージを消費します。2 番目のアプリケーションは _quote request_ を受信し、_quote_ back を送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.\n"
"At the same time the generated request id is sent over the `quote-requests` queue."
msgstr "最初のアプリケーションである `producer` は、ユーザーが HTTP エンドポイントを介していくつかの見積りをリクエストできるようにします。見積りリクエストごとにランダムな識別子が生成されてユーザーに返され、見積りリクエストを _pending_ とします。同時に、生成されたリクエスト ID は、 `quote-requests` キューに送信されます。"

#: _versions/3.27/guides/amqp.adoc
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to a queue named `quotes`."
msgstr "次に、2 番目のアプリケーションである `processor` は、 `quote-requests` キューから読み取り、見積もりにランダムな価格を設定し、それを `quotes` という名前のキューに送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最後に、 `producer` は見積りを読み取り、サーバーから送信されたイベントを使用してこれらをブラウザーに送信します。したがって、ユーザーには、見積り価格が _pending_ から受信した価格にリアルタイムで更新されていることがわかります。"

#: _versions/3.27/guides/amqp.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/amqp.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/amqp.adoc
msgid "The solution is located in the `amqp-quickstart` link:{quickstarts-tree-url}/amqp-quickstart[directory]."
msgstr "ソリューションは `amqp-quickstart` link:{quickstarts-tree-url}/amqp-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/amqp.adoc
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/amqp.adoc
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、_プロデューサー_ と _プロセッサー_ の 2 つのプロジェクトを作成する必要があります。"

#: _versions/3.27/guides/amqp.adoc
msgid "To create the _producer_ project, in a terminal run:"
msgstr "ターミナルで _プロデューサー_ プロジェクトを作成するには、次のコマンドを実行します。"

#: _versions/3.27/guides/amqp.adoc
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する 2 つの Quarkus エクステンションを選択します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Quarkus REST (formerly RESTEasy Reactive) and its Jackson support to handle JSON payloads"
msgstr "Quarkus REST（旧RESTEasy Reactive）と、そのJacksonサポートによるJSONペイロードの処理"

#: _versions/3.27/guides/amqp.adoc
msgid "The Reactive Messaging AMQP connector"
msgstr "Reactive Messaging AMQP コネクター"

#: _versions/3.27/guides/amqp.adoc
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "同じディレクトリーから _processor_ プロジェクトを作成するには、次のコマンドを実行します。"

#: _versions/3.27/guides/amqp.adoc
msgid "At that point you should have the following structure:"
msgstr "その時点で、以下の構造になっているはずです。"

#: _versions/3.27/guides/amqp.adoc
msgid "Open the two projects in your favorite IDE."
msgstr "お気に入りの IDE で 2 つのプロジェクトを開きます。"

#: _versions/3.27/guides/amqp.adoc
msgid "The Quote object"
msgstr "見積オブジェクト"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"The `Quote` class will be used in both `producer` and `processor` projects.\n"
"For the sake of simplicity we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/amqp/model/Quote.java` file, with the following content:"
msgstr "`Quote` クラスは、 `producer` および `processor` の両方のプロジェクトで使用されます。簡単にするために、ここではクラスを複製します。どちらのプロジェクトでも、次の内容の `src/main/java/org/acme/amqp/model/Quote.java` ファイルを作成します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the AMQP queues\n"
"and also in the server-sent events sent to browser clients."
msgstr "`Quote` オブジェクトの JSON 表現は、AMQP キューに送信されるメッセージ、およびブラウザークライアントに送信されるサーバー送信イベントで使用されます。"

#: _versions/3.27/guides/amqp.adoc
msgid "Quarkus has built-in capabilities to deal with JSON AMQP messages."
msgstr "Quarkus には、JSON AMQP メッセージを扱う機能が組み込まれています。"

#: _versions/3.27/guides/amqp.adoc
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"The `@RegisterForReflection` annotation instructs Quarkus to keep the class, its fields, and methods when creating a native executable.\n"
"This is crucial when we later run our applications as native executables within containers.\n"
"Without this annotation, the native compilation process would discard the fields and methods during the dead-code elimination phase, which would lead to runtime errors.\n"
"More details about the `@RegisterForReflection` annotation can be found on  the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr ""
"`@RegisterForReflection` アノテーションは、ネイティブ実行可能ファイルを作成するときに、クラス、フィールド、メソッドを保持するよう Quarkus に指示します。\n"
"これは、後でアプリケーションをコンテナ内でネイティブ実行可能ファイルとして実行する場合に非常に重要です。\n"
"このアノテーションがない場合、ネイティブ・コンパイル・プロセスでは、デッドコード除去の段階でフィールドとメソッドが破棄されるため、実行時エラーが発生します。 `@RegisterForReflection` アノテーションの詳細については、 xref:writing-native-applications-tips.adoc#registerForReflection[ネイティブ・アプリケーションのヒント] ページを参照してください。"

#: _versions/3.27/guides/amqp.adoc
msgid "Sending quote request"
msgstr "見積リクエストの送信"

#: _versions/3.27/guides/amqp.adoc
msgid "Inside the `producer` project locate the generated  `src/main/java/org/acme/amqp/producer/QuotesResource.java` file, and update the content to be:"
msgstr "`producer` プロジェクト内で、生成された `src/main/java/org/acme/amqp/producer/QuotesResource.java` ファイルを見つけ、コンテンツを次のように更新します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "リアクティブメッセージングの `Emitter` を挿入して、 `quote-requests` チャネルにメッセージを送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid "On a post request, generate a random UUID and send it to the AMQP queue using the emitter."
msgstr "ポストリクエストで、ランダムな UUID を生成し、エミッターを使用してこれを AMQP キューに送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"The `quote-requests` channel is going to be managed as a AMQP queue, as that's the only connector on the classpath.\n"
"If not indicated otherwise, like in this example, Quarkus uses the channel name as AMQP queue name.\n"
"So, in this example, the application sends messages to the `quote-requests` queue."
msgstr "`quote-requests` チャネルは AMQP キューとして管理されます。これは、クラスパス上の唯一のコネクターであるためです。特に明記されていない限り、この例のように、Quarkus はチャネル名を AMQP キュー名として使用します。したがって、この例では、アプリケーションはメッセージを `quote-requests` キューに送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "複数のコネクターがある場合は、アプリケーション設定で使用するコネクターを指定する必要があります。"

#: _versions/3.27/guides/amqp.adoc
msgid "Processing quote requests"
msgstr "見積リクエストの処理"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the `processor` project, locate the `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` file and add the following:"
msgstr "ここでは、見積りリクエストを使用して価格を提示します。 `processor` プロジェクト内で、 `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` ファイルを見つけ、以下を追加します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "メソッドが `requests` チャネルからのアイテムを消費することを示します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "メソッドによって返されるオブジェクトが `quotes` チャネルに送信されることを示します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が _blocking_ であり、呼び出し元のスレッドで実行できないことを示します。"

#: _versions/3.27/guides/amqp.adoc
msgid "The `process` method is called for every AMQP message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` queue."
msgstr "`process` メソッドは、 `quote-requests` キューからのすべての AMQP メッセージに対して呼び出され、 `Quote` オブジェクトを `quotes` キューに送信します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Because we want to consume messages from the `quotes-requests` queue into the `requests` channel, we need to configure this association.\n"
"Open the `src/main/resources/application.properties` file and add:"
msgstr "`quotes-requests` キューから `requests` チャネルへメッセージを消費したいので、この関連付けを設定する必要があります。 `src/main/resources/application.properties` ファイルを開き、以下を追加します。"

#: _versions/3.27/guides/amqp.adoc
msgid "The configuration properties are structured as follows:"
msgstr "設定プロパティは以下のような構造になっています："

#: _versions/3.27/guides/amqp.adoc
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#: _versions/3.27/guides/amqp.adoc
msgid "In our case, we want to configure the `address` attribute to indicate the name of the queue."
msgstr "この例では、キューの名前を示すように `address` 属性を設定します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Receiving quotes"
msgstr "見積の受信"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Back to our `producer` project.\n"
"Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "`producer` プロジェクトに戻ります。引用符を使用するように `QuotesResource` を変更し、それを HTTP エンドポイントにバインドして、クライアントにイベントを送信しましょう。"

#: _versions/3.27/guides/amqp.adoc
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` 修飾子を使用して `quotes` チャネルを挿入します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#: _versions/3.27/guides/amqp.adoc
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#: _versions/3.27/guides/amqp.adoc
msgid "The HTML page"
msgstr "HTML ページ"

#: _versions/3.27/guides/amqp.adoc
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSE を使って変換された価格を読み込む HTML ページです。"

#: _versions/3.27/guides/amqp.adoc
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "`producer` プロジェクト内に、次の内容で `src/main/resources/META-INF/resources/quotes.html` ファイルを作成します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Nothing spectacular here.\n"
"On each received quote, it updates the page."
msgstr "ここでは、特筆すべきものは何もありません。受け取った見積もりごとに、ページが更新されます。"

#: _versions/3.27/guides/amqp.adoc
msgid "Get it running"
msgstr "実行"

#: _versions/3.27/guides/amqp.adoc
msgid "You just need to run both applications using:"
msgstr "以下を使用して両方のアプリケーションを実行する必要があります。"

#: _versions/3.27/guides/amqp.adoc
msgid "And, in a separate terminal:"
msgstr "そして、別の端末で以下を実行します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Quarkus starts a AMQP broker automatically, configures the application and shares the broker instance between different applications.\n"
"See xref:amqp-dev-services.adoc[Dev Services for AMQP] for more details."
msgstr "Quarkus は、AMQP ブローカーを自動的に起動し、アプリケーションを設定して、異なるアプリケーション間でブローカーインスタンスを共有します。詳細については、xref:amqp-dev-services.adoc[Dev Services for AMQP] を参照してください。"

#: _versions/3.27/guides/amqp.adoc
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "ブラウザーで `http://localhost:8080/quotes.html` を開き、ボタンをクリックして見積をリクエストします。"

#: _versions/3.27/guides/amqp.adoc
msgid "Running in JVM or Native mode"
msgstr "JVM またはネイティブモードでの実行"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"When not running in dev or test mode, you will need to start your AMQP broker.\n"
"You can follow the instructions from the https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] or create a `docker-compose.yaml` file with the following content:"
msgstr "開発モードまたはテストモードで実行していない場合は、AMQP ブローカーを起動する必要があります。 https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] の指示に従うか、以下のコンテンツで `docker-compose.yaml` ファイルを作成することができます。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Note how the AMQP broker location is configured.\n"
"The `amqp.host` and `amqp.port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "AMQP ブローカーの場所がどのように設定されているかに注意してください。 `amqp.host` および `amqp.port` (`AMQP_HOST` および `AMQP_PORT` 環境変数) プロパティーは場所を設定します。"

#: _versions/3.27/guides/amqp.adoc
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "まず、アプリケーションを停止したことを確認し、次のコマンドを使用して両方のアプリケーションを JVM モードでビルドします。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"Once packaged, run `docker compose up --build`.\n"
"The UI is exposed on http://localhost:8080/quotes.html"
msgstr "パッケージ化したら、 `docker compose up --build` を実行します。UI は http://localhost:8080/quotes.html で公開されています"

#: _versions/3.27/guides/amqp.adoc
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "アプリケーションをネイティブとして実行するには、最初にネイティブ実行可能ファイルをビルドする必要があります。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.\n"
"Then, run the system using:"
msgstr "`-Dquarkus.native.container-build=true` は、コンテナー内で実行できる Linux 64 ビットのネイティブ実行可能ファイルをビルドするように Quarkus に指示します。次に、以下を使用してシステムを実行します。"

#: _versions/3.27/guides/amqp.adoc
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "以前と同様に、UI は http://localhost:8080/quotes.html で公開されています"

#: _versions/3.27/guides/amqp.adoc
msgid "Going further"
msgstr "さらに詳しく"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"This guide has shown how you can interact with AMQP 1.0 using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "このガイドでは、Quarkus を使用して AMQP 1.0 とやりとりする方法を示しました。 https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] を使用して、データストリーミングアプリケーションを構築します。"

#: _versions/3.27/guides/amqp.adoc
msgid ""
"If you did the Kafka quickstart, you have realized that it's the same code.\n"
"The only difference is the connector configuration and the JSON mapping."
msgstr "Kafka クイックスタートを実行した場合、それが同じコードであることに気づいたはずです。唯一の違いは、コネクター設定と JSON マッピングです。"
