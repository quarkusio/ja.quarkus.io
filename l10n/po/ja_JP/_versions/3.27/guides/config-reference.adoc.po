msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration Reference Guide"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"In this reference guide we're going to describe various aspects of Quarkus configuration. A Quarkus application and\n"
"Quarkus itself (core and extensions) are both configured via the same mechanism that leverages\n"
"the https://github.com/smallrye/smallrye-config[SmallRye Config] API an implementation of the\n"
"https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] specification."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If you're looking for information how to make a Quarkus extension configurable then see the\n"
"<<writing-extensions.adoc#configuration,Writing Your Own Extension>> guide."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Config Sources"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "By default, Quarkus reads configuration properties from multiple sources (by descending ordinal):"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "(400) <<system-properties,System properties>>"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "(300) <<environment-variables,Environment variables>>"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "(295) <<env-file,.env>> file in the current working directory"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "(260) <<application-properties-file,Quarkus Application configuration file>> in `$PWD/config/application.properties`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "(250) <<application-properties-file,Quarkus Application configuration file>> `application.properties` in classpath"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"(100) <<microprofile-config-properties-file,MicroProfile Config configuration file>>\n"
"`META-INF/microprofile-config.properties` in classpath"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The final configuration is the aggregation of the properties defined by all these sources. A configuration property\n"
"lookup starts by the highest ordinal configuration source available and works it way down to other sources until a\n"
"match is found. This means that any configuration property may override a value just by setting a different value in a\n"
"higher ordinal config source. For example, a property configured using an environment property overrides the value\n"
"provided using the `application.properties` file."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "System properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"System properties can be handed to the application through the `-D` flag during startup. The following examples assign\n"
"the value `youshallnotpass` to the attribute `quarkus.datasource.password`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For Quarkus dev mode: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For a runner jar: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For a native executable: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Environment variables"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For a runner jar: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For a native executable: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Environment variables names follow the conversion rules specified by\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config].\n"
"Config searches three environment variables for a given property name (e.g. `foo.BAR.baz`):"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`foo.BAR.baz` - Exact match"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`foo_BAR_baz` - Replace each character that is neither alphanumeric nor `\\_` with `_`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"`FOO_BAR_BAZ` - Replace each character that is neither alphanumeric nor `\\_` with `_`;\n"
"then convert the name to upper case"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "SmallRye Config specifies link:https://smallrye.io/smallrye-config/Main/config/environment-variables/[additional conversion rules]."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A property with double quotes `foo.\"bar\".baz`, replace each character that is neither alphanumeric\n"
"nor `\\_` with `_`: `FOO\\__BAR__BAZ`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A property with dashes `foo.bar-baz`, replace each character that is neither alphanumeric\n"
"nor `\\_` with `_`: `FOO_BAR_BAZ`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"An indexed property `foo.bar[0]` or `foo.bar[0].baz`, replace each character that is neither alphanumeric\n"
"nor `\\_` with `_`: `FOO_BAR_0_` or `FOO_BAR_0__BAZ`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"In some situations, looking up the exact property name is impossible. This is the case for configuration names that\n"
"contain user defined path segments."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Applying the conversion rules for Environment Variables names, `quarkus.datasource.\"datasource-name\".jdbc.url` becomes\n"
"`QUARKUS_DATASOURCE\\__DATASOURCE_NAME__JDBC_URL`. The configuration will work as expected if both properties are\n"
"available in the Config system."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If only `QUARKUS_DATASOURCE\\__DATASOURCE_NAME__JDBC_URL` is present, the Config system needs to reconvert the\n"
"configuration name to its most likely dotted format. This works fine for fixed configuration segments, but not for\n"
"names that contain dynamic segments. In this case, Quarkus is unable to determine if `DATASOURCE_NAME` should be\n"
"converted to `datasource.name` or `datasource-name` (or any other special character separator)."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"For this reason, such properties always require their dotted version name in another source to disambiguate the\n"
"Environment Variable name. It will provide additional information to perform a two-way conversion and match the\n"
"property names together."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`.env` file in the current working directory"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ".env"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The name `QUARKUS_DATASOURCE_PASSWORD` follows the same conversion rules used for <<environment-variables>>."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"For `dev` mode, this file can be placed in the root of the project, but it is advised to **not** check it in to version\n"
"control because it typically contains passwords, access tokens, API keys or other secrets."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Environment variables in the `.env` file are not available via the `System.getenv(String)` API."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Quarkus Application configuration file"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The Quarkus Application configuration file is loaded from the classpath resources, for instance\n"
"`src/main/resources/application.properties`, `src/test/resources/application.properties` or from a `jar` dependency that\n"
"contains an `application.properties` entry. Each `application.properties` found is treated as a separate `ConfigSource`\n"
"and follow the same rules as every other source (override per property). Additionally, the configuration file may also\n"
"reside in `$PWD/config/application.properties`. The loading starts from the config folder and then classpath order\n"
"(`application.properties` files in the application sources will have priority on the classloader loading order)."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`application.properties`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "This is a user-defined configuration property."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "This is a configuration property consumed by the `quarkus-vertx-http` extension."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The `config/application.properties` is also available in `dev` mode. The file needs to be placed inside the build\n"
"tool output directory (`target` for Maven and `build/classes/java/main` for Gradle). Keep in mind however that any\n"
"cleaning operation from the build tool like `mvn clean` or `gradle clean` will remove the `config` directory as well."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "MicroProfile Config configuration file"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The MicroProfile Config configuration file in `src/main/resources/META-INF/microprofile-config.properties`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`microprofile-config.properties`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"It works in the exact same way as Quarkus Application configuration file `application.properties`. Recommendation\n"
"is to use Quarkus `application.properties`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Locations"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Additionally to the default config locations, Quarkus provides a way to scan additional locations for configuration\n"
"properties files."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The `quarkus.config.locations` configuration property accepts multiple locations separated by a comma `,` and each\n"
"must represent a valid `URI`. The supported `URI` schemes are:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "file or directory (`file:`)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "classpath resource"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "jar resource (`jar:`)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "http resource (`http:`)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"All loaded sources use the same ordinal of the source that found the `quarkus.config.locations` configuration\n"
"property. For instance, if `quarkus.config.locations` is set as a system property, then all loaded sources have their\n"
"ordinals set to `400` (system properties use `400` as their ordinal). The ordinal may be overridden directly for each\n"
"config source by setting the `config_ordinal` property and the ordinal value. The `config_ordinal` property only\n"
"affects the ordinal of the source in which is being set. Sources are sorted first by their ordinal, then by location\n"
"order, and finally by loading order."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Additional Config Sources"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Quarkus provides additional extensions which cover other configuration formats and stores:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:config-yaml.adoc[YAML]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "https://github.com/quarkiverse/quarkus-vault[HashiCorp Vault]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "https://github.com/quarkiverse/quarkus-config-extensions[Consul]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "It is also possible to create a xref:config-extending-support.adoc#custom-config-source[Custom Config Source]."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "ConfigMapping"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The recommended way to expose configuration to a Quarkus application is by mapping it with an interface. With\n"
"https://smallrye.io/smallrye-config/Main/config/mappings/[SmallRye Config Mappings], it is possible to\n"
"group multiple configuration properties in a single interface that share the same prefix (or namespace). It supports\n"
"the following set of features:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Automatic conversion of the configuration type, including List, Set, Map, Optional, and primitive types."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Nested Config Mapping groups."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration Properties Naming Strategies"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Integration with Bean Validation"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A Config Mapping requires an interface with minimal metadata configuration annotated with\n"
"`@io.smallrye.config.ConfigMapping`:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "A complex object type uses the following rules to map configuration values to their member values:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "A configuration path is built by taking the object type prefix (or namespace) and the mapping member name"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The member name is converted to its kebab-case format"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If the member name is represented as a getter, the member name is taken from its property name equivalent, and then\n"
"converted to its kebab-case format."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The configuration value is automatically converted to the member type"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The configuration path is required to exist with a valid configuration value or the mapping will fail."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Kebab-case - the method name is derived by replacing case changes with a dash to map the configuration property."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The `Server` interface can map configuration properties with the name `server.host` into the `Server.host()`\n"
"method, `server.port` into `Server.port()` method, and `server.ssl-port` into `Server.sslPort()` method. The\n"
"configuration property name to look up is constructed from the prefix and the method name (in kebab-case), separated\n"
"by adot (`.`) character."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "A `@ConfigMapping` can be injected into any CDI aware bean:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"For non-CDI components, use the `io.smallrye.config.SmallRyeConfig#getConfigMapping` API to retrieve the config mapping\n"
"instance:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Check the xref:config-mappings.adoc[Mapping configuration to objects] guide for advanced usages with\n"
"`@ConfigMapping`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "ConfigProperty"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"While `@ConfigMapping` is the recommended approach, Quarkus also supports\n"
"https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the\n"
"configuration properties in the application."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for\n"
"members annotated with `@ConfigProperty`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If you do not provide a value for this property, the application startup fails with\n"
"`io.quarkus.runtime.configuration.ConfigurationException: Failed to load config value of type class java.lang.String for: greeting.messagee`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Use xref:config-mappings.adoc#config-mappings[Config Mappings] to group similar configuration properties."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Default Values"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If a configuration is associated with a default value (by way of the `io.smallrye.config.WithDefault` or\n"
"`org.eclipse.microprofile.config.inject.ConfigProperty.defaultValue`), and no configuration value is supplied for the\n"
"property, then rather than throwing an exception, the default value will be used. A default value is expressed as a\n"
"`String`, and uses the same conversion mechanism used to process configuration values. Several Built-in Converters\n"
"already exist for primitives, boxed primitives, and other classes; for example:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Primitives: `boolean`, `byte`, `short`, etc."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Boxed primitives: `java.lang.Boolean`, `java.lang.Byte`, `java.lang.Short`, etc."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Optional containers: `java.util.Optional`, `java.util.OptionalInt`, `java.util.OptionalLong`, and `java.util.OptionalDouble`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Java `enum` types"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "JSR 310 `java.time.Duration`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "JDK networking `java.net.SocketAddress`, `java.net.InetAddress`, etc."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"As you might expect, these converters are `org.eclipse.microprofile.config.spi.Converter` implementations. Therefore,\n"
"these converters comply with the Microprofile or custom implementation providers expression rules like:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Boolean values will be `true` in cases \"true\", \"1\", \"YES\", \"Y\" \"ON\". Otherwise, value will be interpreted as false"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "For float and double values the fractional digits must be separated by a dot `.`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Note that when a combination of `Optional*` types and defaults are used, the defined default value will still be used\n"
"and if no value is given for the property, the `Optional*` will be present and populated with the converted default\n"
"value. However, when the property is explicitly empty, the default value is not used and the `Optional` will be empty.\n"
"Consider this example:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"In this case, since `greeting.name` was configured to be `Optional*` up above, the corresponding property value will\n"
"be an empty `Optional` and execution will continue normally. This would be the case even if there was a default value\n"
"configured: the default value is *not* used if the property is explicitly cleared in the configuration."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "On the other hand, this example:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"will result in a `java.util.NoSuchElementException: SRCFG02004: Required property greeting.message not found` on\n"
"startup and the default value will not be assigned."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Programmatically access"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The `io.smallrye.config.SmallRyeConfig` API allows to access the Config API programmatically.\n"
"This API is mostly useful in situations where CDI injection is not available."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Do not use `System.getProperty(String)` or `System.getEnv(String)` to retrieve configuration values. These\n"
"APIs are not configuration aware and do not support the features described in this guide."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Profiles"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"We often need to configure our application differently depending on the target _environment_. For example, the local\n"
"development environment may be different from the production environment."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Configuration Profiles allow for multiple configurations in the same file or separate files and select between them via\n"
"a profile name."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Profile in the property name"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"To be able to set properties with the same name, each property needs to be prefixed with a percentage sign `%` followed\n"
"by the profile name and a dot `.` in the syntax `%{profile-name}.config.name`:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "application.properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The Quarkus HTTP port will be 9090. If the `dev` profile is active it will be 8181."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Profiles in the `.env` file follow the syntax `_{PROFILE}_CONFIG_KEY=value`:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "If a profile does not define a value for a specific attribute, the _default_ (no profile) value is used:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"With the `dev` profile enabled, the property `bar` has the value `hallo`, but the property `baz` has the value\n"
"`bonjour`. If the `prod` profile is enabled, `bar` has the value `hello` (as there is no specific value for the `prod`\n"
"profile), and `baz` the value `bonjour`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Default Profiles"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "By default, Quarkus provides three profiles, that activate automatically in certain conditions:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "*test* - Activated when running tests"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "*prod* - The default profile when not running in development or test mode"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Custom Profiles"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"It is also possible to create additional profiles and activate them with the `quarkus.profile` configuration property. A\n"
"single config property with the new profile name is the only requirement:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Setting `quarkus.profile`  to `staging` will activate the `staging` profile."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The `io.quarkus.runtime.configuration.ConfigUtils.getProfiles` API provides a way to retrieve the active profiles programmatically."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Profile-aware files"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"In this case, properties for a specific profile may reside in an `application-{profile}.properties` named file. The previous\n"
"example may be expressed as:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "application-staging.properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "In this style, the configuration names in the profile-aware file do not need to be prefixed with the profile name."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Properties in the profile-aware file have priority over profile-aware properties defined in the main file."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Do not use profile-aware files to set `quarkus.profile` or `quarkus.test.profile`. This will not work because the\n"
"profile is required in advance to load the profile-aware files."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"An `application.properties` file must exist (even if empty) in the exact location of the profile-aware\n"
"(`application-{profile}.properties`) file to be included in the configuration to ensure a consistent order when\n"
"loading the files."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Parent Profile"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A Parent Profile adds one level of hierarchy to the current profile. The configuration `quarkus.config.profile.parent`\n"
"accepts a single profile name."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"When the Parent Profile is active, if a property cannot be found in the current active Profile, the config lookup\n"
"fallbacks to the Parent Profile. Consider:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Then"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The active profile is `dev`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The parent profile is `common`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.http.port` is 9090"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.http.ssl-port` is 9443"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Do not use Profile-aware files to set `quarkus.config.profile.parent`. This will not work because the profile is\n"
"required in advance to load the profile-aware files."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Multiple Profiles"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Multiple Profiles may be active at the same time. The configuration `quarkus.profile` accepts a comma-separated list\n"
"of profile names: `quarkus.profile=common,dev`. Both `common` and `dev` are separate profiles."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"When multiple profiles are active, the rules for profile configuration are the same. If two profiles define the same\n"
"configuration, then the last listed profile has priority. Consider:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`common.prop` value is `common`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`dev.prop` value is `dev`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`my.prop` value is `5678`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`test.prop` does not have a `value`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"It is also possible to define multiple profile properties, with a comma-separated list of profile names. If the same\n"
"property name exists in multiple profile properties then, the property name with the most specific profile wins:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`my.prop` value is 5678."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`another.prop` value is 1234."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Multiple profiles priority work in reverse order. With `quarkus.profile=common,dev`, Quarkus first checks the `dev`\n"
"profile and then the `common` profile."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Property Expressions"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Quarkus provides property expressions expansion on configuration values. An expression string is\n"
"a mix of plain strings and expression segments, which are wrapped by the sequence `${ ... }`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"These expressions are resolved when the property is read. So if the configuration property is build time the property\n"
"expression will be resolved at build time. If the configuration property is overridable at runtime it will be resolved\n"
"at runtime."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Consider:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The resolved value of the `callable.url` property is `https://quarkus.io/`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Another example would be defining different database servers by profile:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "can be simplified to:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Additionally, the Expression Expansion engine supports the following segments:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`${expression:value}` - Provides a default value after the `:` if the expansion doesn't find a value."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`${my.prop${compose}}` - Composed expressions. Inner expressions are resolved first."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`${my.prop}${my.prop}` - Multiple expressions."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "If an expression cannot be expanded and no default is supplied a `NoSuchElementException` is thrown."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Expressions lookups are performed in all config sources. The expression values and expansion values may reside in\n"
"different config sources."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "With Environment Variables"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Property Expressions also work with Environment Variables."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value\n"
"if `HOST` is not set."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Secret Keys Expressions"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A secret configuration may be expressed as `${handler::value}`, where the `handler` is the name of a\n"
"`io.smallrye.config.SecretKeysHandler` to decode or decrypt the `value`. Consider:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A lookup to `my.secret` will use the `SecretKeysHandler` name `aes-gcm-nopadding` to decode the value\n"
"`DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"For more information, please check SmallRye Config\n"
"link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys] documentation."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"SmallRye Config may provide handlers not fully supported by Quarkus. Currently, only `smallrye-config-crypto` is\n"
"supported."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Accessing a generating UUID"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The default config source from Quarkus provides a random UUID value.\n"
"It generates the UUID at startup time.\n"
"So, the value changes between startups, including reloads in dev mode."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"You can access the generated value using the `quarkus.uuid` property.\n"
"Use <<property-expressions,expressions>> to access it: `${quarkus.uuid}`.\n"
"For example, it can be useful to configure a Kafka client with a unique consumer group:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Clearing properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Run time properties which are optional, and which have had values set at build time or which have a default value,\n"
"may be explicitly cleared by assigning an empty string to the property. Note that this will _only_ affect\n"
"runtime properties, and will _only_ work with properties whose values are not required."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "A lookup to `remote.host` with `-Dremote.host=` will throw an Exception, because the system property cleared the value."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Indexed Properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A config value which contains unescaped commas may be converted to `Collection`. This works for simple cases, but it\n"
"becomes cumbersome and limited for more advanced cases."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Indexed Properties provide a way to use indexes in config property names to map specific elements in a `Collection`\n"
"type. Since the indexed element is part of the property name and not contained in the value, this can also be used to\n"
"map complex object types as `Collection` elements. Consider:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The indexed property syntax uses the property name and square brackets `[ ] with an index in between."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"A call to `Config#getValues(\"my.collection\", String.class)`, will automatically create and convert a `List<String>`\n"
"that contains the values `dog`, `cat` and `turtle`. A call to `Config#getValues(\"my.indexed.collection\", String.class)`\n"
"returns the exact same result. If the same property name exists in both forms (regular and indexed), the regular\n"
"value has priority."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The indexed property is sorted by their index before being added to the target `Collection`. Any gaps contained in the\n"
"indexes do not resolve to the target `Collection`, which means that the `Collection` result will store all values\n"
"without any gaps."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuring Quarkus"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace\n"
"for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in\n"
"`application.properties`. All the Quarkus configuration properties are xref:all-config.adoc[documented and searchable]."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its\n"
"extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Build Time configuration"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Some Quarkus configurations only take effect during build time (compile), meaning it is not possible to change it at\n"
"runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus\n"
"behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of\n"
"such properties. This allows Quarkus to provide optimizations and reduce complexity based on the current build\n"
"configuration. By default, Quarkus uses the `prod` configuration profile to build the application."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the xref:all-config.adoc[list of all configuration options]."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username\n"
"and password which is only known specifically in your target environment, so they can be set and influence the\n"
"application behaviour at runtime."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Config Recording"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"During the build process, Quarkus proceeds to record the available configuration in the final binary, to ensure it can\n"
"start successfully in runtime, without missing required configuration. The following sources are excluded from\n"
"recording:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "System Properties"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Environment Variables"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`.env`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Build System Sources (provided by Maven or Gradle)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Default Runtime Profile"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The default Quarkus runtime profile is set to the profile used to build the application:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` configuration."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Using a different configuration profile at runtime from the one used to build the application can lead to unexpected\n"
"results."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Change configuration after build (Reaugmentation)"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"If you are in the rare situation that you need to change the build time configuration after your application is built,\n"
"then check out how xref:reaugmentation.adoc[re-augmentation] can be used to rebuild the augmentation output for a\n"
"different build time configuration."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Tracking effective build time configuration used at build time"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Given that configuration sources usually provide more options than actually used during the build, it might be useful to know which configuration options have actually been used during a Quarkus build process."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Dumping build time configuration options read during the build"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Setting `quarkus.config-tracking.enabled` to `true` will enable a configuration interceptor that will record every configuration option that was read during the build process along with their values. The resulting report will be stored in `${project.basedir}/.quarkus/quarkus-prod-config-dump` by default. The target file could be configured using the following options:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.config-tracking.directory` - directory in which the configuration dump should be stored, the default is `${project.basedir}/.quarkus`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.config-tracking.file-prefix` - file name prefix, the default value is `quarkus`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.config-tracking.file-suffix` - file name suffix, the default value is `-config-dump`"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "`quarkus.config-tracking.file` - path to a file in which the configuration dump should be stored. This option supersedes the `file-prefix` and `file-suffix` options. Also supersedes the value of `quarkus.config-tracking.directory`, unless the value is a relative path."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The `prod` part of the `quarkus-prod-config-dump` file name refers to the Quarkus build mode, indicating that the dump was taken for the production build."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The reason `${project.basedir}/.quarkus` directory was chosen as the default location was to make it easy to track build time configuration changes between builds and use that as an indicator to build output caching tools (such as https://maven.apache.org/extensions/maven-build-cache-extension/[Apache Maven Build Cache] and https://gradle.com/gradle-enterprise-solutions/build-cache/[Develocity Build Cache]) whether the application binary has to be re-built."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Filtering configuration options"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration tracker could be instructed to exclude some of the options from the report by configuring `quarkus.config-tracking.exclude` with a comma-separated list of configuration option names that should be filtered out."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Path values"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration options with *absolute* path values that begin with a user home directory are, by default, transformed with Unix home directory alias '~' replacing the user home directory part and using `/` as a path element separator."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "This transformation can be disabled by setting `quarkus.config-tracking.use-user-home-alias-in-paths` to `false`."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Hashing recorded configuration values"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration values can be hashed using `SHA-512` algorithm before they are written to a file. Configuration option names whose values should be hashed can be configured in `quarkus.config-tracking.hash-options` as a comma separated list."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Tracking build time configuration changes between builds"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "While `quarkus.config-tracking.enabled` enables effective build time configuration report generation, there is also a way to check whether the values stored in that report have changed before the next build of the project is launched."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Maven projects could add the following goal to their `quarkus-maven-plugin` configuration:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"The `track-config-changes` goal looks for `${project.basedir}/.quarkus/quarkus-prod-config-dump` (file name and directory are configurable) and, if the file already exists, checks whether the values stored in the config dump have changed.\n"
"It will log the changed options and save the current values of each of the options present in `${project.basedir}/.quarkus/quarkus-prod-config-dump` in `${project.basedir}/target/quarkus-prod-config.check` (the target file name and location can be configured). If the build time configuration has not changed since the last build both `${project.basedir}/.quarkus/quarkus-prod-config-dump` and `${project.basedir}/.quarkus/quarkus-prod-config-dump` will be identical."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Dump Quarkus application dependencies"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"In addition to dumping configuration values, `track-config-changes` goal also dumps all the Quarkus application dependencies, including Quarkus build time dependencies.\n"
"This file could be used to check whether Quarkus build classpath has changed since the previous run, for instance together with Develocity's ability to checksum a classpath.\n"
"By default, the list of dependencies will be stored under `target/quarkus-prod-dependencies.txt` file. A different location could be configured using plugin parameters."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Dump current build configuration when the recorded configuration isn't found"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"By default, `track-config-changes` looks for the configuration recorded during previous build and does nothing if it's not found. Enabling `dumpCurrentWhenRecordedUnavailable` parameter will make it dump the current build configuration\n"
"options taking into account `quarkus.config-tracking.*` configuration."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Unlike the build configuration options recorded during the `quarkus:build` goal, configuration options saved by `quarkus:track-config-changes` with `dumpCurrentWhenRecordedUnavailable` enabled will include all the build configuration\n"
"options exposed by a `org.eclipse.microprofile.config.Config` instance. Which means this report may include some build configuration options that will not be used by the Quarkus application build process but also may be missing some\n"
"build configuration options since MicroProfile Config specification allows configuration sources not to expose all the property names they provide to users."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Config property values injected during static initialization phase"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"Quarkus collects the config property values injected in CDI beans during xref:writing-extensions.adoc#bootstrap-three-phases[static initialization phase].\n"
"The collected values are then compared with their runtime initialization counterparts and if a mismatch is detected the application startup fails.\n"
"How can it happen?\n"
"For example, let's have a CDI bean `org.acme.MyBean`.\n"
"`MyBean` injects a `@ConfigProperty` of name `foo` and is initialized during the native build.\n"
"The config property does not exist during the native build and so the default value `bar` is used.\n"
"But later, when the application is started the property is defined with a system property: `-Dfoo=baz`.\n"
"This would lead to inconsistent state and unexpected behavior.\n"
"Therefore, Quarkus would fail in this situation by default."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "The config property is injected when the bean is created and the value is fixed."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "In this particular case, the observer `@Initialized(ApplicationScoped.class)` caused the initialization of the bean. However, there are other possibilities. For example, some extensions initialize components during static initialization phase."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "You can annotate an injected field/parameter with `@io.quarkus.runtime.annotations.StaticInitSafe` to mark the injected configuration object as safe to be initialized during the static initialization phase."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Instructs Quarkus not to fail if a mismatch is detected."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Additional Information"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "https://github.com/quarkiverse/quarkus-vault[HashiCorp Vault ConfigSource Extension]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "https://github.com/quarkiverse/quarkus-config-extensions[Consul ConfigSource Extension]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/custom/[Additional Config Sources]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/factories/[Config Source Factories]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/converters/custom/[Additional Converters]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/interceptors/[Interceptors]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/relocate/[Relocate Configuration]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/fallback/[Fallback Configuration]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys]"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid ""
"For more information, please check the\n"
"link:https://smallrye.io/smallrye-config/Main[SmallRye Config documentation]."
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/config-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
