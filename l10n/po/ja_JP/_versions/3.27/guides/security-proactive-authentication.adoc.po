msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "Proactive authentication"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"Learn how to manage proactive authentication in Quarkus, including customizing settings and handling exceptions.\n"
"Gain practical insights and strategies for various application scenarios."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"Proactive authentication is enabled in Quarkus by default.\n"
"It ensures that all incoming requests with credentials are authenticated, even if the target page does not require authentication.\n"
"As a result, requests with invalid credentials are rejected, even if the target page is public.\n"
"Requests without credentials are not rejected, because anonymous requests are allowed."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"You can turn off this default behavior if you want to authenticate only when the target page requires it.\n"
"To turn off proactive authentication so that authentication occurs only when the target page requires it, modify the `application.properties` configuration file as follows:"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"If you turn off proactive authentication, the authentication process runs only when an identity is requested.\n"
"An identity can be requested because of security rules that require the user to authenticate or because programmatic access to the current identity is required."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"If proactive authentication is not used, accessing `SecurityIdentity` is a blocking operation.\n"
"This is because authentication might have yet to happen, and accessing `SecurityIdentity` might require calls to external systems, such as databases, that might block the operation.\n"
"For blocking applications, this is not an issue.\n"
"However, if you have disabled authentication in a reactive application, this fails because you cannot do blocking operations on the I/O thread.\n"
"To work around this, you need to `@Inject` an instance of `io.quarkus.security.identity.CurrentIdentityAssociation` and call the `Uni<SecurityIdentity> getDeferredIdentity();` method.\n"
"Then, you can subscribe to the resulting `Uni` to be notified when authentication is complete and the identity is available."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"You can still access `SecurityIdentity` synchronously with `public SecurityIdentity getIdentity()` in xref:rest.adoc[Quarkus REST (formerly RESTEasy Reactive)] from endpoints that are annotated with `@RolesAllowed`, `@Authenticated`, or with respective configuration authorization checks because authentication has already happened.\n"
"The same is also valid for xref:reactive-routes.adoc[Reactive routes] if a route response is synchronous."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"When proactive authentication is disabled, xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[standard security annotations] used on CDI beans do not function on an I/O thread if a secured method that is not void synchronously returns a value.\n"
"This limitation arises from the necessity for these methods to access `SecurityIdentity`."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"The following example defines `HelloResource` and `HelloService`.\n"
"Any GET request to `/hello` runs on the I/O thread and throws a `BlockingOperationNotAllowedException` exception."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "There is more than one way to fix the example:"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "Switch to a worker thread by annotating the `hello` endpoint with `@Blocking`."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "Change the `sayHello` method return type by using a reactive or asynchronous data type."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"Move the `@RolesAllowed` annotation to the endpoint.\n"
"This could be one of the safest ways because accessing `SecurityIdentity` from endpoint methods is never the blocking operation."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "Activating the CDI request context"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"You may need to inject `@RequestScoped` beans during authentication and authorization.\n"
"A good example of this is accessing a database during a `SecurityIdentity` augmentation,\n"
"which is described in the xref:security-customization.adoc#security-identity-customization[Security Identity Customization] section of the \"Security Tips and Tricks\" guide.\n"
"If authentication or authorization fails with the `jakarta.enterprise.context.ContextNotActiveException`, disabling proactive authentication is most often the best solution.\n"
"Users can also activate xref:cdi-reference.adoc#request-context-lifecycle[CDI request context], for example, by using the `@ActivateRequestContext` annotation.\n"
"However, some CDI beans may not be ready for use."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"One exception to this solution is a situation when application endpoints are secured with the xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[Authorization using configuration].\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc#policy-active-cdi-request-context[Inject RequestScoped beans into HttpSecurityPolicy] section of the \"Authorization of Web endpoints\" guide for more information."
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "Customize authentication exception responses"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"You can use Jakarta REST `ExceptionMapper` to capture Quarkus Security authentication exceptions such as `io.quarkus.security.AuthenticationFailedException`.\n"
"For example:"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid ""
"Some HTTP authentication mechanisms must handle authentication exceptions themselves to create a correct authentication challenge.\n"
"For example, `io.quarkus.oidc.runtime.CodeAuthenticationMechanism`, which manages OpenID Connect (OIDC) authorization code flow authentication, must build a correct redirect URL and set a state cookie.\n"
"Therefore, avoid using custom exception mappers to customize authentication exceptions thrown by such mechanisms.\n"
"Instead, a safer approach is to ensure that proactive authentication is enabled and to use Vert.x HTTP route failure handlers.\n"
"This is because events come to the handler with the correct response status and headers.\n"
"Then, you must only customize the response; for example:"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc[Authentication mechanisms in Quarkus]"
msgstr ""

#: _versions/3.27/guides/security-proactive-authentication.adoc
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr ""
