msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/config-secrets.adoc
msgid "Secrets in Configuration"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Use encrypted configuration values to protect sensitive passwords, secrets, tokens and keys."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"A secret configuration may be expressed as `${handler::value}`, where the `handler` is the name of a\n"
"`io.smallrye.config.SecretKeysHandler` to decode or decrypt the `value`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Encrypt Configuration values"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "To encrypt and later decrypt configuration values, add the following managed dependency:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Use the Quarkus CLI command to add a new encrypted value or encrypt an existent value in `application.properties`:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "CLI"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "_For more information about how to install the Quarkus CLI and use it, please refer to xref:cli-tooling.adoc[the Quarkus CLI guide]._"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"The configuration property `my.secret` will be added to `application.properties` with the value `1234` encrypted and\n"
"encoded in *Base64* and an expression `${aes-gcm-nopadding::}`, with the required secret handler to decrypt the value.\n"
"If it doesn't exist, an encryption key is also generated and set into\n"
"`smallrye.config.secret-handler.aes-gcm-nopadding.encryption-key`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"The default secret handler uses the `AES/GCM/NoPadding` algorithm and requires the expression\n"
"`${aes-gcm-nopadding::value}` to decrypt the `value`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Read Encrypted Configuration"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Quarkus configuration system, will automatically decrypt the configuration value when looking up `my.secret`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"The encryption key used to encrypt the value must be the same used to decrypt the value and set into\n"
"`smallrye.config.secret-handler.aes-gcm-nopadding.encryption-key`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Returns the value `1234`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Store secrets in a Keystore"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"While having encrypted values, is better than plain values, we would still like to avoid having these set up in\n"
"`application.properties`."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"Java KeyStore is used as a file-based `Vault`. Sensitive data can be imported to and securely stored in this `Vault`\n"
"as Java `SecretKey` values. To use the `KeyStore` `ConfigSource` add the following managed dependency:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Create a KeyStore"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The following command creates a simple KeyStore:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"The `-alias my.secret` option stores the configuration property name `my.secret` in the KeyStore with the value\n"
"`DLTb_9zxThxeT5iAQqswEl5Dn1ju4FdM9hIyVip35t5V`. The `-storepass arealpassword` is the password required to access the keystore."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"We also need to safely store the encryption key. You shouldn't store the key with the rest of the secrets, so we can\n"
"create another `KeyStore` for the key:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Use the KeyStore"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "To use the newly created `KeyStore`s, add the following configuration to `application.properties`:"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The path to the ´KeyStore` with properties secrets"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The `KeyStore` password to be able to extract the `KeyStore` secrets"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The `SecretKeyHandler` to decrypt the `KeyStore` secrets"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The path to the ´KeyStore` with encryption key."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "The `KeyStore` password to be able to extract the encryption key"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid "Protect the KeyStore password"
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"You need to specify a `KeyStore` password in `application.properties` for Quarkus be able to extract secrets from the\n"
"keystore. This keystore password is a sensitive value, and therefore you should consider how to minimize a risk of\n"
"leaking it and how to protect it."
msgstr ""

#: _versions/3.27/guides/config-secrets.adoc
msgid ""
"One important thing you should be aware of is that leaking this password does not necessarily mean the actual secrets\n"
"stored in the keystore will also be leaked since an unauthorized person will also need to access the actual keystore\n"
"file. Restricting access to the keystore file to a limited number of roles and having Quarkus processes running in one\n"
"of these roles will make it harder for anyone outside the group access the keystore. The keystore password can be set\n"
"as an environment variable and this password should be periodically changed to limit a window during which an attacker\n"
"can try to get to the keystore."
msgstr ""
