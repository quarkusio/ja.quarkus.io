msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/ansible.adoc
msgid "Automate Quarkus deployment with Ansible"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Let’s see how to build and deploy a Quarkus app using https://docs.ansible.com/ansible/latest/index.html[Ansible]. We’ll see how we can automate the entire process, from the code checkout to the application compilation using Maven and then its deployment and start of the service, as a https://systemd.io/[systemd service], on the target system using Ansible and its collection for Quarkus."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "The first part, the application code checkout, compilation and packaging on the Ansible (where Ansible runs). We’ll use the getting-started sample application provided in its link:{quickstarts-tree-url}/getting-started[Quarkus QuickStarts directory] as a base for this tutorial. We’ll also leverage the https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansible, an extension for Ansible that alleviates the boilerplate required and to quickly build and deploy a Quarkus using Ansible."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "You'll need to https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[install Ansible] on your workstation. Once this is done, you can install this extension for Ansible dedicated to Quarkus with the following command:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "The Ansible collection we just installed only supports RHEL, Fedora, and other Linux distribution using RPMs. Ansible defines these as \"RedHat family\". Using the content on other platforms (Windows, Debian, Ubuntu, ...), while not impossible, will require a few adjustments."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Inventory file"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "If you are not familiar with Ansible, please note that the inventory must be provided for the command above to run properly. This is a simple text file providing the information Ansible requires on the target system it manages. Please refer to the Ansible documentation for more information about https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible inventory]."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "To follow the tutorial, you may want to use only one machine (localhost) and skip the ssh authentication setup. This can be easily achieved by using the following inventory file:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Root access on target system"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "A few tasks performed by the Ansible collection for Quarkus will require administrative privileges on the target (create a group and user account, install packages). If Ansible does run as root, you'll need to add the following options to the `ansible-playbook` command line:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Tutorial"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "With the Ansible collection installed on the controller, you can already directly use a playbook provided with it to build and deploy your Quarkus application:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "The four parameters provided to the playbook are pretty self-explanatory. The first one, `app_name`, is the name of the application, in our case, it's just `getting-started`. The second one, `quarkus_app_repo_url`, is the URL to the Git repository to checkout. The third one is optional, `quarkus_app_source_folder` specifies, if needed, which subfolder from the repo the source code is located. Finally, the fourth one indicates where to install the application on the target."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Playbook run"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Once the command above has successfully run, you should have an output similar to the one below:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "The Ansible collection for Quarkus does all the `heavy lifting` here. First, it checks out the code from Github and builds the application from its sources. It also ensures the system used for this step does have the required OpenJDK installed. By default, the application is built on the localhost (the Ansible controller), but it can be performed on a remote system if needed. Once the application is built, the collection will take care of the deployment."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Here again, it checks that the appropriate OpenJDK is available on the target system. Then we ensure that the required user and group exist on the target. This is recommended mostly to be able to run the Quarkus app with a regular user, rather than with the root account."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "With those requirements in place, the jar can be deployed on the target, along with the required configuration for the app integration into systemd as a service. Any change to the systemd configuration requires reloading its daemon, which the collection ensures will happen whenever it is needed. With all of that in place, the only thing that remains is to start the service itself, which Ansible will also take care of."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "By default, the Ansible collection for Quarkus will install and use the OpenJDK 17 available in the Yum repositories of the target host (or the controller). If you want to use a different version of OpenJDK, define the following variable:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Validate that deployment was successful"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "For the purpose of this tutorial, you may want to check manually, that the playbook did indeed deployed the app properly. Here is the few ways to do so."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "First, because the collection integrated, we can check the status of the service on one of the targets:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Manually, you can also test if the app is reachable:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "We'll see how to automate those validation in the next and last part of this tutorial."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Writing a playbook"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "Of course, you’ll most likely need to build on this, so you may want to write up your own playbook, rather than just using the one provided by the collection. Below is an example of such playbook:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "To run this playbook, you use again the ansible-playbook command, but providing now the path to the playbook:"
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "You also can automate the validation part we mentioned in the previous section. You can use the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] module and populate the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[service facts] to ensure the systemd service of the Quarkus app is running, along with https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uri] to check that the Quarkus app is accessible."
msgstr ""

#: _versions/3.27/guides/ansible.adoc
msgid "And that’s all, folks!"
msgstr ""
