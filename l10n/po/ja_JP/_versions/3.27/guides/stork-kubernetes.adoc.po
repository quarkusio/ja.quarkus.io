msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Using Stork with Kubernetes"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "This guide explains how to use Stork with Kubernetes for service discovery and load balancing."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "If you are new to Stork, please read the xref:stork.adoc[Stork Getting Started Guide]."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Access to a Kubernetes cluster (Minikube is a viable option)"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "In this guide, we will work with a few components deployed in a Kubernetes cluster:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "A simple blue service."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "A simple red service."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The `color-service` is the Kubernetes service which is the entry point to the Blue and Red instances."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "A client service using a REST client to call the blue or the red service. Service discovery and selection are delegated to Stork."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "For the sake of simplicity, everything will be deployed in the same namespace of the Kubernetes cluster."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the applications step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The solution is located in the `stork-kubernetes-quickstart` link:{quickstarts-tree-url}/stork-kubernetes-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Discovery and selection"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Before going further, we need to discuss discovery vs. selection."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"Service discovery is the process of locating service instances.\n"
"It produces a list of service instances that is potentially empty (if no service matches the request) or contains multiple service instances."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"Service selection, also called load-balancing, chooses the best instance from the list returned by the discovery process.\n"
"The result is a single service instance or an exception when no suitable instance can be found."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"Stork handles both discovery and selection.\n"
"However, it does not handle the communication with the service but only provides a service instance.\n"
"The various integrations in Quarkus extract the location of the service from that service instance."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Bootstrapping the project"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Create a Quarkus project importing the quarkus-rest-client, quarkus-rest, and quarkus-smallrye-stork extensions using your favorite approach:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "In the generated project, also add the following dependencies:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "`stork-service-discovery-kubernetes` provides an implementation of service discovery for Kubernetes. `stork-load-balancer-random` provides an implementation of random load balancer. `quarkus-kubernetes` enables the generation of Kubernetes manifests each time we perform a build. The `quarkus-kubernetes-client` extension enables the use of the Fabric8 Kubernetes Client in native mode. And `quarkus-container-image-jib` enables the build of a container image using https://github.com/GoogleContainerTools/jib[Jib]."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The Blue and Red services"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Let's start with the very beginning: the service we will discover, select and call."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The Red and Blue are two simple REST services serving an endpoint responding `Hello from Red!` and `Hello from Blue!` respectively. The code of both applications has been developed following the xref:getting-started.adoc[Getting Started Guide]."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "As the goal of this guide is to show how to use Stork Kubernetes service discovery, we won't provide the specifics steps for the Red and Blue services. Their container images are already built and available in a public registry:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "https://quay.io/repository/quarkus/blue-service[Blue service container image]"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "https://quay.io/repository/quarkus/red-service[Red service container image]"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Deploy the Blue and Red services in Kubernetes"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Now that we have our service container images available in a public registry, we need to deploy them into the Kubernetes cluster."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The following file contains all the Kubernetes resources needed to deploy the Blue and Red services in the cluster and make them accessible:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "There are a few interesting parts in this listing:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The Kubernetes Service resource, `color-service`, that Stork will discover."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The Red and Blue service instances behind the `color-service` Kubernetes service."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "A Kubernetes Ingress resource making the `color-service` accessible from the outside of the cluster at the `color-service.127.0.0.1.nip.io` url. Note that the Ingress is not needed for Stork however, it helps to check that the architecture is in place."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Create a file named `kubernetes-setup.yml` with the content above at the root of the project and run the following commands to deploy all the resources in the Kubernetes cluster. Don't forget to create a dedicated namespace:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "If everything went well the Color service is accessible on http://color-service.127.0.0.1.nip.io. You should have `Hello from Red!` and `Hello from Blue!` response randomly."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Stork is not limited to Kubernetes and integrates with other service discovery mechanisms."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The REST Client interface and the front end API"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "So far, we didn't use Stork; we just deployed the services we will be discovering, selecting, and calling."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"We will call the services using the REST Client.\n"
"Create the `src/main/java/org/acme/MyService.java` file with the following content:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"It's a straightforward REST client interface containing a single method. However, note the `baseUri` attribute:\n"
"* the `stork://` suffix instructs the REST client to delegate the discovery and selection of the service instances to Stork,\n"
"* the `my-service` part of the URI is the service name we will be using in the application configuration."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"It does not change how the REST client is used.\n"
"Create the `src/main/java/org/acme/FrontendApi.java` file with the following content:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "It injects and uses the REST client as usual."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Stork configuration"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Now we need to configure Stork for using Kubernetes to discover the red and blue instances of the service."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "In the `src/main/resources/application.properties`, add:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"`stork.my-service.service-discovery` indicates which type of service discovery we will be using to locate the `my-service` service.\n"
"In our case, it's `kubernetes`.\n"
"If your access to the Kubernetes cluster is configured via Kube config file, you don't need to configure the access to it. Otherwise, set the proper Kubernetes url using the `quarkus.stork.my-service.service-discovery.k8s-host` property.\n"
"`quarkus.stork.my-service.service-discovery.application` contains the name of the Kubernetes service Stork is going to ask for. In our case, this is the `color-service` corresponding to the kubernetes service backed by the Red and Blue instances.\n"
"Finally, `quarkus.stork.my-service.load-balancer.type` configures the service selection. In our case, we use a `random` Load Balancer."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Deploy the REST Client interface and the front end API in the Kubernetes cluster"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"The system is almost complete. We only need to deploy the REST Client interface and the client service to the cluster.\n"
"In the `src/main/resources/application.properties`, add:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"The `quarkus.container-image.registry` contains the container registry to use.\n"
"The `quarkus.kubernetes.ingress.expose` indicates that the service will be accessible from the outside of the cluster.\n"
"The `quarkus.kubernetes.ingress.host` contains the url to access the service. We are using https://nip.io/[nip.io] wildcard for IP address mappings."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "For a more customized configuration you can check the xref:deploying-to-kubernetes.adoc[Deploying to Kubernetes guide]"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Build and push the container image"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Thanks to the extensions we are using, we can perform the build of a container image using Jib and also enabling the generation of Kubernetes manifests while building the application. For example, the following command will generate a Kubernetes manifest in the `target/kubernetes/` directory and also build and push a container image for the project:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Deploy client service to the Kubernetes cluster"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The generated manifest can be applied to the cluster from the project root using kubectl:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Please note that if you use Elliptic Curve keys with Stork and are getting exceptions like `java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.BouncyCastleProvider`, then adding a BouncyCastle PKIX dependency (`org.bouncycastle:bcpkix-jdk18on`) is required."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Note that internally an `org.bouncycastle.jce.provider.BouncyCastleProvider` provider will be registered if it has not already been registered."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "You can have this provider registered as described in the xref:security-customization.adoc#bouncy-castle[BouncyCastle] or xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] sections."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"We're done!\n"
"So, let's see if it works."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Open a browser and navigate to http://my-service.127.0.0.1.nip.io/api."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Or if you prefer, in another terminal, run:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "The responses should alternate randomly between `Hello from Red!` and `Hello from Blue!`."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "You can compile this application into a native executable:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Then, you need to build a container image based on the native executable. For this use the corresponding Dockerfile:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "After publishing the new image to the container registry. You can redeploy the Kubernetes manifest to the cluster."
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "Going further"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid ""
"This guide has shown how to use SmallRye Stork to discover and select your services.\n"
"You can find more about Stork in:"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "the xref:stork-reference.adoc[Stork reference guide],"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "the xref:stork.adoc[Stork with Consul reference guide],"
msgstr ""

#: _versions/3.27/guides/stork-kubernetes.adoc
msgid "the https://smallrye.io/smallrye-stork[SmallRye Stork website]."
msgstr ""
