msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Deploying your gRPC Service in Kubernetes"
msgstr "KubernetesでgRPCサービスをデプロイする"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid ""
"This page explains how to deploy your gRPC service in Quarkus in Kubernetes.\n"
"We'll continue with the example from xref:grpc-getting-started.adoc[the Getting Started gRPC guide]."
msgstr ""
"このページでは、Kubernetes の Quarkus に gRPC サービスをデプロイする方法について説明します。\n"
"引き続き xref:grpc-getting-started.adoc[gRPC スタートガイド] の例を使用します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Configuring your project to use the Quarkus Kubernetes extension"
msgstr "Quarkus Kubernetes エクステンションを使用するようにプロジェクトを設定する"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Add the Quarkus Kubernetes extension to your build file:"
msgstr "Quarkus Kubernetes エクステンションをビルドファイルに追加します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Next, we want to expose our application using the Kubernetes Ingress resource:"
msgstr "次に、Kubernetes Ingress リソースを使用してアプリケーションを公開します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "The Quarkus Kubernetes will bind the HTTP server using the port name `http` and the gRPC server using the port name `grpc`. By default, the Quarkus application will only expose the port name `http`, so only the HTTP server will be publicly accessible. To expose the gRPC server instead, set the `quarkus.kubernetes.ingress.target-port=grpc` property in your application.properties:"
msgstr "Quarkus Kubernetes は、ポート名 `http` を使用して HTTP サーバーをバインドし、ポート名 `grpc` を使用して gRPC サーバーをバインドします。デフォルトでは、Quarkus アプリケーションはポート名 `http` のみを公開するため、HTTP サーバーのみがパブリックにアクセス可能になります。代わりに gRPC サーバーを公開するには、application.properties で `quarkus.kubernetes.ingress.target-port=grpc` プロパティーを設定します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "If you configure Quarkus to use the same port for both HTTP and gRPC servers with the property `quarkus.grpc.server.use-separate-server=false`, then you don't need to change the default `target-port`."
msgstr "プロパティー `quarkus.grpc.server.use-separate-server=false` を使用して、HTTP サーバーと gRPC サーバーの両方に同じポートを使用するように Quarkus を設定する場合は、デフォルトの `target-port` を変更する必要はありません。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Finally, we need to generate the Kubernetes manifests by running the command in a terminal:"
msgstr "最後に、ターミナルでコマンドを実行して Kubernetes マニフェストを生成する必要があります。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Once generated, you can look at the `target/kubernetes` directory:"
msgstr "生成されたら、 `target/kubernetes` ディレクトリーを確認します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "You can find more information about how to deploy the application in Kubernetes in the xref:deploying-to-kubernetes.adoc#deployment[the Kubernetes guide]."
msgstr "Kubernetes でアプリケーションをデプロイする方法の詳細は、xref:deploying-to-kubernetes.adoc#deployment[Kubernetes ガイド] を参照してください。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "Using gRPC Health probes"
msgstr "gRPC ヘルスプローブの使用"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes. To add them, import the SmallRye Health extension to your build file:"
msgstr "デフォルトでは、Kubernetesリソースにはreadiness プローブとliveness プローブが含まれていません。これらを追加するには、ビルドファイルにSmallRye Healthエクステンションをインポートします："

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "More information about the health extension can be found in xref:smallrye-health.adoc[the SmallRye Health guide]."
msgstr "ヘルスエクステンションの詳細は、xref:smallrye-health.adoc[SmallRye Health ガイド] を参照してください。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "By default, this extension will configure the probes to use the HTTP server (which is provided by some extensions like the Quarkus REST (formerly RESTEasy Reactive) extension). Internally, this probe will also use xref:grpc-service-implementation.adoc#health[the generated gRPC Health services]."
msgstr "デフォルトでは、このエクステンションは、プローブが HTTP サーバーを使用するように設定します (Quarkus REST (旧称 RESTEasy Reactive) などの一部のエクステンションによって提供される HTTP サーバー)。内部的には、このプローブは、xref:grpc-service-implementation.adoc#health[生成される gRPC Health サービス] も使用します。"

#: _versions/3.27/guides/grpc-kubernetes.adoc
msgid "If your application does not use any Quarkus extension that exposes an HTTP server, you can still configure the probes to directly use the gRPC Health service by adding the property `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` into your configuration:"
msgstr "HTTP サーバーを公開する Quarkus エクステンションをアプリケーションが使用していない場合でも、設定にプロパティー `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` を追加することで、プローブが gRPC Health サービスを直接使用するように設定できます。"
