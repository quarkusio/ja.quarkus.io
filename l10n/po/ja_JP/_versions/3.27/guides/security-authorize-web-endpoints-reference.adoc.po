msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Authorization of web endpoints"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus incorporates a pluggable web security layer.\n"
"When security is active, the system performs a permission check on all HTTP requests to determine if they should proceed."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If you use Jakarta RESTful Web Services, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Authorization is based on user roles that the security provider provides.\n"
"To customize these roles, a `SecurityIdentityAugmentor` can be created, see\n"
"xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Authorization using configuration"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions are defined in the Quarkus configuration by permission sets, each specifying a policy for access control."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "When a security policy's `paths` property contains the most specific path that matches the current request path, it takes precedence over other security policies with matching paths and is said to win."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "{project-name} policies summary"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Built-in policy"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Description"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`deny`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This policy denies all users."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`permit`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This policy permits all users."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`authenticated`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This policy permits only authenticated users."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "You can define role-based policies that allow users with specific roles to access the resources."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of a role-based policy"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "You can reference a custom policy by configuring the built-in permission sets that are defined in the `application.properties` file, as outlined in the following configuration example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of policy configuration"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission references the default built-in `permit` policy to allow `GET` methods to `/public`.\n"
"In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission references the built-in `deny` policy for both `/forbidden` and `/forbidden/` paths.\n"
"It is an exact path match because it does not end with `*`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This permission set references the previously defined policy.\n"
"`roles1` is an example name; you can call the permission sets whatever you want."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The exact path pattern `/forbidden` in the example above also secures the `/forbidden/` path.\n"
"This way, the `forbidden` endpoint in the example below is secured by the `deny1` permission."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Both `/forbidden` and `/forbidden/` paths need to be secured in order to secure the `forbidden` endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If you need to permit access to the `/forbidden/` path, please add new permission with more specific exact path like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/forbidden/` path is not secured."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Custom HttpSecurityPolicy"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Sometimes it might be useful to register your own named policy. You can get it done by creating application scoped CDI\n"
"bean that implements the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` interface like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Named HTTP Security policy will only be applied to requests matched by the `application.properties` path matching rules."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy referenced from configuration file"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Custom policy name must match the value returned by the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Alternatively, you can bind custom named HttpSecurityPolicy to Jakarta REST endpoints with the `@AuthorizationPolicy` security annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy bound to a Jakarta REST endpoint"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `@AuthorizationPolicy` annotation can be used together with other standard security annotations.\n"
"As usual, the method-level annotation has priority over class-level annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Apply custom named HttpSecurityPolicy to the Jakarta REST `hello` endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can also create global `HttpSecurityPolicy` invoked on every request.\n"
"Just do not implement the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method and leave the policy nameless."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Inject `@RequestScoped` beans into `HttpSecurityPolicy`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"`@RequestScoped` beans can only be injected when the xref:cdi-reference.adoc#request-context-lifecycle[CDI request context] is active.\n"
"The context can be activated by users, for example with the `@ActivateRequestContext`, however authorization happens before Quarkus prepares some `@RequestScoped` beans.\n"
"We recommend to let Quarkus activate and prepare CDI request context for you.\n"
"For example, consider a situation where you want to inject a bean from the Jakarta REST context, such as the `jakarta.ws.rs.core.UriInfo` bean.\n"
"In this case, you must apply the `HttpSecurityPolicy` to Jakarta REST endpoints. This can be achieved in one of the following ways:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Use the `@AuthorizationPolicy` security annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Set the `quarkus.http.auth.permission.custom1.applies-to=jaxrs` configuration property."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching on paths and methods"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission sets can also specify paths and methods as a comma-separated list.\n"
"If a path ends with the `*` wildcard, the query it generates matches all sub-paths.\n"
"Otherwise, it queries for an exact match and only matches that specific path:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `$$*$$` wildcard at the end of the path matches zero or more path segments, but never any word starting from the `/public` path.\n"
"For that reason, a path like `/public-info` is not matched by this pattern."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching a path but not a method"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The request is rejected if it matches one or more permission sets based on the path but none of the required methods."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Given the preceding permission set, `GET /public/foo` would match both the path and method and therefore be allowed.\n"
"In contrast, `POST /public/foo` would match the path but not the method, and, therefore, be rejected."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching multiple paths: longest path wins"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Matching is always done on the \"longest path wins\" basis.\n"
"Less specific permission sets are not considered if a more specific one has been matched:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Given the preceding permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths.\n"
"However, because the longer path matches the path of the `deny1` permission set, `deny1` is chosen, and the request is rejected."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Subpath permissions precede root path permissions, as the `deny1` versus `permit1` permission example previously illustrated."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This rule is further exemplified by a scenario where subpath permission allows access to a public resource while the root path permission necessitates authorization."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching multiple sub-paths: longest path to the `*` wildcard wins"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Previous examples demonstrated matching all sub-paths when a path concludes with the `$$*$$`\n"
"wildcard."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This wildcard can also be applied in the middle of a path, representing a single path segment.\n"
"It cannot be mixed with other path segment characters; thus, path separators always enclose the `$$*$$` wildcard, as seen in the `/public/$$*$$/about-us` path."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"When several path patterns correspond to the same request path, the system selects the longest sub-path leading to the `$$*$$` wildcard.\n"
"In this context, every path segment character is more specific than the `$$*$$`\n"
"wildcard."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Here is a simple example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Request paths like `/api/product/detail` can only be accessed by authenticated users."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The path `/api/public-product/detail` is more specific, therefore accessible by anyone."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"All paths secured with the authorization using configuration should be tested.\n"
"Writing path patterns with multiple wildcards can be cumbersome.\n"
"Please make sure paths are authorized as you intended."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "In the following example, paths are ordered from the most specific to the least specific one:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Request path `/one/two/three/four/five` matches ordered from the most specific to the least specific path"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `$$*$$` wildcard at the end of the path matches zero or more path segments.\n"
"The `$$*$$` wildcard placed anywhere else matches exactly one path segment."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching multiple paths: most specific method wins"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"When a path is registered with multiple permission sets, the permission sets explicitly specifying an HTTP method that matches the request take precedence.\n"
"In this instance, the permission sets without methods only come into effect if the request method does not match permission sets with the method specification."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The preceding permission set shows that `GET /public/foo` matches the paths of both permission sets.However, it specifically aligns with the explicit method of the `permit1` permission set.Therefore, `permit1` is selected, and the request is accepted."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "In contrast, `PUT /public/foo` does not match the method permissions of `permit1`. As a result, `deny1` is activated, leading to the rejection of the request."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching multiple paths and methods: both win"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Sometimes, the previously described rules allow multiple permission sets to win simultaneously.\n"
"In that case, for the request to proceed, all the permissions must allow access.\n"
"For this to happen, both must either have specified the method or have no method.\n"
"Method-specific matches take precedence."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Given the preceding permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Configuration properties to deny access"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"If set to true, access is denied for all Jakarta REST endpoints by default.\n"
"If a Jakarta REST endpoint has no security annotations, it defaults to the `@DenyAll` behavior.\n"
"This helps you to avoid accidentally exposing an endpoint that is supposed to be secured.\n"
"Defaults to `false`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Defines the default role requirements for unannotated endpoints.\n"
"The `**` role is a special role that means any authenticated user.\n"
"This cannot be combined with `deny-unannotated-endpoints` because `deny` takes effect instead."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"If set to true, the access is denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.\n"
"Defaults to `false`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Disabling permissions"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permissions can be reenabled at runtime with a system property or environment variable, such as:\n"
"`-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permission paths and HTTP root path"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `quarkus.http.root-path` configuration property changes the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This configuration is equivalent to the following:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"A leading slash changes how the configured permission path is interpreted.\n"
"The configured URL is used as-is, and paths are not adjusted if the value of `quarkus.http.root-path` changes."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This configuration only impacts resources served from the fixed or static URL, `/public`, which might not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "For more information, see link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus]."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Map `SecurityIdentity` roles"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The winning role-based policy that was chosen to authorize the current request can map `SecurityIdentity` roles to deployment-specific roles.\n"
"These roles are then applicable for endpoint authorization by using the `@RolesAllowed` annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Map the `admin` role to `Admin1` role. The `SecurityIdentity` will have both `admin` and `Admin1` roles."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/*` path is secured, only authenticated HTTP requests are granted access."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If all that you need is to map the `SecurityIdentity` roles to the deployment-specific roles regardless of a path, you can also do this:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/*` path is not secured. You must secure your endpoints with standard security annotations or define HTTP permissions in addition to this configuration property."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If you prefer a programmatic configuration, the same mapping can be added with the `io.quarkus.vertx.http.security.HttpSecurity` CDI event:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Shared permission checks"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"One important rule for unshared permission checks is that only one path match is applied, the most specific one.\n"
"When a path matches as the most specific, you can specify multiple permissions for that path and they are all applied.\n"
"However, there can be permission checks you want to apply to many paths without repeating them over and over again.\n"
"That's where shared permission checks come in, they are always applied when the permission path is matched."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of custom named HttpSecurityPolicy applied on every HTTP request"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "<<custom-http-security-policy>> will be also applied on the `/admin/1` path together with the `admin-policy1` policy."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Configuring many shared permission checks is less effective than configuring unshared ones.\n"
"Use shared permissions to complement unshared permission checks like in the example below."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Map `SecurityIdentity` roles with shared permission"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Role `root` will be able to access `/secured/user/\\*` and `/secured/admin/*` paths."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/secured/*` path can only be accessed by authenticated users. This way, you have secured the `/secured/all` path and so on."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Shared permissions are always applied before unshared ones, therefore a `SecurityIdentity` with the `root` role will have the `user` role as well."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Set up path-specific authorization programmatically"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can also configure the authorization policies presented by this guide so far programmatically.\n"
"Consider the example mentioned earlier:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The same authorization policies can be configured programmatically:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Additionally, the `io.quarkus.vertx.http.security.HttpSecurity` CDI event can be used to configure specific authentication mechanisms and policies:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Use the Basic authentication and authorize the requests with a custom `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Use the Bearer token authentication and authorize the `SecurityIdentity` with your own policy."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Use Authorization Code Flow mechanism and write your own policy based on incoming request headers."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "When Quarkus fires the `HttpSecurity` CDI event, the runtime configuration is ready."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Require that all the requests to the `/user-info` path have string permissions `openid`, `email` and `profile`.\n"
"The same authorization can be required with the `@PermissionsAllowed(value = { \"openid\", \"email\", \"profile\" }, inclusive = true)` annotation instance placed on an endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Programmatic set up references"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-basic-authentication.adoc#basic-auth-programmatic-set-up[Set up Basic authentication programmatically]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-openid-connect-multitenancy.adoc#programmatic-startup[Programmatic OIDC start-up for multitenant application]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-authentication-mechanisms.adoc#form-based-auth-programmatic-set-up[Set up Form-based authentication programmatically]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-authentication-mechanisms.adoc#mtls-programmatic-set-up[Set up the mutual TLS client authentication programmatically]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Authorization using annotations"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"{project-name} includes built-in security to allow for link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control (RBAC)]\n"
"based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Authorization checks for `quarkus.http.auth.` configurations are performed before security checks for standard security annotations.\n"
"Therefore, `@PermitAll` only permits access to paths that are not already restricted by HTTP permissions.\n"
"`@PermitAll` cannot override HTTP-level security configurations, only relax restrictions imposed by other standard security annotations such as `@RolesAllowed`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "{project-name} annotation types summary"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Annotation type"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@DenyAll`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@PermitAll`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in, even without authentication."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@RolesAllowed`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Specifies the list of security roles allowed to access methods in an application."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@Authenticated`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "{project-name} provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource. It's equivalent to `@RolesAllowed(\"**\")`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@PermissionsAllowed`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Specifies the list of permissions that are allowed to invoke the specified methods."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@AuthorizationPolicy`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Specifies named `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` that should authorize access to the specified Jakarta REST endpoints.\n"
"Named HttpSecurityPolicy can be used for general authorization checks as demonstrated by <<authorization-policy-example>>."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The following <<subject-example>> demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "SubjectExposingResource example"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The endpoint obtains the user principal from the Jakarta REST `SecurityContext`.\n"
"This returns `non-null` for a secured endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/authenticated` endpoint allows any authenticated user by specifying the `@Authenticated` annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The call to obtain the user principal returns `null` if the caller is unauthenticated and `non-null` if the caller is authenticated."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `/subject/denied` endpoint declares the `@DenyAll` annotation, disallowing all direct access to it as a REST method, regardless of the user calling it.\n"
"The method is still invokable internally by other methods in this class."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[property expressions] including default values and nested property expressions.\n"
"Configuration properties used with the annotation are resolved at runtime."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Annotation value examples"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Annotation"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Value explanation"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The endpoint allows users with the role denoted by the value of the `admin-role` property."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "An example showing that the value can contain multiple variables."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"A default value demonstration.\n"
"The required role is denoted by the value of the `customer` property.\n"
"However, if that property is not specified, a role named `User` is required as a default."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Subject access control example"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role of \"Software-Tester\".\n"
"It is possible to use multiple expressions in the role definition."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation because we did not set the configuration property `customer`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"In production, this `/subject/secured` endpoint requires an authenticated user with the `User` role.\n"
"In development mode, it allows any authenticated user."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Property expression `all-roles` will be treated as a collection type `List`, therefore, the endpoint will be accessible for roles `Administrator`, `Software`, `Tester` and `User`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Endpoint security annotations and Jakarta REST inheritance"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus supports security annotations placed on the endpoint implementation or its class like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Class-level security annotation must be placed on the class where the endpoint implementation is declared."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Method-level security annotation must be placed on the endpoint implementation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The xref:resteasy.adoc[RESTEasy] subresource locators declared as default interface methods cannot be secured\n"
"by standard security annotations.\n"
"Secured subresource locators must be implemented and secured on the interface implementors like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permission annotation"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation, which authorizes any authenticated user with the given permission to access the resource.\n"
"This annotation is an extension of the common security annotations and checks the permissions granted to a `SecurityIdentity` instance."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of endpoints secured with the `@PermissionsAllowed` annotation"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The resource method `createOrUpdate` is only accessible for a user with both `create` and `update` permissions."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"By default, at least one of the permissions specified through one annotation instance is required.\n"
"You can require all permissions by setting `inclusive=true`.\n"
"Both resource methods `createOrUpdate` have equal authorization requirements."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of the `all` or `detail` actions."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can use your preferred `java.security.Permission` implementation.\n"
"By default, string-based permission is performed by `io.quarkus.security.StringPermission`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions are not beans, therefore the only way to obtain bean instances is programmatically by using `Arc.container()`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"`@PermissionsAllowed` is not repeatable on the class level due to a limitation with Quarkus interceptors.\n"
"For more information, see the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the Quarkus \"CDI reference\" guide."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The easiest way to add permissions to a role-enabled `SecurityIdentity` instance is to map roles to permissions.\n"
"Use <<authorization-using-configuration>> to grant the required `SecurityIdentity` permissions for `CRUDResource` endpoints to authenticated requests, as outlined in the following example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Add the permission `see` and the action `all` to the `SecurityIdentity` instance of the `user` role.\n"
"Similarly, for the `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Permissions `create`, `update`, and `read` are mapped to the role `admin`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The role policy `role-policy1` allows only authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.\n"
"For more information about the path-matching algorithm, see <<matching-multiple-paths>> later in this guide."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can specify a custom implementation of the `java.security.Permission` class.\n"
"Your custom class must define exactly one constructor that accepts the permission name and optionally some actions, for example, `String` array.\n"
"In this scenario, the permission `list` is added to the `SecurityIdentity` instance as `new CustomPermission(\"list\")`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can also create a custom `java.security.Permission` class with additional constructor parameters.\n"
"These additional parameters names get matched with arguments names of the method annotated with the `@PermissionsAllowed` annotation.\n"
"Later, Quarkus instantiates your custom permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of a custom `java.security.Permission` class that accepts additional arguments"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"There must be exactly one constructor of a custom `Permission` class.\n"
"The first parameter is always considered to be a permission name and must be of type `String`.\n"
"Quarkus can optionally pass permission actions to the constructor.\n"
"For this to happen, declare the second parameter as `String[]`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `LibraryPermission` class permits access to the current or parent library if `SecurityIdentity` is allowed to perform one of the required actions, for example, `read`, `write`, or `list`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The following example shows how the `LibraryPermission` class can be used:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The formal parameter `library` is identified as the parameter matching same-named `LibraryPermission` constructor parameter.\n"
"Therefore, Quarkus will pass the `library` parameter to the `LibraryPermission` class constructor.\n"
"However, the `LibraryPermission` must be instantiated each time the `updateLibrary` method is invoked."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Here, the second `Library` parameter matches the name `library`,\n"
"while the `migrate` parameter is ignored during the `LibraryPermission` permission instantiation."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of a resource secured with the `LibraryPermission`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Similarly to the `CRUDResource` example, the following example shows how you can grant a user with the `admin` role permissions to update `MediaLibrary`:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "When building a native executable, the permission class must be registered for reflection unless it is also used in at least one `io.quarkus.security.PermissionsAllowed#name` parameter. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "We want to pass the `MediaLibrary` instance to the `LibraryPermission` constructor."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Grants the permission `media-library`, which permits `read`, `write`, and `list` actions.\n"
"Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `/library/*` path can be tested from a Keycloak provider Dev UI page, because the user `alice` which is created\n"
"automatically by the xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] has an `admin` role."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The examples provided so far demonstrate role-to-permission mapping.\n"
"It is also possible to programmatically add permissions to the `SecurityIdentity` instance.\n"
"In the following example, xref:security-customization.adoc#security-identity-customization[`SecurityIdentity` is customized] to add the same permission that was previously granted with the HTTP role-based policy."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Example of adding the `LibraryPermission` programmatically to `SecurityIdentity`"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Add a `media-library` permission that was created can perform `read`, `write`, and `list` actions.\n"
"Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Annotation-based permissions do not work with custom xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] because there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Create permission checkers"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"By default, `SecurityIdentity` must be configured with permissions which can be used to check if this identity passes `@PermissionAllowed` authorization restrictions.\n"
"Alternatively, you can use a `@PermissionChecker` annotation to mark any CDI bean method as a permission checker.\n"
"The `@PermissionChecker` annotation value should match required permission declared by the `@PermissionsAllowed` annotation value.\n"
"For example, a permission checker can be created like this:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission required to access the `ProjectResource#renameProject` is the `rename-project` permission."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `ProjectResource#canRenameProject` method authorizes access to the `ProjectResource#renameProject` endpoint."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The `SecurityIdentity` instance can be injected into any permission checker method."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"In this example, the `rename-project` permission checker is declared on the same resource.\n"
"However, there is no restriction on where this permission checker can be declared as demonstrated in the next example."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission checker methods can be declared on a normal scoped CDI bean or on a `@Singleton` bean.\n"
"The `@Dependent` CDI bean scope is currently not supported."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The permission checker above requires the `SecurityIdentity` instance to authorize the `renameProject` endpoint.\n"
"Instead of declaring the `rename-project` permission checker directly on the resource, you can declare it on any CDI bean like in this example:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "A CDI bean with the permission checker must be either a normal scoped bean or a `@Singleton` bean."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission checker method must return either `boolean` or `Uni<Boolean>`. Private checker methods are not supported."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Permission checks run by default on event loops.\n"
"Annotate a permission checker method with the `io.smallrye.common.annotation.Blocking` annotation if you want to run the check on a worker thread."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Matching between the `@PermissionsAllowed` values and the `@PermissionChecker` value is based on string equality as shown in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "The permission checker method `canDeleteAllDirectories` grants access to the `deleteDirectory` because the `delete:all` values are equal."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "There must be exactly two permission checker methods, one for the `delete:service` permission and other for the `delete:file` permission."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Create permission meta-annotations"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"`@PermissionsAllowed` can also be used in meta-annotations.\n"
"For example, a new `@CanWrite` security annotation can be created like this:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Any method or class annotated with the `@CanWrite` annotation is secured with this `@PermissionsAllowed` annotation instance."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Pass `@BeanParam` parameters into a custom permission"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"Quarkus can map fields of a secured method parameters to a custom permission constructor parameters.\n"
"You can use this feature to pass `jakarta.ws.rs.BeanParam` parameters into your custom permission.\n"
"Let's consider following Jakarta REST resource:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `params` annotation attribute specifies that user principal name should be passed to the `BeanParamPermissionChecker#canSayHello` method.\n"
"Other `BeanParamPermissionChecker#canSayHello` method parameters like `customAuthorizationHeader` and `query` are matched automatically.\n"
"Quarkus identifies the `BeanParamPermissionChecker#canSayHello` method parameters among `beanParam` fields and their public accessors.\n"
"To avoid ambiguous resolution, automatic detection only works for the `beanParam` fields.\n"
"For that reason, we had to specify path to the user principal name explicitly."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Where the `SimpleBeanParam` class is declared like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus Security can only pass public fields to a custom permission constructor."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Quarkus Security automatically uses public getter methods if they are available."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"The `customAuthorizationHeader` field is not public, therefore Quarkus access this field with the `customAuthorizationHeader` accessor.\n"
"That is particularly useful with Java records, where generated accessors are not prefixed with `get`."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "Here is an example of a `@PermissionChecker` method that checks the `say-hello` permission based on a user principal, custom header and query parameter:"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid ""
"You can pass `@BeanParam` directly into a `@PermissionChecker` method and access its fields programmatically.\n"
"Ability to reference `@BeanParam` fields with the `@PermissionsAllowed#params` attribute is useful when you have multiple differently structured `@BeanParam` classes."
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-getting-started-tutorial.adoc[Getting started with Security by using Basic authentication and Jakarta Persistence]"
msgstr ""

#: _versions/3.27/guides/security-authorize-web-endpoints-reference.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID Connect Bearer Token Scopes And SecurityIdentity Permissions]"
msgstr ""
