msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Funqy AWS Lambda Binding"
msgstr "Funqy AWS Lambdaバインディング"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The guide walks through quickstart code to show you how you can deploy Funqy functions to AWS Lambda."
msgstr "このガイドでは、Funqy関数をAWS Lambdaにデプロイする方法を、クイックスタートコードを使って説明します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Funqy functions can be deployed using the AWS Lambda Java Runtime, or you can build a native executable and use\n"
"Lambda Custom Runtime if you want a smaller memory footprint and faster cold boot startup time."
msgstr "Funqy関数はAWS Lambda Java Runtimeを使ってデプロイすることもできますし、より少ないメモリーフットプリントとより高速なコールドブート起動時間が必要な場合は、ネイティブ実行可能ファイルをビルドしてLambda Custom Runtimeを使うこともできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "link:funqy[Funqy の基礎] を読む。短時間で読めます!"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "https://aws.amazon.com[Amazon AWS account]"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"
msgstr "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], for local testing"
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] 、ローカルテスト用"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Funqy AWS Lambdas build off of our xref:aws-lambda.adoc[Quarkus AWS Lambda support]."
msgstr "Funqy AWS Lambdaは、 xref:aws-lambda.adoc[QuarkusのAWS Lambdaサポート] をベースに構築されています。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Installing AWS bits"
msgstr "AWS ビットのインストール"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS CLI."
msgstr "AWSのすべてのツールをインストールすることは、おそらくこのガイドでは最も難しいことです。AWS CLIをインストールするためのすべての手順に従っていることを確認してください。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The Quickstart"
msgstr "クイックスタート"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The solution is located in the `funqy-amazon-lambda-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[directory]."
msgstr "ソリューションは `funqy-amazon-lambda-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The Code"
msgstr "コード"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"There is nothing special about the code and more importantly nothing AWS specific.  Funqy functions can be deployed to many\n"
"environments and AWS Lambda is one of them.  The Java code is actually the same exact code as the link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]."
msgstr "コードに特別なものはなく、さらに重要なのはAWSに特化したものはないということです。Funqy関数は多くの環境にデプロイでき、AWS Lambdaもその1つです。Javaコードは実は link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart] と全く同じコードです。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Choose Your Function"
msgstr "functionの選択"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Only one Funqy function can be exported per AWS Lambda deployment.  If you have multiple functions defined\n"
"within your project, then you will need to choose the function within your Quarkus `application.properties`:"
msgstr "1つのAWS Lambdaデプロイメントにつき、Funqy関数を1つだけエクスポートできます。プロジェクト内に複数の関数が定義されている場合は、Quarkus `application.properties` で関数を選択する必要があります："

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "You can see how the quickstart has done it within its own link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties]."
msgstr "クイックスタートが自身の link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties] 内でどのようにそれを行っているか見ることができます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Alternatively, you can set the `QUARKUS_FUNQY_EXPORT` environment variable when you create the AWS Lambda using the `aws` cli."
msgstr "あるいは、 `aws` cli を使って AWS Lambda を作成する際に、 `QUARKUS_FUNQY_EXPORT` 環境変数を設定することもできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Deploy to AWS Lambda Java Runtime"
msgstr "AWS Lambda の Java ランタイムにデプロイする"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"There are a few steps to get your Funqy function running on AWS Lambda.  The quickstart maven project generates a helpful script to\n"
"create, update, delete, and invoke your functions for pure Java and native deployments.  This script is generated\n"
"at build time."
msgstr "Funqy 関数を AWS Lambda 上で動作させるには、いくつかのステップがあります。quickstart maven プロジェクトは、純粋な Java とネイティブデプロイメント用の関数を作成、更新、削除、呼び出すための便利なスクリプトを生成します。このスクリプトはビルド時に生成されます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Build and Deploy"
msgstr "ビルドとデプロイ"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Build the project using Maven:"
msgstr "maven を使用してプロジェクトをビルドします。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "This will compile and package your code."
msgstr "これでコードがコンパイルされ、パッケージ化されます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Create an Execution Role"
msgstr "実行ロールの作成"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"View the https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] for deploying\n"
"a lambda with AWS CLI.  Specifically, make sure you have created an `Execution Role`.  You will need to define\n"
"a `LAMBDA_ROLE_ARN` environment variable in your profile or console window,  Alternatively, you can edit\n"
"the `manage.sh` script that is generated by the build and put the role value directly there:"
msgstr "AWS CLIを使った Lambda のデプロイ方法については、 link:https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] を参照してください。具体的には、 `Execution Role` を作成していることを確認してください。プロファイルやコンソールウィンドウで `LAMBDA_ROLE_ARN` 環境変数を定義する必要があります。また、ビルドで生成される `manage.sh` スクリプトを編集して、そこに直接ロール値を置くこともできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Extra Build Generated Files"
msgstr "ビルド時に追加生成されるファイル"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"After you run the build, there are a few extra files generated by the `quarkus-funqy-amazon-lambda` extension.  These files\n"
"are in the build directory:  `target/` for maven, `build/` for gradle."
msgstr "ビルドを実行すると、 `quarkus-funqy-amazon-lambda` のエクステンションで生成されるいくつかの追加ファイルがあります。これらのファイルはビルドディレクトリーにあります: maven なら `target/`、gradleなら `build/`。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - Lambda デプロイファイル"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`manage.sh` - wrapper around aws lambda cli calls"
msgstr "`manage.sh` - aws Lambda CLI の呼び出しのラッパー"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`bootstrap-example.sh` - example bootstrap script for native deployments"
msgstr "`bootstrap-example.sh` - ネイティブデプロイメント用のブートストラップスクリプトの例"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`sam.jvm.yaml` - (optional) for use with sam cli and local testing"
msgstr "`sam.jvm.yaml` - (オプション) sam cliやローカル・テストで使用します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`sam.native.yaml` - (optional) for use with sam cli and native local testing"
msgstr "`sam.native.yaml` - (オプション) sam cliやネイティブ・ローカル・テストで使用します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Create the function"
msgstr "関数を作成する"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"The `target/manage.sh` script is for managing your Funqy function using the AWS Lambda Java runtime.  This script is provided only for\n"
"your convenience. Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr "`target/manage.sh` スクリプトは、AWS Lambda Java ランタイムを使用して Funqy 関数を管理するためのものです。このスクリプトは利便性のためだけに提供されています。関数の作成、削除、更新のためにどのような aws コマンドが実行されるかを知りたい場合は、 `manage.sh` スクリプトの出力を確認してください。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "`manage.sh` supports four operation:  `create`, `delete`, `update`, and `invoke`."
msgstr "`manage.sh` は、 `create` , `delete` , `update` , `invoke` の 4 つの操作をサポートしています。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"To verify your setup, that you have the AWS CLI installed, executed aws configure for the AWS access keys,\n"
"and set up the `LAMBDA_ROLE_ARN` environment variable (as described above), please execute `manage.sh` without any parameters.\n"
"A usage statement will be printed to guide you accordingly."
msgstr "AWS CLIがインストールされていること、AWSアクセスキーのためのaws configureを実行していること、 `LAMBDA_ROLE_ARN` 環境変数を設定していること(上記の通り)を確認するには、 `manage.sh` をパラメーターなしで実行してください。それに応じて利用方法のガイドが表示されます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "To see the `usage` statement, and validate AWS configuration:"
msgstr "`usage` を参照したり、AWS の設定を検証するためには次のようにします。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "You can `create` your function using the following command:"
msgstr "次のコマンドを使って、 Function を `create` します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "or if you do not have `LAMBDA_ROLE_ARN` already defined in this shell:"
msgstr "または、このシェルで既に `LAMBDA_ROLE_ARN` が定義されていない場合にはこうです。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Do not change the handler switch.  This must be hardcoded to `io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest`.\n"
"This special handler is Funqy's integration point with AWS Lambda."
msgstr "ハンドラースイッチを変更しないでください。これは `io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest` にハードコードされている必要があります。この特別なハンドラーは、Funqy と AWS Lambda の統合ポイントです。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"If there are any problems creating the function, you must delete it with the `delete` function before re-running\n"
"the `create` command."
msgstr "Function の作成に問題がある場合は、 `delete` で Function を削除してから `create` コマンドを再実行する必要があります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Commands may also be stacked:"
msgstr "コマンドはスタックすることもできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Invoke the function"
msgstr "関数の呼出"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Use the `invoke` command to invoke your function."
msgstr "関数を呼び出すには `invoke` コマンドを使用します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"The example function takes input passed in via the `--payload` switch which points to a json file\n"
"in the root directory of the project."
msgstr "サンプルの関数は、プロジェクトのルートディレクトリーにある json ファイルを指す `--payload` スイッチを介して渡された入力を受け取ります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The function can also be invoked locally with the SAM CLI like this:"
msgstr "この関数は、以下のようにSAM CLI によってローカルで呼び出すこともできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "If you are working with your native image build, simply replace the template name with the native version:"
msgstr "ネイティブイメージのビルドで作業している場合は、テンプレート名をネイティブバージョンに置き換えてください。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Update the function"
msgstr "functionの更新"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"You can update the Java code as you see fit.  Once you've rebuilt, you can redeploy your function by executing the\n"
"`update` command."
msgstr "お好きなように Java コードを更新することができます。リビルドしたら、 `update` コマンドを実行することで、関数を再配備できます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Deploy to AWS Lambda Custom (native) Runtime"
msgstr "AWS Lambda カスタム (ネイティブ) ランタイムへのデプロイ"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"If you want a lower memory footprint and faster initialization times for your Funqy function, you can compile your Java\n"
"code to a native executable.  Just make sure to rebuild your project with the `-Dnative` switch."
msgstr "Funqy関数のメモリフットプリントを小さくし、初期化時間を短縮したい場合は、Javaコードをネイティブ実行可能ファイルにコンパイルすることができます。 `-Dnative` スイッチを使ってプロジェクトを再ビルドしてください。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "For Linux hosts execute:"
msgstr "Linuxホストの場合は以下を実行します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing Quarkus to use a Docker build as Amazon\n"
"Lambda requires Linux binaries.  You can do this by passing this property to your build:\n"
"`-Dnative-image.docker-build=true`.  This requires you to have Docker installed locally, however."
msgstr "Linux 以外のシステムでビルドしている場合は、Amazon Lambda が Linux バイナリーを必要とするため、Docker ビルドを使用するように Quarkus に指示するプロパティーも渡す必要があります。これを行うには、 `-Dnative-image.docker-build=true` プロパティーをビルドに渡します。ただし、これには Docker をローカルにインストールする必要があります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Either of these commands will compile and create a native executable.  It also generates a zip file `target/function.zip`.\n"
"This zip file contains your native executable image renamed to `bootstrap`.  This is a requirement of the AWS Lambda\n"
"Custom (Provided) Runtime."
msgstr "これらのコマンドのいずれかがコンパイルされ、ネイティブ実行可能ファイルが作成されます。また、zip ファイル `target/function.zip` も生成されます。このzipファイルには、 `bootstrap` にリネームされたネイティブ実行イメージが含まれています。これはAWS Lambda Custom (Provided) Runtimeの要件です。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"The instructions here are exactly as above with one change:  you'll need to add `native` as the first parameter to the\n"
"`manage.sh` script:"
msgstr "ここでの説明は上記と全く同じですが、1つ変更点があります: `manage.sh` スクリプトの最初のパラメーターとして `native` を追加する必要があります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"As above, commands can be stacked.  The only requirement is that `native` be the first parameter should you wish\n"
"to work with native image builds.  The script will take care of the rest of the details necessary to manage your native\n"
"image function deployments."
msgstr "上記のように、コマンドはスタックすることができます。唯一の要件は、ネイティブイメージビルドで作業したい場合、最初のパラメーターとして `native` を指定することです。このスクリプトは、ネイティブイメージ Function のデプロイメントを管理するために必要な残りの詳細を処理します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr "関数を作成、削除、更新するためにどのようなawsコマンドが実行されるかを知りたい場合は、 `manage.sh` スクリプトの出力を調べてください。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"One thing to note about the create command for native is that the `aws lambda create-function`\n"
"call must set a specific environment variable:"
msgstr "ネイティブ用のcreateコマンドについて注意すべき点は、 `aws lambda create-function` 呼び出しで特定の環境変数を設定しなければならないということです。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Examine the POM"
msgstr "POM を調べる"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-funqy-amazon-lambda` extension\n"
"as a dependency.  The extension automatically generates everything you might need for your lambda deployment."
msgstr "POM には `quarkus-funqy-amazon-lambda` エクステンションが依存関係として含まれている以外に特別なことは何もありません。このエクステンションは Lambda のデプロイに必要なものをすべて自動的に生成します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Integration Testing"
msgstr "統合テスト"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Funqy AWS Lambda support leverages the Quarkus AWS Lambda test framework so that you can unit tests your Funqy functions.\n"
"This is true for both JVM and native modes.\n"
"This test framework provides similar functionality to the SAM CLI, without the overhead of Docker."
msgstr ""
"Funqy AWS Lambdaのサポートは、Quarkus AWS Lambdaテストフレームワークを活用しており、Funqy関数をユニットテストできます。\n"
"これはJVMモードとネイティブモードの両方に当てはまります。このテストフレームワークは、Dockerのオーバーヘッドなしに、SAM CLIと同様の機能を提供します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"If you open up link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java]\n"
"you'll see that the test replicates the AWS execution environment."
msgstr "link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java] を開くと、テストがAWSの実行環境を複製していることがわかります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Testing with the SAM CLI"
msgstr "SAM CLI を使用したテスト"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"The https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]\n"
"allows you to run your functions locally on your laptop in a simulated Lambda environment.  This requires\n"
"https://www.docker.com/products/docker-desktop[docker] to be installed.  This is an optional approach should you choose\n"
"to take advantage of it.  Otherwise, the Quarkus JUnit integration should be sufficient for most of your needs."
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] を利用すると、Lambda をシミュレートした環境でラップトップ上のローカルで関数を実行することができます。これには link:https://www.docker.com/products/docker-desktop[docker] のインストールが必要です。これは、利用することを選択した場合のオプションのアプローチです。それ以外の場合は、Quarkus JUnitの統合でほとんどのニーズを満たすことができるはずです。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "A starter template has been generated for both JVM and native execution modes."
msgstr "JVMとネイティブ実行モードの両方に対応したスターターテンプレートが生成されています。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"Run the following SAM CLI command to locally test your function, passing the appropriate SAM `template`.\n"
"The `event` parameter takes any JSON file, in this case the sample `payload.json`."
msgstr "以下の SAM CLI コマンドを実行して、適切な SAM `template` を渡して関数をローカルでテストします。 `event` パラメーターには任意の JSON ファイルを指定します。この場合はサンプル `payload.json` を指定しています。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The native image can also be locally tested using the `sam.native.yaml` template:"
msgstr "ネイティブイメージは、 `sam.native.yaml` テンプレートを使ってローカルでテストすることもできます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Modifying `function.zip`"
msgstr "`function.zip` の修正"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"There are times when you may have to add additional entries to the `function.zip` lambda deployment that is generated\n"
"by the build.  To do this, create a `zip.jvm` or `zip.native` directory within `src/main`.\n"
"Create `zip.jvm/` if you are doing a pure Java.  `zip.native/` if you are doing a native deployment."
msgstr "ビルドによって生成された `function.zip` Lambda デプロイメントに追加のエントリーを加えなければならない場合があります。これを行うには、 `src/main` 内に `zip.jvm` または `zip.native` ディレクトリーを作成します。Pure Java を実行している場合は `zip.jvm/` を、ネイティブディプロイメントを実行している場合は `zip.native/` を作成します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Any you files and directories you create under your zip directory will be included within `function.zip`"
msgstr "zipディレクトリーの下に作成したファイルやディレクトリーは、すべて `function.zip` に含まれます。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "Custom `bootstrap` script"
msgstr "カスタム `bootstrap` スクリプト"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid ""
"There are times you may want to set specific system properties or other arguments when lambda invokes\n"
"your native Funqy deployment.  If you include a `bootstrap` script file within\n"
"`zip.native`, the Funqy extension will automatically rename the executable to `runner` within\n"
"`function.zip` and set the unix mode of the `bootstrap` script to executable."
msgstr "ラムダがネイティブの Funqy デプロイメントを起動する際に、特定のシステムプロパティーやその他の引数を設定したい場合があるかもしれません。 `zip.native` 内に `bootstrap` スクリプトファイルを含めると、Funqy エクステンションは自動的に実行ファイルの名前を `function.zip` 内の `runner` に変更し、 `bootstrap` スクリプトの unix モードを実行ファイルに設定します。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The native executable must be referenced as `runner` if you include a custom `bootstrap` script."
msgstr "カスタム `bootstrap` スクリプトを含む場合は、ネイティブ実行可能ファイルを `runner` として参照する必要があります。"

#: _versions/3.27/guides/funqy-aws-lambda.adoc
msgid "The extension generates an example script within `target/bootstrap-example.sh`."
msgstr "このエクステンションは、サンプルのスクリプト `target/bootstrap-example.sh` を生成します。"
