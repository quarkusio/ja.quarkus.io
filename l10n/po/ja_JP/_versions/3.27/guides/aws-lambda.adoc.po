msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/aws-lambda.adoc
msgid "AWS Lambda"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The `quarkus-amazon-lambda` extension allows you to use Quarkus to build your AWS Lambdas.\n"
"Your lambdas can use injection annotations from CDI or Spring and other Quarkus facilities as you need them."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Quarkus lambdas can be deployed using the Amazon Java Runtime, or you can build a native executable and use\n"
"Amazon's Custom Runtime if you want a smaller memory footprint and faster cold boot startup time."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Quarkus's integration with lambdas also supports Quarkus's Live Coding development cycle.  You can\n"
"bring up your Quarkus lambda project in dev or test mode and code on your project live."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], for local testing"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For Gradle projects please <<gradle,see below>>, or for further reference consult the guide in the xref:gradle-tooling.adoc[Gradle setup page]."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Getting Started"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "This guide walks you through generating an example Java project via a maven archetype and deploying it to AWS."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Installing AWS bits"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS CLI."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Creating the Maven Deployment Project"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create the Quarkus AWS Lambda maven project using our Maven Archetype."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If you prefer to use Gradle, you can quickly and easily generate a Gradle project via https://code.quarkus.io/[code.quarkus.io]\n"
"adding the `quarkus-amazon-lambda` extension as a dependency."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Copy the build.gradle, gradle.properties and settings.gradle into the above-generated Maven archetype project, to follow along with this guide."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Execute: gradle wrapper to set up the gradle wrapper (recommended)."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For full Gradle details, see the <<gradle,Gradle build>> section below."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Choose Your Lambda"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The `quarkus-amazon-lambda` extension scans your project for a class that directly implements the Amazon `RequestHandler<?, ?>` or `RequestStreamHandler` interface.\n"
"It must find a class in your project that implements this interface, or it will throw a build time failure.\n"
"If it finds more than one handler class, a build time exception will also be thrown."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Sometimes, though, you might have a few related lambdas that share code and creating multiple maven modules is just\n"
"an overhead you don't want to do.  The `quarkus-amazon-lambda` extension allows you to bundle multiple lambdas in one\n"
"project and use configuration or an environment variable to pick the handler you want to deploy."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The generated project has three lambdas within it.  Two that implement the `RequestHandler<?, ?>` interface, and one that implements the `RequestStreamHandler` interface. One that is used and two that are unused.  If you open up\n"
"`src/main/resources/application.properties` you'll see this:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The `quarkus.lambda.handler` property tells Quarkus which lambda handler to deploy. This can be overridden\n"
"with an environment variable too."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If you look at the three generated handler classes in the project, you'll see that they are `@Named` differently."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The CDI name of the handler class must match the value specified within the `quarkus.lambda.handler` property."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Deploy to AWS Lambda Java Runtime"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"There are a few steps to get your lambda running on AWS.  The generated maven project contains a helpful script to\n"
"create, update, delete, and invoke your lambdas for pure Java and native deployments."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Build and Deploy"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Build the project:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "This will compile and package your code."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create an Execution Role"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"View the https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] for deploying\n"
"a lambda with AWS CLI.  Specifically, make sure you have created an `Execution Role`.  You will need to define\n"
"a `LAMBDA_ROLE_ARN` environment variable in your profile or console window,  Alternatively, you can edit\n"
"the `manage.sh` script that is generated by the build and put the role value directly there:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Extra Build Generated Files"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"After you run the build, there are a few extra files generated by the `quarkus-amazon-lambda` extension.  These files\n"
"are in the build directory:  `target/` for maven, `build/` for gradle."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`function.zip` - lambda deployment file"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`manage.sh` - wrapper around aws lambda cli calls"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`bootstrap-example.sh` - example bootstrap script for native deployments"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`sam.jvm.yaml` - (optional) for use with sam cli and local testing"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`sam.native.yaml` - (optional) for use with sam cli and native local testing"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create the function"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The `target/manage.sh` script is for managing your lambda using the AWS Lambda Java runtime.  This script is provided only for\n"
"your convenience. Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your lambdas."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`manage.sh` supports four operation:  `create`, `delete`, `update`, and `invoke`."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"To verify your setup, that you have the AWS CLI installed, executed aws configure for the AWS access keys,\n"
"and set up the `LAMBDA_ROLE_ARN` environment variable (as described above), please execute `manage.sh` without any parameters.\n"
"A usage statement will be printed to guide you accordingly."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If using Gradle, the path to the binaries in the `manage.sh` must be changed from `target` to `build`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To see the `usage` statement, and validate AWS configuration:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "You can `create` your function using the following command:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "or if you do not have `LAMBDA_ROLE_ARN` already defined in this shell:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Do not change the handler switch.  This must be hardcoded to `io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest`.  This\n"
"handler bootstraps Quarkus and wraps your actual handler so that injection can be performed."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If there are any problems creating the function, you must delete it with the `delete` function before re-running\n"
"the `create` command."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Commands may also be stacked:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Invoke the Lambda"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Use the `invoke` command to invoke your function."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The example lambda takes input passed in via the `--payload` switch which points to a json file\n"
"in the root directory of the project."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The lambda can also be invoked locally with the SAM CLI like this:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If you are working with your native image build, simply replace the template name with the native version:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Update the Lambda"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"You can update the Java code as you see fit.  Once you've rebuilt, you can redeploy your lambda by executing the\n"
"`update` command."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Deploy to AWS Lambda Custom (native) Runtime"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If you want a lower memory footprint and faster initialization times for your lambda, you can compile your Java\n"
"code to a native executable.  Just make sure to rebuild your project with the `-Dnative` switch."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For Linux hosts, execute:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing Quarkus to use a docker build as Amazon\n"
"Lambda requires linux binaries.  You can do this by passing this property to your build:\n"
"`-Dquarkus.native.container-build=true`. This requires you to have Docker installed locally, however."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Either of these commands will compile and create a native executable image.  It also generates a zip file `target/function.zip`.\n"
"This zip file contains your native executable image renamed to `bootstrap`.  This is a requirement of the AWS Lambda\n"
"Custom (Provided) Runtime."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The instructions here are exactly as above with one change:  you'll need to add `native` as the first parameter to the\n"
"`manage.sh` script:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"As above, commands can be stacked.  The only requirement is that `native` be the first parameter should you wish\n"
"to work with native image builds.  The script will take care of the rest of the details necessary to manage your native\n"
"image function deployments."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your lambdas."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"One thing to note about the create command for native is that the `aws lambda create-function`\n"
"call must set a specific environment variable:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Examine the POM and Gradle build"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-amazon-lambda` extension\n"
"as a dependency.  The extension automatically generates everything you might need for your lambda deployment."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"In previous versions of this extension, you had to set up your pom or gradle\n"
"to zip up your executable for native deployments, but this is not the case anymore."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Gradle build"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Similarly, for Gradle projects, you also just have to add the `quarkus-amazon-lambda` dependency.  The extension automatically generates everything you might need\n"
"for your lambda deployment."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Example Gradle dependencies:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Live Coding and Unit/Integration Testing"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"To mirror the AWS Lambda environment as closely as possible in a dev environment,\n"
"the Quarkus AWS Lambda extension boots up a mock AWS Lambda event server in Quarkus Dev and Test mode.\n"
"This mock event server simulates a true AWS Lambda environment."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"While running in Quarkus Dev Mode, you can feed events to it by doing an HTTP POST to `http://localhost:8080`.\n"
"The mock event server will receive the events and your lambda will be invoked.  You can perform live coding on your lambda\n"
"and changes will automatically be recompiled and available the next invocation you make.  Here's an example:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"For your unit tests, you can also invoke on the mock event server using any HTTP client you want.  Here's an example\n"
"using rest-assured.  Quarkus starts up a separate Mock Event server under port 8081.\n"
"The default port for Rest Assured is automatically set to 8081 by Quarkus, so you can invoke\n"
"on this endpoint."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The mock event server is also started for `@QuarkusIntegrationTest` tests so will work\n"
"with native binaries too.  All this provides similar functionality to the SAM CLI local testing, without the overhead of Docker."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Finally, if port 8080 or port 8081 is not available on your computer, you can modify the dev\n"
"and test mode ports with application.properties"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "A port value of zero will result in a randomly assigned port."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To turn off the mock event server:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Testing with the SAM CLI"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If you do not want to use the mock event server, you can test your lambdas with SAM CLI."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"The https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]\n"
"allows you to run your lambdas locally on your laptop in a simulated Lambda environment.  This requires\n"
"https://www.docker.com/products/docker-desktop[docker] to be installed.  This is an optional approach should you choose\n"
"to take advantage of it.  Otherwise, the Quarkus JUnit integration should be sufficient for most of your needs."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "A starter template has been generated for both JVM and native execution modes."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Run the following SAM CLI command to locally test your lambda function, passing the appropriate SAM `template`.\n"
"The `event` parameter takes any JSON file, in this case the sample `payload.json`."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If using Gradle, the path to the binaries in the YAML templates must be changed from `target` to `build`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The native image can also be locally tested using the `sam.native.yaml` template:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Modifying `function.zip`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"There are times when you may have to add some additions to the `function.zip` lambda deployment that is generated\n"
"by the build.  To do this, create a `zip.jvm` or `zip.native` directory within `src/main`.\n"
"Create `zip.jvm/` if you are doing a pure Java lambda.  `zip.native/` if you are doing a native deployment."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Any you files and directories you create under your zip directory will be included within `function.zip`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Custom `bootstrap` script"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"There are times you may want to set a specific system properties or other arguments when lambda invokes\n"
"your native quarkus lambda deployment.  If you include a `bootstrap` script file within\n"
"`zip.native`, the quarkus extension will automatically rename the executable to `runner` within\n"
"`function.zip` and set the unix mode of the `bootstrap` script to executable."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The native executable must be referenced as `runner` if you include a custom `bootstrap` script."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The extension generates an example script within `target/bootstrap-example.sh`."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Tracing with AWS XRay and GraalVM"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If you are building native images, and want to use https://aws.amazon.com/xray[AWS X-Ray Tracing] with your lambda\n"
"you will need to include `quarkus-amazon-lambda-xray` as a dependency in your pom.  The AWS X-Ray\n"
"library is not fully compatible with GraalVM, so we had to do some integration work to make this work."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "In addition, remember to enable the AWS X-Ray tracing parameter in `manage.sh`, in the `cmd_create()` function.  This can also be set in the AWS Management Console."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For the sam template files, add the following to the YAML function Properties."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"AWS X-Ray does add many classes to your distribution, do ensure you are using at least the 256MB AWS Lambda memory size.\n"
"This is explicitly set in `manage.sh` `cmd_create()`. Whilst the native image potentially can always use a lower memory setting, it would be recommended to keep the setting the same, especially to help compare performance."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Using HTTPS or SSL/TLS"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"If your code makes HTTPS calls (e.g. to a microservice, to an AWS service), you will need to add configuration to the native image,\n"
"as GraalVM will only include the dependencies when explicitly declared.  Quarkus, by default enables this functionality on extensions that implicitly require it.\n"
"For further information, please consult the xref:native-and-ssl.adoc[Quarkus SSL guide]"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Open src/main/resources/application.properties and add the following line to enable SSL in your native image."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Using the AWS Java SDK v2"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"Quarkus now has extensions for DynamoDB, S3, SNS and SQS (more coming).\n"
"Please check link:{amazon-services-guide}[those guides] on how to use the various AWS Services with Quarkus, as opposed to wiring manually like below."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"With minimal integration, it is possible to leverage the AWS Java SDK v2,\n"
"which can be used to invoke services such as SQS, SNS, S3 and DynamoDB."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"For native image, however, the URL Connection client must be preferred over the Apache HTTP Client\n"
"when using synchronous mode, due to issues in the GraalVM compilation (at present)."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Add `quarkus-jaxb` as a dependency in your Maven `pom.xml`, or Gradle `build.gradle` file."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"You must also force your AWS service client for SQS, SNS, S3 et al., to use the URL Connection client,\n"
"which connects to AWS services over HTTPS, hence the inclusion of the SSL enabled property, as described in the <<https>> section above."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For Maven, add the following to your `pom.xml`."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"if you see `java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty` or similar SSL error, due to the current status of GraalVM,\n"
"there is some additional work to bundle the `function.zip`, as below.  For more information, please see the xref:native-and-ssl.adoc[Quarkus Native SSL Guide]."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Additional requirements for client SSL"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "The native executable requires some additional steps to enable client SSL that S3 and other AWS libraries need."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "A custom `bootstrap` script"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`libsunec.so` must be added to `function.zip`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "`cacerts` must be added to `function.zip`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid ""
"To do this, first create a directory `src/main/zip.native/` with your build.  Next create a shell script file called `bootstrap`\n"
"within `src/main/zip.native/`, like below. An example is created automatically in your build folder (target or build), called `bootstrap-example.sh`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Additional set `-Djavax.net.ssl.trustStorePassword=changeit` if your `cacerts` file is password protected."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Next you must copy some files from your GraalVM distribution into `src/main/zip.native/`."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "GraalVM versions can have different paths for these files whether you are using the Java 8 or 11 version. Adjust accordingly."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Now when you run the native build all these files will be included within `function.zip`"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "If you are using a Docker image to build, then you must extract these files from this image."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To extract the required ssl, you must start up a Docker container in the background, and attach to that container to copy the artifacts."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "First, let's start the GraalVM container, noting the container id output."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "First, `libsunec.so`, the C library used for the SSL implementation:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Second, `cacerts`, the certificate store.  You may need to periodically obtain an updated copy, also."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Your final archive will look like this:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Deploy to AWS Lambda using a Container Image"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "AWS Lambda supports creating your lambdas by referencing https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html[container images] rather than uploading ZIP files. This can have some benefits such as bypassing the size limit of the uploaded ZIP files. You can define lambda functions for both native builds and regular JVM builds."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "JVM container image"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "For a regular JVM distribution you need to base your image off the official AWS Java base images. Below is an example of a Dockerfile that would create a container image from your Quarkus Lambda project. It assumes that `mvn package` has been executed and binaries are available in the `target/` directory:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Native executable container image"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To create a lambda container image that uses the native executable we'll need to do things a little differently. In this case, we won't need to use the `java:11` base image from AWS, but instead we'll use a special image that assumes that the runtime environment for the lambda is provided. The example below creates such a container. It assumes that a Maven build has been executed (such as `mvn package -Dnative=true`) and has generated the native binary into the `target/` directory. The binary needs to be named `bootstrap` and be placed in `/var/runtime/`:"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Deploying a container image lambda"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Below, you can see how the container images created above can be built and deployed to AWS using the `docker` and `aws` command line tools. These instructions work for both native and jvm container images and assume that the `aws` command line tool has been logged in."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Build the Docker image"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create an ECR repository in the users AWS account"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Tag the image using your ECR registry information"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Log Docker into your ECR registry and push the Docker image to it"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create the AWS lambda function with the AWS CLI tool"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Make sure you reference the image you uploaded previously (assumes that a role exists that can be used to run the lambda). Please note that it is not unlikely that for the JVM lambda function, the default memory limit of `128Mb` will not be enough to run the function. In that case, you can increase the memory limit when creating the function by providing the `--memory-size 256` parameter to your `aws lambda create-function` command. You can also adjust the function in the AWS console after you've created it."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Now you can use the AWS console to view and test your new lambda function."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Amazon Alexa Integration"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To use Alexa with Quarkus native, you need to use the https://github.com/quarkiverse/quarkus-amazon-alexa[Quarkus Amazon Alexa extension hosted at the Quarkiverse Hub]."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Define the latest version of the extension in your POM file."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "Create your Alexa handler, as normal, by sub-classing the abstract `com.amazon.ask.SkillStreamHandler`, and add your request handler implementation."
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "That's all there is to it!"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "SnapStart"
msgstr ""

#: _versions/3.27/guides/aws-lambda.adoc
msgid "To optimize your application for Lambda SnapStart, check xref:aws-lambda-snapstart.adoc[the SnapStart Configuration Documentation]."
msgstr ""
