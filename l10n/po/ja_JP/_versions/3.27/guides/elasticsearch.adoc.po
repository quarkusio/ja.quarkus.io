msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Connecting to an Elasticsearch cluster"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Elasticsearch is a well known full text search engine and NoSQL datastore."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "In this guide, we will see how you can get your REST services to interact with an Elasticsearch cluster."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Quarkus provides two ways of accessing Elasticsearch:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The lower level REST Client"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The Elasticsearch Java client"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"A third Quarkus extension for the \"high level REST Client\" used to exist,\n"
"but was removed as this client has been deprecated by Elastic and has some licensing issues."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Elasticsearch installed or Docker installed"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "All the information between the browser and the server is formatted as JSON."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The elements are stored in Elasticsearch."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Creating the Maven project"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "This command generates a Maven structure importing the Quarkus REST (formerly RESTEasy Reactive), Jackson, and Elasticsearch low level REST client extensions."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"The Elasticsearch low level REST client comes with the `quarkus-elasticsearch-rest-client` extension\n"
"that has been added to your build file."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "If you want to use the Elasticsearch Java client instead, replace the `quarkus-elasticsearch-rest-client` extension by the `quarkus-elasticsearch-java-client` extension."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"We use the `rest-jackson` extension here and not the JSON-B variant because we will use the Vert.x `JsonObject` helper\n"
"to serialize/deserialize our objects to/from Elasticsearch and it uses Jackson under the hood."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "To add the extensions to an existing project, follow the instructions below."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "For the Elasticsearch low level REST client, add the following dependency to your build file:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "For the Elasticsearch Java client, add the following dependency to your build file:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Creating your first JSON REST service"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "In this example, we will create an application to manage a list of fruits."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "First, let's create the `Fruit` bean as follows:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"Now create a `org.acme.elasticsearch.FruitService` that will be the business layer of our application\n"
"and will store/load the fruits from the Elasticsearch instance.\n"
"Here we use the low level REST client, if you want to use the Java API client instead,\n"
"follow the instructions in the <<using-the-elasticsearch-java-client,Using the Elasticsearch Java Client>> paragraph instead."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We inject an Elasticsearch low level `RestClient` into our service."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We create an Elasticsearch request."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We use Vert.x `JsonObject` to serialize the object before sending it to Elasticsearch, you can use whatever you want to serialize your objects to JSON."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We send the request (indexing request here) to Elasticsearch."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "As we `index` collection of objects we should use `index`, `create` or `update` action."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We use `toNdJsonString(entityList)` call to produce output like below"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Pass the content type that is expected by the search backend for bulk requests."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The bulk API's delete operation JSON already contains all the required information; hence, there is no request body following this operation in the Bulk API request body."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "In order to deserialize the object from Elasticsearch, we again use Vert.x JsonObject."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Now, create the `org.acme.elasticsearch.FruitResource` class as follows:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The implementation is pretty straightforward and you just need to define your endpoints using the Jakarta REST annotations and use the `FruitService` to list/add new fruits."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Configuring Elasticsearch"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "The main property to configure is the URL to connect to the Elasticsearch cluster."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "For a typical clustered Elasticsearch service, a sample configuration would look like the following:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "In our case, we are using a single instance running on localhost:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "If you need a more advanced configuration, you can find the comprehensive list of supported configuration properties at the end of this guide."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Dev Services"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"Quarkus supports a feature called Dev Services that allows you to start various containers without any config.\n"
"In the case of Elasticsearch, this support extends to the default Elasticsearch connection.\n"
"What that means practically is that, if you have not configured `quarkus.elasticsearch.hosts`, Quarkus will automatically\n"
"start an Elasticsearch container when running tests or dev mode, and automatically configure the connection."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"When running the production version of the application, the Elasticsearch connection needs to be configured as usual,\n"
"so if you want to include a production database config in your `application.properties` and continue to use Dev Services\n"
"we recommend that you use the `%prod.` profile to define your Elasticsearch settings."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "For more information you can read the xref:elasticsearch-dev-services.adoc[Dev Services for Elasticsearch guide]."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Programmatically Configuring Elasticsearch"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "On top of the parametric configuration, you can also programmatically apply additional configuration to the client by implementing a `RestClientBuilder.HttpClientConfigCallback` and annotating it with `ElasticsearchClientConfig`. You may provide multiple implementations and configuration provided by each implementation will be applied in a randomly ordered cascading manner."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "For example, when accessing an Elasticsearch cluster that is set up for TLS on the HTTP layer, the client needs to trust the certificate that Elasticsearch is using. The following is an example of setting up the client to trust the CA that has signed the certificate that Elasticsearch is using, when that CA certificate is available in a PKCS#12 keystore."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "See https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/current/_encrypted_communication.html[Elasticsearch documentation] for more details on this particular example."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"Classes marked with `@ElasticsearchClientConfig` are made application scoped CDI beans by default.\n"
"You can override the scope at the class level if you prefer a different scope."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Running an Elasticsearch cluster"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"As by default, the Elasticsearch client is configured to access a local Elasticsearch cluster on port 9200 (the default Elasticsearch port),\n"
"if you have a local running instance on this port, there is nothing more to do before being able to test it!"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "If you want to use Docker to run an Elasticsearch instance, you can use the following command to launch one:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Running the application"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Let's start our application in dev mode:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "You can add new fruits to the list via the following curl command:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "And search for fruits by name or color via the following curl command:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Using the Elasticsearch Java Client"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Here is a version of the `FruitService` using the Elasticsearch Java Client instead of the low level one:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We inject an `ElasticsearchClient` inside the service."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We create an Elasticsearch index request using a builder."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We directly pass the object to the request as the Java API client has a serialization layer."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "We send the request to Elasticsearch."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Hibernate Search Elasticsearch"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Quarkus supports Hibernate Search with Elasticsearch via the `quarkus-hibernate-search-orm-elasticsearch` extension."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Hibernate Search Elasticsearch allows to synchronize your Jakarta Persistence entities to an Elasticsearch cluster and offers a way to query your Elasticsearch cluster using the Hibernate Search API."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "If you are interested in it, please consult the xref:hibernate-search-orm-elasticsearch.adoc[Hibernate Search with Elasticsearch guide]."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Cluster Health Check"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"If you are using the `quarkus-smallrye-health` extension, both extensions will automatically add a readiness health check\n"
"to validate the health of the cluster."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid ""
"So when you access the `/q/health/ready` endpoint of your application, you will have information about the cluster status.\n"
"It uses the cluster health endpoint, the check will be down if the status of the cluster is **red**, or the cluster is not available."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "This behavior can be disabled by setting the `quarkus.elasticsearch.health.enabled` property to `false` in your `application.properties`."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Building a native executable"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "You can use both clients in a native executable."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "You can build a native executable with the usual command:"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Running it is as simple as executing `./target/elasticsearch-low-level-client-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Conclusion"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Accessing an Elasticsearch cluster from the low level REST client or the Elasticsearch Java client is easy with Quarkus as it provides easy configuration, CDI integration and native support for it."
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/elasticsearch.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
