msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Using JWT RBAC"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"This guide explains how to integrate link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] into your Quarkus application to implement link:https://tools.ietf.org/html/rfc7519[JSON Web Token (JWT)] security in compliance with the MicroProfile JWT specification.\n"
"Youâ€™ll learn how to verify JWTs, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`, and secure Quarkus HTTP endpoints using bearer token authorization and link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The Quarkus OpenID Connect (`quarkus-oidc`) extension also supports bearer token authorization and uses `smallrye-jwt` to represent bearer tokens as `JsonWebToken`.\n"
"For details, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If your Quarkus application needs to authenticate users using the OIDC Authorization Code Flow, you must use the OpenID Connect extension.\n"
"For more information, refer to the xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow Mechanism for Protecting Web Applications]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Quickstart"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"We recommend following the instructions in the upcoming sections to create the application step by step.\n"
"If you prefer, you can skip ahead to the completed example."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "To access the example, either clone the Git repository or download an archive:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Clone the repository: `git clone {quickstarts-clone-url}`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Download the {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The completed solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Creating the Maven project"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "First, create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command adds the following dependencies to your build file:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Examine the Jakarta REST resource"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "REST endpoint V1"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` interface is injected, providing access to claims associated with the current authenticated token. This interface extends `java.security.Principal`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@PermitAll` is a standard Jakarta security annotation. It indicates that the given endpoint is accessible by all callers, whether authenticated or not."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The Jakarta REST `SecurityContext` is injected to inspect the security state of the request. The `getResponseString()` function generates the response."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Checks if the call is insecure by checking if the request user/caller `Principal` against null."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensures the names in the `Principal` and `JsonWebToken` match because the `JsonWebToken` represents the current `Principal`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Retrieves the name of the `Principal`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Builds a response containing the caller's name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in dev mode"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now, you are ready to run the application in dev mode by using one of the following commands:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, you should see output similar to the following example:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`quarkus:dev` output"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now that the REST endpoint is running, you can access it by using a command line tool such as curl:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/permit-all`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command returns the following response:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You have not provided any JWT in our request, so you would not expect the endpoint to see any security state, and the response is consistent with that:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`username` is anonymous."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`isHttps` is `false` because `https` is not used."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`authScheme` is `null`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`hasJWT` is `false`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"So now let's actually secure something.\n"
"Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "REST endpoint V2"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` is injected to access claims from the JWT."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This endpoint is exposed at `/secured/roles-allowed`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@RolesAllowed` annotation restricts access to users with either the \"User\" or \"Admin\" role."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The response is constructed similarly to the `hello` method, with the addition of the `birthdate` claim retrieved directly from the injected `JsonWebToken`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Your output should be as follows:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/roles-allowed`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Excellent.\n"
"You did not provide a JWT in the request, so access to the endpoint was correctly denied.\n"
"Instead, you received an HTTP 401 Unauthorized error."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "To access the endpoint, you must obtain and include a valid JWT in your request. This involves two steps:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuring the {extension-name} extension with the necessary information to validate a JWT."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating a JWT with the appropriate claims to match the configuration."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuring the {extension-name} extension security information"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Application properties for `TokenSecuredResource`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Specifies the location of the public key file `publicKey.pem` on the classpath.\n"
"See <<add-public-key>> for adding this key."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Defines the expected issuer as `https://example.com/issuer`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensures the `publicKey.pem` file is included as a resource in the native executable."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Adding a public key"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The link:https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires JWTs signed with the RSA-256 signature algorithm.\n"
"This in turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "RSA public key PEM content"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating a JWT"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Often, one obtains a JWT from an identity manager such as link:https://www.keycloak.org/[Keycloak].\n"
"But for this quickstart, you generate our own by using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Take the code from the following listing and place it into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`GenerateToken` main driver class"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Sets the `iss` (issuer) claim in the JWT.\n"
"This value must match the server-side `mp.jwt.verify.issuer` configuration for the token to be considered valid."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Specifies the `upn` (User Principal Name) claim, which the {mp-jwt} specification defines as the preferred claim for identifying the `Principal` in container security APIs."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Defines the `groups` claim, which provides the group memberships and top-level roles assigned to the JWT bearer."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Adds a `birthdate` claim.\n"
"Because this can be considered sensitive information, consider encrypting claims as described in xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Note that for this code to work, you need the content of the RSA private key corresponding to the public key you have in the `TokenSecuredResource` application.\n"
"Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "RSA private key PEM content"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Later, you configure the `smallrye.jwt.sign.key.location` property to specify the location of the private signing key."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating keys with OpenSSL"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "It is also possible to generate a public and private key pair by using the OpenSSL command line tool."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`openssl` commands to generate keys"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "An additional step is required to generate and convert the private key to the PKCS#8 format, commonly used for secure key storage and transport."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`openssl` commands to perform the conversion"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can use the generated key pair instead of those used in this quickstart."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensure the <<run-application, application is running>> before generating the JSON Web Token (JWT) for the `TokenSecuredResource` endpoint."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Next, use the following command to generate the JWT:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Sample JWT generation output"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The JWT string is a Base64 URL-encoded string consisting of three parts, separated by `.` characters:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The header, which contains metadata about the token, such as the signing algorithm."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The payload, also called \"claims\", which includes the token's claims or data."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The signature, which verifies the token's integrity."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Finally, secured access to `/secured/roles-allowed`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Now, let's use this to make a secured request to the `/secured/roles-allowed` endpoint.\n"
"Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/roles-allowed` with JWT"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Make sure to use the generated token as the HTTP Authorization Bearer scheme value."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Success! You now have the following:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "A non-anonymous caller name: `jdoe@quarkus.io`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "An authentication scheme: `Bearer`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "A non-null `JsonWebToken`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `birthdate` claim value"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Using the `JsonWebToken` and claim injection"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Now that you can generate a JWT to access our secured REST endpoints, let's see what more you can do with the `JsonWebToken` interface and the JWT claims.\n"
"The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal` interface, and is the object type returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call you used previously.\n"
"This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification and arbitrary claims that might exist in the JWT."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint `/secured/roles-allowed-admin` which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@RequestScoped` scope is required to enable injection of the `birthdate` claim as a `String`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` is injected here, providing access to all claims and JWT-related information."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `birthdate` claim is injected as a `String`. This highlights why the `@RequestScoped` scope is mandatory."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The injected `birthdate` claim is directly used to construct the response."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in JVM mode"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can run the application as a standard Java application."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Compile the application:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "CLI"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Maven"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Gradle"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in native mode"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"You can compile this same demo into native mode without any modifications.\n"
"This implies that you no longer need to install a JVM on your production environment.\n"
"The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Build your application again by enabling the `native` profile:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the following binary directly:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Explore the solution"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] repository contains all the versions covered in this quickstart guide, along with additional endpoints that demonstrate subresources using injected `JsonWebToken` tokens and their claims via CDI APIs."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "We encourage you to explore the `security-jwt-quickstart` directory and review the quickstart solutions to learn more about the features of the {extension-name} extension."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Reference guide"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Supported injection scopes"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims, but setting `@RequestScoped` is unnecessary in this case."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Supported public key formats"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Public keys can be formatted in any of the following formats, specified in order of precedence:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS)"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Dealing with verification keys"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to verify the token signature by using the asymmetric RSA or Elliptic Curve (EC) key, use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`); for example, set it to `ES256` when working with the EC keys."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to verify the token signature by using the symmetric secret key, then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"This secret key JWK must also be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Parse and verify `JsonWebToken` with `JWTParser`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"You can also use it to customize how the token is verified or decrypted.\n"
"For example, one can supply a local `SecretKey`:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please also see the <<add-smallrye-jwt,How to Add SmallRye JWT directly>> section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Token decryption"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If your application needs to accept tokens with encrypted claims or encrypted inner-signed claims, simply set the `smallrye.jwt.decrypt.key.location` property to point to the decryption key."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If this is the only key property set, the incoming token is expected to contain only encrypted claims.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set, then the incoming token is expected to contain the encrypted inner-signed token."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens quickly."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Custom factories"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is the default implementation used to parse and verify JWT tokens, converting them into `JsonWebToken` principals. This factory relies on the `MP JWT` and `smallrye-jwt` properties, as described in the `Configuration` section, to validate and customize JWT tokens."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to implement a custom factoryâ€”such as to skip re-verifying tokens that have already been validated by a firewallâ€”you can do so in one of the following ways:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use the `ServiceLoader` mechanism by creating a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Provide an `Alternative` CDI bean implementation, like the example below:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Blocking calls"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`quarkus-smallrye-jwt` extension uses link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] library which is currently not reactive."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "What it means from the perspective of `quarkus-smallrye-jwt`, which operates as part of the reactive Quarkus security architecture, is that an IO thread entering the link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] verification or decryption code might block in one of the following cases:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The default key resolver refreshes the `JsonWebKey` set containing the keys, which involves a remote call to the OIDC endpoint."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The custom key resolver, such as `AWS Application Load Balancer` (`ALB`) key resolver, resolves the keys against the AWS ALB key endpoint by using the current token's key identifier header value."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "In such cases, if connections are slowâ€”for instance, taking more than 3 seconds to respond to the key endpointâ€”the current event loop thread is likely to become blocked."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "To prevent it from blocking, set `quarkus.smallrye-jwt.blocking-authentication=true`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Token propagation"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please see the xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Testing"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Automatic key generation"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"This extension generates an asymmetric RSA 2024 bit signing key pair in the dev and test modes if the verification key has not been configured.\n"
"Once the key pair is generated, the public RSA key is used to configure the `mp.jwt.verify.publickey` property, and the RSA private key is available to tests to sign tokens using `smallrye-jwt-build`, for example:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "See xref:security-jwt-build.adoc#sign-claims[signing claims guide] for mode details."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can disable automatic key generation by setting at least one of the following properties:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.decrypt.key.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.encrypt.key.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.sign.key.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.sign.key`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "In *dev* mode, if you do not explicitly configure the issuer using the `mp.jwt.verify.issuer` property, the {extension-name} extension will set a default issuer of `https://quarkus.io/issuer`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you prefer to configure the issuer programmatically, set `mp.jwt.verify.issuer` to `NONE` to prevent the default value from being applied."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Wiremock"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Keycloak"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If your Quarkus application runs in a Docker container, it might share a network interface with a Keycloak container started by DevServices for Keycloak.\n"
"In this scenario, the Quarkus application and Keycloak communicate through an internal shared Docker network."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "In such cases, use the following configuration instead:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Local public key"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`TestSecurity` annotation"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, write test code such as this:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "where the `ProtectedResource` class might look like this:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Note that the `@TestSecurity` annotation must always be used, and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "How to check the errors in the logs"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Proactive authentication"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note that you can't access the injected `JsonWebToken` through public methods if token verification has not been done."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "How to add SmallRye JWT directly"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "To <<jwt-parser,parse and verify JsonWebToken with JWTParser>>, use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus AWS Lambda`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Quarkus configuration"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "MicroProfile JWT configuration"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Property Name"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Default"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Description"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "none"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `mp.jwt.verify.publickey` config property allows the public key text to be supplied as a string. The public key is parsed from the supplied string in the order defined in the <<supported-public-key-formats>> section."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property allows for a specified external or internal location of the public key. The value can be a relative path or a URL. If the value points to an HTTPS-based JWK set, then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`. See xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey.algorithm`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RS256`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "List of signature algorithms. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property allows for a specified external or internal location of the Private Decryption Key."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.decrypt.key.algorithm`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RSA-OAEP`,`RSA-OAEP-256`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "List of decryption algorithms. Set it to `RSA-OAEP-256` to support RSA-OAEP with SHA-256 only."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.issuer`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server accepts as valid."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.audiences`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of audiences a token `aud` claim might contain."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.clock.skew`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`60`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.token.age`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`none`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.token.header`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`Authorization`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property if another header, such as `Cookie`, is used to pass the token."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.token.cookie`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Name of the cookie containing a token. This property is effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Additional SmallRye JWT configuration"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "SmallRye JWT provides more properties that can be used to customize the token processing:"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.secretkey`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Secret key supplied as a string."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "NONE"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Location of the verification key, which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' is ignored if this property is set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.algorithm`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Signature algorithm. This property should only be used to set a symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key-format`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`ANY`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key-provider`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`DEFAULT`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "By default, PEM, JWK, or JWK key sets can be read from the local file system or fetched from URIs as required by MicroProfile JWT specification. Set this property to `AWS_ALB` to support an AWS Application Load Balancer verification key resolution."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.relax-key-validation`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "false"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Relax the validation of the verification keys; setting this property to `true` allows public RSA keys with a length of less than 2048 bits."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.certificate-thumbprint`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If this property is enabled, a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats. JWK keys must have an 'x5c' (Base64-encoded X509Certificate) property set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.header`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property if another header, such as `Cookie`, is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.key-cache-size`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`100`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key cache size. Use this property and `smallrye.jwt.key-cache-time-to-live` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.key-cache-time-to-live`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`10`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key cache entry time-to-live in minutes. Use this property and `smallrye.jwt.key-cache-size` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.cookie`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Name of the cookie containing a token. This property is effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use `mp.jwt.token.cookie`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.always-check-authorization`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to `true` for the `Authorization` header to be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.schemes`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`Bearer`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list containing alternative single or multiple schemes, such as `DPoP`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.kid`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key identifier. The verification JWK key and every JWT token must have a matching `kid` header if it is set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.time-to-live`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "The maximum number of seconds a JWT can be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.require.named-principal`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`true`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "If an application relies on `java.security.Principal` returning a name, then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property results in SmallRye JWT throwing an exception if none of these claims is available for the application code to deal with a non-null `Principal` name reliably."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.path.sub`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to the claim containing the subject name. It starts from the top-level JSON object and can contain multiple segments where each segment only represents a JSON object name, for example, `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.claims.sub`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively, this property can be used to customize the `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.path.groups`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to the claim containing the groups. It starts from the top-level JSON object and can contain multiple segments where each segment represents a JSON object name only, for example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.groups-separator`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "space"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Separator for splitting a string which might contain multiple group values. It is only used if the `smallrye.jwt.path.groups` property points to a custom claim with a string value. The default value is a single space because a standard OAuth2 `scope` claim might contain a space-separated sequence."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.claims.groups`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.jwks.refresh-interval`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "60"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "JWK cache refresh interval in minutes. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.jwks.forced-refresh-interval`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "30"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Forced JWK cache refresh interval in minutes, which is used to restrict the frequency of the forced refresh attempts that might happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.expiration.grace`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "0"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Expiration grace in seconds. By default, an expired token is still accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.aud`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of audiences a token `aud` claim might contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.required.claims`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of the claims a token must contain."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.key.location`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property to specify the external or internal location of Private Decryption Key. This property is deprecated - use `mp.jwt.decrypt.key.location`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.algorithm`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RSA_OAEP`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption algorithm."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.key`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption key supplied as a string."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.decryption.kid`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.certificate.path`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to TLS trusted certificate which might need to be configured if the keys have to be fetched over `HTTPS`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.trust-all`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.hosts`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.http.proxy.host`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "HTTP proxy host."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.http.proxy.port`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "80"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "HTTP proxy port."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.type`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`JKS`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set, the file name is checked to determine the keystore type before defaulting to `JKS`."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.provider`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.password`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location`, this property must be set."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.verify.key.alias`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property has to be set to identify a public verification key which is extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.decrypt.key.alias`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.decrypt.key.password`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be set if a private decryption key's password in `KeyStore` is different from `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.resolve-remote-keys-at-startup`"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to true to resolve the remote keys at the application startup."
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr ""

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
