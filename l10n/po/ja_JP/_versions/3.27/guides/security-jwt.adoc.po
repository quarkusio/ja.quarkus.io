msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Using JWT RBAC"
msgstr "JWT RBAC の使用"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"This guide explains how to integrate link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] into your Quarkus application to implement link:https://tools.ietf.org/html/rfc7519[JSON Web Token (JWT)] security in compliance with the MicroProfile JWT specification.\n"
"You’ll learn how to verify JWTs, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`, and secure Quarkus HTTP endpoints using bearer token authorization and link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr ""
"このガイドでは、Quarkus アプリケーションに link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] を統合し、MicroProfile JWT 仕様に準拠した link:https://tools.ietf.org/html/rfc7519[JSON Web Token (JWT)] セキュリティーを実装する方法を説明します。\n"
"\n"
"JWT の検証方法、MicroProfile JWT の `org.eclipse.microprofile.jwt.JsonWebToken` としての表現、およびベアラートークン認証と link:https://en.wikipedia.org/wiki/Role-based_access_control[ロールベースアクセス制御 (RBAC)] を使用して Quarkus の HTTP エンドポイントを保護する方法を学びます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The Quarkus OpenID Connect (`quarkus-oidc`) extension also supports bearer token authorization and uses `smallrye-jwt` to represent bearer tokens as `JsonWebToken`.\n"
"For details, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr ""
"Quarkus の OpenID Connect (`quarkus-oidc`) エクステンションもベアラートークン認証をサポートしており、 `smallrye-jwt` を使用してベアラートークンを `JsonWebToken` として表現します。\n"
"詳細については、xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラートークン認証] ガイドを参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If your Quarkus application needs to authenticate users using the OIDC Authorization Code Flow, you must use the OpenID Connect extension.\n"
"For more information, refer to the xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow Mechanism for Protecting Web Applications]."
msgstr ""
"Quarkus アプリケーションで OIDC 認可コードフローを使用してユーザーを認証する必要がある場合は、OpenID Connect エクステンションを使用する必要があります。\n"
"詳細については、xref:security-oidc-code-flow-authentication.adoc[Web アプリケーションを保護するための OIDC コードフローメカニズム] を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Quickstart"
msgstr "クイックスタート"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"We recommend following the instructions in the upcoming sections to create the application step by step.\n"
"If you prefer, you can skip ahead to the completed example."
msgstr ""
"アプリケーションを段階的に作成するには、次のセクションの指示に従うことを推奨します。\n"
"必要に応じて、完成した例に進むこともできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "To access the example, either clone the Git repository or download an archive:"
msgstr "例を利用するには、Git リポジトリーをクローンするか、アーカイブをダウンロードします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Clone the repository: `git clone {quickstarts-clone-url}`."
msgstr "リポジトリーをクローンします (`git clone{quickstarts-clone-url}`)。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Download the {quickstarts-archive-url}[archive]."
msgstr "{quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The completed solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "ソリューションは `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリー] にあります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/security-jwt.adoc
msgid "First, create a new project with the following command:"
msgstr "まず、以下のコマンドで新規プロジェクトを作成します:"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、{mp-jwt} サポートを含む `smallrye-jwt` エクステンションをインポートします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `smallrye-jwt` エクステンションを追加することができます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command adds the following dependencies to your build file:"
msgstr "このコマンドは、ビルドファイルに以下の依存関係を追加します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/security-jwt.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "RESTエンドポイントを `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` に以下の内容で作成します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "REST endpoint V1"
msgstr "REST エンドポイント V1"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` interface is injected, providing access to claims associated with the current authenticated token. This interface extends `java.security.Principal`."
msgstr "`JsonWebToken` インターフェイスが挿入され、現在の認証済みトークンに関連付けられたクレームにアクセスできるようになります。このインターフェイスは `java.security.Principal` を継承します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@PermitAll` is a standard Jakarta security annotation. It indicates that the given endpoint is accessible by all callers, whether authenticated or not."
msgstr "`@PermitAll` は標準の Jakarta セキュリティーアノテーションです。これは、認証されているかどうかに関係なく、指定されたエンドポイントがすべての呼び出し元からアクセスできることを示します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The Jakarta REST `SecurityContext` is injected to inspect the security state of the request. The `getResponseString()` function generates the response."
msgstr "Jakarta REST `SecurityContext` は、リクエストのセキュリティー状態を検査するために挿入されます。 `getResponseString()` 関数はレスポンスを生成します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Checks if the call is insecure by checking if the request user/caller `Principal` against null."
msgstr "リクエストのユーザー/呼び出し元の `Principal` を null と照合して、呼び出しが安全でないかどうかを確認します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensures the names in the `Principal` and `JsonWebToken` match because the `JsonWebToken` represents the current `Principal`."
msgstr "`JsonWebToken` は現在の `Principal` を表すため、 `Principal` と `JsonWebToken` の名前が一致することを確認します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Retrieves the name of the `Principal`."
msgstr "`Principal` の名前を取得します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Builds a response containing the caller's name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "呼び出し元の名前、リクエスト `SecurityContext` の `isSecure()` および `getAuthenticationScheme()` の状態、および null 以外の `JsonWebToken` が挿入されたかどうかを含む応答を構築します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in dev mode"
msgstr "アプリケーションを開発モードで実行する"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now, you are ready to run the application in dev mode by using one of the following commands:"
msgstr "これで、次のいずれかのコマンドを使用して、アプリケーションを開発モードで実行する準備が整いました。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, you should see output similar to the following example:"
msgstr "次に、以下の例のような出力が表示されるはずです。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`quarkus:dev` output"
msgstr "`quarkus:dev` 出力"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now that the REST endpoint is running, you can access it by using a command line tool such as curl:"
msgstr "REST エンドポイントが実行されているので、curl などのコマンドラインツールを使用してアクセスできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/permit-all`"
msgstr "`/secured/permit-all` の `curl` コマンド"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This command returns the following response:"
msgstr "このコマンドは次の応答を返します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You have not provided any JWT in our request, so you would not expect the endpoint to see any security state, and the response is consistent with that:"
msgstr "リクエストで JWT が提供されていないため、エンドポイントでセキュリティー状態が確認されることはなく、応答もそれと一致しています。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`username` is anonymous."
msgstr "`username` は匿名です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`isHttps` is `false` because `https` is not used."
msgstr "`https` が使用されていないため、 `isHttps` は `false` です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`authScheme` is `null`."
msgstr "`authScheme` はnullです"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`hasJWT` is `false`."
msgstr "`hasJWT` は `false` です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "Ctrl-Cを使用してQuarkusサーバーを停止します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"So now let's actually secure something.\n"
"Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "では実際に何かを保護してみましょう。下記の新しいエンドポイントメソッド `helloRolesAllowed` を見てみましょう。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "REST endpoint V2"
msgstr "REST エンドポイント V2"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` is injected to access claims from the JWT."
msgstr "JWT からのクレームにアクセスするために、 `JsonWebToken` が挿入されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This endpoint is exposed at `/secured/roles-allowed`."
msgstr "このエンドポイントは `/secured/roles-allowed` で公開されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@RolesAllowed` annotation restricts access to users with either the \"User\" or \"Admin\" role."
msgstr "`@RolesAllowed` アノテーションは、ユーザーまたは管理者のロールを持つユーザーへのアクセスを制限します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The response is constructed similarly to the `hello` method, with the addition of the `birthdate` claim retrieved directly from the injected `JsonWebToken`."
msgstr "レスポンスは `hello` メソッドと同様に構築されますが、挿入された `JsonWebToken` から直接取得された `birthdate` クレームが追加されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "`TokenSecuredResource` にこれを追加した後、 `./mvnw quarkus:dev` コマンドを再実行し、 `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` を実行して新しいエンドポイントへのアクセスを試みます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Your output should be as follows:"
msgstr "出力は以下のようになるはずです:"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/roles-allowed`"
msgstr "/secured/roles-allowed の curl コマンド"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Excellent.\n"
"You did not provide a JWT in the request, so access to the endpoint was correctly denied.\n"
"Instead, you received an HTTP 401 Unauthorized error."
msgstr ""
"リクエストに JWT が指定されなかったため、エンドポイントへのアクセスが正しく拒否されました。\n"
"代わりに、HTTP 401 Unauthorized エラーが表示されました。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "To access the endpoint, you must obtain and include a valid JWT in your request. This involves two steps:"
msgstr "エンドポイントにアクセスするには、有効な JWT を取得してリクエストに含める必要があります。これには次の 2 つの手順が含まれます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuring the {extension-name} extension with the necessary information to validate a JWT."
msgstr "JWT を検証するために必要な情報を含む {extension-name} エクステンションを設定する。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating a JWT with the appropriate claims to match the configuration."
msgstr "設定に一致する適切なクレームを含む JWT を生成する。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuring the {extension-name} extension security information"
msgstr "{extension-name} エクステンションのセキュリティー情報を設定する。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "次の内容で `security-jwt-quickstart/src/main/resources/application.properties` を作成します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Application properties for `TokenSecuredResource`"
msgstr "`TokenSecuredResource` のアプリケーションプロパティー"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Specifies the location of the public key file `publicKey.pem` on the classpath.\n"
"See <<add-public-key>> for adding this key."
msgstr ""
"クラスパス上の公開鍵ファイル `publicKey.pem` の場所を指定します。\n"
"このキーの追加方法は <<add-public-key>> を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Defines the expected issuer as `https://example.com/issuer`."
msgstr "発行者を `https://example.com/issuer` として定義します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensures the `publicKey.pem` file is included as a resource in the native executable."
msgstr "`publicKey.pem` ファイルがネイティブ実行可能ファイルのリソースとして含まれていることを確認します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Adding a public key"
msgstr "公開鍵の追加"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The link:https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires JWTs signed with the RSA-256 signature algorithm.\n"
"This in turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr ""
"link:https://tools.ietf.org/html/rfc7519[JWT 仕様] では、使用できる JWT のさまざまなセキュリティーレベルが定義されています。\n"
"{mp-jwt} 仕様では、RSA-256 署名アルゴリズムで署名された JWT が必要です。\n"
"これには、RSA 公開鍵ペアが必要になります。\n"
"REST エンドポイントサーバー側では、リクエストとともに送信された JWT を検証するために使用する RSA 公開鍵の場所を設定する必要があります。\n"
"以前に設定された `mp.jwt.verify.publickey.location=publicKey.pem` 設定では、公開鍵がクラスパス上で `publicKey.pem` として使用可能であることが想定されています。\n"
"これを実現するには、次のコンテンツを `security-jwt-quickstart/src/main/resources/publicKey.pem` ファイルにコピーします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "RSA public key PEM content"
msgstr "RSA 公開鍵 PEM コンテンツ"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating a JWT"
msgstr "JWT の生成"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Often, one obtains a JWT from an identity manager such as link:https://www.keycloak.org/[Keycloak].\n"
"But for this quickstart, you generate our own by using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr ""
"多くの場合、JWT は link:https://www.keycloak.org/[Keycloak] などのアイデンティティーマネージャーから取得されます。\n"
"ただし、このクイックスタートでは、 `smallrye-jwt` によって提供される JWT 生成 API を使用して独自の JWT を生成します。\n"
"詳細は、xref:security-jwt-build.adoc[SmallRye JWT を使用して JWT トークンを生成する] を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Take the code from the following listing and place it into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "次のリストからコードを取得し、 `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` に配置します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`GenerateToken` main driver class"
msgstr "`GenerateToken` メインドライバークラス"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Sets the `iss` (issuer) claim in the JWT.\n"
"This value must match the server-side `mp.jwt.verify.issuer` configuration for the token to be considered valid."
msgstr ""
"JWT に `iss` (発行者) クレームを設定します。\n"
"トークンが有効と見なされるためには、この値がサーバー側の `mp.jwt.verify.issuer` 設定と一致する必要があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Specifies the `upn` (User Principal Name) claim, which the {mp-jwt} specification defines as the preferred claim for identifying the `Principal` in container security APIs."
msgstr "`upn` (ユーザープリンシパル名) クレームを指定します。{mp-jwt} 仕様では、コンテナーセキュリティー API で `Principal` を識別するための推奨クレームとして定義されています。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Defines the `groups` claim, which provides the group memberships and top-level roles assigned to the JWT bearer."
msgstr "JWT ベアラーに割り当てられたグループメンバーシップと最上位レベルのロールを提供する `groups` クレームを定義します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Adds a `birthdate` claim.\n"
"Because this can be considered sensitive information, consider encrypting claims as described in xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr ""
"`birthdate` クレームを追加します。\n"
"これは機密情報とみなされる可能性があるため、xref:security-jwt-build.adoc[SmallRye JWT を使用して JWT トークンを生成する] で説明されているようにクレームを暗号化することを検討してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Note that for this code to work, you need the content of the RSA private key corresponding to the public key you have in the `TokenSecuredResource` application.\n"
"Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr ""
"このコードが機能するには、 `TokenSecuredResource` アプリケーションにある公開鍵に対応する RSA 秘密鍵の内容が必要であることに注意してください。\n"
"次の PEM コンテンツを取得して、 `security-jwt-quickstart/src/test/resources/privateKey.pem` に配置します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "RSA private key PEM content"
msgstr "RSA 秘密鍵 PEM コンテンツ"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Later, you configure the `smallrye.jwt.sign.key.location` property to specify the location of the private signing key."
msgstr "後で、 `smallrye.jwt.sign.key.location` プロパティーを設定して、秘密署名鍵の場所を指定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Generating keys with OpenSSL"
msgstr "OpenSSL でのキーの生成"

#: _versions/3.27/guides/security-jwt.adoc
msgid "It is also possible to generate a public and private key pair by using the OpenSSL command line tool."
msgstr "OpenSSL コマンドラインツールを使用して公開鍵と秘密鍵のペアを生成することもできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`openssl` commands to generate keys"
msgstr "キーを生成するための `openssl` コマンド"

#: _versions/3.27/guides/security-jwt.adoc
msgid "An additional step is required to generate and convert the private key to the PKCS#8 format, commonly used for secure key storage and transport."
msgstr "秘密鍵を生成し、安全なキーの保管と転送に一般的に使用される PKCS#8 形式に変換するには、追加の手順が必要です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`openssl` commands to perform the conversion"
msgstr "変換用の `openssl`コマンド"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can use the generated key pair instead of those used in this quickstart."
msgstr "このクイックスタートで使用されているキーペアの代わりに、生成されたキーペアを使用できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Ensure the <<run-application, application is running>> before generating the JSON Web Token (JWT) for the `TokenSecuredResource` endpoint."
msgstr "`TokenSecuredResource` エンドポイントの JSON Web Token (JWT) を生成する前に <<run-application, application is running>> であることを確認します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Next, use the following command to generate the JWT:"
msgstr "次に、次のコマンドを使用して JWT を生成します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Sample JWT generation output"
msgstr "JWT 生成の出力例"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The JWT string is a Base64 URL-encoded string consisting of three parts, separated by `.` characters:"
msgstr "JWT 文字列は、 `.` 文字で区切られた 3 つの部分が含まれる Base64 URL エンコードされた文字列です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The header, which contains metadata about the token, such as the signing algorithm."
msgstr "署名アルゴリズムなどのトークンに関するメタデータが含まれるヘッダー。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The payload, also called \"claims\", which includes the token's claims or data."
msgstr "ペイロードはクレームとも呼ばれ、トークンのクレームまたはデータが含まれます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The signature, which verifies the token's integrity."
msgstr "トークンの整合性を検証する署名。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Finally, secured access to `/secured/roles-allowed`"
msgstr "/secured/roles-allowed へのセキュリティーで保護されたアクセス"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Now, let's use this to make a secured request to the `/secured/roles-allowed` endpoint.\n"
"Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr ""
"ここで、これを使用して、 `/secured/roles-allowed` エンドポイントにセキュリティー保護されたリクエストを送信してみましょう。\n"
"Quarkus サーバーが開発モードで実行されていることを確認してから、次のコマンドを実行し、前の手順で生成された JWT のバージョンを必ず使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`curl` command for `/secured/roles-allowed` with JWT"
msgstr "JWT を含む /secured/roles-allowed の curl コマンド"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Make sure to use the generated token as the HTTP Authorization Bearer scheme value."
msgstr "生成されたトークンを HTTP 認可 Bearer スキームの値として必ず使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Success! You now have the following:"
msgstr "正常に完了しました。これで次のようになりました。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "A non-anonymous caller name: `jdoe@quarkus.io`"
msgstr "匿名でない発信者名: `jdoe@quarkus.io`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "An authentication scheme: `Bearer`"
msgstr "認証スキーム: `Bearer`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "A non-null `JsonWebToken`"
msgstr "null 以外の `JsonWebToken`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `birthdate` claim value"
msgstr "`birthdate` クレーム値"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Using the `JsonWebToken` and claim injection"
msgstr "`JsonWebToken` とクレームインジェクションの使用"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Now that you can generate a JWT to access our secured REST endpoints, let's see what more you can do with the `JsonWebToken` interface and the JWT claims.\n"
"The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal` interface, and is the object type returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call you used previously.\n"
"This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr ""
"これで、セキュリティー保護された REST エンドポイントにアクセスするための JWT を生成できるようになりました。次に、 `JsonWebToken` インターフェイスと JWT クレームを使用して何ができるかを見てみましょう。\n"
"`org.eclipse.microprofile.jwt.JsonWebToken` インターフェイスは `java.security.Principal` インターフェイスを継承し、以前に使用した `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 呼び出しによって返されるオブジェクトタイプです。\n"
"つまり、CDI を使用しくても REST コンテナー `SecurityContext` にアクセスできるコードは、 `SecurityContext#getUserPrincipal()` をキャストすることで、呼び出し元の `JsonWebToken` インターフェイスを取得できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification and arbitrary claims that might exist in the JWT."
msgstr "`JsonWebToken` インターフェイスは、基盤となる JWT のクレームにアクセスするためのメソッドを定義します。これは、JWT に存在する可能性のある {mp-jwt} 仕様および任意のクレームで必要な一般的クレームのアクセッサを提供します。。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint `/secured/roles-allowed-admin` which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr ""
"すべての JWT クレームを挿入することもできます。\n"
" (`JsonWebToken` から取得するのではなく) `TokenSecuredResource` を、挿入された `birthdate` クレームを使用する別のエンドポイント `/secured/roles-allowed-admin` で継承してみましょう。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `@RequestScoped` scope is required to enable injection of the `birthdate` claim as a `String`."
msgstr "`birthdate` クレームを `String` として挿入できるようにするには、 `@RequestScoped` スコープが必要です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `JsonWebToken` is injected here, providing access to all claims and JWT-related information."
msgstr "ここで `JsonWebToken` が挿入され、すべてのクレームと JWT 関連情報へのアクセスが提供されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `birthdate` claim is injected as a `String`. This highlights why the `@RequestScoped` scope is mandatory."
msgstr "`birthdate` クレームは `String` として挿入されます。これにより、 `@RequestScoped` スコープが必須である理由が強調されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The injected `birthdate` claim is directly used to construct the response."
msgstr "挿入された `birthdate` クレームは、応答を構築するために直接使用されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr "次に、トークンを再度生成して実行します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in JVM mode"
msgstr "JVM モードでアプリケーションを実行する"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can run the application as a standard Java application."
msgstr "アプリケーションを標準の Java アプリケーションとして実行できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Compile the application:"
msgstr "アプリケーションをコンパイルします:"

#: _versions/3.27/guides/security-jwt.adoc
msgid "CLI"
msgstr "コマンドラインインタフェース"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application:"
msgstr "アプリケーションの実行:"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the application in native mode"
msgstr "ネイティブ・モードでアプリケーションを実行"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"You can compile this same demo into native mode without any modifications.\n"
"This implies that you no longer need to install a JVM on your production environment.\n"
"The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr ""
"この同じデモを、変更を加えることなくネイティブモードにコンパイルできます。\n"
"つまり、実稼働環境に JVM をインストールする必要はありません。\n"
"ランタイムテクノロジーは生成されたバイナリーに組み込まれ、最小限のリソースで実行できるように最適化されています。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "コンパイルには少し時間がかかるため、この手順はデフォルトで無効になっています。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Build your application again by enabling the `native` profile:"
msgstr "`native` プロファイルを有効にして、アプリケーションを再度ビルドします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Run the following binary directly:"
msgstr "次のバイナリーを直接実行します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Explore the solution"
msgstr "ソリューションの探索"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] repository contains all the versions covered in this quickstart guide, along with additional endpoints that demonstrate subresources using injected `JsonWebToken` tokens and their claims via CDI APIs."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] リポジトリには、このクイックスタートガイドで扱うすべてのバージョンが含まれており、さらに CDI API を使用して `JsonWebToken` トークンとそのクレームを注入し、サブリソースを示す追加のエンドポイントも含まれています。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "We encourage you to explore the `security-jwt-quickstart` directory and review the quickstart solutions to learn more about the features of the {extension-name} extension."
msgstr "`security-jwt-quickstart`ディレクトリーでクイックスタートソリューションを確認し、{extension-name} エクステンションの機能に関する情報を学習することを推奨します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Reference guide"
msgstr "リファレンスガイド"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Supported injection scopes"
msgstr "サポートされている注入スコープ"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "`org.eclipse.microprofile.jwt.JsonWebToken` が注入される場合、 `@ApplicationScoped`、 `@Singleton`、および `@RequestScoped` の外部 Bean 注入スコープがすべてサポートされます。また、現在のトークンが示されていることを確認するために、 `JsonWebToken` の `@RequestScoped` スコープが適用されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "ただし、個々のトークンクレームが `String` などの単純な型として挿入される場合は、 `@RequestScoped` を使用する必要があります。以下はその例です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims, but setting `@RequestScoped` is unnecessary in this case."
msgstr "注入された `JsonWebToken` を使用して個々のクレームにアクセスすることもできますが、この場合は `@RequestScoped` を設定する必要はありません。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "詳細については、 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI 注入要件] を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Supported public key formats"
msgstr "サポートされている公開鍵形式"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Public keys can be formatted in any of the following formats, specified in order of precedence:"
msgstr "公開鍵は、優先順位に従って、次のいずれかの形式でフォーマットできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "Public Key Cryptography Standards #8 (PKCS#8) PEM"

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr "JSON Web Key (JWK)"

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON Web Key Set (JWKS)"

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON Web Key (JWK) Base64 URL エンコード"

#: _versions/3.27/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON Web Key Set (JWKS) Base64 URL エンコード"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Dealing with verification keys"
msgstr "検証鍵の扱い"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to verify the token signature by using the asymmetric RSA or Elliptic Curve (EC) key, use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "非対称 RSA または楕円曲線 (EC) 鍵を使用してトークンの署名を検証する必要がある場合は、 `mp.jwt.verify.publickey.location` プロパティーを使用してローカルまたはリモートの検証鍵を参照します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`); for example, set it to `ES256` when working with the EC keys."
msgstr "`mp.jwt.verify.publickey.algorithm` を使用して検証アルゴリズムをカスタマイズします (デフォルトは `RS256`)。たとえば、EC 鍵を操作する場合は `ES256` に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to verify the token signature by using the symmetric secret key, then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "対称秘密鍵を使用してトークン署名を検証する必要がある場合は、JSON Web 鍵 (JWK) または JSON Web 鍵セット (JWK セット) 形式のいずれかを使用して、この秘密鍵を表す必要があります。以下はその例です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"This secret key JWK must also be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr ""
"この秘密鍵 JWK は、 `smallrye.jwt.verify.key.location` でも参照する必要があります。\n"
"`smallrye.jwt.verify.algorithm` は `HS256`/`HS384`/`HS512` に設定する必要があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Parse and verify `JsonWebToken` with `JWTParser`"
msgstr "JWTParser を使用した JsonWebToken の解析と検証"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "JWT トークンを挿入できない場合、たとえば、サービスリクエストペイロードに埋め込まれていたり、サービスエンドポイントが帯域外でトークンを取得する場合、 `JWTParser` を使用できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"You can also use it to customize how the token is verified or decrypted.\n"
"For example, one can supply a local `SecretKey`:"
msgstr ""
"また、トークンの検証方法や復号化方法をカスタマイズするためにも使用できます。\n"
"たとえば、ローカルの `SecretKey` を指定できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please also see the <<add-smallrye-jwt,How to Add SmallRye JWT directly>> section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "`quarkus-smallrye-jwt` で提供される `HTTP` サポートなしで `JWTParser` を使用する方法については、<<add-smallrye-jwt,How to Add SmallRye JWT directly>> セクションも参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Token decryption"
msgstr "トークン復号化"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If your application needs to accept tokens with encrypted claims or encrypted inner-signed claims, simply set the `smallrye.jwt.decrypt.key.location` property to point to the decryption key."
msgstr "アプリケーションが暗号化されたクレームまたは暗号化された内部署名付きクレームを含むトークンを受け入れる必要がある場合は、復号化キーを指すように `smallrye.jwt.decrypt.key.location` プロパティーを設定するだけです。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If this is the only key property set, the incoming token is expected to contain only encrypted claims.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set, then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "この鍵プロパティのみが設定されている場合、受信トークンには暗号化クレームのみが含まれる必要があります。 `mp.jwt.verify.publickey` または `mp.jwt.verify.publickey.location` のいずれかの検証プロパティーも設定されている場合、受信トークンには暗号化、内部署名付きトークンが含まれている必要があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens quickly."
msgstr "xref:security-jwt-build.adoc[SmallRye JWT を使用した JWT トークンの生成] を参照して、暗号化されたトークンまたは内部署名されたトークンをすばやく生成して暗号化する方法を学習します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Custom factories"
msgstr "カスタムファクトリー"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is the default implementation used to parse and verify JWT tokens, converting them into `JsonWebToken` principals. This factory relies on the `MP JWT` and `smallrye-jwt` properties, as described in the `Configuration` section, to validate and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` は、JWT トークンを解析および検証し、 `JsonWebToken` プリンシパルに変換するために使用されるデフォルトの実装です。このファクトリーは、 `Configuration` セクションで説明されているように、 `MP JWT` および `smallrye-jwt` プロパティーに依存して、JWT トークンを検証およびカスタマイズします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you need to implement a custom factory—such as to skip re-verifying tokens that have already been validated by a firewall—you can do so in one of the following ways:"
msgstr "ファイアウォールによってすでに検証されているトークンの再検証をスキップするなど、カスタムファクトリーを実装する必要がある場合は、次のいずれかの方法で実装できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Use the `ServiceLoader` mechanism by creating a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource."
msgstr "`META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` リソースを作成して、 `ServiceLoader` メカニズムを使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Provide an `Alternative` CDI bean implementation, like the example below:"
msgstr "以下の例のように、 `Alternative` CDI Bean 実装を提供します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Blocking calls"
msgstr "ブロッキング呼出"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`quarkus-smallrye-jwt` extension uses link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] library which is currently not reactive."
msgstr "`quarkus-smallrye-jwt` エクステンションでは、現在リアクティブではない link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] ライブラリを使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "What it means from the perspective of `quarkus-smallrye-jwt`, which operates as part of the reactive Quarkus security architecture, is that an IO thread entering the link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] verification or decryption code might block in one of the following cases:"
msgstr "`quarkus-smallrye-jwt`がリアクティブな Quarkus セキュリティーアーキテクチャーの一部として動作する観点からすると、link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] 検証または復号化コードに入る IO スレッドが、以下のいずれかのケースでブロックされる可能性があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The default key resolver refreshes the `JsonWebKey` set containing the keys, which involves a remote call to the OIDC endpoint."
msgstr "デフォルトのキーリゾルバーが、OIDCエンドポイントへのリモートコールを伴うキーを含む `JsonWebKey` セットを更新します"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The custom key resolver, such as `AWS Application Load Balancer` (`ALB`) key resolver, resolves the keys against the AWS ALB key endpoint by using the current token's key identifier header value."
msgstr "AWS Application Load Balancer (ALB) キーリゾルバーなどのカスタムキーリゾルバーは、現在のトークンのキー識別子ヘッダー値を使用して、AWS ALB キーエンドポイントに対してキーを解決します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "In such cases, if connections are slow—for instance, taking more than 3 seconds to respond to the key endpoint—the current event loop thread is likely to become blocked."
msgstr "このような場合、接続が遅い場合 (たとえば、キーエンドポイントへの応答に 3 秒以上かかる場合)、現在のイベントループスレッドがブロックされる可能性があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "To prevent it from blocking, set `quarkus.smallrye-jwt.blocking-authentication=true`."
msgstr "ブロックされないようにするには、 `quarkus.smallrye-jwt.blocking-authentication=true` を設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Token propagation"
msgstr "トークンの伝播"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please see the xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "下流サービスへのベアラアクセストークンの伝播については、xref:security-openid-connect-client-reference.adoc#token-propagation-rest[トークン伝播] の項を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Testing"
msgstr "テスト"

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid "Automatic key generation"
msgstr "自動キー生成"

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This extension generates an asymmetric RSA 2024 bit signing key pair in the dev and test modes if the verification key has not been configured.\n"
"Once the key pair is generated, the public RSA key is used to configure the `mp.jwt.verify.publickey` property, and the RSA private key is available to tests to sign tokens using `smallrye-jwt-build`, for example:"
msgstr "この拡張は、検証鍵が設定されていない場合、devモードとtestモードで非対称RSA 2024ビットの署名鍵ペアを生成します。鍵ペアが生成されると、公開 RSA 鍵は `mp.jwt.verify.publickey` プロパティを設定するために使用され、RSA 秘密鍵は `smallrye-jwt-build` などを使用してトークンに署名するためのテストに使用できます："

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid "See xref:security-jwt-build.adoc#sign-claims[signing claims guide] for mode details."
msgstr "モードの詳細については、 xref:security-jwt-build.adoc#sign-claims[保険金請求ガイドを] ご覧ください。"

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid "You can disable automatic key generation by setting at least one of the following properties:"
msgstr "以下のプロパティの少なくとも1つを設定することで、鍵の自動生成を無効にできます："

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey.location`"
msgstr "`mp.jwt.verify.publickey.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey`"
msgstr "`mp.jwt.verify.publickey`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.decrypt.key.location`"
msgstr "`mp.jwt.decrypt.key.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.encrypt.key.location`"
msgstr "`smallrye.jwt.encrypt.key.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.sign.key.location`"
msgstr "`smallrye.jwt.sign.key.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.sign.key`"
msgstr "`smallrye.jwt.sign.key`"

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid "In *dev* mode, if you do not explicitly configure the issuer using the `mp.jwt.verify.issuer` property, the {extension-name} extension will set a default issuer of `https://quarkus.io/issuer`."
msgstr "*dev* モードでは、 `mp.jwt.verify.issuer` プロパティを使って明示的に発行者を設定しない場合、{extension-name} 拡張モジュールはデフォルトの発行者を `https://quarkus.io/issuer` ."

#: _versions/3.27/guides/security-jwt.adoc
#, fuzzy
msgid "If you prefer to configure the issuer programmatically, set `mp.jwt.verify.issuer` to `NONE` to prevent the default value from being applied."
msgstr "発行者をプログラムで設定したい場合は、 `mp.jwt.verify.issuer` を `NONE` に設定して、デフォルト値が適用されないようにしてください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Wiremock"
msgstr "Wiremock"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "`mp.jwt.verify.publickey.location` を HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように設定する場合は、xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` セクションで説明されているのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティーを使用するように `application.properties` のみを変更します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Keycloak"
msgstr "Keycloak"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "Keycloak を使用していて、 `mp.jwt.verify.publickey.location` を HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように設定する場合は、xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak セクションで説明されているのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティーを使用するように `application.properties` のみを変更します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "Keycloakが発行したトークンは、レルムエンドポイントアドレスが `iss` （発行者）クレームに設定されていることに注目してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"If your Quarkus application runs in a Docker container, it might share a network interface with a Keycloak container started by DevServices for Keycloak.\n"
"In this scenario, the Quarkus application and Keycloak communicate through an internal shared Docker network."
msgstr ""
"Quarkus アプリケーションが Docker コンテナー内で実行される場合、DevServices for Keycloak によって起動された Keycloak コンテナーとネットワークインターフェイスを共有する可能性があります。\n"
"このシナリオでは、Quarkus アプリケーションと Keycloak は内部の共有 Docker ネットワークを介して通信します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "In such cases, use the following configuration instead:"
msgstr "そのような場合は、代わりに以下のような設定にしてください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Local public key"
msgstr "ローカル公開鍵"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` セクションで説明されているのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティーを使用するように `application.properties` のみを変更します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`TestSecurity` annotation"
msgstr "`TestSecurity` アノテーション"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr "次の依存関係を追加します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, write test code such as this:"
msgstr "次に、以下のようなテストコードを記述します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "where the `ProtectedResource` class might look like this:"
msgstr "ここで、 `ProtectedResource` クラスは次のようになります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid ""
"Note that the `@TestSecurity` annotation must always be used, and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr ""
"`@TestSecurity` アノテーションは常に使用する必要があり、その `user` プロパティーは `JsonWebToken.getName()` として返され、 `roles` プロパティーは `JsonWebToken.getGroups()` として返されることに注意してください。\n"
"`@JwtSecurity` アノテーションはオプションであり、追加のトークン要求を設定するために使用できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr "`@TestSecurity` と `@JwtSecurity` は、次のようにメタアノテーションで組み合わせることができます："

#: _versions/3.27/guides/security-jwt.adoc
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "これは、同じセキュリティ設定のセットを複数のテストメソッドで使用する必要がある場合に特に便利です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "How to check the errors in the logs"
msgstr "ログでエラーを確認する方法"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "トークンの検証または復号化エラーの詳細を確認するには、 `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` レベルのログを有効にしてください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Proactive authentication"
msgstr "プロアクティブ認証"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "パブリックエンドポイントメソッド呼び出し時のトークン検証を省略したい場合は、 xref:security-proactive-authentication.adoc[プロアクティブ認証] を無効にします。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Note that you can't access the injected `JsonWebToken` through public methods if token verification has not been done."
msgstr "トークンの検証が行われていない場合、挿入された `JsonWebToken` にパブリックメソッドを通じてアクセスできないことに注意してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "How to add SmallRye JWT directly"
msgstr "SmallRye JWT を直接追加する方法"

#: _versions/3.27/guides/security-jwt.adoc
msgid "To <<jwt-parser,parse and verify JsonWebToken with JWTParser>>, use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "<<jwt-parser,parse and verify JsonWebToken with JWTParser>> の場合、以下の状況では `quarkus-smallrye-jwt` の代わりに `smallrye-jwt` を直接使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "`HTTP` をサポートしていないQuarkusエクステンション、例えば `Quarkus GRPC` などを使用している場合。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus AWS Lambda`."
msgstr "エクステンション固有の `HTTP` を指定し、そのサポートは `quarkus-smallrye-jwt` および `Vert.x HTTP` (`Quarkus AWS Lambda` など) によって提供されるサポートと競合している場合。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "まず、 `smallrye-jwt` の依存関係を追加することから始めます:"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Then, update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "さらに、 `application.properties` を更新して、 `smallrye-jwt` によって提供されるすべての CDI プロデューサーを次のように含めます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Quarkus configuration"
msgstr "Quarkus の設定"

#: _versions/3.27/guides/security-jwt.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/security-jwt.adoc
msgid "MicroProfile JWT configuration"
msgstr "MicroProfile JWT の設定"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Property Name"
msgstr "プロパティ名"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Default"
msgstr "デフォルト"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Description"
msgstr "説明"

#: _versions/3.27/guides/security-jwt.adoc
msgid "none"
msgstr "none"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The `mp.jwt.verify.publickey` config property allows the public key text to be supplied as a string. The public key is parsed from the supplied string in the order defined in the <<supported-public-key-formats>> section."
msgstr "`mp.jwt.verify.publickey` 設定プロパティーを使用すると、公開鍵テキスト自体を文字列として提供できます。公開鍵は、<<supported-public-key-formats>> セクションで定義された順序で、提供された文字列から解析されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property allows for a specified external or internal location of the public key. The value can be a relative path or a URL. If the value points to an HTTPS-based JWK set, then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`. See xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "Config プロパティーでは、公開鍵の外部または内部の場所を指定できます。値は、相対パスまたは URL を使用できます。値が HTTPS ベースの JWK セットを指している場合、ネイティブモードで動作させるには、 `quarkus.ssl.native` プロパティーも `true` に設定する必要があります。詳細は、xref:native-and-ssl.adoc[ネイティブ実行可能ファイルでの SSL の使用] を参照してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.publickey.algorithm`"
msgstr "`mp.jwt.verify.publickey.algorithm`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RS256`"
msgstr "`RS256`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "List of signature algorithms. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "署名アルゴリズムのリスト。楕円曲線署名アルゴリズムをサポートするには、 `ES256` に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property allows for a specified external or internal location of the Private Decryption Key."
msgstr "Config プロパティーを使用すると、秘密復号化キーの外部または内部の場所を指定できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.decrypt.key.algorithm`"
msgstr "`mp.jwt.decrypt.key.algorithm`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RSA-OAEP`,`RSA-OAEP-256`"
msgstr "`RSA-OAEP`、 `RSA-OAEP-256`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "List of decryption algorithms. Set it to `RSA-OAEP-256` to support RSA-OAEP with SHA-256 only."
msgstr "復号化アルゴリズムのリスト。SHA-256 のみの RSA-OAEP をサポートするには、 `RSA-OAEP-256` に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.issuer`"
msgstr "`mp.jwt.verify.issuer`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server accepts as valid."
msgstr "Config プロパティーは、サーバーが有効として受け入れる JWT の `iss` (発行者) クレームの値を指定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.audiences`"
msgstr "`mp.jwt.verify.audiences`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of audiences a token `aud` claim might contain."
msgstr "トークン aud クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.clock.skew`"
msgstr "`mp.jwt.verify.clock.skew`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`60`"
msgstr "`60`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "トークンの有効期限と年齢確認時に使用されるクロックスキュー（秒）。トークンの有効期限切れ後、現在時刻がこのプロパティで指定された秒数以内であれば、期限切れのトークンは受理されます。デフォルト値は60秒です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.verify.token.age`"
msgstr "`mp.jwt.verify.token.age`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`none`"
msgstr "`none`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "トークン発行時刻 `iat` から経過してはならない秒数です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.token.header`"
msgstr "`mp.jwt.token.header`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`Authorization`"
msgstr "`Authorization`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property if another header, such as `Cookie`, is used to pass the token."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`mp.jwt.token.cookie`"
msgstr "`mp.jwt.token.cookie`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Name of the cookie containing a token. This property is effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "トークンを含む Cookie の名前。このプロパティーは、 `mp.jwt.token.header` が `Cookie` に設定されている場合にのみ有効です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Additional SmallRye JWT configuration"
msgstr "追加の SmallRye JWT 設定"

#: _versions/3.27/guides/security-jwt.adoc
msgid "SmallRye JWT provides more properties that can be used to customize the token processing:"
msgstr "SmallRye JWT は、トークン処理のカスタマイズに使用できるプロパティーを他にも提供します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.secretkey`"
msgstr "`smallrye.jwt.verify.secretkey`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Secret key supplied as a string."
msgstr "秘密鍵は文字列として提供されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key.location`"
msgstr "`smallrye.jwt.verify.key.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "NONE"
msgstr "NONE"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Location of the verification key, which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' is ignored if this property is set."
msgstr "公開鍵と秘密鍵の両方を指すことができる検証鍵の場所。秘密鍵は JWK 形式でのみ使用できます。このプロパティーが設定されている場合、'mp.jwt.verify.publickey.location' は無視されることに注意してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.algorithm`"
msgstr "`smallrye.jwt.verify.algorithm`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Signature algorithm. This property should only be used to set a symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "署名アルゴリズム。このプロパティーは、 `HS256` などの対称アルゴリズムを設定する場合にのみ使用してください。 `ES256` などの非対称アルゴリズムの設定には非推奨です。代わりに 'mp.jwt.verify.publickey.algorithm' を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key-format`"
msgstr "`smallrye.jwt.verify.key-format`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`ANY`"
msgstr "`ANY`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "このプロパティーを `PEM_KEY`、 `PEM_CERTIFICATE`、 `JWK`、 `JWK_BASE64URL` などの特定のキー鍵形式に設定して、検証鍵のロード方法を最適化します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.key-provider`"
msgstr "`smallrye.jwt.verify.key-provider`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`DEFAULT`"
msgstr "`DEFAULT`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "By default, PEM, JWK, or JWK key sets can be read from the local file system or fetched from URIs as required by MicroProfile JWT specification. Set this property to `AWS_ALB` to support an AWS Application Load Balancer verification key resolution."
msgstr "デフォルトでは、PEM、JWK、または JWK キーセットは、MicroProfile JWT 仕様で要求されているように、ローカルファイルシステムから読み取ったり、URI から取得したりできます。AWS Application Load Balancer 検証キー解決をサポートするには、このプロパティーを `AWS_ALB` に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.relax-key-validation`"
msgstr "`smallrye.jwt.verify.relax-key-validation`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "false"
msgstr "false"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Relax the validation of the verification keys; setting this property to `true` allows public RSA keys with a length of less than 2048 bits."
msgstr "検証キーの検証を緩和します。このプロパティーを `true` に設定すると、長さが 2048 ビット未満である公開 RSA 鍵が許可されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.certificate-thumbprint`"
msgstr "`smallrye.jwt.verify.certificate-thumbprint`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If this property is enabled, a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats. JWK keys must have an 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "このプロパティーが有効になっている場合、署名されたトークンには、x5t または x5t#S256X509Certificate サムプリントヘッダーが含まれている必要があります。検証鍵は、JWK または PEM 証明書鍵形式でのみ使用できます。JWK 鍵には、x5c (Base64 でエンコードされた X509Certificate) プロパティーセットが必要です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.header`"
msgstr "`smallrye.jwt.token.header`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property if another header, such as `Cookie`, is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。このプロパティーは推奨されていません。'mp.jwt.token.header' を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.key-cache-size`"
msgstr "`smallrye.jwt.key-cache-size`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`100`"
msgstr "`100`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key cache size. Use this property and `smallrye.jwt.key-cache-time-to-live` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "キーキャッシュのサイズ。このプロパティは、 `smallrye.jwt.key-cache-time-to-live` と同様に、 `AWS_ALB` のようなキープロバイダーが、鍵を動的に解決するために `smallrye.jwt.verify.key-provider=AWS_ALB` で構成されている場合に、キーキャッシュを制御するために使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.key-cache-time-to-live`"
msgstr "`smallrye.jwt.key-cache-time-to-live`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`10`"
msgstr "`10`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key cache entry time-to-live in minutes. Use this property and `smallrye.jwt.key-cache-size` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "キーキャッシュエントリーの有効期間 (分単位)。 `AWS_ALB` などのキープロバイダーが `smallrye.jwt.verify.key-provider=AWS_ALB` で設定され、キーが動的に解決される場合、このプロパティーと `smallrye.jwt.key-cache-size` を使用してキーキャッシュを制御します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.cookie`"
msgstr "`smallrye.jwt.token.cookie`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Name of the cookie containing a token. This property is effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use `mp.jwt.token.cookie`."
msgstr "トークンを含むクッキーの名前。このプロパティ＝は、 `smallrye.jwt.token.header` が `Cookie` に設定されている場合にのみ有効です。 このプロパティーは非推奨です。 `mp.jwt.token.cookie` を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.always-check-authorization`"
msgstr "`smallrye.jwt.always-check-authorization`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to `true` for the `Authorization` header to be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "`smallrye.jwt.token.header` が `Cookie` に設定されていても、名前が `smallrye.jwt.token.cookie` の Cookie が存在しない場合、 `Authorization` ヘッダーがチェックされるようにこのプロパティーを `true` に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.schemes`"
msgstr "`smallrye.jwt.token.schemes`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`Bearer`"
msgstr "`Bearer`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list containing alternative single or multiple schemes, such as `DPoP`."
msgstr "`DPoP` などの単一または複数の代替スキームを含むコンマ区切りのリスト。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.kid`"
msgstr "`smallrye.jwt.token.kid`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Key identifier. The verification JWK key and every JWT token must have a matching `kid` header if it is set."
msgstr "鍵の識別子。検証 JWK キーとすべての JWT トークンには、設定されている場合は一致する `kid` ヘッダーが必要です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.time-to-live`"
msgstr "`smallrye.jwt.time-to-live`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "The maximum number of seconds a JWT can be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWT を発行して使用できる最大秒数。実質的に、JWT の有効期限と発行日の差はこの値を超えてはなりません。このプロパティーを正以外の値に設定すると、トークンに有効な iat (発行日) クレームが必要であるという要件が緩和されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.require.named-principal`"
msgstr "`smallrye.jwt.require.named-principal`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`true`"
msgstr "`true`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "If an application relies on `java.security.Principal` returning a name, then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property results in SmallRye JWT throwing an exception if none of these claims is available for the application code to deal with a non-null `Principal` name reliably."
msgstr "アプリケーションが名前を返す `java.security.Principal` に依存している場合、トークンには `upn` または `preferred_username` または `sub` クレームセットが必要です。このプロパティーを設定すると、アプリケーションコードが null 以外の `Principal` 名を確実に処理するためにこれらのクレームがいずれも利用できない場合、SmallRye JWT は例外を出力します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.path.sub`"
msgstr "`smallrye.jwt.path.sub`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to the claim containing the subject name. It starts from the top-level JSON object and can contain multiple segments where each segment only represents a JSON object name, for example, `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "件名を含むクレームへのパス。これは最上位の JSON オブジェクトから始まり、各セグメントが JSON オブジェクト名のみを表す複数のセグメントを含めることができます (例: `レルム s/subject`)。このプロパティーは、トークンに 'sub' クレームがなく、サブジェクトが別のクレームに設定されている場合に使用できます。名前空間修飾クレームには二重引用符を使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.claims.sub`"
msgstr "`smallrye.jwt.claims.sub`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively, this property can be used to customize the `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "現在のトークンに使用可能な標準またはカスタムの `sub` クレームがない場合に、このプロパティーを使用して、デフォルトのサブクレーム値を設定できます。事実上、このプロパティーを使用して、 `upn`、 `preferred_username`、 `sub`クレームが設定されていない場合に `java.security.Principal` 名をカスタマイズできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.path.groups`"
msgstr "`smallrye.jwt.path.groups`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to the claim containing the groups. It starts from the top-level JSON object and can contain multiple segments where each segment represents a JSON object name only, for example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "グループを含むクレームへのパス。これは最上位の JSON オブジェクトから始まり、各セグメントが JSON オブジェクト名のみを表す複数のセグメントを含めることができます (例: `レルム/groups`)。このプロパティーは、トークンに 'groups' クレームがなく、別のクレームにグループが設定されている場合に使用できます。名前空間修飾クレームには二重引用符を使用します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.groups-separator`"
msgstr "`smallrye.jwt.groups-separator`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "space"
msgstr "space"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Separator for splitting a string which might contain multiple group values. It is only used if the `smallrye.jwt.path.groups` property points to a custom claim with a string value. The default value is a single space because a standard OAuth2 `scope` claim might contain a space-separated sequence."
msgstr "複数のグループ値を含む可能性のある文字列を分割するためのセパレーター。これは、 `smallrye.jwt.path.groups` プロパティーが値が文字列のカスタムクレームを指している場合にのみ使用されます。標準の OAuth2 `scope` クレームにはスペースで区切られたシーケンスが含まれている可能性があるため、デフォルト値はスペース 1 個です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.claims.groups`"
msgstr "`smallrye.jwt.claims.groups`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "このプロパティーでは、現在のトークンに使用可能な標準またはカスタムのグループクレームがない場合に、デフォルトのグループクレーム値を設定できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.jwks.refresh-interval`"
msgstr "`smallrye.jwt.jwks.refresh-interval`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "60"
msgstr "60"

#: _versions/3.27/guides/security-jwt.adoc
msgid "JWK cache refresh interval in minutes. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "JWK キャッシュの更新間隔 (分単位)。 `mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指し、正の `max-age` パラメーター値を持つ HTTP `Cache-Control` レスポンスヘッダーが JWK HTTPS エンドポイントから返されない限り無視されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.jwks.forced-refresh-interval`"
msgstr "`smallrye.jwt.jwks.forced-refresh-interval`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "30"
msgstr "30"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Forced JWK cache refresh interval in minutes, which is used to restrict the frequency of the forced refresh attempts that might happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set."
msgstr "強制 JWK キャッシュ更新間隔 (分単位)。現在のトークンの `kid` ヘッダーと一致する `kid` プロパティーを持つ JWK キーがキャッシュにないためにトークンの検証が失敗した場合に発生する可能性がある強制更新の試行頻度を制限するために使用されます。 `mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指していない限り、無視されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.expiration.grace`"
msgstr "`smallrye.jwt.expiration.grace`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "0"
msgstr "0"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Expiration grace in seconds. By default, an expired token is still accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "有効期限を秒単位で指定します。デフォルトでは、現在時刻がトークンの有効期限から 1 分以内であれば、期限切れのトークンはまだ受け入れられます。このプロパティーは非推奨です。代わりに `mp.jwt.verify.clock.skew` を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.verify.aud`"
msgstr "`smallrye.jwt.verify.aud`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of audiences a token `aud` claim might contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "トークン `aud` クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。このプロパティーは非推奨です。 `mp.jwt.verify.audiences` を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.required.claims`"
msgstr "`smallrye.jwt.required.claims`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Comma-separated list of the claims a token must contain."
msgstr "トークンに含める必要があるクレームのコンマ区切りリスト。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.key.location`"
msgstr "`smallrye.jwt.decrypt.key.location`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Config property to specify the external or internal location of Private Decryption Key. This property is deprecated - use `mp.jwt.decrypt.key.location`."
msgstr "秘密復号鍵の外部または内部の場所を指定するための設定プロパティー。このプロパティーは非推奨です。 `mp.jwt.decrypt.key.location` を使用してください。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.algorithm`"
msgstr "`smallrye.jwt.decrypt.algorithm`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`RSA_OAEP`"
msgstr "`RSA_OAEP`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption algorithm."
msgstr "復号化アルゴリズム。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.decrypt.key`"
msgstr "`smallrye.jwt.decrypt.key`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption key supplied as a string."
msgstr "文字列として提供される復号化キー。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.token.decryption.kid`"
msgstr "`smallrye.jwt.token.decryption.kid`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "復号化キー識別子。設定されている場合、復号化 JWK キーとすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.certificate.path`"
msgstr "`smallrye.jwt.client.tls.certificate.path`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Path to TLS trusted certificate which might need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "鍵を `HTTPS` 経由で取得する必要がある場合に設定する必要がある可能性のある TLS 信頼済み証明書へのパス。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.trust-all`"
msgstr "`smallrye.jwt.client.tls.trust-all`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "すべてのホスト名を信頼します。キーを `HTTPS` 経由でフェッチする必要があり、このプロパティーが `true` に設定されている場合、デフォルトですべてのホスト名が信頼されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.client.tls.hosts`"
msgstr "`smallrye.jwt.client.tls.hosts`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "信頼できるホスト名のセット。キーを `HTTPS` 経由でフェッチする必要があり、 `smallrye.jwt.client.tls.trust-all` が `false` に設定されている場合、このプロパティーを使用して信頼できるホスト名を設定できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.http.proxy.host`"
msgstr "`smallrye.jwt.http.proxy.host`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "HTTP proxy host."
msgstr "HTTP プロキシーホスト。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.http.proxy.port`"
msgstr "`smallrye.jwt.http.proxy.port`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "80"
msgstr "80"

#: _versions/3.27/guides/security-jwt.adoc
msgid "HTTP proxy port."
msgstr "HTTP プロキシーポート。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.type`"
msgstr "`smallrye.jwt.keystore.type`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`JKS`"
msgstr "`JKS`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set, the file name is checked to determine the keystore type before defaulting to `JKS`."
msgstr "このプロパティーは、 `mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` のいずれかが `KeyStore` ファイルを指している場合に、キーストアタイプをカスタマイズするために使用できます。設定されていない場合は、ファイル名のチェックおよびキーストアタイプの決定が行われ、デフォルトで `JKS` に設定されます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.provider`"
msgstr "`smallrye.jwt.keystore.provider`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用して `KeyStore` プロバイダーをカスタマイズできます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.password`"
msgstr "`smallrye.jwt.keystore.password`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location`, this property must be set."
msgstr "キーストアのパスワード。 `mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` の場合は、このプロパティーを設定する必要があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.verify.key.alias`"
msgstr "`smallrye.jwt.keystore.verify.key.alias`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property has to be set to identify a public verification key which is extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "このプロパティーは、 `mp.jwt.verify.publickey.location`が `KeyStore`ファイルを指している場合に、 `KeyStore` から抽出される公開検証鍵を一致する証明書から識別するために設定する必要があります。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.decrypt.key.alias`"
msgstr "`smallrye.jwt.keystore.decrypt.key.alias`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.keystore.decrypt.key.password`"
msgstr "`smallrye.jwt.keystore.decrypt.key.password`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "This property can be set if a private decryption key's password in `KeyStore` is different from `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "このプロパティーは、 `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指しているときに、 `KeyStore` 内の秘密復号化鍵のパスワードが `smallrye.jwt.keystore.password` と異なる場合に設定できます。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "`smallrye.jwt.resolve-remote-keys-at-startup`"
msgstr "`smallrye.jwt.resolve-remote-keys-at-startup`"

#: _versions/3.27/guides/security-jwt.adoc
msgid "Set this property to true to resolve the remote keys at the application startup."
msgstr "アプリケーションの起動時にリモート鍵を解決するには、このプロパティーを true に設定します。"

#: _versions/3.27/guides/security-jwt.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[JSONウェブトークン (JWT) のビルド、署名、暗号化]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[認証メカニズムの組み合わせ]"

#: _versions/3.27/guides/security-jwt.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
