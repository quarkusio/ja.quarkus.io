msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Vert.x Reference Guide"
msgstr "Vert.x リファレンスガイド"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"https://vertx.io[Vert.x] is a toolkit for building reactive applications.\n"
"As described in the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture], Quarkus uses Vert.x underneath."
msgstr "link:https://vertx.io[Vert.x]は、リアクティブなアプリケーションを構築するためのツールキットです。 link:quarkus-reactive-architecture.html[Quarkus Reactive Architecture]に記載されているように、QuarkusではVert.xを下地に使用しています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"This guide is the companion to the xref:vertx.adoc[Using Eclipse Vert.x API from a Quarkus Application] guide.\n"
"It provides more advanced details about the usage and the configuration of the Vert.x instance used by Quarkus."
msgstr "このガイドは、 link:vertx.html[QuarkusアプリケーションからEclipse Vert.x APIの使用] ガイドの姉妹編です。Quarkusで使用されるVert.xインスタンスの使用方法や設定について、より詳細に説明しています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Access the Vert.x instance"
msgstr "Vert.xインスタンスへのアクセス"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"To access the managed Vert.x instance, add the `quarkus-vertx` extension to your project.\n"
"This dependency might already be available in your project (as a transitive dependency)."
msgstr ""
"マネージド Vert.x インスタンスにアクセスするには、 `quarkus-vertx` エクステンションをプロジェクトに追加します。\n"
"この依存関係は、プロジェクトで既に利用可能な場合があります（推移的依存関係として）。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "With this extension, you can retrieve the managed instance of Vert.x using either field or constructor injection:"
msgstr "このエクステンションでは、フィールドまたはコンストラクタ・インジェクションのいずれかを使用して、Vert.xのマネージドインスタンスを取得できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "You can inject either the:"
msgstr "以下のどちらかを注入することができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.vertx.core.Vertx` instance exposing the _bare_ Vert.x API"
msgstr "_裸の_ Vert.x APIを公開する `io.vertx.core.Vertx` インスタンス"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.vertx.mutiny.core.Vertx` instance exposing the _Mutiny_ API"
msgstr "_Mutiny_ APIを公開する `io.vertx.mutiny.core.Vertx` インスタンス"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "We recommend using the Mutiny variant as it integrates with the other reactive APIs provided by Quarkus."
msgstr "Mutiny variantは、Quarkusが提供する他のリアクティブAPIと統合されているため、Mutiny variantの使用をお勧めします。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Mutiny"
msgstr "Mutiny"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mutinyに慣れていない方は、 link:mutiny-primer.html[Mutiny - 直感的なリアクティブプログラミングライブラリ]をご覧ください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Documentation about the Vert.x Mutiny variant is available on https://smallrye.io/smallrye-mutiny-vertx-bindings."
msgstr "Vert.x Mutiny バリアントに関するドキュメントは https://smallrye.io/smallrye-mutiny-vertx-bindings にあります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Configure the Vert.x instance"
msgstr "Vert.xインスタンスの設定"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"You can configure the Vert.x instance from the `application.properties` file.\n"
"The following table lists the supported properties:"
msgstr "`application.properties` ファイルから Vert.x インスタンスを設定することができます。次の表は、サポートされているプロパティの一覧です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "See <<customizing-the-vert-x-configuration>> to configure the Vert.x instance using a programmatic approach."
msgstr "プログラム的なアプローチで Vert.x インスタンスを構成するには、 <<customizing-the-vert-x-configuration>> を参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use Vert.x clients"
msgstr "vert.xクライアントを使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"In addition to Vert.x core, you can use most Vert.x ecosystem libraries.\n"
"Some Quarkus extension already wraps Vert.x libraries."
msgstr "Vert.xコアに加えて、ほとんどのVert.xエコシステムライブラリを使用することができます。いくつかのQuarkusエクステンションは、すでにVert.xライブラリをラップしています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Available APIs"
msgstr "利用可能なAPI"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The following table lists the **most** used libraries from the Vert.x ecosystem.\n"
"To access these APIs, add the indicated extension or dependency to your project.\n"
"Check the associated documentation to learn how to use them."
msgstr ""
"次の表は、Vert.xエコシステムで *最も* 使用されているライブラリの一覧です。\n"
"これらのAPIにアクセスするには、指定されたエクステンションまたは依存関係をプロジェクトに追加します。\n"
"使用方法については、関連ドキュメントを参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "API"
msgstr "API"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Extension or Dependency"
msgstr "エクステンションか依存関係"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Documentation"
msgstr "ドキュメント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "AMQP Client"
msgstr "AMQPクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-messaging-amqp` (extension)"
msgstr "`io.quarkus:quarkus-messaging-amqp` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "xref:amqp.adoc[Getting Started to Quarkus Messaging with AMQP]"
msgstr "xref:amqp.adoc[AMQPを使用したQuarkus Messaging入門]"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Circuit Breaker"
msgstr "サーキットブレーカー"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-circuit-breaker` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-circuit-breaker` (external dependency)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "https://vertx.io/docs/vertx-circuit-breaker/java/"
msgstr "https://vertx.io/docs/vertx-circuit-breaker/java/"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Consul Client"
msgstr "Consul クライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-consul-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-consul-client` (external dependency)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "https://vertx.io/docs/vertx-consul-client/java/"
msgstr "https://vertx.io/docs/vertx-consul-client/java/"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "DB2 Client"
msgstr "DB2クライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-reactive-db2-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-db2-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "xref:reactive-sql-clients.adoc[Reactive SQL Clients]"
msgstr "xref:reactive-sql-clients.adoc[Reactive SQLクライアント]"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Kafka Client"
msgstr "Kafkaクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-messaging-kafka` (extension)"
msgstr "`io.quarkus:quarkus-messaging-kafka` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "xref:kafka.adoc[Apache Kafka Reference Guide]"
msgstr "xref:kafka.adoc[Apache Kafka リファレンスガイド]"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Mail Client"
msgstr "メールクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-mailer` (extension)"
msgstr "`io.quarkus:quarkus-mailer` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "xref:mailer.adoc[Sending emails using SMTP]"
msgstr "xref:mailer.adoc[SMTPを使用した電子メールの送信]"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "MQTT Client"
msgstr "MQTTクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-messaging-mqtt` (extension)"
msgstr "`io.quarkus:quarkus-messaging-mqtt` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "No guide yet"
msgstr "ガイドはまだありません"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "MS SQL Client"
msgstr "MS SQLクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-reactive-mssql-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-mssql-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "MySQL Client"
msgstr "MySQLクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-reactive-mysql-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-mysql-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Oracle Client"
msgstr "Oracleクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-reactive-oracle-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-oracle-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "PostgreSQL Client"
msgstr "PostgreSQLクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-reactive-pg-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-pg-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "RabbitMQ Client"
msgstr "RabbitMQクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-rabbitmq-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-rabbitmq-client` (external dependency)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "https://vertx.io/docs/vertx-rabbitmq-client/java"
msgstr "https://vertx.io/docs/vertx-rabbitmq-client/java"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Redis Client"
msgstr "Redisクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.quarkus:quarkus-redis-client` (extension)"
msgstr "`io.quarkus:quarkus-redis-client` (extension)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "xref:redis.adoc[Using the Redis Client]"
msgstr "xref:redis.adoc[Redisクライアントの使用]"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Web Client"
msgstr "ウェブクライアント"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-web-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-web-client` (external dependency)"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "https://vertx.io/docs/vertx-web-client/java/"
msgstr "https://vertx.io/docs/vertx-web-client/java/"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To learn more about the usage of the Vert.x Mutiny API, refer to https://smallrye.io/smallrye-mutiny-vertx-bindings."
msgstr "Vert.x Mutiny APIの使用方法について詳しくは、 https://smallrye.io/smallrye-mutiny-vertx-bindings を参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use the Vert.x Web Client"
msgstr "Vert.xウェブクライアントの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"This section gives an example using the Vert.x `WebClient` in the context of a Quarkus REST (formerly RESTEasy Reactive) application.\n"
"As indicated in the table above, add the following dependency to your project:"
msgstr ""
"このセクションでは、Quarkus REST（旧 RESTEasy Reactive）アプリケーションのコンテキストで Vert.x `WebClient` を使用する例を示します。\n"
"上の表に示すように、次の依存関係をプロジェクトに追加します："

#: _versions/3.27/guides/vertx-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Now, in your code, you can create an instance of `WebClient`:"
msgstr "さて、コードの中で、 `WebClient` のインスタンスを作成することが可能です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"This resource creates a `WebClient` and, upon request, uses this client to invoke a remote HTTP API.\n"
"Depending on the result, the response is forwarded as received, or it creates a JSON object wrapping the error.\n"
"The `WebClient` is asynchronous (and non-blocking), to the endpoint returns a `Uni`."
msgstr "このリソースは、 `WebClient` を作成し、リクエストに応じて、このクライアントを使用してリモート HTTP API を呼び出します。結果に応じて、レスポンスは受信したまま転送されるか、エラーをラップしたJSONオブジェクトが作成されます。 `WebClient` は非同期（かつノンブロッキング）で、エンドポイントからは `Uni` が返されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The application can also run as a native executable.\n"
"But, first, we need to instruct Quarkus to enable _ssl_ (if the remote API uses HTTPS).\n"
"Open the `src/main/resources/application.properties` and add:"
msgstr "このアプリケーションは、ネイティブ実行可能ファイルとしても実行できます。しかし、その前に、Quarkusに _ssl_ を有効にするよう指示する必要があります（リモートAPIがHTTPSを使用している場合）。 `src/main/resources/application.properties` を開き、以下を追加します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Then, create the native executable with:"
msgstr "そして、ネイティブ実行可能ファイルを作成します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use Vert.x JSON"
msgstr "Vert.x JSONの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Vert.x APIs often rely on JSON.\n"
"Vert.x provides two convenient classes to manipulate JSON document: `io.vertx.core.json.JsonObject` and `io.vertx.core.json.JsonArray`."
msgstr "Vert.xのAPIはしばしばJSONに依存しています。Vert.xは、JSONドキュメントを操作する2つの便利なクラスを提供しています： `io.vertx.core.json.JsonObject` および `io.vertx.core.json.JsonArray` 。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`JsonObject` can be used to map an object into its JSON representation and build an object from a JSON document:"
msgstr "`JsonObject` は、オブジェクトをJSON表現にマッピングしたり、JSONドキュメントからオブジェクトを構築するために使用できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Note that these features use the mapper managed by the `quarkus-jackson` extension.\n"
"Refer to xref:rest-json.adoc#json[Jackson configuration] to customize the mapping."
msgstr "なお、これらの機能は、 `quarkus-jackson` エクステンションで管理されているマッパーを使用しています。マッピングをカスタマイズするには link:rest-json.html#json[Jacksonの設定] を参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"JSON Object and JSON Array are both supported as Quarkus HTTP endpoint requests and response bodies (using classic RESTEasy and Quarkus REST).\n"
"Consider these endpoints:"
msgstr ""
"JSONオブジェクトとJSON配列は、Quarkus HTTPエンドポイントのリクエストとレスポンスボディとしてサポートされています（従来のRESTEasyとQuarkus RESTを使用）。\n"
"これらのエンドポイントを考えてみましょう："

#: _versions/3.27/guides/vertx-reference.adoc
msgid "http://localhost:8080/hello/Quarkus/object returns:"
msgstr "http://localhost:8080/hello/Quarkus/object は次を返却します"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "http://localhost:8080/hello/Quarkus/array returns:"
msgstr "http://localhost:8080/hello/Quarkus/array は次を返却します"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "This works equally well when the JSON content is a request body or is wrapped in a `Uni`, `Multi`, `CompletionStage` or `Publisher`."
msgstr "これは、JSONコンテンツがリクエストボディである場合や、 `Uni`, `Multi`, `CompletionStage`, `Publisher` で包まれている場合にも同様に機能します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use Verticles"
msgstr "Verticlesの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"link:https://vertx.io/docs/vertx-core/java/#_verticles[Verticles] is \"a simple, scalable, actor-like deployment and concurrency model\" provided by _Vert.x_.\n"
"This model does not claim to be a strict actor-model implementation, but it shares similarities, especially concerning concurrency, scaling, and deployment.\n"
"To use this model, you write and _deploy_ verticles, communicating by sending messages on the event bus."
msgstr "link:https://vertx.io/docs/vertx-core/java/#_verticles[Verticles] は、 _Vert.x_ が提供する「シンプルでスケーラブルな、アクターのようなデプロイ・並行性モデル」です。このモデルは、厳密なアクターモデルの実装を主張するものではありませんが、特に並行性、スケーリング、デプロイに関する類似性を共有しています。このモデルを使用するには、バーティクルを書いて _デプロイ_ し、イベントバスにメッセージを送信することで通信します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"You can deploy _verticles_ in Quarkus.\n"
"It supports:"
msgstr "Quarkusで _verticles_ をデプロイすることができます。次をサポートしています:"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "_bare_ verticle - Java classes extending `io.vertx.core.AbstractVerticle`"
msgstr "_生の_ verticle - `io.vertx.core.AbstractVerticle` を拡張するJavaクラス"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "_Mutiny_ verticle - Java classes extending `io.smallrye.mutiny.vertx.core.AbstractVerticle`"
msgstr "_Mutiny_ verticle - `io.smallrye.mutiny.vertx.core.AbstractVerticle` を拡張するJavaクラス"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Deploy Verticles"
msgstr "Verticleのデプロイ"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To deploy verticles, use the `deployVerticle` method:"
msgstr "verticleを展開するには、 `deployVerticle` メソッドを使用します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If you use the Mutiny-variant of Vert.x, be aware that the `deployVerticle` method returns a `Uni`, and you would need to trigger a subscription to make the actual deployment."
msgstr "Vert.x の Mutiny 版を使用する場合、 `deployVerticle` メソッドは `Uni` を返すため、実際のデプロイメントを行うにはサブスクリプションをトリガーする必要があることに注意してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "An example explaining how to deploy verticles during the initialization of the application will follow."
msgstr "アプリケーションの初期化時にVerticleをデプロイする方法については、次の例で説明します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use @ApplicationScoped beans as Verticle"
msgstr "@ApplicationScopedのBeanをVerticleとして使用する"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"In general, Vert.x verticles are not CDI beans.\n"
"And so cannot use injection.\n"
"However, in Quarkus, you can deploy verticles as beans.\n"
"Note that in this case, CDI (Arc in Quarkus) is responsible for creating the instance."
msgstr "一般的に、Vert.xのバーティクルはCDI Beanではありません。そのため、依存性注入は使用できません。しかし、QuarkusではVerticleをBeanとしてデプロイすることができます。この場合、CDI（QuarkusではArc）がインスタンスの作成を担当することに注意してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The following snippet provides an example:"
msgstr "次のスニペットはその例です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "You don't have to inject the `vertx` instance; instead, leverage the protected field from `AbstractVerticle`."
msgstr "`vertx` のインスタンスを注入する必要はなく、代わりに `AbstractVerticle` の protected フィールドを利用します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Then, deploy the verticle instances with:"
msgstr "そして、バーティクルインスタンスをデプロイします。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If you want to deploy every exposed `AbstractVerticle`, you can use:"
msgstr "露出しているすべての `AbstractVerticle` をデプロイしたい場合は、次のようにします。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Create multiple verticles instances"
msgstr "複数のvirticleのインスタンスの作成"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"When using `@ApplicationScoped`, you will get a single instance for your verticle.\n"
"Having multiple instances of verticles can be helpful to share the load among them.\n"
"Each of them will be associated with a different I/O thread (Vert.x event loop)."
msgstr "`@ApplicationScoped` を使用する場合、Verticleのインスタンスは1つになります。複数のVerticleのインスタンスを持つことは、それらの間で負荷を共有するのに役立ちます。各々のインスタンスは、異なるI/Oスレッド（Vert.xイベントループ）に関連付けられます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To deploy multiple instances of your verticle, use the `@Dependent` scope instead of `@ApplicationScoped`:"
msgstr "Verticleの複数のインスタンスをデプロイするには、 `@ApplicationScoped` の代わりに `@Dependent` スコープを使用します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Then, deploy your verticle as follows:"
msgstr "そして、verticleをデプロイします。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The `init` method receives an `Instance<MyVerticle>`.\n"
"Then, you pass a supplier to the `deployVerticle` method.\n"
"The supplier is just calling the `get()` method.\n"
"Thanks to the `@Dependent` scope, it returns a new instance on every call.\n"
"Finally, you pass the desired number of instances to the `DeploymentOptions`, such as two in the previous example.\n"
"It will call the supplier twice, which will create two instances of your verticle."
msgstr "`init` メソッドは、 `Instance<MyVerticle>` を受け取ります。そして、 `deployVerticle` メソッドにサプライヤーを渡します。サプライヤーは `get()` メソッドを呼び出しているだけです。 `@Dependent` スコープのおかげで、呼び出すたびに新しいインスタンスが返されます。最後に、希望する数のインスタンスを `DeploymentOptions` に渡します。例えば、前の例では2つです。サプライヤーを2回呼び出し、Verticleの2つのインスタンスを作成します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use the Event Bus"
msgstr "Event Busの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Vert.x comes with a built-in https://vertx.io/docs/vertx-core/java/#event_bus[event bus] that you can use from your Quarkus application.\n"
"So, your application components (CDI beans, resources...) can interact using asynchronous events, thus promoting loose-coupling."
msgstr "Vert.xには、Quarkusアプリケーションから使用できる link:https://vertx.io/docs/vertx-core/java/#event_bus[イベントバス]が組み込まれています。そのため、アプリケーションコンポーネント（CDI Bean、リソース...）は、非同期イベントを使用して相互に作用することができ、疎結合を促進します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"With the event bus, you send _messages_ to _virtual addresses_.\n"
"The event bus offers three types of delivery mechanisms:"
msgstr "イベントバスでは、 _仮想アドレス_ に _メッセージ_ を送信します。イベントバスには、3種類の配送メカニズムが用意されています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "point-to-point - send the message, one consumer receives it. If several consumers listen to the address, a round-robin is applied;"
msgstr "point-to-point - メッセージを送信すると、1人の消費者がそれを受信します。複数の消費者がそのアドレスを聞く場合は、ラウンドロビンが適用されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "publish/subscribe - publish a message; all the consumers listening to the address are receiving the message;"
msgstr "publish/subscribe - メッセージを発行し、そのアドレスを聞いているすべてのコンシューマーがメッセージを受信します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "request/reply - send the message and expect a response. The receiver can respond to the message in an asynchronous fashion."
msgstr "request/reply - メッセージを送信し、応答を期待します。受信者は非同期的にメッセージに応答することができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "All these delivery mechanisms are non-blocking and are providing one of the fundamental bricks to build reactive applications."
msgstr "これらの配信メカニズムはすべてノンブロッキングであり、リアクティブなアプリケーションを構築するための基本的な要素の一つとなっています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Consume events"
msgstr "イベントの消費"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"While you can use the Vert.x API to register consumers, Quarkus comes with declarative support.\n"
"To consume events, use the `io.quarkus.vertx.ConsumeEvent` annotation:"
msgstr "Vert.x APIを使用してコンシューマーを登録することができますが、Quarkusには宣言型のサポートがあります。イベントを消費するには、 `io.quarkus.vertx.ConsumeEvent` アノテーションを使用します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If not set, the address is the fully qualified name of the bean; for instance, in this snippet, it's `org.acme.vertx.GreetingService`."
msgstr "設定されていない場合、アドレスはBeanの完全修飾名となります。例えば、このスニペットでは、 `org.acme.vertx.GreetingService` となります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The method parameter is the message body. If the method returns _something_, it's the message response."
msgstr "メソッドのパラメータはメッセージボディです。メソッドが _何か_ を返す場合は、それがメッセージのレスポンスとなります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Configure the address"
msgstr "アドレスの設定"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The `@ConsumeEvent` annotation can be configured to set the address:"
msgstr "`@ConsumeEvent` アノテーションでアドレスを設定することができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Receive the messages sent to the `greeting` address"
msgstr "`greeting` アドレスに送信されたメッセージを受信する"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The address value can be a property expression.\n"
"In this case, the configured value is used instead: `@ConsumeEvent(\"${my.consumer.address}\")`.\n"
"Additionally, the property expression can specify a default value: `@ConsumeEvent(\"${my.consumer.address:defaultAddress}\")`."
msgstr ""
"アドレス値はプロパティー式にすることができます。\n"
"この場合、設定された値 `@ConsumeEvent (\"${my.consumer.address}\")` が代わりに使用されます。\n"
"さらに、プロパティー式ではデフォルト値 `@ConsumeEvent (\"${my.consumer.address:defaultAddress}\")` を指定できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Config Property Example"
msgstr "設定プロパティ例"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Receive the messages sent to the address configured with the `my.consumer.address` key."
msgstr "`my.consumer.address` キーで設定されたアドレスに送信されたメッセージを受信します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If no config property with the specified key exists and no default value is set then the application startup fails."
msgstr "指定されたキーを持つ設定プロパティーが存在せず、デフォルト値が設定されていない場合、アプリケーションの起動が失敗します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Process events asynchronously"
msgstr "イベントの非同期処理"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The previous examples use synchronous processing.\n"
"Asynchronous processing is also possible by returning either an `io.smallrye.mutiny.Uni` or a `java.util.concurrent.CompletionStage`:"
msgstr "これまでの例では、同期処理を行っています。 `io.smallrye.mutiny.Uni` または `java.util.concurrent.CompletionStage` を返却することで、非同期処理も可能です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The previous example uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "前の例はMutinyリアクティブ型を使用しています。Mutinyに慣れていない方は、 link:mutiny-primer.html[Mutiny - 直感的なリアクティブプログラミングライブラリ]をご覧ください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Blocking processing of events"
msgstr "イベントのブロッキング処理"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"By default, the code consuming the event must be _non-blocking_, as it's called on an I/O thread.\n"
"If your processing is blocking, use the `@io.smallrye.common.annotation.Blocking` annotation:"
msgstr "デフォルトでは、イベントを消費するコードは、I/Oスレッドで呼び出されるため、 _ノンブロッキング_ でなければなりません。処理がブロッキングの場合は、 `@io.smallrye.common.annotation.Blocking` アノテーションを使用してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Alternatively, you can use the `blocking` attribute from the `@ConsumeEvent` annotation:"
msgstr "あるいは、 `@ConsumeEvent` アノテーションの `blocking` 属性を使用することもできます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "When using `@Blocking`, it ignores the value of the `blocking` attribute of `@ConsumeEvent`."
msgstr "`@Blocking` を使用する場合、 `@ConsumeEvent` の `blocking` 属性の値は無視されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Reply to events"
msgstr "イベントへの返信"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The _return_ value of a method annotated with `@ConsumeEvent` is used to respond to the incoming message.\n"
"For instance, in the following snippet, the returned `String` is the response."
msgstr "`@ConsumeEvent` でアノテーションされたメソッドの _戻り_ 値は、受信したメッセージへの応答に使用されます。たとえば、次のスニペットでは、返された `String` が応答となります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "You can also return a `Uni<T>` or a `CompletionStage<T>` to handle asynchronous reply:"
msgstr "また、 `Uni<T>` や `CompletionStage<T>` を返すことで、非同期応答を扱うこともできます。。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "You can inject an `executor` if you use the Context Propagation extension:"
msgstr "Context Propagation エクステンションを使えば、 `executor` を注入することができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Implement fire-and-forget interactions"
msgstr "ファイヤー・アンド・フォーゲット・インタラクションの実装"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"You don't have to reply to received messages.\n"
"Typically, for a _fire and forget_ interaction, the messages are consumed, and the sender does not need to know about it.\n"
"To implement this pattern, your consumer method returns `void`."
msgstr "受信したメッセージに返信する必要はありません。通常、 _fire and forget_ のインタラクションでは、メッセージは消費され、送信者はそのことを知る必要はありません。このパターンを実装するために、コンシューマー・メソッドは `void` を返します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Consume messages (instead of events)"
msgstr "（イベントの代わりに）メッセージを消費"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Unlike the previous example using the _payloads_ directly, you can also use `Message` directly:"
msgstr "_ペイロード_ を直接使用する前の例とは異なり、 `Message` を直接使用することもできます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Handle failures"
msgstr "失敗のハンドリング"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If a method annotated with `@ConsumeEvent` throws an exception, then:"
msgstr "`@ConsumeEvent` でアノテーションされたメソッドが例外を発生させた場合、"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "if a reply handler is set, then the failure is propagated back to the sender via an `io.vertx.core.eventbus.ReplyException` with code `ConsumeEvent#FAILURE_CODE` and the exception message,"
msgstr "返信ハンドラが設定されている場合、失敗はコード `ConsumeEvent#FAILURE_CODE` と例外メッセージを含む `io.vertx.core.eventbus.ReplyException` を通じて送信者に伝えられます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "if no reply handler is set, then the exception is rethrown (and wrapped in a `RuntimeException` if necessary) and can be handled by the default exception handler, _i.e._ `io.vertx.core.Vertx#exceptionHandler()`."
msgstr "リプライ・ハンドラが設定されていない場合、例外は再スローされ（必要であれば `RuntimeException` でラップされる）、デフォルトの例外ハンドラ、 _すなわち_ `io.vertx.core.Vertx#exceptionHandler()` で処理されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Send messages"
msgstr "メッセージの送信"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Sending and publishing messages use the Vert.x event bus:"
msgstr "メッセージの送信と公開にはVert.x Event busを使用します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Inject the Event bus"
msgstr "イベントバスのインジェクト"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Send a message to the address `greeting`. Message payload is `name`"
msgstr "アドレス `greeting` にメッセージを送信。メッセージのペイロードは `name`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The `EventBus` object provides methods to:"
msgstr "`EventBus` オブジェクトは、以下のメソッドを提供します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`send` a message to a specific address - one single consumer receives the message."
msgstr "`send` 特定のアドレスへのメッセージ - 一人のコンシューマーがメッセージを受信する。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`publish` a message to a specific address - all consumers receive the messages."
msgstr "`publish` 特定のアドレスにメッセージを送る - すべてのコンシューマーがメッセージを受け取る。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`request` a message and expect a reply"
msgstr "`request` メッセージを送って返信を期待する"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Process events on virtual threads"
msgstr "仮想スレッドのイベント処理"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Methods annotated with `@ConsumeEvent` can also be annotated with `@RunOnVirtualThread`.\n"
"In this case, the method is invoked on a virtual thread.\n"
"Each event is invoked on a different virtual thread."
msgstr ""
"`@ConsumeEvent` でアノテーションされたメソッドが `@RunOnVirtualThread` でもアノテーションされている場合、\n"
"メソッドは仮想スレッド上で呼び出されます。\n"
"各イベントは異なる仮想スレッド上で起動されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To use this feature, make sure:"
msgstr "この機能を使うには以下が必要です:"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Your Java runtime supports virtual threads."
msgstr "Javaランタイムが仮想スレッドをサポートしていること。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Your method uses a blocking signature."
msgstr "メソッドがブロッキング・シグネチャを使っていること。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The second point means only methods returning an object or `void` can use `@RunOnVirtualThread`.\n"
"Methods returning a `Uni` or a `CompletionStage` **cannot** run on virtual threads."
msgstr ""
"2つ目のポイントは、オブジェクトまたは `void` を返すメソッドだけが `@RunOnVirtualThread` を使えるということです。 \n"
"`Uni` や `CompletionStage` を返すメソッドは、仮想スレッドでは実行 *できません* 。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Read xref:./virtual-threads.adoc[the virtual thread guide] for more details."
msgstr "詳しくは xref:./virtual-threads.adoc[バーチャル・スレッド・ガイド] をお読みください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use codecs"
msgstr "コーデックの使用"

#: _versions/3.27/guides/vertx-reference.adoc
#, fuzzy
msgid ""
"The link:++https://vertx.io/docs/vertx-core/java/#event_bus++[Vert.x Event Bus] uses link:++https://vertx.io/docs/vertx-core/java/#_message_codecs++[codecs] to _serialize_ and _deserialize_ message objects.\n"
"Quarkus provides a default codec for local delivery.\n"
"This codec is automatically used for return types and message body parameters of local consumers, i.e. methods annotated with `@ConsumeEvent` where `ConsumeEvent#local() == true` (which is the default)."
msgstr "link:https://vertx.io/docs/vertx-core/java/#event_bus[Vert.x Event Busでは] 、 link:https://vertx.io/docs/vertx-core/java/#_message_codecs[コーデックを] 使用してメッセージオブジェクトの _シリアライズと_ _デシリアライズを_ 行います。Quarkusは、ローカル配信用のデフォルトのコーデックを提供します。 `ConsumeEvent#local() == true` このコーデックは、ローカル・コンシューマーのリターン・タイプやメッセージ・ボディのパラメータに自動的に使用されます。つまり、 `@ConsumeEvent` （デフォルト）でアノテーションされたメソッドです。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "So that you can exchange the message objects as follows:"
msgstr "次のようにメッセージオブジェクトを交換できるようになります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If you want to use a specific codec, you need to set it on both ends explicitly:"
msgstr "特定のコーデックを使用したい場合は、両サイドで明示的に設定する必要があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Set the name of the codec to use to send the message"
msgstr "メッセージの送信に使用するコーデックの名前を設定します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Set the codec to use to receive the message"
msgstr "メッセージの受信に使用するコーデックを設定します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Combine HTTP and the Event Bus"
msgstr "HTTPとEvent Busの組み合わせ"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Let's revisit a greeting HTTP endpoint and use asynchronous message passing to delegate the call to a separated bean.\n"
"It uses the request/reply dispatching mechanism.\n"
"Instead of implementing the business logic inside the Jakarta REST endpoint, we are sending a message.\n"
"Another bean consumes this message, and the response is sent using the _reply_ mechanism."
msgstr "グリーティングHTTPエンドポイントに戻りましょう。非同期メッセージパッシングを使用して、別のBeanへの呼出に委譲してみましょう。これは、request/replyディスパッチメカニズムを使用しています。Jakarta RESTエンドポイント内でビジネスロジックを実装する代わりに、メッセージを送信しています。別の Bean がこのメッセージを消費し、応答は _reply_ メカニズムを使用して送信されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "In your HTTP endpoint class, inject the event bus and uses the `request` method to send a message to the event bus and expect a response:"
msgstr "HTTPエンドポイントクラスでは、イベントバスを注入し、 `request` メソッドを使用して、イベントバスにメッセージを送信し、応答を期待します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "send the `name` to the `greeting` address and request a response"
msgstr "`greeting` アドレスに  `name`  を送信し、レスポンスを要求します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "when we get the response, extract the body and send it to the user"
msgstr "レスポンスを取得したら、ボディを抽出してユーザーに送信します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"the HTTP method returns a `Uni`.\n"
"If you are using Quarkus REST, `Uni` support is built-in.\n"
"If you are using _classic_ RESTEasy, you need to add the `quarkus resteasy-mutiny` extension to your project."
msgstr ""
"HTTP メソッドは `Uni` を返します。\n"
"Quarkus REST を使用している場合は、 `Uni` のサポートが組み込まれています。\n"
"_従来の_ RESTEasy を使用している場合は、 `quarkus resteasy-mutiny` エクステンションをプロジェクトに追加する必要があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"We need a consumer listening on the `greeting` address.\n"
"This consumer can be in the same class or another bean such as:"
msgstr "`greeting` のアドレスをリッスンするコンシューマーが必要です。このコンシューマーは、同じクラスでも、次のような別のBeanでも構いません。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "This bean receives the name and returns the greeting message."
msgstr "このBeanは、名前を受け取り、グリーティングメッセージを返します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "With this in place, every HTTP request on `/bus/quarkus` sends a message to the event bus, waits for a reply, and when this one arrives, writes the HTTP response:"
msgstr "これにより、 `/bus/quarkus` のすべてのHTTPリクエストは、イベントバスにメッセージを送信し、応答を待ち、その応答が到着すると、HTTPレスポンスを書き込みます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To better understand, let's detail how the HTTP request/response has been handled:"
msgstr "より理解しやすくするために、HTTP リクエスト/レスポンスがどのように処理されたかを詳しく見てみましょう。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The request is received by the `greeting` method"
msgstr "リクエストは、 `greeting` メソッドで受信されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "a message containing the _name_ is sent to the event bus"
msgstr "_name_ を含むメッセージがイベントバスに送信されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Another bean receives this message and computes the response"
msgstr "別の Bean がこのメッセージを受信して、レスポンスを計算します."

#: _versions/3.27/guides/vertx-reference.adoc
msgid "This response is sent back using the reply mechanism"
msgstr "このレスポンスは、応答メカニズムを使用して返信されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Once the reply is received by the sender, the content is written to the HTTP response"
msgstr "送信者が応答を受信すると、HTTP レスポンスに内容が書き込まれます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Bidirectional communication with browsers by using SockJS"
msgstr "SockJSによるブラウザとの双方向通信"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The SockJS bridge provided by Vert.x allows browser applications and Quarkus applications to communicate using the event bus.\n"
"It connects both sides.\n"
"So, both sides can send messages received on the other side.\n"
"It supports the three delivery mechanisms."
msgstr "Vert.xが提供するSockJSブリッジは、ブラウザアプリケーションとQuarkusアプリケーションがイベントバスを使って通信できるようにします。双方を接続します。そのため、双方が相手側で受信したメッセージを送信することができます。3つの配信メカニズムをサポートしています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"SockJS negotiates the communication channel between the Quarkus application and the browser.\n"
"If WebSockets are supported, it uses them; otherwise, it degrades to SSE, long polling, etc."
msgstr "SockJSは、Quarkusアプリケーションとブラウザの間の通信チャネルをネゴシエートします。WebSocketがサポートされている場合はそれを使用し、そうでない場合はSSEや長いポーリングなどにダウングレードします。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "So use SockJS, you need to configure the bridge, especially the addresses that will be used to communicate:"
msgstr "SockJSを使用するためには、ブリッジの設定、特に通信に使用されるアドレスの設定が必要です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"This code configures the SockJS bridge to send all the messages targeting the `ticks` address to the connected browsers.\n"
"More detailed explanations about the configuration can be found on https://vertx.io/docs/vertx-web/java/#_sockjs_event_bus_bridge[the Vert.x SockJS Bridge documentation]."
msgstr "このコードは、 `ticks` アドレスをターゲットとするすべてのメッセージを接続されたブラウザに送信するように SockJS ブリッジを設定します。  設定に関するより詳細な説明は、 https://vertx.io/docs/vertx-web/java/#_sockjs_event_bus_bridge[Vert.x SockJS Bridge ドキュメント] に記載されています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The browser must use the `vertx-eventbus` JavaScript library to consume the message:"
msgstr "ブラウザは、メッセージを消費するために、 `vertx-eventbus` JavaScriptライブラリを使用する必要があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use native transports"
msgstr "ネイティブ・トランスポートの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Native transports are not supported in native executables."
msgstr "ネイティブ・トランスポートは、ネイティブ実行可能ファイルではサポートされていません。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To use `io_uring`, refer to the <<use-io_uring>> section."
msgstr "`io_uring` を使用するには、 <<use-io_uring>> のセクションを参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Vert.x is capable of using https://netty.io/wiki/native-transports.html[Netty's native transports], which offers performance improvements on specific platforms.\n"
"To enable them, you must include the appropriate dependency for your platform.\n"
"It's usually a good idea to have both to keep your application platform-agnostic.\n"
"Netty is smart enough to use the correct one, that includes none at all on unsupported platforms:"
msgstr ""
"Vert.xでは、 link:https://netty.io/wiki/native-transports.html[Nettyのネイティブトランスポート] を使用することができ、特定のプラットフォームでパフォーマンスが向上します。\n"
"これを有効にするには、プラットフォームに適した依存関係を含める必要があります。\n"
"通常、アプリケーションをプラットフォームに依存しないようにするためには、両方用意するのがよいでしょう。\n"
"Netty は賢いので、未対応のプラットフォームには全く依存しないなど、正しい方を使用します："

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"You will also have to explicitly configure Vert.x to use the native transport.\n"
"In `application.properties` add:"
msgstr "また、Vert.xでネイティブトランスポートを使用するように明示的に設定する必要があります。 `application.properties` に次を追加します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Or in `application.yml`:"
msgstr "あるいは、 `application.yml` で次のように設定します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If all is well quarkus will log:"
msgstr "すべてがうまくいけば、クァーカス以下のログ出力を行います。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "[io.qua.ver.cor.run.VertxCoreRecorder] (main) Vertx has Native Transport Enabled: true"
msgstr "[io.qua.ver.cor.run.VertxCoreRecorder] (main) Vertx has Native Transport Enabled: true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Native Linux transport"
msgstr "Linuxのネイティブ・トランスポート"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "On Linux you can enable the following socket options:"
msgstr "Linuxでは、以下のソケットオプションを有効にすることができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "SO_REUSEPORT"
msgstr "SOREUSEPORT"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "quarkus.http.so-reuse-port=true"
msgstr "quarkus.http.so-reuse-port=true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "TCP_QUICKACK"
msgstr "TCP_QUICKACK"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-quick-ack=true"
msgstr "quarkus.http.tcp-quick-ack=true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "TCP_CORK"
msgstr "TCP_CORK"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-cork=true"
msgstr "quarkus.http.tcp-cork=true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "TCP_FASTOPEN"
msgstr "TCP_FASTOPEN"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-fast-open=true"
msgstr "quarkus.http.tcp-fast-open=true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Native macOS transport"
msgstr "macOSのネイティブ・トランスポート"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "On macOS Sierra and above you can enable the following socket options:"
msgstr "MacOS Sierra以上では、以下のソケットオプションを有効にすることができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use a Vert.x context-aware scheduler"
msgstr "Vert.x コンテキスト対応スケジューラの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Some Mutiny operators need to schedule work on an executor thread pool.\n"
"A good example is `.onItem().delayIt().by(Duration.ofMillis(10))` as it needs such an executor to delay emissions."
msgstr ""
"一部の Mutiny オペレーターは、エグゼキュータースレッドプールで処理をスケジュールする必要があります。\n"
"良い例は `.onItem().delayIt().by(Duration.ofMillis(10))` です。これは、発行を遅延させるようなエグゼキューターが必要なためです。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The default executor is returned by `io.smallrye.mutiny.infrastructure.Infrastructure` and it is already configured and managed by Quarkus."
msgstr "デフォルトのエクゼキュータは、 `io.smallrye.mutiny.infrastructure.Infrastructure` によって返却され、Quarkusによってすでに設定、管理されています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "That being said, there are cases where you need to make sure that an operation is run on a Vert.x (duplicated) context and not just on any random thread."
msgstr "しかし、任意のスレッドではなく、Vert.x の (複製された) コンテキストで操作を実行する必要がある場合もあります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The `io.smallrye.mutiny.vertx.core.ContextAwareScheduler` interface offers an API to obtain context-aware schedulers.\n"
"Such a scheduler is configured with:"
msgstr ""
"`io.smallrye.mutiny.vertx.core.ContextAwareScheduler` インターフェイスは、コンテキスト対応スケジューラーを取得するための API を提供します。\n"
"このようなスケジューラーは以下によって設定されます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "a delegate `ScheduledExecutorService` of your choice (hint: you can reuse `Infrastructure.getDefaultWorkerPool()`), and"
msgstr "選択したデリゲート `ScheduledExecutorService` (ヒント: `Infrastructure.getDefaultWorkerPool()` を再利用できます)、および"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "a context fetching strategy among:"
msgstr "以下のコンテキスト取得ストラテジー"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "an explicit `Context`, or"
msgstr "明示的な `Context`、または"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "calling `Vertx::getOrCreateContext()` either on the current thread or later when the scheduling request happens, or"
msgstr "現在のスレッドまたは後でスケジュールリクエストが発生したときに `Vertx::getOrCreateContext()` を呼び出す、または"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "calling `Vertx::currentContext()`, which fails if the current thread is not a Vert.x thread."
msgstr "`Vertx::currentContext()` を呼び出す。これは、現在のスレッドが Vert.x スレッドでない場合、失敗します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Here is a sample where `ContextAwareScheduler` is used:"
msgstr "以下は `ContextAwareScheduler` が使用されているサンプルです。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"In this example a scheduler is created by capturing the context of the Vert.x event-loop that calls `asyncStart()`.\n"
"The `delayIt` operator uses that scheduler, and we can check that the context that we get in `invoke` is a Vert.x duplicated context where the data for key `\"foo\"` has been propagated."
msgstr ""
"この例では、 `asyncStart()` を呼び出す Vert.x イベントループのコンテキストをキャプチャーすることによってスケジューラーが作成されます。\n"
"`delayIt` オペレーターはそのスケジューラーを使用しています。 `invoke` で取得したコンテキストが、キー `\"foo\"` のデータが伝播された Vert.x の複製されたコンテキストであることを確認できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use a Unix domain socket"
msgstr "Unixドメインソケットの使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Listening on a Unix domain socket allows us to dispense with the overhead of TCP\n"
"if the connection to the quarkus service is established from the same host.\n"
"This can happen if access to the service goes through a proxy which is often the case\n"
"if you're setting up a service mesh with a proxy like Envoy."
msgstr "Unixドメインソケットでリスニングすることにより、quarkusサービスへの接続が同じホストから確立されている場合、TCPのオーバーヘッドを省略することができます。これは、サービスへのアクセスがプロキシを経由する場合に起こります。Envoyのようなプロキシを使ってサービスメッシュを設定している場合によく見られます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "This will only work on platforms that support <<native-transport>>."
msgstr "これは、 link:#native-transport[[native-transport]] をサポートするプラットフォームでのみ動作します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Enable the appropriate <<native-transport>> and set the following environment property:"
msgstr "適切な <<native-transport>> を有効にし、以下の環境プロパティを設定します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"quarkus.http.domain-socket=/var/run/io.quarkus.app.socket\n"
"quarkus.http.domain-socket-enabled=true\n"
"\n"
"quarkus.vertx.prefer-native-transport=true"
msgstr ""
"quarkus.http.domain-socket=/var/run/io.quarkus.app.socket\n"
"quarkus.http.domain-socket-enabled=true\n"
"\n"
"quarkus.vertx.prefer-native-transport=true"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"By itself this will not disable the tcp socket which by default will open on\n"
"`0.0.0.0:8080`. It can be explicitly disabled:"
msgstr "これだけでは、デフォルトで `0.0.0.0:8080` で開かれる tcp ソケットを無効にすることはできません。これは次のように明示的に無効にすることができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "quarkus.http.host-enabled=false"
msgstr "quarkus.http.host-enabled=false"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"These properties can be set through Java's `-D` command line parameter or\n"
"on `application.properties`."
msgstr "これらのプロパティは、Javaの `-D` コマンドライン・パラメータまたは `application.properties` で設定できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Do not forget to add the native transport dependency.\n"
"See <<native-transport>> for details."
msgstr "ネイティブのトランスポート依存関係を追加することを忘れないでください。 詳細については、<<native-transport>> を参照してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Make sure your application has the right permissions to write to the socket."
msgstr "アプリケーションがソケットに書き込むための適切なアクセス許可を持っていることを確認してください。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Use io_uring"
msgstr "io_uringを使用"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io_uring` is not supported in native executables."
msgstr "`io_uring` はネイティブ実行可能ファイルではサポートされていません。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`io_uring` support is experimental"
msgstr "`io_uring` サポートは実験的です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"`io_uring` is a Linux kernel interface that allows you to send and receive data asynchronously.\n"
"It provides unified semantics for both file and network I/O.\n"
"It was originally designed to target block devices and files but has since gained the ability to work with things like network sockets.\n"
"It has the potential to provide modest performance benefits to network I/O on its own and greater benefits for mixed file and network I/O application workloads."
msgstr ""
"`io_uring` は、非同期にデータを送受信できる Linux カーネルインターフェースです。\n"
"ファイルI/OとネットワークI/Oの両方に統一されたセマンティクスを提供します。\n"
"もともとはブロックデバイスとファイルをターゲットに設計されましたが、その後、ネットワークソケットのようなものと連携できるようになりました。\n"
"ネットワークI/O単体ではそこそこの性能上の利点を発揮し、ファイルI/OとネットワークI/Oが混在するアプリケーション負荷ではより大きな効果を発揮する可能性があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To learn more about `io_uring`, we recommend the following links:"
msgstr "`io_uring` についてもっと知るには、以下のリンクをお勧めします："

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"https://developers.redhat.com/articles/2023/04/12/why-you-should-use-iouring-network-io[Why you should use io_uring for network I/O]: The main benefit of io_uring for network I/O is a modern asynchronous API that is straightforward to use and provides unified semantics for file and network I/O.\n"
"A potential performance benefit of io_uring for network I/O is reducing the number of syscalls.\n"
"This could provide the biggest benefit for high volumes of small operations where the overhead of system calls can be significant."
msgstr ""
"https://developers.redhat.com/articles/2023/04/12/why-you-should-use-iouring-network-io[Why you should use io_uring for network I/O]: ネットワーク I/O に対する io_uring の主な利点は、ファイルとネットワーク I/O に統一されたセマンティクスを提供する使いやすい最新の非同期 API です。\n"
"ネットワーク I/O に対する io_uring の潜在的なパフォーマンス上の利点は、システムコールの数を減らすことです。\n"
"これは、大量の小規模な操作により、システムコールのオーバーヘッドが大きくなる可能性がある場合に最大の利点をもたらす可能性があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"https://dzone.com/articles/the-backend-revolution-or-why-io-uring-is-so-impor[The Backend Revolution and Why io_uring Is So Important]: The io_uring API uses two ring buffers for communication between application and kernel (hence the API name) and designed in a way that enables natural batching of requests and responses.\n"
"Besides, it provides a way to submit multiple requests in one system call, which can reduce overhead."
msgstr ""
"https://dzone.com/articles/the-backend-revolution-or-why-io-uring-is-so-impor[The Backend Revolution and Why io_uring Is So Important]: io_uring API は、アプリケーションとカーネル間の通信に 2 つのリングバッファーを使用し (これが API 名の由来です)、リクエストとレスポンスの自然なバッチ処理を可能にするように設計されています。\n"
"さらに、1 回のシステムコールで複数のリクエストを送信する方法を提供するため、オーバーヘッドを削減できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"https://stackoverflow.com/questions/61767702/what-exactly-is-io-uring[What exactly is io_uring?]: io_uring is a Linux kernel interface to efficiently allow you to send and receive data asynchronously.\n"
"It was originally designed to target block devices and files but has since gained the ability to work with things like network sockets."
msgstr ""
"https://stackoverflow.com/questions/61767702/what-exactly-is-io-uring[What exactly is io_uring?]: io_uring は、データを非同期に効率的に送受信できるようにする Linux カーネルインターフェイスです。\n"
"もともとはブロックデバイスとファイルを対象に設計されていましたが、その後、ネットワークソケットなどでも動作するようになりました。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"To use `io_uring`, you need to add two dependencies to your project and enable native transport.\n"
"First add the following dependencies to your project:"
msgstr ""
"`io_uring` を使用するには、プロジェクトに 2 つの依存関係を追加し、ネイティブトランスポートを有効にする必要があります。\n"
"まず、プロジェクトに次の依存関係を追加します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Then, in the `application.properties`, add:"
msgstr "次に、 `application.properties` に以下を追加します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Can I use io_uring on my Linux machine?"
msgstr "Linuxマシンでio_uringは使えますか？"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "To check if you can use `io_uring` on your Linux machine, execute the following command:"
msgstr "Linuxマシンで `io_uring` が使用できるかどうかを確認するには、以下のコマンドを実行してください："

#: _versions/3.27/guides/vertx-reference.adoc
msgid "If it prints something like above, you can use `io_uring`."
msgstr "もし上記のように表示されたら、 `io_uring` を使用することが可能です。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"`io_uring` support is still experimental.\n"
"Check the https://github.com/netty/netty-incubator-transport-io_uring#faq[Netty io_uring FAQ] if you see some odd behavior.\n"
"Also, the https://github.com/netty/netty-incubator-transport-io_uring/issues/152[netty io_uring was slower than epoll] issue describes a few configuration mistakes."
msgstr ""
"`io_uring` のサポートはまだ実験的です。\n"
"奇妙な動作があった場合は link:https://github.com/netty/netty-incubator-transport-io_uring#faq[Netty io_uring FAQ] をチェックしてください。\n"
"また、 link:https://github.com/netty/netty-incubator-transport-io_uring/issues/152[netty io_uringがepollより遅い] issueでは、いくつかの設定ミスが説明されています。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Domain sockets are not yet supported with io_uring."
msgstr "ドメイン・ソケットはio_uringではまだサポートされていません。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The Vert.x asynchronous file system API does not use io_uring yet."
msgstr "Vert.xの非同期ファイルシステムAPIは、まだio_uringを使用していません。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Deploy on read-only environments"
msgstr "読み取り専用環境へのデプロイ"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "In environments with read only file systems you may receive errors of the form:"
msgstr "ファイルシステムが読み取り専用の環境では、次のようなエラーが発生することがあります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Assuming `/tmp/` is writable this can be fixed by setting the `vertx.cacheDirBase` property to point to a directory in `/tmp/` for instance in Kubernetes by creating an environment variable `JAVA_OPTS` with the value `-Dvertx.cacheDirBase=/tmp/vertx`, or setting the `quarkus.vertx.cache-directory` property in `application.properties`:"
msgstr "`/tmp/` が書き込み可能である場合、これは `vertx.cacheDirBase` プロパティーが `/tmp/` のディレクトリーを指すように設定することで修正できます。たとえば、Kubernetes で `JAVA_OPTS` 環境変数を作成して `-Dvertx.cacheDirBase=/tmp/vertx` という値を設定するか、 `application.properties` で `quarkus.vertx.cache-directory` プロパティーを設定します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Customize the Vert.x configuration"
msgstr "Vert.x設定のカスタマイズ"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"The configuration of the managed Vert.x instance can be provided using the `application.properties` file, but also using _special beans_.\n"
"CDI beans exposing the `io.quarkus.vertx.VertxOptionsCustomizer` interface can be used to customize the Vert.x configuration.\n"
"For example, the following customizer change the `tmp` base directory:"
msgstr "マネージド Vert.x インスタンスの設定は、 `application.properties` ファイルを使用して提供できますが、_special bean_ を使用することもできます。 `io.quarkus.vertx.VertxOptionsCustomizer` インターフェイスを公開する CDI Bean を使用して、Vert.x 設定をカスタマイズできます。 たとえば、次のカスタマイザは `tmp` ベース ディレクトリを変更します。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "The _customizer_ beans received the `VertxOptions` (coming from the application configuration), and can modify them."
msgstr "_customizer_ Beanは、(アプリケーションの設定に由来する) `VertxOptions` を受け取り、それを修正することができます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Brotli4J and cross-platform support"
msgstr "Brotli4J とクロスプラットフォームのサポート"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"Brotli4J is a native library that provides support for the Brotli compression algorithm.\n"
"By default, Quarkus includes the Brotli native library matching the platform you are running on.\n"
"But sometimes, you need to include the native library for a different platform."
msgstr ""
"Brotli4J は、Brotli 圧縮アルゴリズムのサポートを提供するネイティブライブラリーです。\n"
"Quarkus には、ご使用のプラットフォームに合った Brotli ネイティブライブラリーがデフォルトで含まれています。\n"
"ただし、場合によっては、別のプラットフォーム用のネイティブライブラリーを含める必要があります。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid ""
"In this case, you need to explicitly add a dependency to your project.\n"
"For example, if you need to include the native library for `linux-aarch64`, you can add the following dependency:"
msgstr ""
"この場合、プロジェクトに依存関係を明示的に追加する必要があります。\n"
"たとえば、 `linux-aarch64` のネイティブライブラリーを含める必要がある場合は、次の依存関係を追加できます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "This will include the native library for `linux-aarch64` in your project, in addition to the one matching your machine."
msgstr "これにより、ご使用のマシンに合ったライブラリーに加えて、 `linux-aarch64` のネイティブライブラリーがプロジェクトに含まれます。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "Here is the list of available brotli4j artifacts for the different platforms:"
msgstr "さまざまなプラットフォームで利用可能な brotli4j アーティファクトのリストは次のとおりです。"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-x86_64`"
msgstr "`native-linux-x86_64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-s390x`"
msgstr "`native-linux-s390x`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-ppc64le`"
msgstr "`native-linux-ppc64le`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-aarch64`"
msgstr "`native-linux-aarch64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-armv7`"
msgstr "`native-linux-armv7`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-linux-riscv64`"
msgstr "`native-linux-riscv64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-windows-x86_64`"
msgstr "`native-windows-x86_64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-windows-aarch64`"
msgstr "`native-windows-aarch64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-macos-x86_64`"
msgstr "`native-macos-x86_64`"

#: _versions/3.27/guides/vertx-reference.adoc
msgid "`native-macos-aarch64`"
msgstr "`native-macos-aarch64`"
