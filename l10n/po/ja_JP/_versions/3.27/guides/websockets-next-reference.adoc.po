msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "WebSockets Next reference guide"
msgstr "WebSockets Next リファレンスガイド"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr "`quarkus-websockets-next` エクステンションは、WebSocket サーバーおよびクライアントエンドポイントを定義するための最新の宣言型 API を提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The WebSocket protocol"
msgstr "WebSocket プロトコル"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr ""
"https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] に記載されている _WebSocket_ プロトコルは、単一の TCP 接続を介してクライアントとサーバー間の双方向通信チャネルを作成するための標準化された方法を確立します。\n"
"HTTP とは異なり、WebSocket は別個の TCP プロトコルとして動作しますが、HTTP とシームレスに連携して機能するように設計されています。\n"
"たとえば、同じポートを再利用し、同じセキュリティーメカニズムと互換性があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr ""
"WebSocket を使用したやり取りは、WebSocket プロトコルに移行するための 'Upgrade' ヘッダーを使用する HTTP リクエストで開始されます。\n"
"サーバーは、 `200 OK` レスポンスの代わりに `101 Switching Protocols` レスポンスを返し、HTTP 接続を WebSocket 接続へとアップグレードします。\n"
"このハンドシェイクが成功すると、最初の HTTP アップグレードリクエストで使用された TCP ソケットは開いたままとなり、クライアントとサーバーの双方が継続的に双方向のメッセージをやり取りできるようになります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTP および WebSocket アーキテクチャースタイル"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "WebSocket は HTTP と互換性があり、HTTP リクエストを通じて開始されますが、2 つのプロトコルは異なるアーキテクチャーとプログラミングモデルを導くため、その違いを認識することが重要です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr ""
"HTTP/REST では、アプリケーションはリソース/エンドポイントを中心に構成され、さまざまな HTTP メソッドやパスを処理します。\n"
"クライアントとのやり取りは、適切なメソッドとパスを指定した HTTP リクエストを送信することで行われ、リクエスト/レスポンスのパターンに従います\n"
"サーバーは、パス、メソッド、ヘッダーに基づいて、受信したリクエストを対応するハンドラーにルーティングし、明確に定義されたレスポンスで返します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr ""
"逆に、WebSocket では通常、最初の HTTP 接続に単一のエンドポイントが使用され、その後、すべてのメッセージが同じ TCP 接続を利用します。\n"
"これにより、非同期かつメッセージ駆動型のまったく異なるインタラクションモデルが導入されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr ""
"WebSocket は、HTTP とは対照的に、低レベルのトランスポートプロトコルです。\n"
"メッセージの形式、ルーティング、または処理には、メッセージのセマンティクスに関するクライアントとサーバー間の事前の合意が必要です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "WebSocket クライアントとサーバーの場合、HTTP ハンドシェイクリクエストの `Sec-WebSocket-Protocol` ヘッダーにより、より高レベルのメッセージングプロトコルのネゴシエーションが可能になります。このヘッダーがない場合、サーバーとクライアントは独自の規則を確立する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSockets と Quarkus WebSockets Next"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr ""
"このガイドでは、従来の `quarkus-websockets` エクステンションに比べ、効率性と使いやすさが向上した WebSocket API の実装である `quarkus-websockets-next` エクステンションを利用します。\n"
"オリジナルの `quarkus-websockets` エクステンションは引き続きアクセス可能で、継続的なサポートが提供されますが、機能開発が行われる可能性は低いです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr ""
"`quarkus-websockets` とは異なり、 `quarkus-websockets-next` エクステンションは Jakarta WebSocket 仕様を **実装していません**。\n"
"代わりに、使いやすさを重視した最新の API を導入しています。\n"
"さらに、Quarkus のリアクティブアーキテクチャーおよびネットワーク層とシームレスに統合するように調整されています。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr ""
"Quarkus WebSockets Next エクステンションで使用されるアノテーションは、同じ名前を共有する場合もありますが、JSR 356 のアノテーションとは異なります。\n"
"JSR アノテーションには、Quarkus WebSockets Next エクステンションが従わないセマンティクスが含まれています。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Project setup"
msgstr "プロジェクトのセットアップ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr "`websockets-next` エクステンションを使用するには、プロジェクトに `io.quarkus:quarkus-websockets-next` 依存関係を追加する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Endpoints"
msgstr "Endpoints"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Both the <<server-api>> and <<client-api>> define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPingMessage`, `@OnPongMessage`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr ""
"<<server-api>> and <<client-api>> は両方とも、メッセージを消費および送信するために使用される _エンドポイント_ を定義します。\n"
"エンドポイントは CDI Bean として実装され、注入をサポートします。\n"
"エンドポイントは、 `@OnTextMessage`、 `@OnBinaryMessage`、 `@OnPingMessage`、 `@OnPongMessage`、 `@OnOpen`、 `@OnClose` および `@OnError` アノテーションが付けられた <<callback-methods,_callback methods_>> を宣言します。\n"
"これらのメソッドは、さまざまな WebSocket イベントを処理するために使用されます。\n"
"通常、接続されたクライアントがサーバーにメッセージを送信するとき、およびサーバーが接続されたクライアントにメッセージを送信するときに、 `@OnTextMessage` アノテーションが付けられたメソッドが呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr "クライアント API には、新しい WebSocket 接続を設定および作成するために使用される <<client-connectors,connectors>> も含まれています。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Server endpoints"
msgstr "サーバーエンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr ""
"サーバーエンドポイントは、 `@io.quarkus.websockets.next.WebSocket` アノテーションが付けられたクラスです。\n"
"`WebSocket#path()` の値は、エンドポイントのパスを定義するために使用されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr ""
"したがって、クライアントは `ws://localhost:8080/chat/your-name` を使用して、この Web ソケットエンドポイントに接続できます。\n"
"TLS が使用されている場合、URL は `wss://localhost:8443/chat/your-name` です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr "エンドポイントパスは、 `quarkus.http.root-path` (デフォルトでは `/`) によって設定された xref:http-reference.adoc#context-path[root context] に対して相対的です。たとえば、 `application.properties` に `quarkus.http.root-path=/api` を追加すると、クライアントは `http://localhost:8080/api/chat/the-name` を使用してこのエンドポイントに接続できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Client endpoints"
msgstr "クライアントエンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr ""
"クライアントエンドポイントは、 `@io.quarkus.websockets.next.WebSocketClient` アノテーションが付けられたクラスです。\n"
"`WebSocketClient#path()` の値は、このクライアントが接続されるエンドポイントのパスを定義するために使用されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr "クライアントエンドポイントは、メッセージの受信と送信に使用されます。新しい WebSocket 接続を設定して開くには、<<client-connectors,connectors API>> が必要です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Path parameters"
msgstr "パスパラメーター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr ""
"WebSocket エンドポイントのパスには、パスパラメーターを含めることができます。\n"
"構文は JAX-RS リソースの場合と同じです: `{parameterName}`"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr ""
"パスパラメーター値には、それぞれ `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` メソッドまたは `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` を使用してアクセスできます。\n"
"あるいは、 `@io.quarkus.websockets.next.PathParam` アノテーションが付与されたエンドポイントコールバックメソッドパラメーターが自動的に注入されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr "`WebSocketConnection#pathParam(String)` の例"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr ""
"パスパラメーターの値は常に文字列です。\n"
"パス内にパスパラメーターが存在しない場合、 `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` メソッドは `null` を返します。\n"
"`@PathParam` アノテーションが付けられたエンドポイントコールバックメソッドパラメーターがあり、パラメーター名がエンドポイントパスで定義されていない場合、ビルドは失敗します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr "クエリーパラメーターはサポートされていません。ただし、 `WebSocketConnection#handshakeRequest().query()` を使用してクエリーにアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "CDI scopes"
msgstr "CDI スコープ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr ""
"エンドポイントは CDI Bean として管理されます。\n"
"デフォルトでは、 `@Singleton` スコープが使用されます。\n"
"ただし、開発者は特定の要件に合わせて代替スコープを指定できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr ""
"`@Singleton` および `@ApplicationScoped` エンドポイントは、すべての WebSocket 接続間で共有されます。\n"
"したがって、実装はステートレスまたはスレッドセーフのいずれかである必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Session context"
msgstr "セッションコンテキスト"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"If an endpoint is annotated with `@SessionScoped`, or depends directly or indirectly on a `@SessionScoped` bean, then each WebSocket connection is associated with its own _session context_.\n"
"The session context is active during endpoint callback invocation.\n"
"Subsequent invocations of <<callback-methods>> within the same connection utilize the same session context.\n"
"The session context remains active until the connection is closed (usually when the `@OnClose` method completes execution), at which point it is terminated."
msgstr ""
"エンドポイントに `@SessionScoped` アノテーションが付与されている場合、またはエンドポイントが直接的または間接的に `@SessionScoped` Bean に依存している場合、各 WebSocket 接続は独自の _セッションコンテキスト_ に関連付けられます。\n"
"セッションコンテキストは、エンドポイントコールバックの呼び出し中にアクティブになります。\n"
"同じ接続内で後続の <<callback-methods>> が呼び出される場合、同じセッションコンテキストが利用されます。\n"
"セッションコンテキストは、接続が閉じられるまで (通常は `@OnClose` メソッドの実行が完了したとき) アクティブなままになり、接続が閉じられた時点で終了します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-session-context` config property to `always`. In this case, the session context is always activated, no matter if a `@SessionScoped` bean participates in the dependency tree."
msgstr "`quarkus.websockets-next.server.activate-session-context` 設定プロパティーを `always` に設定することもできます。この場合、 `@SessionScoped` Bean が依存関係ツリーに参加しているかどうかに関係なく、セッションコンテキストは常にアクティブ化されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`@SessionScoped` Endpoint"
msgstr "`@SessionScoped` エンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "This server endpoint is not shared and is scoped to the session/connection."
msgstr "このサーバーエンドポイントは共有されず、セッション/接続に限定されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Request context"
msgstr "リクエストコンテキスト"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Each WebSocket endpoint callback method execution is associated with a new CDI _request context_ if the endpoint is:"
msgstr "エンドポイントが以下の場合、各 WebSocket エンドポイントコールバックメソッドの実行は、新しい CDI _リクエストコンテキスト_ に関連付けられます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Annotated with the `@RequestScoped` annotation."
msgstr "`@RequestScoped` アノテーションが付けられています。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Has a method annotated with a security annotation such as `@RolesAllowed`."
msgstr "`@RolesAllowed` などのセキュリティーアノテーションが付けられたメソッドがあります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a `@RequestScoped` bean."
msgstr "`@RequestScoped` Bean に直接的または間接的に依存します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a CDI beans secured with a standard security annotation."
msgstr "標準のセキュリティーアノテーションで保護された CDI Bean に直接的または間接的に依存します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-request-context` config property to `always`. In this case, the request context is always activated when an endpoint callback is invoked."
msgstr "`quarkus.websockets-next.server.activate-request-context` 設定プロパティーを `always` に設定することもできます。この場合、エンドポイントコールバックが呼び出されると、リクエストコンテキストが常にアクティブ化されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`@RequestScoped` Endpoint"
msgstr "`@RequestScoped` エンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "This server endpoint is instantiated for each callback method execution."
msgstr "このサーバーエンドポイントは、コールバックメソッドの実行ごとにインスタンス化されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Callback methods"
msgstr "コールバックメソッド"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "A WebSocket endpoint may declare:"
msgstr "WebSocket エンドポイントは以下を宣言できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr "最大 1 つの `@OnTextMessage` メソッド: 接続されたクライアント/サーバーからのテキストメッセージを処理します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr "最大 1 つの `@OnBinaryMessage` メソッド: 接続されたクライアント/サーバーからのバイナリーメッセージを処理します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnPingMessage` method: Handles the ping messages from the connected client/server."
msgstr "最大 1 つの `@OnPingMessage` メソッド: 接続されたクライアント/サーバーからの ping メッセージを処理します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr "最大 1 つの `@OnPongMessage` メソッド: 接続されたクライアント/サーバーからの pong メッセージを処理します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr "最大 1 つの `@OnOpen` メソッド: 接続が開かれたときに呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr "最大 1 つの `@OnClose` メソッド: 接続が閉じられたときに実行されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任意の数の `@OnError` メソッド: エラーが発生したときに呼び出されます。つまり、エンドポイントコールバックがランタイムエラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` が失敗を受け取ったときです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr ""
"一部のエンドポイントのみにすべてのメソッドを含める必要があります。\n"
"ただし、少なくとも `@On[Text|Binary]Message` または `@OnOpen` が含まれている必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr ""
"いずれかのエンドポイントがこれらのルールに違反すると、ビルド時にエラーがスローされます。\n"
"sub-websocket を表す静的なネストされたクラスは同じガイドラインに従います。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "WebSocket エンドポイントの外部で `@OnTextMessage`、 `@OnBinaryMessage`、 `@OnOpen`、および `@OnClose` アノテーションが付与されたメソッドはエラーとみなされ、適切なエラーメッセージが表示されてビルドが失敗します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Processing messages"
msgstr "メッセージの処理"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "クライアントからメッセージを受信するメソッドには、 `@OnTextMessage` または `@OnBinaryMessage` アノテーションが付けられます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr ""
"`OnTextMessage` は、クライアントから受信されるすべての _テキスト_ メッセージに対して呼び出されます。\n"
"`OnBinaryMessage` は、クライアントが受信するすべての _バイナリー_ メッセージに対して呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Invocation rules"
msgstr "呼び出しルール"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When invoking the callback methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr ""
"コールバックメソッドを呼び出すと、WebSocket 接続にリンクされた _セッション_ スコープはアクティブなままになります。\n"
"さらに、リクエストスコープはメソッドが完了するまで (または非同期メソッドとリアクティブメソッドの場合は結果が生成されるまで) アクティブです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined from the return type of the method and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "WebSocket Next は、Quarkus REST に似た、メソッドの戻り値のタイプと `@Blocking` や `@NonBlocking` などの追加のアノテーションで決定される、_ブロッキング_ と _ノンブロッキング_ ロジックをサポートします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Here are the rules governing execution:"
msgstr "実行に関するルールは次のとおりです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@RunOnVirtualThread`, `@Blocking` or `@Transactional` are considered blocking."
msgstr "`@RunOnVirtualThread`、 `@Blocking`、または `@Transactional` アノテーションが付与されたメソッドは、ブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@RunOnVirtualThread` are considered blocking."
msgstr "`@RunOnVirtualThread` アノテーションが付けられたクラスで宣言されたメソッドは、ブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@NonBlocking` are considered non-blocking."
msgstr "`@NonBlocking` アノテーションが付けられたメソッドは、ノンブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@Transactional` are considered blocking unless annotated with `@NonBlocking`."
msgstr "`@Transactional` アノテーションが付けられたクラスで宣言されたメソッドは、 `@NonBlocking` アノテーションが付けられていない限り、ブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "If the method does not declare any of the annotations listed above the execution model is derived from the return type:"
msgstr "メソッドが上記のアノテーションのいずれも宣言していない場合、実行モデルは戻り値の型から派生します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods returning `Uni` and `Multi` are considered non-blocking."
msgstr "`Uni` および `Multi` を返すメソッドは、ノンブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods returning `void` or any other type are considered blocking."
msgstr "`void` またはその他のタイプを返すメソッドは、ブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Kotlin `suspend` functions are always considered non-blocking and may not be annotated with `@Blocking`, `@NonBlocking`\n"
"or `@RunOnVirtualThread` and may not be in a class annotated with `@RunOnVirtualThread`."
msgstr ""
"Kotlin の `suspend` 関数は常にノンブロッキングとみなされるため、 `@Blocking`、 `@NonBlocking`、 `@RunOnVirtualThread` アノテーションのいずれかを付与することはできません。\n"
"また、 `@RunOnVirtualThread` アノテーションが付けられたクラス内に含めることもできません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Non-blocking methods must execute on the connection's event loop thread."
msgstr "ノンブロッキングメソッドは、接続のイベントループスレッドで実行する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Blocking methods must execute on a worker thread unless annotated with `@RunOnVirtualThread` or in a class annotated\n"
"with `@RunOnVirtualThread`."
msgstr ""
"ブロッキングメソッドは、 `@RunOnVirtualThread` アノテーションが付けられている場合、または、 `@RunOnVirtualThread` アノテーションがクラスに付けられている場合を除き、\n"
"ワーカースレッド上で実行される必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Methods annotated with `@RunOnVirtualThread` or declared in class annotated with `@RunOnVirtualThread` must execute on\n"
"a virtual thread, each invocation spawns a new virtual thread."
msgstr ""
"`@RunOnVirtualThread` アノテーションが付与されたメソッド、または `@RunOnVirtualThread` アノテーションが付与されたクラスで宣言されたメソッドは、\n"
"仮想スレッド上で実行される必要があります。仮想スレッドは、呼び出しのたび新しく生成されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Method parameters"
msgstr "メソッドパラメーター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The method must accept exactly one message parameter:"
msgstr "メソッドは、メッセージパラメーターを 1 つのみ受け入れる必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The message object (of any type)."
msgstr "メッセージオブジェクト (任意のタイプ)。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "A `Multi<X>` with X as the message type."
msgstr "メッセージタイプが X の `Multi<X>`。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "However, it may also accept the following parameters:"
msgstr "ただし、次のパラメーターも受け入れる場合があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr "`WebSocketConnection`/`WebSocketClientConnection`"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`@PathParam` アノテーションが付けられた `String` パラメーター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "メッセージオブジェクトは送信されたデータを表し、raw のコンテンツ (`String`、 `JsonObject`、 `JsonArray`、 `Buffer`、または `byte[]`) またはデシリアライズされた高レベルオブジェクトとしてアクセスできます。後者のアプローチが推奨されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"If the method returns a `Multi` (constructed from the received one), Quarkus will automatically subscribe to it and write the emitted items until completion, failure, or cancellation.\n"
"However, if your method does not return a `Multi`, you must subscribe to the incoming `Multi` to consume the data."
msgstr ""
"`Multi` を受信すると、メソッドは接続ごとに 1 回呼び出され、提供された `Multi` はこの接続によって送信された項目を受信します。\n"
"メソッドが `Multi` (受信したものから構築) を返す場合、Quarkus は自動的にそれをサブスクライブし、完了、失敗、またはキャンセルされるまで、発行された項目を書き込みます。\n"
"ただし、メソッドが `Multi` を返さない場合は、データを使用するために受信した `Multi` をサブスクライブする必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Here are two examples:"
msgstr "2 つの例があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the incoming `Multi`."
msgstr "受信した `Multi` のサブスクライブに関する詳細は、<<subscribe-or-not-subscribe>> を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Supported return types"
msgstr "サポートされている戻り値のタイプ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "`@OnTextMessage` または `@OnBinaryMessage` アノテーションが付与されたメソッドは、WebSocket 通信を効率的に処理するためにさまざまなタイプを返すことができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void`: 明示的なレスポンスがクライアントに返されないブロッキングメソッドを示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>`: 返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを示します。明示的なレスポンスはクライアントに返されません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` タイプのオブジェクトは、返されたオブジェクトがシリアライズされ、レスポンスとしてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>`: null 以外の `Uni` によって発行された項目がレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>`: null 以外の `Multi` によって発行された項目が完了またはキャンセルされるまでクライアントに順番に送信されるノンブロッキングメソッドを示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: 明示的なレスポンスがクライアントに返されないノンブロッキングメソッドを示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr "`X` を返す Kotlin の `suspend` 関数: 返された項目がレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Here are some examples of these methods:"
msgstr "これらの方法の例をいくつか示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Methods returning `Uni` and `Multi` are considered non-blocking.\n"
"In addition, Quarkus automatically subscribes to the returned `Multi` / `Uni` and writes the emitted items until completion, failure, or cancellation.\n"
"Failure or cancellation terminates the connection."
msgstr ""
"`Uni` および `Multi` を返すメソッドは、ノンブロッキングとみなされます。\n"
"さらに、Quarkus は返された `Multi`/`Uni` を自動的にサブスクライブし、完了、失敗、またはキャンセルされるまで、発行された項目を書き込みます。\n"
"失敗またはキャンセルにより接続が終了します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Streams"
msgstr "ストリーム"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr ""
"WebSocket エンドポイントは、個々のメッセージに加えて、メッセージのストリームも処理できます。\n"
"この場合、メソッドは `Multi<X>` をパラメーターとして受け取ります。\n"
"`X` の各インスタンスは、上記と同じルールを使用してデシリアライズされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr ""
"`Multi` を受け取るメソッドは、別の `Multi` または `void` を返すことができます。\n"
"メソッドが `Multi` を返す場合、受信する `multi` をサブスクライブする必要はありません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "This approach allows bi-directional streaming."
msgstr "このアプローチにより、双方向のストリーミングが可能になります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When the method returns `void`, and so does not return a `Multi`, the code must subscribe to the incoming `Multi`.\n"
"Otherwise, no data will be consumed, and the connection will not be closed:"
msgstr ""
"メソッドが `void` を返し、 `Multi` を返さない場合、コードは受信する `Multi` をサブスクライブする必要があります。\n"
"そうしないと、データが消費されず、接続が閉じられません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Also note that the `stream` method will complete before the `Multi` completes."
msgstr "また、 `stream` メソッドは `Multi` が完了する前に完了することに注意してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Skipping reply"
msgstr "返信をスキップする"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr ""
"メソッドがクライアントに書き込まれるメッセージを生成することを意図している場合、 `null` を発行できます。\n"
"`null` を発行すると、クライアントにレスポンスが送信されないことを意味し、必要なときにレスポンスをスキップできるようになります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "JsonObject and JsonArray"
msgstr "JsonObject および JsonArray"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr ""
"Vert.x の `JsonObject` および `JsonArray` インスタンスは、シリアライゼーションおよびデシリアライゼーションのメカニズムをバイパスします。\n"
"メッセージはテキストメッセージとして送信されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "OnOpen and OnClose methods"
msgstr "OnOpen および OnClose メソッド"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "クライアントが接続または切断したときに、WebSocket エンドポイントに通知することもできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "これは、メソッドに `@OnOpen` または `@OnClose` アノテーションを付けることで行われます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` はクライアント接続時にトリガーされ、 `@OnClose` は切断時に呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "これらのメソッドは、_セッションスコープ_ の `WebSocketConnection` Bean にアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Parameters"
msgstr "パラメーター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "`@OnOpen` および `@OnClose` アノテーションが付けられたメソッドは、次のパラメーターを受け入れることができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "`@OnClose` アノテーションが付与されたエンドポイントメソッドは、接続を閉じる理由を示す `io.quarkus.websockets.next.CloseReason` パラメーターも受け入れる場合があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` メソッドと `@OnClose` メソッドは、異なる戻り値のタイプをサポートします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr ""
"`@OnOpen` メソッドには、 `@On[Text|Binary]Message` と同じルールが適用されます。\n"
"したがって、 `@OnOpen` アノテーションが付与されたメソッドは、接続後すぐにクライアントにメッセージを送信できます。\n"
"`@OnOpen` メソッドでサポートされている戻り値のタイプは次のとおりです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void`: 接続されたクライアントに明示的なメッセージが返されないブロッキングメソッドを示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>`: 返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを示します。クライアントにメッセージは返されません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` タイプのオブジェクト: 返されたオブジェクトがシリアライズされてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>`: null 以外の `Uni` によって発行された項目がクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: 明示的なメッセージがクライアントに返されないノンブロッキングメソッドを示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr "`X` を返す Kotlin の `suspend` 関数: 返された項目がクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr ""
"クライアントに送信される項目は、 `String`、 `io.vertx.core.json.JsonObject`、 `io.vertx.core.json.JsonArray`、 `io.vertx.core.buffer.Buffer`、および `byte[]` タイプを除いて、<<serialization,シリアライズ>> されます。\n"
"`Multi` の場合、Quarkus は返された `Multi` をサブスクライブし、項目が発行されると `WebSocket` に書き込みます。\n"
"`String`、 `JsonObject`、 `JsonArray` はテキストメッセージとして送信されます。\n"
"`Buffers` とバイト配列はバイナリーメッセージとして送信されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "For `@OnClose` methods, the supported return types include:"
msgstr "`@OnClose` メソッドの場合、サポートされる戻り値のタイプは次のとおりです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`void`: The method is considered blocking."
msgstr "`void`: メソッドはブロッキングであるとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>`: メソッドはノンブロッキングであるとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: このメソッドはノンブロッキングとみなされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr ""
"サーバーエンドポイントで宣言された `@OnClose` メソッドは、オブジェクトを返すことによって接続されたクライアントに項目を送信できません。\n"
"`WebSocketConnection` オブジェクトを使用してのみ、他のクライアントにメッセージを送信できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Error handling"
msgstr "エラー処理"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr ""
"エラーが発生したときに WebSocket エンドポイントに通知することもできます。\n"
"`@io.quarkus.websockets.next.OnError` アノテーションが付与された WebSocket エンドポイントメソッドは、エンドポイントコールバックがランタイムエラーをスローしたとき、または変換エラーが発生したとき、\n"
"あるいは返された `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` が失敗した場合に呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr ""
"メソッドは、_error_ パラメーター、つまり `java.lang.Throwable` から割り当て可能なパラメーターを 1 つだけ受け入れる必要があります。\n"
"このメソッドは次のパラメーターも受け入れます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr ""
"エンドポイントは、 `@io.quarkus.websockets.next.OnError` アノテーションが付与された複数のメソッドを宣言できます。\n"
"ただし、各メソッドは異なるエラーパラメーターを宣言する必要があります。\n"
"実際の例外の最も具体的なスーパータイプを宣言するメソッドが選択されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` アノテーションは、グローバルエラーハンドラー、つまり WebSocket エンドポイントで宣言されていないメソッドを宣言するためにも使用できます。このようなメソッドは、 `@PathParam` パラメーターを受け入れない場合があります。エンドポイントで宣言されたエラーハンドラーは、グローバルエラーハンドラーよりも優先されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"For server endpoints, the error message is logged and the connection is closed by default.\n"
"For client endpoints, the error message is logged by default."
msgstr ""
"エラーが発生しても、エラーハンドラーが失敗を処理できない場合、Quarkus は `quarkus.websockets-next.server.unhandled-failure-strategy` で指定されたストラテジーを使用します。\n"
"サーバーエンドポイントの場合、エラーメッセージがログに記録され、接続はデフォルトで閉じられます。\n"
"クライアントエンドポイントの場合、エラーメッセージはデフォルトでログに記録されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Serialization and deserialization"
msgstr "シリアライズとデシリアライズ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next エクステンションは、メッセージの自動シリアライゼーションとデシリアライゼーションをサポートします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr ""
"`String`、 `JsonObject`、 `JsonArray`、 `Buffer`、および `byte[]` タイプのオブジェクトはそのまま送信され、シリアライゼーションとデシリアライゼーションをバイパスします。\n"
"コーデックが指定されていない場合、シリアライゼーションとデシリアライゼーションによってメッセージは JSON から、または JSON に自動的に変換されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "シリアライゼーションとデシリアライゼーションをカスタマイズする必要がある場合は、カスタムコーデックを提供できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr "カスタムコーデック"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr "カスタムコーデックを実装するには、以下を実装する CDI Bean を提供する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr "バイナリーメッセージ用の `io.quarkus.websockets.next.BinaryMessageCodec`"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr "テキストメッセージの `io.quarkus.websockets.next.TextMessageCodec`"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "次の例は、 `Item` クラスのカスタムコーデックを実装する方法を示しています。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr "`OnTextMessage` メソッドと `OnBinaryMessage` メソッドでは、どのコーデックを使用するかを明示的に指定することもできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "メッセージのデシリアライゼーションとシリアライゼーションの両方に使用するコーデックを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "シリアライゼーションとデシリアライゼーションで異なるコーデックを使用する必要がある場合は、シリアライゼーションとデシリアライゼーションに使用するコーデックを個別に指定できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr "受信メッセージのデシリアライズに使用するコーデックを指定します"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "送信メッセージのシリアライゼーションに使用するコーデックを指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Ping/Pong messages"
msgstr "Ping/Pong メッセージ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr ""
"https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping メッセージ] は、キープアライブとして、またはリモートエンドポイントを確認するために使用できます。\n"
"https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong メッセージ] は、ping メッセージへのレスポンスとして送信され、同一のペイロードを持つ必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Sending ping messages"
msgstr "ping メッセージの送信"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Ping messages are optional and not sent by default. However, server and client endpoints can be configured to automatically send ping messages on an interval."
msgstr "ping メッセージはオプションであり、デフォルトでは送信されません。ただし、サーバーおよびクライアントのエンドポイントは、一定の間隔で ping メッセージを自動的に送信するように設定できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Sends a ping message from the server to each connected client every 2 seconds."
msgstr "サーバーから接続された各クライアントに 2 秒ごとに ping メッセージを送信します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Sends a ping message from all connected client instances to their remote servers every 10 seconds."
msgstr "接続されているすべてのクライアントインスタンスからリモートサーバーに 10 秒ごとに ping メッセージを送信します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Servers and clients can send ping messages programmatically at any time using `WebSocketConnection` or `WebSocketClientConnection`.\n"
"There is a non-blocking variant: `Sender#sendPing(Buffer)` and a blocking variant: `Sender#sendPingAndAwait(Buffer)`."
msgstr ""
"サーバーとクライアントは、 `WebSocketConnection` または `WebSocketClientConnection` を使用して、いつでもプログラムで ping メッセージを送信できます。\n"
"ノンブロッキングバリアント (`Sender#sendPing(Buffer)`) とブロッキングバリアント (`Sender#sendPingAndAwait(Buffer)`) があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Sending pong messages"
msgstr "pong メッセージの送信"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Server and client endpoints will always respond to a ping message sent from the remote party with a corresponding pong message, using the application data from the ping message.\n"
"This behavior is built-in and requires no additional code or configuration."
msgstr ""
"サーバーおよびクライアントのエンドポイントは、ping メッセージのアプリケーションデータを使用して、リモート側から送信された ping メッセージに対し、常に対応する pong メッセージでレスポンスします。\n"
"この動作は組み込まれており、追加のコードや設定は必要ありません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Servers and clients can send unsolicited pong messages that may serve as a unidirectional heartbeat using `WebSocketConnection` or `WebSocketClientConnection`. There is a non-blocking variant: `Sender#sendPong(Buffer)` and a blocking variant: `Sender#sendPongAndAwait(Buffer)`."
msgstr "サーバーとクライアントは、 `WebSocketConnection` または `WebSocketClientConnection` を使用して、一方向のハートビートとして機能する可能性のある非要求 pong メッセージを送信できます。ノンブロッキングバリアント (`Sender#sendPong(Buffer)`) とブロッキングバリアント (`Sender#sendPongAndAwait(Buffer)`) があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Handling ping/pong messages"
msgstr "ping/pong メッセージの処理"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Because ping messages are handled automatically and pong messages require no response, it is not necessary to write handlers for these messages to comply with the WebSocket protocol.\n"
"However, it is sometimes useful to know when ping or pong messages are received by an endpoint."
msgstr ""
"ping メッセージは自動的に処理され、pong メッセージはレスポンスを必要としないため、WebSocket プロトコルに準拠するためにこれらのメッセージのハンドラーを記述する必要はありません。\n"
"ただし、エンドポイントで ping または pong メッセージがいつ受信されたかを知ることが役立つ場合があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The `@OnPingMessage` and `@OnPongMessage` annotations can be used to define callbacks that consume ping or pong messages sent from the remote party.\n"
"An endpoint may declare at most one `@OnPingMessage` callback and at most  one `@OnPongMessage` callback.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr ""
"`@OnPingMessage` および `@OnPongMessage` アノテーションを使用して、リモート側から送信された ping または pong メッセージを使用するコールバックを定義できます。\n"
"エンドポイントは、最大 1 つの `@OnPingMessage` コールバックと最大 1 つの `@OnPongMessage` コールバックを宣言できます。\n"
"コールバックメソッドは、 `void` または `Uni<Void>` を返す必要 (または `Unit` を返す Kotlin の `suspend` 関数である必要) があり、 `Buffer` タイプの単一のパラメーターを受け入れる必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Inbound processing mode"
msgstr "受信処理モード"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr ""
"WebSocket エンドポイントは、それぞれ `@WebSocket#inboundProcessingMode()` と `@WebSocketClient.inboundProcessingMode()` を使用して、特定の接続の受信イベントを処理するために使用されるモードを定義できます。\n"
"受信イベントは、メッセージ (テキスト、バイナリー、pong)、接続の開始、接続の終了を表すことができます。\n"
"デフォルトでは、イベントは順番に処理され、順序が保証されます。\n"
"つまり、エンドポイントがイベント `A` と `B` を (この特定の順序で) 受信した場合、イベント `A` のコールバックが完了した後にイベント `B` のコールバックが呼び出されます。\n"
"ただし、状況によっては、順序の保証はなく、同時実行の制限もない状態でイベントを同時に処理することが望ましい場合があります。\n"
"このような場合には、 `InboundProcessingMode#CONCURRENT` を使用する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Server API"
msgstr "サーバー API"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "HTTP server configuration"
msgstr "HTTP サーバーの設定"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "This extension reuses the _main_ HTTP server."
msgstr "このエクステンションは、_メイン_ の HTTP サーバーを再利用します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "したがって、WebSocket サーバーの設定は `quarkus.http.` 設定セクションで行われます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr ""
"アプリケーション内で設定された WebSocket パスは、 `quarkus.http.root` (デフォルトは `/`) で定義されたルートパスと連結されます。\n"
"この連結により、WebSocket エンドポイントがアプリケーションの URL 構造内に適切に配置されるようになります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "詳細は、xref:http-reference.adoc[HTTP ガイド] を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Sub-websockets endpoints"
msgstr "sub-websocket エンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr ""
"`@WebSocket` エンドポイントは、静的なネストされたクラスをカプセル化できます。これらのクラスも `@WebSocket` アノテーションが付与され、_sub-websocket_ を表します。\n"
"これらの sub-websocket のパスは、外側のクラスとネストされたクラスからのパスを連結したものになります。\n"
"この結果得られるパスは、HTTP URL の規則に従って正規化されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr ""
"sub-websocket は、外側のクラスとネストされたクラスの両方の `@WebSocket` アノテーションで宣言されたパスパラメーターへのアクセスを継承します。\n"
"次の例では、外側のクラス内の `consumePrimary` メソッドは `version` パラメーターにアクセスできます。\n"
"一方、ネストされたクラス内の `consumeNested` メソッドは、 `version` パラメーターと `id` パラメーターの両方にアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "WebSocket connection"
msgstr "WebSocket 接続"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr ""
"`io.quarkus.websockets.next.WebSocketConnection` オブジェクトは WebSocket 接続を表します。\n"
"Quarkus は、このインターフェイスを実装し、 `WebSocket` エンドポイントに注入して、接続されたクライアントと対話するために使用できる `@SessionScoped` CDI Bean を提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr "`@OnOpen`、 `@OnTextMessage`、 `@OnBinaryMessage`、および `@OnClose` アノテーションが付与されたメソッドは、注入された `WebSocketConnection` オブジェクトにアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr "これらのメソッド以外では、 `WebSocketConnection` オブジェクトは利用できないことに注意してください。ただし、<<list-open-connections,開いているすべての接続をリスト表示>> できます.。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr "接続を使用して、クライアントにメッセージを送信したり、パスパラメーターにアクセスしたり、接続されているすべてのクライアントにメッセージをブロードキャストしたりできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketConnection` は、メッセージを送信するためのブロッキングメソッドとノンブロッキングメソッドの両方のバリアントを提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)`: テキストメッセージをクライアントに送信し、メッセージが送信されるのを待ちます。これはブロッキングであり、エグゼキュータースレッドからのみ呼び出す必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking. Make sure you or Quarkus subscribes to the returned `Uni` to send the message.\n"
"If you return the `Uni` from a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), it will subscribe to it and send the message.\n"
"For example:"
msgstr ""
"`sendText(String message)`: テキストメッセージをクライアントに送信します。 `Uni` を返します。これはノンブロッキングです。メッセージを送信するには、返された `Uni` をユーザーまたは Quarkus がサブスクライブしていることを確認してください。\n"
"Quarkus によって呼び出されたメソッド (Quarkus REST、Quarkus WebSocket Next、Quarkus Messaging など) から `Uni` を返すと、それをサブスクライブしてメッセージを送信します。\n"
"以下に例を示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the `Uni`."
msgstr "`Uni` への登録に関する詳細は、<<subscribe-or-not-subscribe>> を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "List open connections"
msgstr "開いている接続をリスト表示する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr ""
"開いているすべての接続をリスト表示することもできます。\n"
"Quarkus は、接続にアクセスするための便利なメソッドを宣言する `io.quarkus.websockets.next.OpenConnections` タイプの CDI Bean を提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenConnections#listAll()` は、指定された時点で開いているすべての接続のイミュータブルなスナップショットを返します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""
"他にも便利な方法があります。\n"
"たとえば、 `OpenConnections#findByEndpointId(String)` を使用すると、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "User data"
msgstr "ユーザーデータ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketConnection#userData()` method represents mutable user data associated with a connection."
msgstr ""
"任意のユーザーデータを特定の接続に関連付けることも可能です。\n"
"`WebSocketConnection#userData()` メソッドによって取得される `io.quarkus.websockets.next.UserData` オブジェクトは、接続に関連付けられたミュータブルなユーザーデータを表します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`CoolService#isCool()` returns `Boolean` that is associated with the current connection."
msgstr "`CoolService#isCool()` は、現在の接続に関連付けられている `Boolean` を返します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `TypedKey.forBoolean(\"isCool\")` is the key used to obtain the data stored when the connection was created."
msgstr "`TypedKey.forBoolean(\"isCool\")` は、接続の作成時に保存されたデータを取得するために使用されるキーです。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "CDI events"
msgstr "CDI イベント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""
"Quarkus は、新しい接続が開かれると、修飾子 `@io.quarkus.websockets.next.Open` を持つ `io.quarkus.websockets.next.WebSocketConnection` タイプの CDI イベントを非同期的に起動します。\n"
"さらに、接続が閉じられると、修飾子 `@io.quarkus.websockets.next.Closed` を持つ `WebSocketConnection` タイプの CDI イベントが非同期的に起動します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr "非同期オブザーバーメソッドは、デフォルトのブロッキングエグゼキューターサービスを使用して実行されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Security"
msgstr "セキュリティ"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Security capabilities are provided by the Quarkus Security extension.\n"
"Any xref:security-identity-providers.adoc[Identity provider] can be used to convert authentication credentials on the initial HTTP request into a `SecurityIdentity` instance.\n"
"The `SecurityIdentity` is then associated with the websocket connection.\n"
"Authorization options are demonstrated in following sections."
msgstr ""
"セキュリティー機能は、Quarkus Security エクステンションによって提供されます。\n"
"任意の xref:security-identity-providers.adoc[アイデンティティープロバイダー] を使用して、最初の HTTP リクエストの認証情報を `SecurityIdentity` インスタンスに変換できます。\n"
"次に、 `SecurityIdentity` が Websocket 接続に関連付けられます。\n"
"認可オプションについては、次のセクションで説明します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When an OpenID Connect extension, `quarkus-oidc`, is used and token expires, Quarkus automatically closes connection."
msgstr "OpenID Connect エクステンション (`quarkus-oidc`) が使用され、トークンの有効期限が切れると、Quarkus は自動的に接続を閉じます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Secure HTTP upgrade"
msgstr "セキュア HTTP アップグレード"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"An HTTP upgrade is secured when a standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless you need to perform an action on error (see <<secure-callback-methods>>) or a security check based on the payload (see <<secure-endpoints-with-permission-checkers>>)."
msgstr ""
"標準のセキュリティーアノテーションがエンドポイントクラスに配置されるか、HTTP セキュリティーポリシーが定義されている場合、HTTP アップグレードは保護されます。\n"
"HTTP アップグレードをセキュリティーで保護する利点は、処理が少なくなり、認可が早期に 1 回だけ実行されることです。\n"
"エラー時にアクションを実行する必要がある場合 (<<secure-callback-methods>> 参照) や、ペイロードに基づいてセキュリティチェックを行う必要がある場合 (<<secure-endpoints-with-permission-checkers>> を参照) を除き、常に HTTP アップグレードセキュリティーを優先する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr "標準のセキュリティーアノテーションを使用して HTTP アップグレードを保護する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr ""
"匿名ユーザーの場合、最初の HTTP ハンドシェイクは 401 ステータスで終了します。\n"
"`quarkus.websockets-next.server.security.auth-failure-redirect-url` 設定プロパティーを使用して、認可失敗時にハンドシェイクリクエストをリダイレクトすることもできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr ""
"HTTP アップグレードは、エンドポイントクラスで `@WebSocket` アノテーションの隣でセキュリティーアノテーションが宣言されている場合にのみ保護されます。\n"
"エンドポイント Bean にセキュリティーアノテーションを配置しても、Bean メソッドは保護されず、HTTP アップグレードのみが保護されます。\n"
"エンドポイントが意図したとおりに保護されていることを常に確認する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr "HTTP セキュリティーポリシーを使用して HTTP アップグレードを保護する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Security annotations used during authentication must be placed on an endpoint class as well, for the `SecurityIdentity` is created before the websocket connection is opened."
msgstr "認証時に使用されるセキュリティアノテーションはエンドポイントクラスにも配置する必要があります。 `SecurityIdentity` はウェブソケット接続がオープンされる前に作成されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Select Bearer token authentication mechanism"
msgstr "ベアラートークン認証メカニズムの選択"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Require that an opening WebSocket handshake request is authenticated using the bearer token authentication.\n"
"See the xref:security-authentication-mechanisms.adoc#use-annotations-for-path-based-auth[Authentication mechanisms in Quarkus] guide for more information about selecting authentication mechanisms with annotations."
msgstr "ベアラートークン認証を使用して、WebSocket ハンドシェイク要求が認証される必要があります。アノテーションを使用した認証メカニズムの選択に関する詳細については、 xref:security-authentication-mechanisms.adoc#use-annotations-for-path-based-auth[Quarkusの認証メカニズム] を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Start authenticating an opening WebSocket handshake request only when the `io.quarkus.oidc.BearerTokenAuthentication` annotation is detected."
msgstr "`io.quarkus.oidc.BearerTokenAuthentication` アノテーションが検出された場合にのみ、WebSocket ハンドシェイク リクエストの認証を開始します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Secure WebSocket endpoint callback methods"
msgstr "セキュアな WebSocket エンドポイントコールバックメソッド"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr ""
"WebSocket エンドポイントのコールバックメソッドは、 `io.quarkus.security.Authenticated` や \n"
"`jakarta.annotation.security.RolesAllowed` などのセキュリティーアノテーション、および xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[サポート対象セキュリティーアノテーション] ドキュメントに記載されているその他のアノテーションを使用して保護できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例えば、以下のようになります:"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "エコーコールバックメソッドは、現在のセキュリティーアイデンティティーに `admin` ロールがある場合にのみ呼び出すことができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The error handler is invoked in case of the authorization failure."
msgstr "認可に失敗した場合はエラーハンドラーが呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Secure server endpoints with permission checkers"
msgstr "権限チェッカーでサーバーのエンドポイントを保護する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can be secured with the xref:security-authorize-web-endpoints-reference.adoc#permission-checker[permission checkers].\n"
"We recommend to <<secure-http-upgrade>> rather than individual endpoint methods. For example:"
msgstr ""
"WebSocket エンドポイントは、xref:security-authorize-web-endpoints-reference.adoc#permission-checker[パーミッションチェッカー] を使用して保護できます。\n"
"個々のエンドポイントメソッドではなく、<<secure-http-upgrade>> を推奨します。以下に例を示します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Example of a WebSocket endpoint with secured HTTP upgrade"
msgstr "セキュアな HTTP アップグレードを備えた WebSocket エンドポイントの例"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Example of a permission checker authorizing the HTTP upgrade"
msgstr "HTTP アップグレードを承認する権限チェッカーの例"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "A permission checker authorizing an HTTP upgrade must declare exactly one method parameter, the `SecurityIdentity`."
msgstr "HTTP アップグレードを承認する権限チェッカーは、メソッドパラメーター `SecurityIdentity` を 1 つだけ宣言する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "It is also possible to run security checks on every message. For example, a message payload can be accessed like this:"
msgstr "すべてのメッセージに対してセキュリティーチェックを実行することもできます。たとえば、メッセージペイロードには次のようにアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `getProduct` callback method can only be invoked if the current security identity has an `admin` role or the user is allowed to get the product detail."
msgstr "`getProduct` コールバックメソッドは、現在のセキュリティーアイデンティティーに `admin` ロールがある場合、またはユーザーが製品の詳細を取得することを許可されている場合にのみ、呼び出すことができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "More information about permission checkers can be found on the JavaDoc of link:https://javadoc.io/doc/io.quarkus.security/quarkus-security/latest/io.quarkus.security.api/io/quarkus/security/PermissionChecker.html[`@PermissionChecker`]."
msgstr "パーミッションチェッカーの詳細については、以下のJavaDocを参照してください。 link:https://javadoc.io/doc/io.quarkus.security/quarkus-security/latest/io.quarkus.security.api/io/quarkus/security/PermissionChecker.html[@PermissionChecker] ."

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Bearer token authentication"
msgstr "ベアラートークン認証"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] expects that the bearer token is passed in the `Authorization` header during the initial HTTP handshake.\n"
"Java WebSocket clients such as <<client-api, WebSockets Next Client>> and https://vertx.io/docs/vertx-core/java/#_websockets_on_the_client[Vert.x WebSocketClient] support adding custom headers to the WebSocket opening handshake.\n"
"However, JavaScript clients that follow the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] do not support adding custom headers.\n"
"Therefore, passing a bearer access token using a custom `Authorization` header is impossible with JavaScript-based WebSocket clients.\n"
"The JavaScript WebSocket client only allows to configure the HTTP https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Protocol[Sec-WebSocket-Protocol] request header for negotiating a sub-protocol.\n"
"If absolutely necessary, the `Sec-WebSocket-Protocol` header might be used as a carrier for custom headers, to provide a workaround the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] restrictions.\n"
"Here is an example of a JavaScript client propagating the `Authorization` header as a sub-protocol value:"
msgstr ""
"xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラートークン認証] では、最初の HTTP ハンドシェイク中にベアラートークンが `Authorization` ヘッダーで渡されることを期待します。\n"
"<<client-api, WebSockets Next Client>> および https://vertx.io/docs/vertx-core/java/#_websockets_on_the_client[Vert.x WebSocketClient] などの Java WebSocket クライアントは、WebSocket オープニングハンドシェイクにカスタムヘッダーを追加することをサポートしています。\n"
"ただし、 https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] に準拠する JavaScript クライアントは、カスタムヘッダーの追加をサポートしていません。\n"
"したがって、JavaScript ベースの WebSocket クライアントでは、カスタム `Authorization` ヘッダーを使用してベアラーアクセストークンを渡すことはできません。\n"
"JavaScript WebSocket クライアントでは、サブプロトコルをネゴシエートするための HTTP https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Protocol[Sec-WebSocket-Protocol] リクエストヘッダーのみを設定できます。\n"
"絶対に必要な場合は、 https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] の制限を回避するために、 `Sec-WebSocket-Protocol` ヘッダーをカスタムヘッダーのキャリアーとして使用できます。\n"
"以下は、 `Authorization` ヘッダーをサブプロトコル値として伝播する JavaScript クライアントの例です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Expected format for the Quarkus Header sub-protocol is `quarkus-http-upgrade#header-name#header-value`.\n"
"Do not forget to encode the sub-protocol value as a URI component to avoid encoding issues."
msgstr ""
"Quarkus Header サブプロトコルの想定される形式は `quarkus-http-upgrade#header-name#header-value` です。\n"
"エンコードの問題を回避するために、サブプロトコル値を URI コンポーネントとしてエンコードすることを忘れないでください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Indicate 2 sub-protocols supported by the client, the sub-protocol of your choice and the Quarkus HTTP upgrade sub-protocol."
msgstr "クライアントでサポートされている 2 つのサブプロトコル (選択したサブプロトコルと Quarkus HTTP アップグレードサブプロトコル) を指定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "For the WebSocket server to accept the `Authorization` passed as a sub-protocol, we must:"
msgstr "WebSocket サーバーがサブプロトコルとして渡された `Authorization` を受け入れるには、次の操作を行う必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Configure our WebSocket server with the supported sub-protocols. When the WebSocket client provides a lists of supported sub-protocols in the HTTP `Sec-WebSocket-Protocol` request header, the WebSocket server must agree to serve content with one of them."
msgstr "サポートされているサブプロトコルを使用して、WebSocket サーバーを設定します。WebSocket クライアントが HTTP `Sec-WebSocket-Protocol` リクエストヘッダーでサポートされているサブプロトコルのリストを提供する場合、WebSocket サーバーはそれらのいずれかを使用してコンテンツを提供することに同意する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Enable Quarkus HTTP upgrade sub-protocol mapping to the opening WebSocket handshake request headers."
msgstr "開いている WebSocket ハンドシェイクリクエストヘッダーへの Quarkus HTTP アップグレードサブプロトコルマッピングを有効にします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"WebSocket security model is origin-based and is not designed for the client-side authentication with headers or cookies.\n"
"For example, web browsers do not enforce the Same-origin policy for the opening WebSocket handshake request.\n"
"When you plan to use bearer access tokens during the opening WebSocket handshake request, we strongly recommend to follow the additional security measures listed below to minimize the security risks:"
msgstr ""
"WebSocket セキュリティーモデルはオリジンベースであり、ヘッダーまたは Cookie を使用したクライアント側認証用に設計されていません。\n"
"たとえば、Web ブラウザーは、WebSocket ハンドシェイクリクエストの開始時に、同一オリジンポリシーを強制しません。\n"
"WebSocket ハンドシェイクリクエストの開始時に、ベアラーアクセストークンを使用する予定の場合は、セキュリティーリスクを最小限に抑えるために、以下に示す追加のセキュリティー対策に従うことを強く推奨します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Restrict supported Origins to trusted Origins only with the xref:security-cors.adoc#cors-filter[CORS filter]."
msgstr "xref:security-cors.adoc#cors-filter[CORS フィルター] を使用して、サポートされている Origin を信頼できる Origin のみに制限します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Use the `wss` protocol to enforce encrypted HTTP connection via TLS."
msgstr "TLS 経由で暗号化された HTTP 接続を強制するには、 `wss` プロトコルを使用します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Use a custom WebSocket ticket system which supplies a random token with the HTML page which hosts the JavaScript WebSockets client which must provide this token during the initial handshake request as a query parameter."
msgstr "ランダムトークンを HTML ページに提供するカスタム WebSocket チケットシステムを使用します。この HTML ページは、ハンドシェイクリクエストの開始時にクエリーパラメーターとしてこのトークンを提供する必要がある JavaScript WebSocket クライアントをホストします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Before the bearer access token sent on the initial HTTP request expires, you can send a new bearer access token as part of a message and update current `SecurityIdentity` attached to the WebSocket server connection:"
msgstr "最初の HTTP 要求で送信されたベアラ・アクセストークンの有効期限が切れる前に、メッセージの一部として新しいベアラ・アクセストークンを送信し、WebSocket サーバー接続にアタッチされている現在の `SecurityIdentity` を更新できます："

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Asynchronously update the `SecurityIdentity` attached to the WebSocket server connection."
msgstr "WebSocket サーバー接続にアタッチされた `SecurityIdentity` を非同期に更新します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The current `SecurityIdentity` instance is still available and can be used during the `SecurityIdentity` update."
msgstr "現在の `SecurityIdentity` インスタンスはまだ利用可能で、 `SecurityIdentity` 更新中に使用できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] mechanism has builtin support for the `SecurityIdentity` update.\n"
"If you use other authentication mechanisms, you must implement the `io.quarkus.security.identity.IdentityProvider` provider that supports the `io.quarkus.websockets.next.runtime.spi.security.WebSocketIdentityUpdateRequest` authentication request."
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラ・トークン認証] メカニズムには、 `SecurityIdentity` アップデートが組み込まれています。他の認証メカニズムを使用する場合は、 `io.quarkus.websockets.next.runtime.spi.security.WebSocketIdentityUpdateRequest` 認証要求をサポートする `io.quarkus.security.identity.IdentityProvider` プロバイダを実装する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The new bearer access token must have the same `sub` claim value as the token used during the initial HTTP request.\n"
"Please also make sure the `SecurityIdentity` is only updated when necessary and the WebSocket message with credentials do not appear in your application logs.\n"
"Always use the `wss` protocol to enforce encrypted HTTP connection via TLS when sending credentials as part of the WebSocket message."
msgstr "新しいベアラアクセストークンは、最初の HTTP 要求で使用されたトークンと同じ `sub` claim 値を持つ必要があります。また、 `SecurityIdentity` が必要な場合のみ更新され、資格情報を含む WebSocket メッセージがアプリケーションログに表示されないことを確認してください。WebSocket メッセージの一部として認証情報を送信する場合は、常に `wss` プロトコルを使用して、TLS による暗号化 HTTP 接続を実施してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket client application have to send a new access token before previous one expires:"
msgstr "WebSocketクライアントアプリケーションは、以前のアクセストークンの有効期限が切れる前に新しいアクセストークンを送信する必要があります："

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Complete example is located in the `security-openid-connect-websockets-next-quickstart` link:{quickstarts-tree-url}/security-openid-connect-websockets-next-quickstart[directory]."
msgstr "完全なサンプルは `security-openid-connect-websockets-next-quickstart` link:{quickstarts-tree-url}/security-openid-connect-websockets-next-quickstart[ディレクトリに] あります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Inspect and/or reject HTTP upgrade"
msgstr "HTTP アップグレードを検査および/または拒否する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr ""
"HTTP アップグレードを検査するには、 `io.quarkus.websockets.next.HttpUpgradeCheck` インターフェイスを実装する CDI Bean を提供する必要があります。\n"
"Quarkus は、WebSocket 接続にアップグレードする必要があるすべての HTTP リクエストに対して `HttpUpgradeCheck#perform` メソッドを呼び出します。\n"
"このメソッド内では、任意のビジネスロジックを実行したり、HTTP アップグレードを拒否したりできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Example HttpUpgradeCheck"
msgstr "HttpUpgradeCheck の例"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr "`HttpUpgradeCheck` インターフェイスを実装する CDI Bean は、 `@ApplicationScoped`、 `@Singleton`、または `@Dependent` Bean のいずれかになりますが、 `@RequestScoped` Bean になることはできません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr "HTTP アップグレードを拒否します。最初の HTTP ハンドシェイクは、400 Bad Request レスポンスステータスコードで終了します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr "`HttpUpgradeCheck#appliesTo` メソッドを使用して、 `HttpUpgradeCheck` を適用する WebSocket エンドポイントを選択できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "TLS"
msgstr "TLS"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr "このエクステンションは、_メイン_ の HTTP サーバーを再利用するという事実の直接的な結果として、関連するすべてのサーバー設定が適用されます。詳細は、xref:http-reference.adoc#ssl[HTTP ガイド] を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Hibernate multitenancy"
msgstr "Hibernate マルチテナンシー"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `RoutingContext` is not available after the HTTP upgrade. However, it is possible to inject the `WebSocketConnection` and access the headers of the initial HTTP request."
msgstr "HTTP アップグレード後、 `RoutingContext` は使用できません。ただし、 `WebSocketConnection` を注入して、最初の HTTP リクエストのヘッダーにアクセスすることは可能です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "If a custom `TenantResolver` is used and you would like to combine REST/HTTP and WebSockets, the code may look like this:"
msgstr "カスタムの `TenantResolver` を使用し、REST/HTTP と WebSocket を組み合わせる場合、コードは次のようになります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "For more information on Hibernate multitenancy, refer to the https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate documentation]."
msgstr "Hibernate マルチテナンシーの詳細は、 https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate ドキュメント] を参照してください。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Client API"
msgstr "クライアント API"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Client connectors"
msgstr "クライアントコネクター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"A connector can be used to configure and open a new client connection backed by a client endpoint that is used to consume and send messages.\n"
"Quarkus provides a CDI bean with bean type `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` and default qualifer that can be injected in other beans.\n"
"The actual type argument of an injection point is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr ""
"コネクターを使用すると、メッセージの消費と送信に使用されるクライアントエンドポイントによってサポートされる新しいクライアント接続を設定して開くことができます。\n"
"Quarkus は、Bean タイプ `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` の CDI Bean および他の Bean に注入できるデフォルトの修飾子を提供します。\n"
"注入ポイントの実際のタイプ引数は、クライアントエンドポイントを決定するために使用されます。\n"
"このタイプはビルド時に検証され、クライアントエンドポイントを表していない場合、ビルドは失敗します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Let’s consider the following client endpoint:"
msgstr "次のクライアントエンドポイントを考えてみましょう。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Client endpoint"
msgstr "クライアントエンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The connector for this client endpoint is used as follows:"
msgstr "このクライアントエンドポイントのコネクターは次のように使用されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Connector"
msgstr "コネクター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Inject the connector for `ClientEndpoint`."
msgstr "`ClientEndpoint` のコネクターを注入します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr "ベース `URI` が指定されていない場合は、設定から値を取得しようとします。キーは、クライアント ID と `.base-uri` 接尾辞で構成されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr "パスパラメーター値を設定します。クライアントエンドポイントパスに指定された名前のパラメーターが含まれていない場合は、 `IllegalArgumentException` がスローされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Use the connection to send messages, if needed."
msgstr "必要に応じて、接続を使用してメッセージを送信します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr "アプリケーションが、存在しないエンドポイントのコネクターを注入しようとすると、エラーがスローされます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Connectors are not thread-safe and should not be used concurrently.\n"
"Connectors should also not be reused.\n"
"If you need to create multiple connections in a row you'll need to obtain a new connetor instance programmatically using `Instance#get()`:"
msgstr ""
"コネクターはスレッドセーフではないため、同時に使用しないでください。\n"
"また、コネクターの再利用もしないでください。\n"
"連続して複数の接続を作成する必要がある場合は、 `Instance#get()` を使用してプログラムで新しいコネクターインスタンスを取得する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Basic connector"
msgstr "基本コネクター"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr ""
"アプリケーション開発者がクライアントエンドポイントとコネクターの組み合わせを必要としない場合は、_基本コネクター_ を使用できます。\n"
"基本コネクターは、クライアントエンドポイントを定義せずに接続を作成し、メッセージを消費/送信する簡単な方法です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Inject the connector."
msgstr "コネクターを注入します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The base URI must be always set."
msgstr "ベース URI は常に設定する必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The additional path that should be appended to the base URI."
msgstr "ベース URI に追加する必要がある追加パス。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr "コールバックハンドラーの実行モデルを設定します。デフォルトでは、コールバックは現在のスレッドをブロックする可能性があります。ただし、この場合、コールバックはイベントループで実行され、現在のスレッドをブロックしない可能性があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The lambda will be called for every text message sent from the server."
msgstr "lambda は、サーバーから送信されるテキストメッセージごとに呼び出されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr ""
"基本コネクターは低レベル API に近いため、上級ユーザー向けに予約されています。\n"
"ただし、他の低レベルの WebSocket クライアントとは異なり、これは引き続き CDI Bean であり、他の Bean に注入できます。\n"
"また、コールバックの実行モデルを設定する方法も提供し、Quarkus の他の部分との最適なインテグレーションを確保します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "WebSocket client connection"
msgstr "WebSocket クライアント接続"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr ""
"`io.quarkus.websockets.next.WebSocketClientConnection` オブジェクトは WebSocket 接続を表します。\n"
"Quarkus は、このインターフェイスを実装し、 `WebSocketClient` エンドポイントに注入して、接続されたサーバーと対話するために使用できる `@SessionScoped` CDI Bean を提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr "`@OnOpen`、 `@OnTextMessage`、 `@OnBinaryMessage`、および `@OnClose` アノテーションが付与されたメソッドは、注入された `WebSocketClientConnection` オブジェクトにアクセスできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr "これらのメソッド以外では、 `WebSocketClientConnection` オブジェクトは利用できないことに注意してください。ただし、<<list-open-client-connections,開いているすべてのクライアント接続をリスト表示>> することは可能です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr "この接続を使用して、クライアントにメッセージを送信したり、パスパラメーターにアクセスしたりできます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketClientConnection` は、メッセージを送信するためのブロッキングメソッドとノンブロッキングメソッドの両方のバリアントを提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "List open client connections"
msgstr "開いているクライアント接続をリスト表示する"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr ""
"開いているすべての接続をリスト表示することもできます。\n"
"Quarkus は、接続にアクセスするための便利なメソッドを宣言する `io.quarkus.websockets.next.OpenClientConnections` タイプの CDI Bean を提供します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenClientConnections#listAll()` は、指定された時点で開いているすべての接続のイミュータブルなスナップショットを返します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""
"他にも便利な方法があります。\n"
"たとえば、 `OpenClientConnections#findByClientId(String)` を使用すると、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketClientConnection#userData()` method represents mutable user data associated with a connection."
msgstr ""
"任意のユーザーデータを特定の接続に関連付けることも可能です。\n"
"`WebSocketClientConnection#userData()` メソッドによって取得される `io.quarkus.websockets.next.UserData` オブジェクトは、接続に関連付けられたミュータブルなユーザーデータを表します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify in connector"
msgstr "コネクタで指定"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "In some scenarios you may wish to associate user data with a connection to be created by a <<client-connectors,connector>>. In this case, you can set values on the connector instance prior to obtaining the connection. This is particularly useful if you need to do something when the connection is opened and the necessary context cannot be otherwise inferred."
msgstr "シナリオによっては、 xref:client-connectors[コネクタによって] 作成される接続にユーザ データを関連付けたい場合があります。この場合、接続を取得する前にコネクタ・インスタンスに値を設定できます。これは、接続がオープンされたときに何かを行う必要があり、必要なコンテキストを他の方法で推測できない場合に特に便利です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Endpoint"
msgstr "エンドポイント"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""
"Quarkus は、新しい接続が開かれると、修飾子 `@io.quarkus.websockets.next.Open` を持つ `io.quarkus.websockets.next.WebSocketConnection` タイプの CDI イベントを非同期的に起動します。\n"
"さらに、接続が閉じられると、修飾子 `@io.quarkus.websockets.next.Closed` を持つ `WebSocketClientConnection` タイプの CDI イベントが非同期的に起動します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Configuring SSL/TLS"
msgstr "SSL/TLS の設定"

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]. This is typically done via configuration:"
msgstr "TLS接続を確立するには、 xref:./tls-registry-reference.adoc[TLSレジストリを] 使った _名前付き_ コンフィギュレーションを設定する必要があります。これは通常、コンフィギュレーションを使って行います："

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "With a _named_ TLS configuration established, you can then configure the client to use it:"
msgstr "_名前付き_ TLSコンフィギュレーションが確立されたら、それを使用するようにクライアントを設定できます："

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Alternatively, you can supply the configuration name using the <<client-connectors,connector>>:"
msgstr "または、 xref:client-connectors[コネクタを] 使用して構成名を指定することもできます："

#: _versions/3.27/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A name supplied to the connector will override any statically configured name. This can be useful for establishing a default configuration which can be overridden at runtime as necessary."
msgstr "コネクタに与えられた名前は、静的に構成された名前を上書きします。これは、必要に応じて実行時に上書きできるデフォルト構成を確立するのに便利です。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr ""
"WebSocket クライアントを使用する場合は、他の TLS 設定との競合を避けるために、_名前付き_ 設定を使用する必要があります。\n"
"クライアントはデフォルトの TLS 設定を使用しません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr "_名前付き_ TLS 設定を行うと、TLS はデフォルトで有効になります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Traffic logging"
msgstr "トラフィックロギング"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr ""
"Quarkus は、デバッグの目的で送受信されたメッセージをログに記録できます。\n"
"サーバーのトラフィックロギングを有効にするには、 `quarkus.websockets-next.server.traffic-logging.enabled` 設定プロパティーを `true` に設定します。\n"
"クライアントのトラフィックロギングを有効にするには、 `quarkus.websockets-next.client.traffic-logging.enabled` 設定プロパティーを `true` に設定します。\n"
"テキストメッセージのペイロードも記録されます。\n"
"ただし、記録される文字数には制限があります。\n"
"デフォルトの制限は 100 ですが、 `quarkus.websockets-next.server.traffic-logging.text-payload-limit` および `quarkus.websockets-next.client.traffic-logging.text-payload-limit` 設定プロパティーをそれぞれ使用してこの制限を変更できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr "メッセージは、ロガー `io.quarkus.websockets.next.traffic` に対して `DEBUG` レベルが有効になっている場合にのみ記録されます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Example server configuration"
msgstr "サーバー設定の例"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Enables traffic logging."
msgstr "トラフィックロギングを有効にします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Set the number of characters of a text message payload which will be logged."
msgstr "ログに記録されるテキストメッセージペイロードの文字数を設定します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr "ロガー `io.quarkus.websockets.next.traffic` に対して `DEBUG` レベルを有効にします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When to subscribe to a `Uni` or `Multi`"
msgstr "`Uni` または `Multi` をサブスクライブするタイミング"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "`Uni` and `Multi` are lazy types, which means that they do not start processing until they are subscribed to."
msgstr "`Uni` と `Multi` は遅延タイプです。つまり、サブスクライブされるまで処理を開始しません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When you get (from a parameter or from a method you called) a `Uni` or a `Multi`, whether you should subscribe to it depends on the context:"
msgstr "`Uni` または `Multi` を (パラメーターまたは呼び出したメソッドから) 取得する場合、それをサブスクライブするかどうかはコンテキストによって異なります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "if you return the `Uni` or `Multi` in a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), Quarkus subscribes to it and processes the items emitted by the `Multi` or the item emitted by the `Uni`:"
msgstr "Quarkus によって呼び出されるメソッド (Quarkus REST、Quarkus WebSocket Next、Quarkus Messaging など) で `Uni` または `Multi` を返すと、Quarkus はそれをサブスクライブし、 `Multi` によって発行された項目または `Uni` によって発行された項目を処理します。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "When a `Uni` or `Multi` is returned from a method annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, or `@OnClose`, Quarkus subscribes to it automatically."
msgstr "`@OnOpen`、 `@OnTextMessage`、 `@OnBinaryMessage`、または `@OnClose` アノテーションが付与されたメソッドから `Uni` または `Multi` が返されると、Quarkus はそれを自動的にサブスクライブします。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "if you do not return the `Uni` or `Multi` in a method invoked by Quarkus, you should subscribe to it:"
msgstr "Quarkus によって呼び出されるメソッドで `Uni` または `Multi` を返さない場合は、それをサブスクライブする必要があります。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Telemetry"
msgstr "テレメトリー"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When the OpenTelemetry extension is present, traces for opened and closed WebSocket connections are collected by default.\n"
"If you do not require WebSocket traces, you can disable collecting of traces like in the example below:"
msgstr ""
"OpenTelemetry エクステンションが存在する場合、開かれた WebSocket 接続と閉じられた WebSocket 接続のトレースがデフォルトで収集されます。\n"
"WebSocket トレースが必要ない場合は、次の例のようにトレースの収集を無効化できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid ""
"When the Micrometer extension is present, Quarkus can collect metrics for messages, errors and bytes transferred.\n"
"If you require a WebSocket metrics, you can enable the metrics like in the example below:"
msgstr ""
"Micrometer エクステンションが存在する場合、Quarkus はメッセージ、エラー、転送されたバイトのメトリクスを収集できます。\n"
"WebSocket メトリクスが必要な場合は、次の例のようにメトリクスを有効化できます。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Telemetry for the `BasicWebSocketConnector` is currently not supported."
msgstr "`BasicWebSocketConnector` のテレメトリーは現在サポートされていません。"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
