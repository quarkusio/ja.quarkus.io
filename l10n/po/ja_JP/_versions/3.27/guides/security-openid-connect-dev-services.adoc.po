msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services and Dev UI for OpenID Connect (OIDC)"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"You can use Dev Services for Keycloak and the Dev UI for the OpenID Connect (OIDC) Keycloak provider and adapt these services for other OpenID Connect providers.\n"
"You can also use the Dev UI with OpenID Connect providers that have already been started before you run Quarkus in development mode."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Introduction"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Quarkus provides the Dev Services for Keycloak feature, which is enabled by default when the `quarkus-oidc` extension is started in dev mode, the integration tests are running in test mode, and when no `quarkus.oidc.auth-server-url` property is configured.\n"
"The Dev Services for Keycloak feature starts a Keycloak container for both the dev and test modes.\n"
"It initializes them by registering the existing Keycloak realm or creating a new realm with the client and users required for you to start developing your Quarkus application secured by Keycloak immediately.\n"
"The container restarts when the `application.properties` or the realm file changes have been detected."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Additionally, xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui/extensions[/q/dev-ui/extensions] complements this feature with a Dev UI page, which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"If `quarkus.oidc.auth-server-url` is already set, then a generic OpenID Connect Dev Console, which can be used with all OpenID Connect providers, is activated.\n"
"For more information, see <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect providers>>."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services for Keycloak"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Start your application without configuring `quarkus.oidc` properties in the `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The console displays output similar to this:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Adding the `quarkus.keycloak.devservices.java-opts=-XX:UseSVE=0` configuration property may help to workaround Keycloak Dev Services startup problems on some Mac OS systems."
msgstr "`quarkus.keycloak.devservices.java-opts=-XX:UseSVE=0` 設定プロパティを追加すると、一部のMac OSシステムでKeycloak Dev Servicesの起動時の問題を回避できる場合があります。"

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "When logging in to the Keycloak admin console, the username is `admin`, and the password is `admin`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Be aware that Dev Services for Keycloak defaults to not initiating a new container if it detects an existing container labeled `quarkus-dev-service-keycloak`.\n"
"It connects to this container provided the value of the `quarkus.keycloak.devservices.service-name` property matches the label's value (default `quarkus`).\n"
"In such cases, expect a slightly altered output when you run the following:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"If the Keycloak container is not ready within the default 60-second timeout, you can resolve this by extending the timeout period.\n"
"For instance, set it to 2 minutes with `quarkus.devservices.timeout=2M`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "You can turn off sharing of the containers by specifying `quarkus.keycloak.devservices.shared=false`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Now, open the main link:http://localhost:8080/q/dev[Dev UI page] and observe the *OpenID Connect* card linking to a Keycloak page.\n"
"For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Click the *Keycloak provider* link.\n"
"This action opens a Keycloak page whose appearance varies depending on how the Dev Services for Keycloak feature is configured."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Developing service applications"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "By default, the Keycloak page can be used to support the development of a xref:security-oidc-bearer-token-authentication.adoc[Quarkus OIDC service application]."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Authorization code grant"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"If you set `quarkus.oidc.devui.grant.type=code` in the `application.properties` file (this is a default value), then an `authorization_code` grant is used to acquire both access and ID tokens.\n"
"Using this grant is recommended to emulate a typical flow where a single page application (SPA) acquires the tokens and uses them to access Quarkus services."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"First, you see an option to *Log into Single Page Application*.\n"
"For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Choose the Keycloak realm and client ID to use during the authentication process."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This SPA represents a public OpenID Connect client; therefore, the client IDs you enter must identify public Keycloak clients that have no secrets.\n"
"This is because SPA is not a web application and cannot securely handle the secrets it needs to complete the authorization code flow if the client secret is also expected to complete the authorization code flow."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"The clients requiring secrets can only be supported with this SPA if a default realm has been created or if `quarkus.oidc.credentials.secret` is configured and a single custom realm is used.\n"
"In both cases, the SPA can figure out the client secret it might need to complete the authorization code flow after Keycloak redirects the user back to it."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Next, after selecting *Log into Single Page Application*, you are redirected to Keycloak to authenticate, for example, as `alice:alice`.\n"
"Then, you are returned to the page representing the SPA:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "You can view the acquired access and ID tokens, for example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This view shows the encoded JSON Web Token (JWT) token on the left side and highlights the headers in red, payload or claims in green, and signature in blue.\n"
"It also shows the decoded JWT token on the right side, where you can see the header, claim names, and their values."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Next, test the service by entering a relative service path and sending a token.\n"
"SPA usually sends access tokens to the application endpoint, so choose the *With Access Token* option, for example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "To clear the test results area, use the eraser icon in the lower right corner."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Sometimes, ID tokens are forwarded to application frontends as bearer tokens.\n"
"This helps endpoints identify the user logged into SPA or perform out-of-band token verification.\n"
"Choose the *With ID Token* option in such cases."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"When you import custom Keycloak realms, you may find, after inspecting both the access and ID tokens in Dev UI, that only the access token contains the list of roles in its `groups` claim.\n"
"This information is important for accessing endpoints that are secured with the `@RolesAllowed` annotation.\n"
"To tell Keycloak to include this information in the ID token, add the `microprofile-jwt` scope to the list of client scopes in the Keycloak admin console.\n"
"Alternatively, add the `microprofile-jwt` scope to the list of required scopes using the `quarkus.oidc.authentication.scopes` property."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "For more information, see the https://www.keycloak.org/docs/latest/server_admin/#protocol[Keycloak server administration guide]."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Manually entering the service paths is not ideal.\n"
"For information about enabling Swagger or GraphQL UI for testing the service with the access token already acquired by the OIDC Dev UI, see the <<test-with-swagger-graphql,Test with Swagger UI or GraphQL UI>> section."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Finally, you can click *Log Out* image::dev-ui-keycloak-logout.png[alt=Dev UI Keycloak - Log Out,role=\"center\"] so you can authenticate to Keycloak as a different user."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Keycloak might return an error when you try to *Log into Single Page Application*.\n"
"For example, `quarkus.oidc.client-id` might not match the client ID in the realm imported to Keycloak, or the client in this realm might not be configured correctly to support the authorization code flow.\n"
"In such cases, Keycloak returns an `error_description` query parameter, and the Dev UI also shows this error description.\n"
"For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If the error occurs, log in to Keycloak by using the *Keycloak Admin* option, update the realm configuration as necessary, and check the `application.properties`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Test with Swagger UI or GraphQL UI"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"You can avoid manually entering the service paths and test your service with Swagger UI or GraphQL UI if `quarkus-smallrye-openapi` or `quarkus-smallrye-graphql` are used in your project.\n"
"For example, start Quarkus in dev mode with both `quarkus-smallrye-openapi` and `quarkus-smallrye-graphql` dependencies.\n"
"You can see the following options after logging in to Keycloak:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"For example, clicking *Swagger UI* opens the Swagger UI in a new browser tab where you can test the service by using the token acquired by Dev UI for Keycloak.\n"
"The Swagger UI does not try to re-authenticate again.\n"
"In the Swagger UI, do not choose a Swagger UI `Authorize` option; the OIDC Dev UI has authorized and provided the access token for Swagger UI to use for testing."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Integration with GraphQL UI works similarly; the access token acquired by Dev UI for Keycloak is used."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"You might need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work.\n"
"This is because Keycloak might enforce that the authenticated users are redirected only to the configured redirect URI.\n"
"It is recommended to do this in production to avoid the users being redirected to the wrong endpoints, which might happen if the correct `redirect_uri` parameter in the authentication request URI has been manipulated."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If Keycloak enforces it, you see an authentication error informing you that the `redirect_uri` value is wrong."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"In this case, select the *Keycloak Admin* option in the top right corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with, and add `http://localhost:8080/q/dev-ui/quarkus-oidc/keycloak-provider` to `Valid Redirect URIs`.\n"
"If you used `-Dquarkus.http.port` when starting Quarkus, then change `8080` to the value of `quarkus.http.port`"
msgstr "この場合、右上の *Keycloak Admin* オプションを選択し、 `admin:admin` 、テスト領域とDev UI for Keycloakが設定されているクライアントを選択して、 。 `http://localhost:8080/q/dev-ui/quarkus-oidc/keycloak-provider` を `Valid Redirect URIs` に追加します。Quarkusの起動時に `-Dquarkus.http.port` を使用した場合は、 `8080` を `quarkus.http.port`"

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If the container is shared between multiple applications running on different ports, you must register `redirect_uri` values for each application."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "You can set the `redirect_uri` value to `*` only for test purposes, especially when the containers are shared between multiple applications."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If no custom realm is imported, Dev Services for Keycloak sets the `redirect_uri` value to `*` when it creates a default realm."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Implicit grant"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"If you set `quarkus.oidc.devui.grant.type=implicit` in the `application.properties` file, then an `implicit` grant is used to acquire both access and ID tokens.\n"
"Use this grant to emulate a single page application only if the authorization code grant does not work; for example, when a client is configured in Keycloak to support an implicit grant."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Password grant"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If you set `quarkus.oidc.devui.grant.type=password` in the `application.properties` file, then you see a screen similar to this one:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Select a realm, enter a client ID and secret, user name and password, a relative service endpoint path, and click *Test service*.\n"
"It returns a status code, such as `200`, `403`, `401`, or `404`.\n"
"If the username is also set in the `quarkus.keycloak.devservices.users` map property containing usernames and passwords, then you do not have to set a password when testing the service.\n"
"Be aware that you do not have to initialize `quarkus.keycloak.devservices.users` to test the service by using the `password` grant."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "In the Dev UI console, you can also see output similar to the following:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "A token is acquired from Keycloak by using a `password` grant and is sent to the service endpoint."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Client credentials grant"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If you set `quarkus.oidc.devui.grant.type=client`, then a `client_credentials` grant is used to acquire a token, with the page showing no *User* field in this case:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Select a realm, enter the client ID and secret, a relative service endpoint path, and click *Test service*.\n"
"It returns a status code, such as `200`, `403`, `401`, or `404`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Developing OpenID Connect web-app applications"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "To develop a xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC web application], set `quarkus.oidc.application-type=web-app` in the `application.properties` file before starting the application."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Starting the application displays a screen similar to this one:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Set a relative service endpoint path and click *Log in to your web application*.\n"
"You are redirected to Keycloak to enter a username and password in a new browser tab before you get a response from the Quarkus application."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Running the tests"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "You can run the tests against a Keycloak container started in a test mode in a xref:continuous-testing.adoc[Continuous Testing] mode."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"It is also recommended to run the integration tests against Keycloak by using Dev Services for Keycloak.\n"
"For more information, see xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing-keycloak-devservices[Testing OpenID Connect Service Applications with Dev Services] and xref:security-oidc-code-flow-authentication.adoc#code-flow-integration-testing-keycloak-devservices[Testing OpenID Connect WebApp Applications with Dev Services]."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Keycloak initialization"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The `quay.io/keycloak/keycloak:26.3.0` image which contains a Keycloak distribution powered by Quarkus is used to start a container by default.\n"
"`quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image name.\n"
"For example, set it to `quay.io/keycloak/keycloak:19.0.3-legacy` to use a Keycloak distribution powered by WildFly.\n"
"Be aware that a Quarkus-based Keycloak distribution is only available starting from Keycloak `20.0.0`."
msgstr "デフォルトでは、Quarkusが提供するKeycloakディストリビューションを含む `quay.io/keycloak/keycloak:26.3.0` イメージがコンテナの起動に使用されます。 `quarkus.keycloak.devservices.image-name` 、Keycloakイメージ名を変更することができます。たとえば、WildFlyが提供するKeycloakディストリビューションを使用するには、 `quay.io/keycloak/keycloak:19.0.3-legacy` 。QuarkusベースのKeycloakディストリビューションは、Keycloak `20.0.0` からしか利用できないことに注意してください。"

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services for Keycloak initializes a launched Keycloak server next."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "By default, the `quarkus` and `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Usernames, secrets, and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains usernames and comma-separated role values)."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "For example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This configuration creates two users:\n"
" * `duke` with a `dukePassword` password and a `reader` role\n"
" * `john` with a `johnPassword` password and `reader` and `writer` roles"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "To customize the client ID and secret, you can use the `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` properties."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "However, it is likely that your Keycloak configuration is more complex and requires setting more properties."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This is why `quarkus.keycloak.devservices.realm-path` is always checked before initializing Keycloak with the default or configured realm, client, user, and roles properties.\n"
"If the realm file exists on the file system or classpath, then only this realm is used to initialize Keycloak, for example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "You can use `quarkus.keycloak.devservices.realm-path` to initialize Keycloak with multiple realm files by providing a comma-separated list of files:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm1.json,quarkus-realm2.json"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Also, the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` by using a *Keycloak Admin* option in the right top corner:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Sign in to Keycloak as `admin:admin` to further customize the realm properties, create or import a new realm, or export the realm."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"You can also copy classpath and file system resources to the container.\n"
"For example, if your application configures Keycloak authorization with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed to Keycloak in a jar file, then you can configure `Dev Services for Keycloak` to copy this jar to the Keycloak container as follows:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "`policies` alias is created for the classpath `/policies.jar` resource."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Policy jars can also be located in the file system.\n"
"<2> The policies jar is mapped to the `/opt/keycloak/providers/policies.jar` container location."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Disable Dev Services for Keycloak"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services for Keycloak is not activated if either `quarkus.oidc.auth-server-url` is already initialized or the default OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, regardless of whether you work with Keycloak or not."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If you prefer not to have a Dev Services for Keycloak container started or do not work with Keycloak, then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it is only necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The main Dev UI page includes an empty *OpenID Connect* card when Dev Services for Keycloak is disabled and the `quarkus.oidc.auth-server-url` property has not been initialized:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"If `quarkus.oidc.auth-server-url` is already set, then a generic OpenID Connect Dev Console, which can be used with all OpenID Connect providers, can be activated.\n"
"For more information, see the <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect providers>> section."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev UI for all OpenID Connect providers"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The Dev UI for all OpenID Connect providers is activated if the following conditions are met:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The `quarkus.oidc.auth-server-url` points to an already started OpenID Connect provider, which can be Keycloak or other provider."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The `quarkus.oidc.application-type` is set to `service`, the default value, or `hybrid`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "The `quarkus.oidc.client-id` is set."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Setting `quarkus.oidc.credentials.secret` is most likely required for Keycloak and other providers for the authorization code flow initiated from Dev UI to complete unless the client identified with `quarkus.oidc.client-id` is configured as a public client in your OpenID Connect provider's administration console."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "For example, you can use Dev UI to test Google authentication with this configuration:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Run:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "This command outputs a message similar to the following example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If the provider metadata discovery has been successful, then after you open the main link:http://localhost:8080/q/dev[Dev UI page], you can see the following *OpenID Connect* card referencing a `Google` provider:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Follow the link to log in to your provider, get the tokens, and test the application.\n"
"The experience is the same as described in the <<keycloak-authorization-code-grant,Authorization code grant for Keycloak>> section, where the Dev Services for Keycloak container has been started, especially if you work with Keycloak."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You likely need to configure your OpenID Connect provider to support redirecting back to the `Dev Console`.\n"
"You add `http://localhost:8080/q/dev-ui/quarkus-oidc/<providerName>-provider` as one of the supported redirect and logout URLs, where `<providerName>` must be replaced by the name of the provider shown in the Dev UI, for example, `auth0`."
msgstr "`Dev Console` へのリダイレクトをサポートするように OpenID Connect プロバイダを設定する必要があります。 `http://localhost:8080/q/dev-ui/quarkus-oidc/<providerName>-provider` をサポートされるリダイレクトおよびログアウトURLの1つとして追加します。 `<providerName>` は、Dev UIに表示されるプロバイダの名前に置き換える必要があります。例えば、 `auth0` 。"

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"The Dev UI experience described in the <<keycloak-authorization-code-grant,Authorization code grant for Keycloak>> section might differ slightly if you work with other providers.\n"
"For example, an access token might not be in JWT format, so it would not be possible to show its internal content.\n"
"However, all providers should return ID tokens in the JWT format."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"The current access token is used by default to test the service with Swagger UI or GrapghQL UI.\n"
"If the provider (other than Keycloak) returns a binary access token, then it is used with Swagger UI or GrapghQL UI only if this provider has a token introspection endpoint; otherwise, an `IdToken`, which is always in a JWT format is passed to Swagger UI or GrapghQL UI.\n"
"In such cases, you can verify with the manual Dev UI test that `401` is always returned for the current binary access token.\n"
"Also, note that using `IdToken` as a fallback with either of these user interfaces is only possible with the authorization code flow."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Some providers, such as `Auth0` do not support a standard RP-initiated logout, so the provider-specific logout properties must be configured for a logout option to be visible.\n"
"For more information, see xref:security-oidc-code-flow-authentication.adoc#user-initiated-logout[User-initiated logout] section in the \"OpenID Connect authorization code flow mechanism for protecting web applications\" guide."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Similarly, if you want to use a `password` or `client_credentials` grant for Dev UI to acquire the tokens, then you might need to configure some extra provider-specific properties, for example:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Non-application root path considerations"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This document refers to the `http://localhost:8080/q/dev-ui` Dev UI URL in several places where `q` is a default non-application root path.\n"
"If you customize `quarkus.http.root-path` or `quarkus.http.non-application-root-path` properties, then replace `q` accordingly.\n"
"For more information, see the https://quarkus.io/blog/path-resolution-in-quarkus/[Path resolution in Quarkus] blog post."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services for OIDC"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"When you work with Keycloak in production, <<dev-services-for-keycloak>> provides the best dev mode experience.\n"
"For other OpenID Connect providers, it is recommended to enable the Dev Services for OIDC like in the example below:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "the Dev Services for OIDC are enabled by default if Docker and Podman are not available."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"Once enabled, Quarkus starts a new OIDC server that supports most common OpenID Connect operations.\n"
"You can confirm in your console that the OIDC server started, you will see output similar to the following:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "If you navigate to the <<dev-ui-all-oidc-providers>>, you can log into the OIDC server as builtin users `alice` or `bob`:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid ""
"This login page is also displayed if you navigate to authenticated request path during the development of the xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC web application].\n"
"As always, the default roles for `alice` are `admin` and `user`, while the roles for `bob` are just `user`.\n"
"You can configure those built-in roles if required:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Assign a `root` role to the user `alice`."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Another option is log in as a custom user with the username and roles of your choice:"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Whichever user you choose, no password is required."
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "References"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "xref:dev-ui.adoc[Dev UI]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr ""

#: _versions/3.27/guides/security-openid-connect-dev-services.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
