msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Qute Reference Guide"
msgstr "Qute リファレンスガイド"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Qute is a templating engine designed specifically to meet the Quarkus needs.\n"
"The usage of reflection is minimized to reduce the size of native images.\n"
"The API combines both the imperative and the non-blocking reactive style of coding.\n"
"In the development mode, all files located in the `src/main/resources/templates` folder are watched for changes and modifications are immediately visible in your application.\n"
"Furthermore, Qute attempts to detect most of the template problems at build time and fail fast."
msgstr "Qute は、Quarkus のニーズを満たすために特別に設計されたテンプレートエンジンです。ネイティブイメージのサイズを小さくするために、リフレクションの使用は最小限に抑えられています。API は、命令型とノンブロッキングリアクティブ型の両方のスタイルのコーディングを組み合わせています。開発モードでは、 `src/main/resources/templates` フォルダーにあるすべてのファイルが変更があるかどうか監視され、変更はアプリケーションにすぐに表示されます。さらに、ビルド時にテンプレートの問題のほとんどの検出を試み、即座に失敗します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In this guide, you will find an <<hello_world_example,introductory example>>, the description of the <<core_features,core features>> and <<quarkus_integration,Quarkus integration>> details."
msgstr "このガイドでは、<<hello_world_example,入門者向けサンプル>>、<<core_features,コア機能>> の説明、<<quarkus_integration,Quarkus 統合>> の詳細について説明しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Qute is primarily designed as a Quarkus extension.\n"
"It is possible to use it as a \"standalone\" library too.\n"
"However, in such case some features are not available.\n"
"In general, any feature mentioned under the <<quarkus_integration>> section is missing.\n"
"Find more information about the limitations and possibilities in the <<standalone>> section."
msgstr ""
"Qute は、主に Quarkus のエクステンションとして設計されています。\n"
"「スタンドアロン」のライブラリーとして使用することも可能です。\n"
"しかし、その場合、いくつかの機能は使用できません。\n"
"一般的に、 <<quarkus_integration>> のセクションで言及されている機能は使えません。\n"
"制限と可能性については、 <<standalone>> セクションに詳細が記載されています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The Simplest Example"
msgstr "最も簡単な例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The easiest way to try Qute is to use the convenient `io.quarkus.qute.Qute` class and call one of its `fmt()` static methods that can be used to format simple messages:"
msgstr "Qute を試す最も簡単な方法は、便利な `io.quarkus.qute.Qute` クラスを使用し、簡単なメッセージをフォーマットするために使用できる `fmt()` 静的メソッドの 1 つを呼び出すことです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The empty expression `{}` is a placeholder that is replaced with an index-based array accessor, i.e. `{data[0]}`."
msgstr "空の式 `{}` はプレースホルダーであり、インデックスベースの配列アクセスサー (例えば `{data[0]}` ) に置き換えられます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can provide a data map instead."
msgstr "代わりにデータマップを提供することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A builder-like API is available for more complex formatting requirements."
msgstr "より複雑なフォーマットを必要とする場合には、ビルダーライクな API が利用可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that for a \"text/html\" template the special chars are replaced with html entities by default."
msgstr "\"text/html\" テンプレートでは、デフォルトで特殊な char が html エンティティーに置き換えられることに注意してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"You can use any <<basic-building-blocks,building block>> in the template.\n"
"In this case, the <<if_section>> is used to render the appropriate part of the message based on the input data."
msgstr "テンプレートには、任意の <<basic-building-blocks,ビルディングブロック>> を使用することができます。この場合、<<if_section>> は、入力データに基づいてメッセージの適切なパーツをレンダリングするために使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In <<quarkus_integration,Quarkus>>, the engine used to format the messages is the same as the one injected by `@Inject Engine`. Therefore, you can make use of any Quarkus-specific integration feature such as <<template_extension_methods>>, <<injecting-beans-directly-in-templates>> or even <<type-safe-message-bundles>>."
msgstr "<<quarkus_integration,Quarkus>> では、メッセージのフォーマットに使用されるエンジンは `@Inject Engine` によって注入されるものと同じです。したがって、<<template_extension_methods>> 、 <<injecting-beans-directly-in-templates>>  、または <<type-safe-message-bundles>> のような Quarkus 固有の統合機能を利用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The format object returned by the `Qute.fmt(String)` method can be evaluated lazily and used e.g. as a log message:"
msgstr "`Qute.fmt(String)` メソッドが返すフォーマットオブジェクトは、遅延評価され、たとえば、ログメッセージとして使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Please read the javadoc of the `io.quarkus.qute.Qute` class for more details."
msgstr "詳細は `io.quarkus.qute.Qute` クラスの javadoc をお読みください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Hello World Example"
msgstr "ハローワールドの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In this example, we would like to demonstrate the _basic workflow_ when working with Qute templates.\n"
"Let's start with a simple \"hello world\" example.\n"
"We will always need some *template contents*:"
msgstr "この例では、Quteのテンプレートを扱う際の基本的なワークフローをデモしたいと思います。まず、簡単なhello worldの例から始めましょう。 *テンプレートのコンテンツ* は必ず必要になります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "hello.html"
msgstr "hello.html"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr "`{name}` は、テンプレートがレンダリングされたときに評価される値の式です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Then, we will need to parse the contents into a *template definition* Java object.\n"
"A template definition is an instance of `io.quarkus.qute.Template`."
msgstr "そして、その内容を *テンプレート定義* Javaオブジェクトにパースする必要があります。テンプレート定義は、 `io.quarkus.qute.Template` のインスタンスです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.\n"
"The `Engine` represents a central point for template management with dedicated configuration.\n"
"Let's use the convenient builder:"
msgstr "Quteを\"スタンドアロン\"で使用する場合は、まず `io.quarkus.qute.Engine` のインスタンスを作成する必要があります。 `Engine` は、専用の設定でテンプレートを管理するための一元的なポイントを表しています。便利なビルダーを使ってみましょう。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see <<quarkus_integration>>."
msgstr "Quarkusでは、あらかじめ設定された `Engine` がインジェクション用に利用可能です - link:#quarkus_integration[quarkus_integration] を参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Once we have an `Engine` instance we could parse the template contents:"
msgstr "`Engine` のインスタンスがあれば、テンプレートの内容を解析することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see <<quarkus_integration>>."
msgstr "Quarkusでは、テンプレートの定義を単純に注入することができます。テンプレートは自動的に解析され、キャッシュされます - link:#quarkus_integration[quarkus_integration] を参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Finally, create a *template instance*, set the data and render the output:"
msgstr "最後に *テンプレートインスタンス* を作成し、データをセットして出力をレンダリングします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr "`Template.data(String, Object)` は、ワンステップでテンプレートのインスタンスを作成してデータを設定する便利なメソッドです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateInstance.render()` triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished. However, there are also asynchronous ways to trigger the rendering and consume the results. For example, there is the `TemplateInstance.renderAsync()` method that returns `CompletionStage<String>` or `TemplateInstance.createMulti()` that returns Mutiny's `Multi<String>`."
msgstr "`TemplateInstance.render()` は同期レンダリングをトリガーします。つまり、レンダリングが終了するまで現在のスレッドはブロックされます。しかし、レンダリングをトリガーして結果を消費する非同期の方法もあります。たとえば、 `CompletionStage<String>` `TemplateInstance.renderAsync()` を返す メソッドや、Mutiny の `Multi<String>` `TemplateInstance.createMulti()` を返すメソッドがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "So the workflow is simple:"
msgstr "なので、ワークフローはシンプルです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Create the template contents (`hello.html`),"
msgstr "テンプレートコンテンツを作成する ( `hello.html` )"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parse the template definition (`io.quarkus.qute.Template`),"
msgstr "テンプレートの定義を解析する ( `io.quarkus.qute.Template` )"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Create a template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "テンプレートインスタンスを作成する ( `io.quarkus.qute.TemplateInstance` )"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Render the output."
msgstr "出力をレンダリングする"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `Engine` is able to cache the template definitions so that it's not necessary to parse the contents again and again. In Quarkus, the caching is done automatically."
msgstr "`Engine` はテンプレート定義をキャッシュすることができるので、何度も内容をパースする必要がありません。Quarkus では、キャッシュは自動的に行われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Core Features"
msgstr "コア機能"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Basic Building Blocks"
msgstr "基本的なビルディングブロック"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The dynamic parts of a template include comments, expressions, sections and unparsed character data."
msgstr "テンプレートの動的な部分には、コメント、式、セクション、パースされていない文字データなどがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Comments"
msgstr "Comments"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A comment starts with the sequence `{!` and ends with the sequence `!}`, e.g. `{! This is a comment !}`.\n"
"Can be multiline and may contain expressions and sections: `{! {#if true} !}`.\n"
"The content of a comment is completely ignored when rendering the output."
msgstr "コメントは `{!` というシーケンスで始まり、 `!}` というシーケンスで終わり、例えば `{! This is a comment !}` のようになります。  複数行にすることができ、 `{! {#if true} !}` のように式やセクションを含むことができます。  コメントの内容は、出力をレンダリングする際に完全に無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Expressions"
msgstr "式"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"An <<expressions,expression>> outputs an evaluated value.\n"
"It consists of one or more parts.\n"
"A part may represent simple properties: `{foo}`, `{item.name}`, and virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.\n"
"An expression may also start with a namespace: `{inject:colors}`."
msgstr "<<expressions,式>> は評価値を出力します。これは 1つ以上のパーツから構成されます。パーツは `{foo}`、 `{item.name}` のような単純なプロパティーや、 `{item.get(name)}` 、 `{name ?: 'John'}` のような仮想メソッドを表わすことができます。また、式は名前空間 `{inject:colors}` で始まることもあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Sections"
msgstr "セクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A <<sections,section>> may contain static text, expressions and nested sections: `{#if foo.active}{foo.name}{/if}`.\n"
"The name in the closing tag is optional: `{#if active}ACTIVE!{/}`.\n"
"A section can be empty: `{#myTag image=true /}`.\n"
"Some sections support optional end tags, i.e. if the end tag is missing then the section ends where the parent section ends.\n"
"A section may also declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render."
msgstr ""
"<<sections,section>> には、静的テキスト、式、ネストされたセクションを含めることができます (`{#if foo.active}{foo.name}{/if}`)。\n"
"クロージングタグ内の名前はオプションです (`{#if active}ACTIVE!{/}`)。\n"
"セクションは空にできます (`{#myTag image=true /}`)。\n"
"一部のセクションでは、オプションの終了タグがサポートされます。つまり、終了タグがなければ、セクションは親セクションの終了位置で終了します。\n"
"セクションは、ネストしたセクションブロックを宣言することもでき (`{#if item.valid} Valid. {#else} Invalid. {/if}`)、どのブロックをレンダリングするかを決定します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Unparsed Character Data"
msgstr "パース対象外文字データ"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It is used to mark the content that should be rendered but _not parsed_.\n"
"It starts with the sequence `{|`  and ends with the sequence `|}`: `{| <script>if(true){alert('Qute is cute!')};</script> |}`, and could be multi-line."
msgstr "レンダリングは行うが _パースは行わない_ という内容をマークするために使用されます。  これは `{|` というシーケンスで始まり、 `|}` というシーケンスで終わり( `{|<script>if(true){alert('Qute is cute!')};</script>|}` 、複数行になる可能性もあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Previously, unparsed character data could start with `{[` and end with `]}`. This syntax is now removed due to common collisions with constructs from other languages."
msgstr "以前はパース対象外文字データを `{[` and end with `]}` から始めることができました。この構文は、他の言語の構文とよく衝突するため、現在では削除されています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Identifiers and Tags"
msgstr "識別子とタグ"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Identifiers are used in expressions and section tags.\n"
"A valid identifier is a sequence of non-whitespace characters.\n"
"However, users are encouraged to only use valid Java identifiers in expressions."
msgstr "識別子は、式やセクションタグで使用されます。有効な識別子は、空白文字以外の文字列です。ただし、式の中では有効な Java 識別子のみを使用することが推奨されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can use bracket notation if you need to specify an identifier that contains a dot, e.g. `{map['my.key']}`."
msgstr "ドットを含む識別子を指定する必要がある場合は、大括弧表記を使用することができます。例：`{map['my.key']}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"When parsing a template document the parser identifies all _tags_.\n"
"A tag starts and ends with a curly bracket, e.g. `{foo}`.\n"
"The content of a tag must start with:"
msgstr "テンプレート文書を解析する際、パーサはすべての _タグ_ を識別します。タグは中括弧で始まり、中括弧で終わります。例: `{foo}` タグの内容は次から始まる必要があります:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "a digit, or"
msgstr "数字、または"

#: _versions/3.27/guides/qute-reference.adoc
msgid "an alphabet character, or"
msgstr "アルファベット文字、または"

#: _versions/3.27/guides/qute-reference.adoc
msgid "underscore, or"
msgstr "アンダースコア、または"

#: _versions/3.27/guides/qute-reference.adoc
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "組み込みコマンド: `#` , `!` , `@` , `/` ."

#: _versions/3.27/guides/qute-reference.adoc
msgid "If it does not start with any of the above it is ignored by the parser."
msgstr "上記のいずれかで始まらない場合は、パーサによって無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Tag Examples"
msgstr "タグの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parsed: an expression that starts with underscore."
msgstr "パース対象: アンダースコアで始まる式"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parsed: a comment"
msgstr "パース対象: コメント"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Ignored: starts with whitespace."
msgstr "無視対象: 空白で開始"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Ignored: starts with `{`."
msgstr "無視対象: `{` で開始"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Ignored: starts with `\"`."
msgstr "無視対象: `\"` で開始"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, i.e. `\\\\{foo}` will be rendered as `{foo}` (no parsing/evaluation will happen)."
msgstr "エスケープシーケンス `\\{` and `\\}` を使ってテキストにデリミタを挿入することも可能です。 実際には、エスケープシーケンスは通常、開始デリミタのためにのみ必要とされます。すなわち、 `\\\\{foo}` は `{foo}` として描画されます（パース、評価は行われません）。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Removing Standalone Lines From the Template"
msgstr "テンプレートから独立した行を削除する"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"By default, the parser removes standalone lines from the template output.\n"
"A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) or comment but no expression and no non-whitespace character.\n"
"In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.\n"
"Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr "デフォルトでは、パーサはテンプレート出力からスタンドアロン行を削除します。スタンドアロン *行* とは、少なくとも1つのセクションタグ(例: `{#each}` や `{/each}` )、パラメーター宣言(例: `{@org.acme.Foo foo}` )、コメントを含むが、式を含まず、空白以外の文字を含まない行のことです。言い換えれば、セクションタグやパラメーター宣言を含まない行は、独立した行ではあり *ません* 。同様に、 _式_ や _空白以外の文字_ を含む行もスタンドアロン行ではあり *ません* 。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Example"
msgstr "テンプレート例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This is a standalone line and will be removed."
msgstr "これはスタンドアロン行なので削除されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr "スタンドアロン行ではない - 式と非空白文字を含む"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "スタンドアロン行ではない - セクションタグ/パラメーター宣言を含まない"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This is a standalone line."
msgstr "これはスタンドアロン行です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Default Output"
msgstr "デフォルト出力"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In Quarkus, the default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.\n"
"In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr "Quarkusでは、プロパティー( `quarkus.qute.remove-standalone-lines` )を `false` に設定することで、デフォルトの動作を無効にすることができます。この場合、スタンドアロン行のすべての空白文字が出力されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "`quarkus.qute.remove-standalone-lines=false` での出力"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"An expression is evaluated and outputs the value.\n"
"It has one or more parts, where each part represents either a property accessor (aka Field Access Expression) or a virtual method invocation (aka Method Invocation Expression)."
msgstr "式が評価され、値が出力されます。これには 1 つ以上のパーツがあり、各パーツはプロパティーアクセサー (別名 Field Access Expression) または仮想メソッド呼び出し (別名 Method Invocation Expression) のいずれかを表します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"When accessing the properties you can either use the dot notation or bracket notation.\n"
"In the `object.property` (dot notation) syntax, the `property` must be a <<identifiers,valid identifier>>.\n"
"In the `object[property_name]` (bracket notation) syntax, the `property_name` has to be a non-null <<literals,literal>> value."
msgstr ""
"プロパティーにアクセスする際には、ドット表記とブラケット表記のどちらかを使用できます。\n"
"`object.property` (ドット表記) 構文では、 `property` は <<identifiers,valid identifier>> でなければなりません。\n"
"`object[property_name]` (ブラケット表記) 構文では、 `property_name` は null 以外の <<literals,literal>> 値でなければなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"An expression can start with an optional namespace followed by a colon (`:`).\n"
"A valid namespace consists of alphanumeric characters and underscores.\n"
"Namespace expressions are resolved differently - see also <<expression_resolution>>."
msgstr ""
"式は、名前空間の後にコロン (`:`) を付けて開始できます。\n"
"有効な名前空間は英数字とアンダースコアで構成されます。\n"
"名前空間の式は別の方法で解決されます。<<expression_resolution>> も参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Property Accessor Examples"
msgstr "プロパティーアクセサーの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "no namespace, one part: `name`"
msgstr "名前空間がなし、1 つの部分: `name`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "no namespace, two parts: `item`, `name`"
msgstr "名前空間なし、2つのパーツ: `item` . `name`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "`{item.name}` と同等ですが、括弧表記を使用しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "namespace `global`, one part: `colors`"
msgstr "namespace `global` , 1つのパーツ: `colors`"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A part of an expression can be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses.\n"
"A parameter of a virtual method can be either a nested expression or a <<literals,literal>> value.\n"
"We call these methods _\"virtual\"_ because they do not have to be backed by a real Java method.\n"
"You can learn more about virtual methods in the <<virtual_methods,following section>>."
msgstr ""
"式の一部を _仮想メソッド_ とすることができ、その場合、名前の後にコンマで区切られたパラメーターのリストを括弧で囲みます。\n"
"仮想メソッドのパラメーターは、ネストされた式か、<<literals,literal>> 値のどちらかにすることができます。\n"
"これらのメソッドを _\"仮想\"_ と呼ぶのは、実際の Java メソッドによってバックアップされる必要がないためです。\n"
"仮想メソッドの詳細については、<<virtual_methods,following section>> を参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Virtual Method Example"
msgstr "仮想メソッドの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr "名前空間なし、2つのパーツ - `item` , `getLabels(1)` 、2番目のパーツは、名前 `getLabels` と パラメーター `1` を持つ仮想メソッドです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "infix notation that can be used for virtual methods with single parameter, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr "`name.or('John')` に翻訳される、単一のパラメーターを持つ仮想メソッドに使用できる 中置 (infix) 記法。名前空間なし、2 つのパーツ - `name` . `or('John')`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Supported Literals"
msgstr "サポートされているリテラル"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Literal"
msgstr "リテラル"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Examples"
msgstr "サンプル"

#: _versions/3.27/guides/qute-reference.adoc
msgid "boolean"
msgstr "boolean"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`true`, `false`"
msgstr "`true`, `false`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "null"
msgstr "null"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`null`"
msgstr "`null`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "string"
msgstr "string"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`'value'`, `\"string\"`"
msgstr "`'value'`, `\"string\"`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "integer"
msgstr "integer"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`1`, `-5`"
msgstr "`1`, `-5`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "long"
msgstr "長"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`1l`, `-5L`"
msgstr "`1l`, `-5L`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "double"
msgstr "double"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`1D`, `-5d`"
msgstr "`1D`, `-5d`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "float"
msgstr "float"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`1f`, `-5F`"
msgstr "`1f`, `-5F`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Resolution"
msgstr "解決"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"When evaluating expressions a list of registered <<value-resolvers,value resolvers>> is used.\n"
"The first part of the expression is always resolved against the <<current_context_object,current context object>>.\n"
"If no result is found for the first part, it's resolved against the parent context object (if available).\n"
"For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.\n"
"For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.\n"
"All other parts of an expression are resolved using all ``ValueResolver``s against the result of the previous resolution."
msgstr ""
"式を評価する場合、登録された<<value-resolvers,value resolvers>> リストを使用します。\n"
"式の最初のパーツは、常に <<current_context_object,current context object>> に対して解決されます。\n"
"最初のパーツの結果が見つからない場合、(利用可能な場合は) 親コンテキストオブジェクトに対して解決されます。\n"
"名前空間で始まる式の場合、現在のコンテキストオブジェクトは、利用可能なすべての ``NamespaceResolver`` を使用して検出されます。\n"
"名前空間で始まらない式の場合、現在のコンテキストオブジェクトはタグの *位置から導出* されます。\n"
"式の他のすべてのパーツは、前の解決結果に対してすべての ``ValueResolver`` を使用して解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"For example, expression `{name}` has no namespace and single part - `name`.\n"
"The \"name\" will be resolved using all available value resolvers against the current context object.\n"
"However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.\n"
"First, all available ``NamespaceResolver``s will be used to find the current context object.\n"
"And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr "例えば、式 `{name}` には名前空間がなく、単一のパーツ - `name` です。\"name\"は、カレントコンテキストオブジェクトに対して利用可能なすべての値リゾルバを使用して解決されます。しかし、式 `{global:colors}` には、名前空間 `global` と単一パーツ - `colors` があります。まず、現在のコンテキストオブジェクトを見つけるために、利用可能なすべての `NamespaceResolver` s が使用されます。その後、見つかったコンテキストオブジェクトに対して\"colors\"を解決するために値リゾルバが使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Data passed to the template instance are always accessible using the `data` namespace.\n"
"This could be useful to access data for which the key is overridden:"
msgstr "テンプレート・インスタンスに渡されたデータは、常に `data` 名前空間を使用してアクセスできます。これは、キーがオーバーライドされているデータにアクセスするのに便利かもしれません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item` is passed to the template instance as a data object."
msgstr "`item` はデータオブジェクトとしてテンプレートインスタンスに渡されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Iterate over the list of derived items."
msgstr "派生アイテムのリストを繰り返し処理します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item` is an alias for the iterated element."
msgstr "`item` は反復要素のエイリアスです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Use the `data` namespace to access the `item` data object."
msgstr "`data` 名前空間を使用して、 `item` データ・オブジェクトにアクセスします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Current Context"
msgstr "カレントコンテキスト"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If an expression does not specify a namespace, the _current context object_ is derived from the position of the tag.\n"
"By default, the current context object represents the data passed to the template instance.\n"
"However, sections may change the current context object.\n"
"A typical example is the <<let_section,`let`>> section that can be used to define named local variables:"
msgstr ""
"式が名前空間を指定しない場合、_カレントコンテキストオブジェクト_ はタグの位置から導出されます。\n"
"デフォルトでは、現在のコンテキストオブジェクトは、テンプレートインスタンスに渡されたデータを表します。\n"
"ただし、セクションは現在のコンテキストオブジェクトを変更することがあります。\n"
"典型的な例は、名前付きローカル変数を定義するために使用できる <<let_section,`let`>> セクションです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The current context object inside the section is the map of resolved parameters."
msgstr "セクション内の現在のコンテキストオブジェクトは、解決されたパラメーターのマップです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "カレントコンテキストは、暗黙のバインディング `this` を通してアクセスできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Built-in Resolvers"
msgstr "組込Resolver"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Name"
msgstr "名前"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Description"
msgstr "説明"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Elvis Operator: `?:`"
msgstr "エルビス・オペレーター `?:`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr "前のパーツが解決できなかったり、 `null` に解決された場合のデフォルト値を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"
msgstr "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "`orEmpty`"
msgstr "`orEmpty`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs an empty list if the previous part cannot be resolved or resolves to `null`."
msgstr "前のパーツが解決できなかったり、 `null` に解決された場合に空のリストを出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{pets.orEmpty.size}` outputs `0` if `pets` is not resolvable or `null`"
msgstr "`{pets.orEmpty.size}` は、 `pets` が解決可能でないか、 `null` の場合、 `0` を出力する。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Ternary Operator: `condition ? ifTrue : ifFalse`"
msgstr "三項演算子： `condition ? ifTrue : ifFalse`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Shorthand for if-then-else statement. Unlike in <<if_section>> nested operators are not supported."
msgstr "if-then-else文の省略形。 link:#if_section[if_section]] とは異なり、入れ子になった演算子はサポートされていません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr "`{item.isActive ? item.name : 'Inactive item'}` は、 `item.isActive` が `true` に解決した場合に `item.name` の値を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Logical AND Operator: `&&`"
msgstr "論理 AND 演算子： `&&`"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Outputs `true` if both parts are not `falsy` as described in the <<if_section>>.\n"
"The parameter is only evaluated if needed."
msgstr "<<if_section>> で説明したように、両方のパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合にのみ評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{person.isActive && person.hasStyle}`"
msgstr "`{person.isActive && person.hasStyle}`"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Logical OR Operator: `||`"
msgstr "論理和演算子： `||`"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Outputs `true` if any of the parts is not `falsy` as described in the <<if_section>>.\n"
"The parameter is only evaluated if needed."
msgstr "link:#if_section[if_section]] で説明したように、いずれかのパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合のみ評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{person.isActive || person.hasStyle}`"
msgstr "`{person.isActive || person.hasStyle}`"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Equals Operator: `==`/`eq`/`is`"
msgstr "イコール演算子： `==` / `eq` / `is`"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs `true` if the base object is equal to the argument."
msgstr "ベースオブジェクトが引数と等しい場合、 `true` を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "`{obj1 is obj2 ? 'Equal' : 'Inequal'}`, `{obj1 == obj2 ? 'Equal' : 'Inequal'}`, `{obj1.eq(obj2) ? 'Equal' : 'Inequal'}`"
msgstr "`{obj1 is obj2 ? 'Equal' : 'Inequal'}` `{obj1 == obj2 ? 'Equal' : 'Inequal'}` 、 `{obj1.eq(obj2) ? 'Equal' : 'Inequal'}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in <<if_section>>."
msgstr "<<if_section>> で説明したように、三項演算子の条件は値が `falsy` とみなされない場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation. For example `{person.name or 'John'}` is translated to `{person.name.or('John')}` and `{item.isActive ? item.name : 'Inactive item'}` is translated to `{item.isActive.ifTruthy(item.name).or('Inactive item')}`"
msgstr "実際には、演算子は1つのパラメーターを消費する「仮想メソッド」として実装されており、中置記法で使用することができます。例えば、 `{person.name or 'John'}` は `{person.name.or('John')}` に翻訳され、 `{item.isActive ? item.name : 'Inactive item'}` は `{item.isActive.ifTruthy(item.name).or('Inactive item')}` に翻訳されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Arrays"
msgstr "配列"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"You can iterate over elements of an array with <<loop_section>>.\n"
"Moreover, it's also possible to get the length of the specified array and access the elements directly via an index value.\n"
"Additionally, you can access the first/last `n` elements via the `take(n)/takeLast(n)` methods."
msgstr ""
"<<loop_section>> を使用して、配列の要素を反復処理することができます。\n"
"また、指定した配列の長さを取得し、インデックス値を用いて直接要素にアクセスすることも可能です。\n"
"さらに、 `take(n)/takeLast(n)` メソッドを使用して最初または最後の `n` 要素にアクセスできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Array Examples"
msgstr "配列の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the length of the array."
msgstr "配列の長さを出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the first element of the array."
msgstr "配列の最初の要素を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the second element of the array using the bracket notation."
msgstr "括弧表記で配列の2つ目の要素を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the third element of the array via the virtual method `get()`."
msgstr "配列の 3 番目の要素を仮想メソッド `get()` で出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Outputs the first two elements of the array."
msgstr "配列の最初の 2 要素を出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Character Escapes"
msgstr "文字エスケープ"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default if a corresponding template variant is set.\n"
"For JSON templates the `\"`, `\\` and the control characters (`U+0000` through `U+001F`) are escaped by default if a corresponding template variant is set."
msgstr ""
"HTML および XML テンプレートでは、対応するテンプレートバリアントが設定されている場合に、 `'`, `\"`, `<`, `>`, `&` 文字はデフォルトでエスケープされます。\n"
"JSON テンプレートの場合、対応するテンプレートバリアントが設定されている場合、 `\"`、 `\\`、および制御文字 (`U+0000` から `U+001F`) はデフォルトでエスケープされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, a variant is set automatically for templates located in the `src/main/resources/templates`. By default, the `java.net.URLConnection#getFileNameMap()` is used to determine the content-type of a template file. The additional map of suffixes to content types can be set via `quarkus.qute.content-types`."
msgstr "Quarkusでは、 `src/main/resources/templates` にあるテンプレートに対してバリアントが自動的に設定されます。デフォルトでは、テンプレートファイルのコンテンツタイプを決定するために `java.net.URLConnection#getFileNameMap()` が使用されます。コンテンツタイプへのサフィックスの追加マップは、 `quarkus.qute.content-types` を通じて設定できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you need to render the unescaped value:"
msgstr "エスケープされていない値をレンダリングする必要がある場合:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Either use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr "`java.lang.Object` の拡張メソッドとして実装されている `raw` または `safe` プロパティーを使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Or wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "`String` の値を `io.quarkus.qute.RawString` でラップします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "HTML Example"
msgstr "HTML の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr "`title` が `Expressions & Escapes` に解決した場合は、 `Expressions &amp; Escapes` としてレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr "`paragraph` が `<p>My text!</p>` に解決された場合は、 `<p>My text!</p>` としてレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "By default, a template with one of the following content types is escaped: `text/html`, `text/xml`, `application/xml` and `application/xhtml+xml`. However, it's possible to extend this list via the `quarkus.qute.escape-content-types` configuration property."
msgstr "デフォルトでは、 `text/html`、 `text/xml`、 `application/xml` および `application/xhtml+xml` コンテンツタイプのいずれかを持つテンプレートがエスケープされます。しかし、 `quarkus.qute.escape-content-types` 設定プロパティーで、このリストを拡張することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "JSON Example"
msgstr "JSON の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`valueId` that resolves to `\\nA12345` will be rendered as `\\nA12345` that will result in an invalid JSON Object because of the new line inserted inside the string value for the attribute `id`."
msgstr "`\\nA12345` に解決される `valueId` は `\\nA12345` としてレンダリングされますが、属性 `id` の文字列値内に新しい行が挿入されるため、無効な JSON オブジェクトになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`valueName` that resolves to `\\tExpressions \\n Escapes` will be rendered as `\\\\tExpressions \\\\n Escapes`."
msgstr "`\\\tExpressions \\n Escapes` に対して解決される `valueName` は `\\\\\tExpressions \\\\n Escapes` とレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Virtual Methods"
msgstr "仮想メソッド"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A virtual method is a *part of an expression* that looks like a regular Java method invocation.\n"
"It's called \"virtual\" because it does not have to match the actual method of a Java class.\n"
"In fact, like normal properties a virtual method is also handled by a value resolver.\n"
"The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr "仮想メソッドとは、通常のJavaメソッド呼び出しのように見える *式のパーツ* です。Javaクラスの実際のメソッドと一致する必要がないため、「仮想」と呼ばれています。実際には、通常のプロパティーと同様に、仮想メソッドも値リゾルバによって処理されます。唯一の違いは、仮想メソッドの場合、値リゾルバが式でもあるパラメーターを消費することです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:"
msgstr "`buildName(item.name,5)` は、名前 `buildName` と 2 つのパラメーター `item.name` と `5` を持つ仮想メソッドを表します。この仮想メソッドは、以下の Java クラスに対して生成された値リゾルバによって評価されます。\n"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Virtual methods are usually evaluated by value resolvers generated for <<template_extension_methods,@TemplateExtension methods>>, <<template_data,@TemplateData>> or classes used in <<typesafe_expressions,parameter declarations>>.\n"
"However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr "仮想メソッドは通常、 <<template_extension_methods,@TemplateExtension methods>> 、 <<template_data,@TemplateData>> 、または <<typesafe_expressions,parameter declarations>> で使用されるクラスのために生成された値リゾルバによって評価されます。しかし、Javaのクラス/メソッドに基づかないカスタムの値リゾルバも登録できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr "単一のパラメーターを持つ仮想メソッドは 中置記法を使用して呼び出すことができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Infix Notation Example"
msgstr "中置表記例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr "`item.price or 5` は `item.price.or(5)` に翻訳されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "仮想メソッドのパラメーターは、「入れ子」仮想メソッドの呼び出しにすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Nested Virtual Method Example"
msgstr "入れ子になった仮想メソッドの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr "`item.calculateDiscount(10)` が最初に評価され、その後 `item.subtractPrice()` への引数として渡されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluation of `CompletionStage` and `Uni` Objects"
msgstr "`CompletionStage` と `Uni` オブジェクトの評価"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.\n"
"If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.\n"
"For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.\n"
"If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above."
msgstr "`java.util.concurrent.CompletionStage` および `io.smallrye.mutiny.Uni` を実装したオブジェクトは、特別な方法で評価されます。式の一部が `CompletionStage` に解決された場合、このステージが完了すると解決が継続され、式の次の部分(もしあれば)が完了したステージの結果に対して評価されます。たとえば、式 `{foo.size}` があり、 `foo` が `CompletionStage<List<String>>` に解決された場合、 `size` は完了した結果、すなわち `List<String>` に対して解決されます。式の一部が `Uni` に解決される場合、 `CompletionStage` が `Uni#subscribeAsCompletionStage()` を使用して `Uni` から最初に作成され、その後上記のように評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that each `Uni#subscribeAsCompletionStage()` results in a new subscription. You might need to configure memoization of the `Uni` item or failure before it's used as template data, i.e. `myUni.memoize().indefinitely()`."
msgstr "各 `Uni#subscribeAsCompletionStage()` は新しいサブスクリプションになることに注目してください。 `Uni` の項目や障害がテンプレートデータとして使用される前に、メモ化を設定する必要があるかもしれません。つまり、 `myUni.memoize().indefinitely()` ."

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It can happen that a `CompletionStage` never completes or a `Uni` emits no item/failure.\n"
"In this case, the rendering methods (such as `TemplateInstance#render()` and `TemplateInstance#createUni()`) fail after a specific timeout.\n"
"The timeout can be specified as a template instance `timeout` attribute.\n"
"If no `timeout` attribute is set the global rendering timeout is used."
msgstr "`CompletionStage` が完了しなかったり、あるいは `Uni` がアイテム/失敗を発しないということが起こり得ます。この場合、レンダリングメソッド (`TemplateInstance#render()` および `TemplateInstance#createUni()`) は、特定のタイムアウトを過ぎると失敗します。このタイムアウトは、テンプレートインスタンスの `timeout` 属性として指定することができます。 `timeout` 属性が設定されていない場合、グローバルレンダリングタイムアウトが使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, the default timeout can be set via the `io.quarkus.qute.timeout` configuration property. If using Qute standalone then the `EngineBuilder#timeout()` method can be used."
msgstr "Quarkus では、デフォルトのタイムアウトは `io.quarkus.qute.timeout` 設定プロパティーで設定することができます。Qute をスタンドアロンで使用する場合は、 `EngineBuilder#timeout()` メソッドを使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In previous versions, only the `TemplateInstance#render()` method honored the timeout attribute. You can use the `io.quarkus.qute.useAsyncTimeout=false` config property to preserve the old behavior and take care of the timeout yourself, for example `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()`."
msgstr "以前のバージョンでは、 `TemplateInstance#render()` メソッドだけがタイムアウト属性を尊重していました。たとえば、 `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()` のように、 `io.quarkus.qute.useAsyncTimeout=false` config プロパティーを使って、古い動作を保持しタイムアウトを自分で処理することが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "How to Identify a Problematic Part of the Template"
msgstr "テンプレートの問題個所の特定方法"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It's not easy to find the problematic part of a template when a timeout occurs.\n"
"You can set the `TRACE` level for the logger `io.quarkus.qute.nodeResolve` and try to analyze the log output afterwards."
msgstr "タイムアウトが発生したときに、テンプレートの問題のあるパーツを見つけるのは簡単ではありません。ロガー `io.quarkus.qute.nodeResolve` の `TRACE` レベルを設定し、その後ログ出力の解析を試みることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`application.properties` Example"
msgstr "`application.properties` の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You should see the following pair of log messages for every expression and section used in a template:"
msgstr "テンプレートで使用されるすべての式とセクションについて、次のような一対のログメッセージが表示されるはずです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"TRACE [io.qua.qut.nodeResolve] Resolve {name} started: Template hello.html at line 8\n"
"TRACE [io.qua.qut.nodeResolve] Resolve {name} completed: Template hello.html at line 8"
msgstr ""
"TRACE [io.qua.qut.nodeResolve] Resolve {name} started: Template hello.html at line 8\n"
"TRACE [io.qua.qut.nodeResolve] Resolve {name} completed: Template hello.html at line 8"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If a `completed` log message is missing then you have a good candidate to explore."
msgstr "もし、 `completed` のログメッセージがない場合は、調査すべき良い候補があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Missing Properties"
msgstr "不明なプロパティ"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It can happen that an expression may not be evaluated at runtime.\n"
"For example, if there is an expression `{person.age}` and there is no property `age` declared on the `Person` class.\n"
"The behavior differs based on whether the <<strict_rendering>> is enabled or not."
msgstr "式が実行時に評価されない場合があります。たとえば、 `{person.age}` という式があり、 `Person` クラスに `age` というプロパティーが宣言されていない場合です。<<strict_rendering>> が有効かどうかによって、動作が異なってきます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If enabled then a missing property will always result in a `TemplateException` and the rendering is aborted.\n"
"You can use _default values_ and _safe expressions_ in order to suppress the error."
msgstr "これを有効にすると、プロパティーが見つからない場合、常に `TemplateException` が発生し、レンダリングが中断されます。このエラーを抑制するために、_default values_ や _safe expressions_ を使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If disabled then the special constant `NOT_FOUND` is written to the output by default."
msgstr "無効な場合、デフォルトで特別な定数 `NOT_FOUND` が出力に書き込まれます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, it's possible to change the default strategy via the `quarkus.qute.property-not-found-strategy` as described in the <<configuration-reference>>."
msgstr "Quarkus では、<<設定リファレンス>> で説明しているように、 `quarkus.qute.property-not-found-strategy` を使用して、デフォルトのストラテジーを変更することが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Similar errors are detected at build time if <<typesafe_expressions>> and <<typesafe_templates>> are used."
msgstr "<<typesafe_expressions>> や <<typesafe_templates>> を使用すると、ビルド時に同様のエラーが検出されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A section has a start tag that starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`.\n"
"It may be empty, i.e. the start tag ends with `/`: `{#myEmptySection /}`.\n"
"Sections usually contain nested expressions and other sections.\n"
"The end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`.\n"
"Some sections support optional end tags, i.e. if the end tag is missing then the section ends where the parent section ends."
msgstr ""
"セクションは `#` で始まる開始タグを持ち、その後に `{#if}` や `{#each}` のようなセクション名が続きます。\n"
"また、空でも構いません。その場合、開始タグは `/` で終了します (`{#myEmptySection /}`)。\n"
"セクションには通常、ネストされた式や他のセクションが含まれています。\n"
"終了タグは `/` で始まり、セクションの名前 (オプション) が含まれます (`{#if foo}Foo!{/if}または `{#if foo}Foo!{/}`)。\n"
"一部のセクションではオプションの終了タグがサポートされています。終了タグがない場合、セクションは親セクションの終了位置で終了します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`#let` Optional End Tag Example"
msgstr "`#let` オプションの終了タグの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Defines the local variable that can be used inside the parent `{#if}` section."
msgstr "親 `{#if}` セクション内で使用できるローカル変数を定義します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Built-in section"
msgstr "組み込みセクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Supports Optional End Tag"
msgstr "オプションの終了タグをサポート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for}`"
msgstr "`{#for}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "❌"
msgstr "❌"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if}`"
msgstr "`{#if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#when}`"
msgstr "`{#when}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#let}`"
msgstr "`{#let}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "✅"
msgstr "✅"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#with}`"
msgstr "`{#with}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#include}`"
msgstr "`{#include}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "User-defined Tags"
msgstr "ユーザー定義タグ"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#fragment}`"
msgstr "`{#fragment}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#cached}`"
msgstr "`{#cached}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parameters"
msgstr "パラメーター"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A start tag can define parameters with optional names, e.g. `{#if item.isActive}` and `{#let foo=1 bar=false}`.\n"
"Parameters are separated by one or more whitespaces.\n"
"Names are separated from the values by the equals sign.\n"
"Names and values can be prefixed and suffixed with any number of spaces, e.g. `{#let id='Foo'}` and `{#let id  = 'Foo'}` are equivalents where the name of the parameter is `id` and the value is `Foo`.\n"
"Values can be grouped using parentheses, e.g. `{#let id=(item.id ?: 42)}` where the name is `id` and the value is `item.id ?: 42`.\n"
"Sections can interpret parameter values in any way, e.g. take the value as is.\n"
"However, in most cases, the parameter value is registered as an <<expressions,expression>> and evaluated before use."
msgstr "開始タグは、 `{#if item.isActive}` や `{#let foo=1 bar=false}` のように、オプションの名前でパラメーターを定義することができます。パラメータは1つ以上の空白で区切られます。名前と値は等号で区切られます。例えば、 `{#let id='Foo'}` と `{#let id = 'Foo'}` は等価で、パラメータ名は `id` で、値は `Foo` です。値は括弧を使ってグループ化することができます。例えば、 `{#let id=(item.id ?: 42)}` は名前が `id` で値が `item.id ?: 42` です。セクションはパラメータ値をどのように解釈してもかまいません。しかし、ほとんどの場合、パラメータ値は xref:expressions[式として] 登録され、使用する前に評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A section may contain several content *blocks*.\n"
"The \"main\" block is always present.\n"
"Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.\n"
"A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr "1つのセクションには、いくつかのコンテンツ *ブロック* を含めることができます。\"main\" ブロックは常に存在します。追加/入れ子になったブロックも `#` で始まり、パラメーターを持つことができます - `{#else if item.isActive}`。セクションのロジックを定義するセクションヘルパーは、任意のブロックを「実行」し、パラメーターを評価することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`#if` Section Example"
msgstr "`#if`セクションの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This is the main block."
msgstr "これがメインブロックです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Additional block."
msgstr "追加ブロック。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Loop Section"
msgstr "ループセクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The loop section makes it possible to iterate over an instance of `Iterable`, `Iterator`, array, `Map` (element is a `Map.Entry`), `Stream`, `Integer`, `Long`, `int` and `long` (primitive value).\n"
"A `null` parameter value results in a no-op."
msgstr ""
"ループセクションでは、 `Iterable`、 `Iterator`、array、 `Map` (要素は `Map.Entry`)、 `Stream`、 `Integer`、 `Long`、 `int` および `long` (プリミティブ値) のインスタンスに対して反復処理できます。\n"
"パラメーター値に `null` を指定すると、no-op となります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"This section has two flavors.\n"
"The first one is using the name `each` and `it` is an implicit alias for the iteration element."
msgstr "このセクションには 2 つのフレーバーがあります。最初のものは `each` という名前を使い、 `it` は反復処理要素の暗黙のエイリアスです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`name` is resolved against the current iteration element."
msgstr "`name` は現在の反復要素に対して解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The other form is using the name `for` and specifies the alias used to reference the iteration element:"
msgstr "もう一つの形式は、 `for` という名前を使い、反復要素を参照するために使われるエイリアスを指定します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item` is the alias used for the iteration element."
msgstr "`item` は、反復処理要素に使用されるエイリアスです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's also possible to access the iteration metadata inside the loop via the following keys:"
msgstr "また、ループ内の反復処理メタデータには、以下のキーでアクセスすることが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`count` - 1-based index"
msgstr "`count` - 1 を基準としたインデックス"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`index` - zero-based index"
msgstr "`index` - ゼロ基準のインデックス"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`hasNext` - `true` if the iteration has more elements"
msgstr "`hasNext` - イテレーションにさらに要素がある場合は `true` とります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`isLast` - `true` if `hasNext == false`"
msgstr "`isLast` - `true` if `hasNext == false`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`isFirst` - `true` if `count == 1`"
msgstr "`isFirst` - `true` if `count == 1`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`odd` - `true` if the element's count is odd"
msgstr "`odd` - 要素のカウントが奇数である場合 `true`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`even` - `true` if the element's count is even"
msgstr "`hasNext` - イテレーションにさらに要素がある場合に `true`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`indexParity` - outputs `odd` or `even` based on the count value"
msgstr "`indexParity` - は、カウント値に応じて `odd` または `even` を出力します"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"However, the keys cannot be used directly.\n"
"Instead, a prefix is used to avoid possible collisions with variables from the outer scope.\n"
"By default, the alias of an iterated element suffixed with an underscore is used as a prefix.\n"
"For example, the `hasNext` key must be prefixed with `it_` inside an `{#each}` section: `{it_hasNext}`."
msgstr "しかし、キーを直接使うことはできません。その代わり、外部スコープの変数と競合する可能性を避けるために、接頭辞が使用されます。デフォルトでは、反復処理された要素のエイリアスの後にアンダースコアを付けたものが接頭辞として使用されます。たとえば、 `{#each}` セクション (`{it_hasNext}`) の中では、 `hasNext` キーは `it_` を接頭辞として使用する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`each` Iteration Metadata Example"
msgstr "`each` イテレーションのメタデータの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`it_count` represents one-based index."
msgstr "`it_count` は 1 を基準としたインデックスを表します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`<br>` is only rendered if the iteration has more elements."
msgstr "`<br>` は、反復処理がより多くの要素を持っている場合にのみレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "And must be used in a form of `{item_hasNext}` inside a `{#for}` section with the `item` element alias."
msgstr "また、 `{#for}` セクションの中で `{item_hasNext}` の形式で、 `item` 要素のエイリアスと使用する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`for` Iteration Metadata Example"
msgstr "`for` イテレーションのメタデータの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item_count` represents one-based index."
msgstr "`item_count` は 1 を基準としたインデックスを表します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The iteration metadata prefix is configurable either via `EngineBuilder.iterationMetadataPrefix()` for standalone Qute or via the `quarkus.qute.iteration-metadata-prefix` configuration property in a Quarkus application. Three special constants can be used:"
msgstr "反復処理メタデータの接頭辞は、スタンドアロンの Qute では `EngineBuilder.iterationMetadataPrefix()` によって、Quarkus アプリケーションでは `quarkus.qute.iteration-metadata-prefix` 設定プロパティーによって設定することができます。以下の 3 つの特別な定数を使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`<alias_>` - the alias of an iterated element suffixed with an underscore is used (default)"
msgstr "`<alias_>` - アンダースコアを接尾辞とする反復子要素のエイリアスを使用します (デフォルト)"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`<alias?>` - the alias of an iterated element suffixed with a question mark is used"
msgstr "`<alias?>` - クエスチョンマークを接尾辞とする反復処理された要素のエイリアスを使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`<none>` - no prefix is used"
msgstr "`<none>` - 接頭辞は使用しません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr "`for` 文は、1 から始まる整数でも動作します。 以下の例では、 `total = 3` ."

#: _versions/3.27/guides/qute-reference.adoc
msgid "And the output will be:"
msgstr "出力は、以下のようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A loop section may also define the `{#else}` block that is executed when there are no items to iterate:"
msgstr "ループセクションは、反復する項目がないときに実行される `{#else}` ブロックも定義することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If Section"
msgstr "If セクション"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The `{#if}` section represents a basic control flow section.\n"
"The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.\n"
"A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence, an empty `java.util.Optional`/`java.util.OptionalInt`/`java.util.OptionalLong`/`java.util.OptionalDouble` or a number equal to zero."
msgstr "`{#if}` セクションは、基本的な制御フローセクションを表します。最も単純なバージョンは、単一のパラメータを受け入れ、条件が `true` と評価された場合にコンテンツをレンダリングします。演算子のない条件は、値が `falsy` とみなされない場合、つまり `null` 、 `false` 、空のコレクション、空のマップ、空の配列、空の文字列/文字シーケンス、空の `java.util.Optional` / `java.util.OptionalInt` / `java.util.OptionalLong` / `java.util.OptionalDouble` またはゼロに等しい数値でない場合、 `true` に評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can also use the following operators in a condition:"
msgstr "条件では、以下の演算子を使うこともできます:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Operator"
msgstr "オペレーター"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Aliases"
msgstr "エイリアス"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Precedence"
msgstr "優先度"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Example"
msgstr "例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "logical complement"
msgstr "logical complement"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`!`"
msgstr "`!`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "4"
msgstr "4"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if !item.active}{/if}`"
msgstr "`{#if !item.active}{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Inverts the evaluated value."
msgstr "評価された値を反転します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "greater than"
msgstr "greater than"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`gt`, `>`"
msgstr "`gt`, `>`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "3"
msgstr "3"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.age > 43}This item is very old.{/if}`"
msgstr "`{#if item.age > 43}This item is very old.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is greater than `value2`."
msgstr "`value1` が `value2` より大きい場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "greater than or equal to"
msgstr "greater than or equal to"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`ge`, `>=`"
msgstr "`ge`, `>=`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.price >= 100}This item is expensive.{/if}`"
msgstr "`{#if item.price >= 100}This item is expensive.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is greater than or equal to `value2`."
msgstr "`value1` が `value2` 以上の場合、 `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "less than"
msgstr "less than"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`lt`, `<`"
msgstr "`lt`, `<`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.price < 100}This item is cheap.{/if}`"
msgstr "`{#if item.price < 100}This item is cheap.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is less than `value2`."
msgstr "`value1` が `value2` より小さい場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "less than or equal to"
msgstr "less than or equal to"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`le`, `\\<=`"
msgstr "`le`, `\\<=`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.age <= 43}This item is young.{/if}`"
msgstr "`{#if item.age <= 43}This item is young.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is less than or equal to `value2`."
msgstr "`value1` が `value2` 以下の場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "equals"
msgstr "equals"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`eq`, `==`, `is`"
msgstr "`eq`, `==`, `is`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "2"
msgstr "2"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.name eq 'Foo'}Foo item!{/if}`"
msgstr "`{#if item.name eq 'Foo'}Foo item!{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is equal to `value2`."
msgstr "`value1` が `value2` と等しい場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "not equals"
msgstr "not equals"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`ne`, `!=`"
msgstr "`ne`, `!=`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.name != 'Bar'}Not a Bar item!{/if}`"
msgstr "`{#if item.name != 'Bar'}Not a Bar item!{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if `value1` is not equal to `value2`."
msgstr "`value1` が `value2` と等しくない場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "logical AND (short-circuiting)"
msgstr "logical AND (short-circuiting)"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`&&`, `and`"
msgstr "`&&`, `and`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "1"
msgstr "1"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.price > 100 && item.isActive}Expensive and active item.{/if}`"
msgstr "`{#if item.price > 100 && item.isActive}Expensive and active item.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if both operands evaluate to `true`."
msgstr "両方のオペランドが `true` と評価された場合は `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "logical OR (short-circuiting)"
msgstr "logical OR (short-circuiting)"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`||`, `or`"
msgstr "`||`, `or`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if item.price > 100 || item.isActive}Expensive or active item.{/if}`"
msgstr "`{#if item.price > 100 || item.isActive}Expensive or active item.{/if}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Evaluates to `true` if one of the operands evaluates to `true`."
msgstr "オペランドの 1 つが `true` と評価された場合、 `true` と評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For `>`, `>=`, `<`, and `\\<=` the following rules are applied:"
msgstr "`>`、 `>=`、 `<`、および `\\<=` には、次のルールが適用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Neither of the operands may be `null`."
msgstr "どちらのオペランドも `null` であってはなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If both operands are of the same type that implements the `java.lang.Comparable` then the `Comparable#compareTo(T)` method is used to perform comparison."
msgstr "両方のオペランドが `java.lang.Comparable` を実装する同じ型である場合、比較を実行するために `Comparable#compareTo (T)` メソッドが使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Otherwise, both operands are coerced to `java.math.BigDecimal` first and then the `BigDecimal#compareTo(BigDecimal)` method is used to perform comparison."
msgstr "それ以外の場合は、まず両方のオペランドが `java.math.BigDecimal` に強制変換され、次に `BigDecimal#compareTo (BigDecimal)` メソッドを使用して比較が実行されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Types that support coercion include `BigInteger`, `Integer`, `Long`, `Double`, `Float` and `String`."
msgstr "強制変換をサポートする型には、 `BigInteger`、 `Integer`、 `Long`、 `Double`、 `Float`、 `String` などがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For `==` and `!=` the following rules are applied:"
msgstr "`==` および `!=` には次のルールが適用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Operands are first tested using the `java.util.Objects#equals(Object, Object)` method. If it returns `true` the operands are considered equal."
msgstr "オペランドは、まず `java.util.Objects#equals (Object、Object)` メソッドを使用してテストされます。 `true` が返された場合、オペランドは等しいとみなされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Otherwise, if both operands are not `null` and at least one of them is an instance of `java.lang.Number`, then operands are coerced to `java.math.BigDecimal` and the `BigDecimal#compareTo(BigDecimal)` method is used to perform comparison."
msgstr "それ以外の場合、両方のオペランドが `null` ではなく、少なくとも 1 つが `java.lang.Number` のインスタンスである場合、オペランドは `java.math.BigDecimal` に強制変換され、 `BigDecimal#compareTo (BigDecimal)` メソッドを使用して比較が実行されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Multiple conditions are also supported."
msgstr "複数の条件にも対応しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Multiple conditions example"
msgstr "複数条件の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The default precedence rules (higher precedence wins) can be overridden by parentheses."
msgstr "デフォルトの優先順位ルール (優先順位の高いものが優先) は括弧で上書きできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parentheses example"
msgstr "括弧の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can also add any number of `else` blocks:"
msgstr "また、 `else` ブロックを何個でも追加することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "When Section"
msgstr "When セクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"This section is similar to Java's `switch` or Kotlin's `when` constructs.\n"
"It matches a _tested value_ against all blocks sequentially until a condition is satisfied.\n"
"The first matching block is executed.\n"
"All other blocks are ignored (this behavior differs to the Java `switch` where a `break` statement is necessary)."
msgstr "このセクションは、Java の `switch` や Kotlin の `when` に似ています。条件が満たされるまで、 _テストされた値_ をすべてのブロックに対して順次マッチさせます。最初にマッチしたブロックが実行されます。他のすべてのブロックは無視されます(この動作は、 `break` 文が必要な Java `switch` とは異なります)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Example using the `when`/`is` name aliases"
msgstr "`when` / `is` の名前のエイリアスを使用した例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If there is exactly one parameter it's tested for equality."
msgstr "パラメーターが1つだけの場合、それは等価かがテストされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It is possible to use <<when_operators,an operator>> to specify the matching logic.\n"
"Unlike in the <<if_section>> nested operators are not supported."
msgstr ""
"<<when_operators,an operator>> を使用して、一致するロジックを指定できます。\n"
"<<if_section>> とは異なり、ネストされた演算子はサポートされません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`else` is block is executed if no other block matches the value."
msgstr "`else` は、他のブロックが値に一致しない場合に実行されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Example using the `switch`/`case` name aliases"
msgstr "`switch` / `case` の名前エイリアスを使用した例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`case` is an alias for `is`."
msgstr "`case` は `is` の別名です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A tested value that resolves to an enum is handled specifically.\n"
"The parameters of an `is`/`case` block are not evaluated as expressions but compared with the result of `toString()` invocation upon the tested value."
msgstr "enum に解決されるテスト値は特別な扱いを受けます。 `is` / `case` ブロックのパラメーターは式として評価されるのではなく、テストされた値に対して `toString()` を呼び出した結果と比較されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This block is executed if `machine.status.toString().equals(\"ON\")`."
msgstr "このブロックは `machine.status.toString().equals(\"ON\")` の場合に実行されます"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This block is executed if  `machine.status.toString().equals(\"OFF\")` or `machine.status.toString().equals(\"BROKEN\")`."
msgstr "このブロックは、 `machine.status.toString().equals(\"OFF\")` または `machine.status.toString().equals(\"BROKEN\")` の場合に実行されます"

#: _versions/3.27/guides/qute-reference.adoc
msgid "An enum constant is validated if the tested value has a type information available and resolves to an enum type."
msgstr "列挙型定数は、テストされた値が利用可能な型情報を持ち、列挙型に解決された場合に検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The following operators are supported in `is`/`case` block conditions:"
msgstr "`is` / `case` ブロック条件では、以下の演算子がサポートされています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "not equal"
msgstr "not equal"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`!=`, `not`, `ne`"
msgstr "`!=`, `not`, `ne`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#is not 10}`,`{#case != 10}`"
msgstr "`{#is not 10}`,`{#case != 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#case le 10}`"
msgstr "`{#case le 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#is >= 10}`"
msgstr "`{#is >= 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#is < 10}`"
msgstr "`{#is < 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "in"
msgstr "in"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`in`"
msgstr "`in`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#is in 'foo' 'bar' 'baz'}`"
msgstr "`{#is in 'foo' 'bar' 'baz'}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "not in"
msgstr "not in"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`ni`,`!in`"
msgstr "`ni`,`!in`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#is !in 1 2 3}`"
msgstr "`{#is !in 1 2 3}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Let Section"
msgstr "Let セクション"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "This section allows you to define named local variables."
msgstr "このセクションでは、名前付きローカル変数を定義することができます。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Let"
msgstr "させる"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The local variable is initialized with an expression that can also represent a <<literals,literal>>, i.e. `isActive=false` and `age=10`."
msgstr "ローカル変数は、<<literals,literal>> を表すことができる式 (つまり `isActive=false` と `age=10`) で初期化されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The infix notation is only supported if parentheses are used for grouping, e.g. `price=(order.price + 10)` is equivalent to `price=order.price.plus(10)`."
msgstr "中置記法は、括弧を使用してグループ化する場合にのみサポートされます。例えば、 `price=(order.price + 10)` は `price=order.price.plus(10)` と同等です。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Variables are not available outside the `let` section."
msgstr "変数は `let` セクション以外では使用できません。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The variables are not available outside the defining `let` section.\n"
"However, the end tag is optional, if missing then the section ends where the parent section ends."
msgstr "変数は、 `let` セクションの定義以外では使用できません。しかし、終了タグは省略可能で、省略された場合は親セクションが終了したところでセクションが終了します。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Let with optional end tag"
msgstr "オプションの終了タグ付き"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "The local variable `price` is initialized with expression `item.price`."
msgstr "ローカル変数 `price` は式 `item.price` で初期化されます。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "Variable `price` is not available outside the `let` section."
msgstr "バリアブル `price` は、 `let` セクション以外ではご利用いただけません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If a key of a section parameter, such as the name of the local variable, ends with a `?`, then the local variable is only set if the key without the `?` suffix resolves to `null` or _\"not found\"_:"
msgstr "ローカル変数名などのセクションパラメータのキーが `?` で終わっている場合、 `?` を除いたキーが `null` または _\"not found\"_ に解決される場合にのみ、ローカル変数が設定されます:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`true` is effectively a _default value_ that is only used if the parent scope does not define `enabled` already."
msgstr "`true` は事実上 _default value_ で、親スコープが `enabled` をすでに定義していない場合にのみ使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`enabled?=true` is a short version of `enabled=enabled.or(true)`."
msgstr "`enabled?=true` は `enabled=enabled.or(true)` の短縮版です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This section tag is also registered under the `set` alias:"
msgstr "このセクションタグも `set` のエイリアスで登録されています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "With Section"
msgstr "With セクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"This section can be used to set the current context object.\n"
"This could be useful to simplify the template structure:"
msgstr "このセクションは、現在のコンテキストオブジェクトを設定するために使用することができます。これはテンプレート構造を単純化するのに便利かもしれません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `name` will be resolved against the `item.parent`."
msgstr "`name` は `item.parent` に対して解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `description` will be also resolved against the `item.parent`."
msgstr "`description` も `item.parent` に対して解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Note that the `with` section should not be used in <<typesafe_templates>> or templates that define <<typesafe_expressions>>.\n"
"The reason is that it prevents Qute from validating the nested expressions.\n"
"If possible, replace it with the `{#let}` section which declares an explicit binding:"
msgstr ""
"<<typesafe_templates>> や、<<typesafe_expressions>> を定義するテンプレートでは、 `with` セクションを使用してはならないことに注意してください。\n"
"これは、Qute がネストされた式を検証することを妨げるためです。\n"
"可能であれば、明示的なバインディングを宣言する `{#let}` セクションに置き換えてください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr "このセクションは、複数の高価な呼び出しを避けたいときにも便利かもしれません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr "`this` は `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` の結果です。結果が複数の式で使用されても、このメソッドは一度しか呼び出されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Include Section"
msgstr "Include セクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This section can be used to include another template and possibly override some parts of the template (see the _template inheritance_ below)."
msgstr "このセクションは、別のテンプレートをインクルードし、場合によってはテンプレートの一部をオーバーライドするために使用することができます (下記の _テンプレートの継承_ を参照)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Simple Example"
msgstr "簡単な例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Include a template with id `foo`. The included template can reference data from the current context."
msgstr "id `foo` でテンプレートをインクルードします。インクルードされたテンプレートは、現在のコンテキストからデータを参照することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's also possible to define optional parameters that can be used in the included template."
msgstr "また、インクルードされたテンプレートで使用できるオプションのパラメーターを定義することも可能です。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"By default, the first unnamed parameter represents the id of a template that should be included.\n"
"And it is taken as is.\n"
"For example, `{#include bar/foo /}` includes a template with id `bar/foo`; i.e. `src/main/resources/templates/bar/foo.html` could be matched.\n"
"However, it is also possible to supply the template id dynamically.\n"
"Just add the `_id` parameter to the tag.\n"
"In this case, the argument value of the `_id` parameter represents an expression that is resolved and the result represents the template id.\n"
"For example, `{#include _id=bar.foo /}` means that `bar.foo` is first resolved and then the resulting template id is used."
msgstr "デフォルトでは、最初の無名のパラメータはインクルードされるべきテンプレートのidを表します。そして、それはそのまま受け取られます。例えば、 `{#include bar/foo /}` は id `bar/foo` のテンプレートを含みます ; つまり、 `src/main/resources/templates/bar/foo.html` がマッチします。しかし、テンプレートidを動的に指定することも可能です。タグに `_id` パラメータを追加するだけです。この場合、 `_id` パラメーターの引数値は解決される式を表し、結果はテンプレート ID を表します。例えば、 `{#include _id=bar.foo /}` は、まず `bar.foo` が解決され、その結果のテンプレート ID が使用されることを意味します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "_Template inheritance_ makes it possible to reuse template layouts."
msgstr "_テンプレートの継承_ により、テンプレートレイアウトの再利用が可能になります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template \"base\""
msgstr "テンプレート「ベース」"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr "`insert` セクションは、指定されたテンプレートをインクルードするテンプレートでオーバーライドできる部分を指定するために使われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "An `insert` section may define the default content that is rendered if not overridden. If there is no name supplied then the main block of the relevant `{#include}` section is used."
msgstr "`insert` セクションは、オーバーライドされない場合にレンダリングされるデフォルトのコンテンツを定義することができます。もし名前が与えられていない場合は、関連する `{#include}` セクションのメインブロックが使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template \"detail\""
msgstr "テンプレート「詳細」"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`include` section is used to specify the extended template."
msgstr "`include` セクションは、拡張テンプレートを指定するために使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "入れ子になったブロックは、オーバーライドする部分を指定するために使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The content of the main block is used for an `{#insert}` section with no name parameter specified."
msgstr "メインブロックのコンテンツは、name パラメーターが指定されていない `{#insert}` セクションに使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "セクションブロックはオプションのエンドタグを定義することもできます - `{/title}` ."

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"User-defined tags can be used to include a _tag template_, optionally pass some arguments and possibly override some parts of the template.\n"
"Let's suppose we have a tag template called `itemDetail.html`:"
msgstr "ユーザー定義タグは、_タグテンプレート_ をインクルードし、オプションでいくつかの引数を渡し、場合によってはテンプレートの一部をオーバーライドするために使用することができます。たとえば、 `itemDetail.html` というタグテンプレートがあるとします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`showImage` is a named parameter."
msgstr "`showImage` は名前付きパラメーターです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`it` is a special key that is replaced with the first unnamed parameter of the tag."
msgstr "`it` は、タグの最初の名前のないパラメーターに置き換えられる特別なキーです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr "(オプション) `nested-content` は、タグの内容に置き換えられる特別なキーです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically.\n"
"For Qute standalone, you need to put the parsed template under the name `itemDetail.html` and register a relevant `UserTagSectionHelper` to the engine:"
msgstr "Quarkus では、 `src/main/resources/templates/tags` にあるすべてのファイルが、自動的に登録および監視されます。Qute スタンドアロンでは、解析されたテンプレートを `itemDetail.html` という名前で置き、関連する `UserTagSectionHelper` をエンジンに登録する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Then, we can call the tag like this:"
msgstr "そして、以下のようなタグを呼び出すことができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr "`item` は反復要素に解決され、タグテンプレートで `it` キーを使用して参照することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr "タグテンプレートで `nested-content` キーを使用して注入されたタグコンテンツ。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"By default, a tag template cannot reference the data from the parent context.\n"
"Qute executes the tag as an _isolated_ template, i.e. without access to the context of the template that calls the tag.\n"
"However, sometimes it might be useful to change the default behavior and disable the isolation.\n"
"In this case, just add `_isolated=false` or `_unisolated` argument to the call site, for example `{#itemDetail item showImage=true _isolated=false /}` or `{#itemDetail item showImage=true _unisolated /}`."
msgstr ""
"デフォルトでは、タグテンプレートは親コンテキストからデータを参照できません。\n"
"Qute はタグを _分離された_ テンプレートとして実行します。つまり、タグを呼び出すテンプレートのコンテキストにアクセスしません。\n"
"ただし、デフォルトの動作を変更して分離を無効にすると便利な場合があります。\n"
"その場合、呼び出しサイトに `_isolated=false` または `_unisolated` 引数を追加するします (例: `{#itemDetail item showImage=true _isolated=false /}` または `{#itemDetail item showImage=true _unisolated /}`)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Arguments"
msgstr "引数"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Named arguments can be accessed directly in the tag template.\n"
"However, the first argument does not need to define a name, and it can be accessed using the `it` alias.\n"
"Furthermore, if an argument does not have a name defined and the value is a single identifier, such as `foo`, then the name is defaulted to the value identifier, e.g. `{#myTag foo /}` becomes `{#myTag foo=foo /}`.\n"
"In other words, the argument value `foo` is resolved and can be accessed using `{foo}` in the tag template."
msgstr ""
"タグテンプレート内で、名前付き引数に直接アクセスできます。\n"
"ただし、最初の引数で名前を定義する必要はなく、 `it` エイリアスを使用してアクセスできます。\n"
"さらに、引数に名前が定義されておらず、値が `foo` など単一の識別子である場合、名前はデフォルトで値の識別子に設定されます (たとえば `{#myTag foo /}` は `{#myTag foo=foo /}` になります)。\n"
"つまり、引数値 `foo` は解決され、タグテンプレート内で `{foo}` を使用してアクセスできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If an argument does not have a name and the value is a single word string literal , such as `\"foo\"`, then the name is defaulted and quotation marks are removed, e.g. `{#myTag \"foo\" /}` becomes `{#myTag foo=\"foo\" /}`."
msgstr "引数に名前がなく、値が `\"foo\"` のような 1 つの単語の文字列リテラルである場合、その名前がデフォルトに設定されて引用符は削除されます (たとえば `{#myTag \"foo\" /}` は `{#myTag foo=\"foo\" /}` になります)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`io.quarkus.qute.UserTagSectionHelper.Arguments` metadata are accessible in a tag using the `_args` alias."
msgstr "`io.quarkus.qute.UserTagSectionHelper.Arguments` メタデータは、 `_args` エイリアスを使用してタグ内でアクセスできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.size` - returns the actual number of arguments passed to a tag"
msgstr "`_args.size` - タグに渡された引数の実際の数を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.empty`/`_args.isEmpty` - returns `true` if no arguments are passed"
msgstr "`_args.empty`/`_args.isEmpty` - 引数が渡されない場合は `true` を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.get(String name)` - returns the argument value of the given name or `null`"
msgstr "`_args.get(String name)` - 指定された名前の引数値または `null` を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.filter(String...)` - returns the arguments matching the given names"
msgstr "`_args.filter(String...)` - 指定された名前に一致する引数を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.filterIdenticalKeyValue` - returns the arguments with the name equal to the value; typically `foo` from `{#test foo=\"foo\" bar=true}` or `{#test \"foo\" bar=true /}`"
msgstr "`_args.filterIdenticalKeyValue` - 値と等しい名前を持つ引数を返します。通常は `{#test foo=\"foo\" bar=true}` または `{#test \"foo\" bar=true /}` から`foo` が返されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.skip(String...)` - returns only the arguments that do not match the given names"
msgstr "`_args.skip(String...)` - 指定された名前と一致しない引数のみを返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.skipIdenticalKeyValue` - returns only the arguments with the name not equal to the value; typically `bar` from `{#test foo=\"foo\" bar=true /}`"
msgstr "`_args.skipIdenticalKeyValue` - 値と等しくない名前を持つ引数のみを返します。通常は `{#test foo=\"foo\" bar=true /}` から `bar` が返されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.skipIt` - returns all arguments except for the first unnamed argument; typically `bar` from `{#test foo bar=true /}`"
msgstr "`_args.skipIt` - 最初の名前なし引数を除くすべての引数を返します。通常は `{#test foo bar=true /}` から `bar` が返されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args.asHtmlAttributes` - renders the arguments as HTML attributes; e.g. `foo=\"true\" readonly=\"readonly\"`; the arguments are sorted by name in alphabetical order and the `'`, `\"`, `<`, `>`, `&` characters are escaped"
msgstr "`_args.asHtmlAttributes` - 引数を HTML 属性としてレンダリングします (例: `foo=\"true\" readonly=\"readonly\"`)。引数は名前のアルファベット順にソートされ、 `'`、 `\"`、 `<`, `>`、 `&` の文字はエスケープされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args` is also iterable of `java.util.Map.Entry`: `{#each _args}{it.key}={it.value}{/each}`."
msgstr "`_args` は 反復可能な `java.util.Map.Entry` でもあります (`{#each _args}{it.key}={it.value}{/each}`)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For example, we can call the user tag defined below with `{#test 'Martin' readonly=true /}`."
msgstr "たとえば、以下のように定義されたユーザータグを `{#test 'Martin' readonly=true /}` で呼び出すことができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`tags/test.html`"
msgstr "`tags/test.html`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`it` is replaced with the first unnamed parameter of the tag."
msgstr "`it` はタグの最初の名前なしパラメーターに置き換えられます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`readonly` is a named parameter."
msgstr "`readonly` は名前付きパラメーターです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`_args` represents arguments metadata."
msgstr "`_args` は引数のメタデータを表します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The result would be:"
msgstr "結果は次のようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Inheritance"
msgstr "継承"

#: _versions/3.27/guides/qute-reference.adoc
msgid "User tags can also make use of the template inheritance in the same way as regular `{#include}` sections do."
msgstr "ユーザータグも、通常の `{#include}` セクションと同じように、テンプレートの継承を利用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Tag `myTag`"
msgstr "タグ `myTag`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Tag Call Site"
msgstr "タグ呼び出しサイト"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The result would be something like `<p>This is my custom title!</p>`."
msgstr "結果は、 `<p>This is my custom title!</p>` のようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Fragments"
msgstr "フラグメント"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A fragment represents a part of a template that can be treated as a separate template, i.e. rendered separately.\n"
"One of the main motivations to introduce this feature was the support of use cases like https://htmx.org/essays/template-fragments/[htmx fragments]."
msgstr ""
"フラグメントはテンプレートの一部を表し、個別のテンプレートとして扱うことができます。\n"
"この機能を導入する主な動機の1つは、 link:https://htmx.org/essays/template-fragments/[htmxフラグメント] のようなユースケースをサポートすることでした。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Fragments can be defined with the `{#fragment}` section.\n"
"Each fragment has an identifier that can only consist of alphanumeric characters and underscores."
msgstr "フラグメントは `{#fragment}` セクションで定義することができます。 各フラグメントは、英数字とアンダースコアのみからなる識別子を持ちます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that a fragment identifier must be unique in a template."
msgstr "フラグメント識別子は、テンプレート内で一意でなければならないことに注意してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Fragment Definition in `item.html`"
msgstr "`item.html` 内でのフラグメントの定義"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Defines a fragment with identifier `item_aliases`. Note that only alphanumeric characters and underscores can be used in the identifier. The name of the first parameter can be omitted - `{#fragment item_aliases}` is fine too."
msgstr "識別子 `item_aliases` を持つフラグメントを定義します。識別子には英数字とアンダースコアしか使えないことに注意してください。最初のパラメータ名は省略可能で、 `{#fragment item_aliases}` でもかまいません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can obtain a fragment programmatically via the `io.quarkus.qute.Template.getFragment(String)` method."
msgstr "`io.quarkus.qute.Template.getFragment(String)` メソッドにより、プログラム的にフラグメントを取得することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Obtaining a Fragment"
msgstr "フラグメントの取得"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Obtains the template fragment with identifier `item_aliases`."
msgstr "識別子 `item_aliases` を持つテンプレートフラグメントを取得します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Make sure the data are set correctly."
msgstr "データが正しく設定されているようにします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The snippet above should render something like:"
msgstr "上記のスニペットは、次のようにレンダリングされるはずです:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, it is also possible to define a <<type_safe_fragments,type-safe fragment>>."
msgstr "Quarkus では、<<type_safe_fragments,type-safe fragment>> も定義できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"You can also include a fragment with an `{#include}` section inside another template or the template that defines the fragment.\n"
"A fragment can be also used in expressions with the `frg:`/`fragment:` namespaces."
msgstr ""
"また、 `{#include}` セクションを持つフラグメントを、別のテンプレートや、フラグメントを定義したテンプレートの中に含めることもできます。\n"
"フラグメントは、 `frg:` / `fragment:` 名前空間を持つ式でも使用できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Including a Fragment in `user.html`"
msgstr "`user.html` にフラグメントをインクルード"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A template identifier that contains a dollar sign `$` denotes a fragment. The `item$item_aliases` value is translated as: _Use the fragment `item_aliases` from the template `item`._"
msgstr "ドル記号 `$` を含むテンプレート識別子は、フラグメントを表します。 `item$item_aliases` の値は、次のように訳されます: _テンプレート `item` からフラグメント `item_aliases` を使用します。_"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `aliases` parameter is used to pass the relevant data. We need to make sure that the data are set correctly. In this particular case the fragment will use the expression `user.aliases` as the value of `aliases` in the `{#for alias in aliases}` section."
msgstr "`aliases` パラメーターは、関連するデータを渡すために使用されます。データが正しく設定されていることを確認する必要があります。この特定のケースでは、フラグメントは `{#for alias in aliases}` セクションの `aliases` の値として式 `user.aliases` を使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `{frg:username}` expression outputs the fragment content. `frg:` can be replaced with `fragment:`."
msgstr "`{frg:username}` 式は、フラグメントの内容を出力します。 `frg:` は、 `fragment:` に置き換えることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you want to reference a fragment from the same template, skip the part before `$`, i.e. something like `{#include $item_aliases /}`."
msgstr "同じテンプレートからフラグメントを参照する場合は、 `$` の前の部分、つまり `{#include $item_aliases /}` のような部分をスキップしてください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can specify `{#include item$item_aliases _ignoreFragments=true /}` in order to disable this feature, i.e. a dollar sign `$` in the template identifier does not result in a fragment lookup."
msgstr "この機能を無効にするために、 `{#include item$item_aliases _ignoreFragments=true /}` を指定することができます。つまり、テンプレート識別子にドル記号 `$` を指定しても、フラグメント検索は行われません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Hidden Fragments (Capture)"
msgstr "非表示（hidden）フラグメント（キャプチャ）"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"By default, a fragment is normally rendered as a part of the original template.\n"
"However, sometimes it might be useful to mark a fragment as _hidden_.\n"
"The regular fragment section has the `capture` alias that implies a hidden fragment.\n"
"Alternatively, you can \"hide\" a fragment either with `rendered=false` or `_hidden` parameters.\n"
"An interesting use case could be a fragment that can be used multiple-times inside the template that defines it."
msgstr ""
"デフォルトでは、フラグメントは通常オリジナルテンプレートの一部としてレンダリングされます。\n"
"しかし、フラグメントを _非表示_ にすると便利な場合もあります。\n"
"通常のフラグメントセクションは、非表示フラグメントを意味する `capture` というエイリアスを持ちます。\n"
"また、 `rendered=false` または `_hidden` パラメータを使用して、フラグメントを「非表示」することもできます。興味深い使用例として、フラグメントを定義するテンプレート内で複数回使用できるフラグメントがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Hidden Fragment Definition in `item.html`"
msgstr "`item.html` における非表示フラグメントの定義"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Defines a hidden fragment with identifier `strong`.\n"
"`{#capture strong}` can be replaced with `{#fragment strong rendered=false}` or `{#fragment strong _hidden}`.\n"
"The `rendered` parameter can use any expression, e.g. `{#fragment strong rendered=config.isRendered}`."
msgstr ""
"識別子 `strong` を持つ非表示フラグメントを定義します。\n"
"`{#capture strong}` は `{#fragment strong rendered=false}` または `{#fragment strong _hidden}` に置き換えることができます。\n"
"`rendered` パラメータには任意の式を使用できます (例: `{#fragment strong rendered=config.isRendered}`)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Include the fragment `strong` and pass the value.\n"
"Note the syntax `$strong` which is translated to include the fragment `strong` from the current template."
msgstr "フラグメント `strong` をインクルードし、値を渡します。構文 `$strong` に注意してください。これは、現在のテンプレートからフラグメント `strong` をインクルードするように処理されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A namespace resolver can be used to access a hidden fragment too. `capture:` can be replaced with `cap:`."
msgstr "名前空間リゾルバを使用して、非表示のフラグメントにアクセスすることもできます。 `capture:` は、 `cap:` に置き換えることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`param:val = 'information'` is used to pass a named parameter to the fragment."
msgstr "`param:val = 'information'` は、名前付きパラメータをフラグメントに渡すために使われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The snippet above renders something like:"
msgstr "上のスニペットは、次のようにレンダリングされます:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, the namespace resolvers are automatically registered for namespaces `frg`, `fragment`, `cap` and `capture`."
msgstr "Quarkus では、名前空間リゾルバが名前空間 `frg` 、 `fragment` 、 `cap` 、 `capture` に対して自動的に登録されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Eval Section"
msgstr "Eval セクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"This section can be used to parse and evaluate a template dynamically.\n"
"The behavior is very similar to <<include_helper>> but:"
msgstr ""
"このセクションは、テンプレートを動的に解析および評価するために使用できます。\n"
"動作は <<include_helper>> によく似ています。ただし、"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The template content is passed directly, i.e. not obtained via an `io.quarkus.qute.TemplateLocator`,"
msgstr "テンプレートの内容は、 `io.quarkus.qute.TemplateLocator` を介して取得されるのではなく、直接渡されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's not possible to override parts of the evaluated template."
msgstr "評価済みテンプレートの一部をオーバーライドすることはできません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The result of `myData.template` will be used as the template.\n"
"The template is executed with the <<current_context_object>>, i.e. can reference data from the template it's included into."
msgstr "`myData.template` の結果がテンプレートとして使用されます。テンプレートは <<current_context_object>> で実行されます。つまり、インクルードされているテンプレートのデータを参照することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's also possible to define optional parameters that can be used in the evaluated template."
msgstr "また、評価済みテンプレートで使用可能なオプションのパラメーターを定義することも可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The content of the section is always ignored."
msgstr "セクションの内容は常に無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The evaluated template is parsed and evaluated every time the section is executed.\n"
"In other words, it is not possible to cache the parsed value to conserve resources and optimize performance."
msgstr ""
"評価済みテンプレートは、セクションが実行されるたびに解析および評価されます。\n"
"つまり、リソースを節約してパフォーマンスを最適化するために、解析された値をキャッシュすることはできません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Cached Section"
msgstr "キャッシュされたセクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Sometimes it's practical to cache parts of the template that rarely change.\n"
"In order to use the caching capability, register and configure the built-in `io.quarkus.qute.CacheSectionHelper.Factory`:"
msgstr "めったに変更されないテンプレートの一部をキャッシュすることが実用的な場合もあります。キャッシュ機能を使うには、組み込みの `io.quarkus.qute.CacheSectionHelper.Factory` を登録・設定します:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If the `quarkus-cache` extension is present in a Quarkus application then the `CacheSectionHelper` is registered and configured _automatically_. The name of the cache is `qute-cache`. It can be configured <<cache#configuring-the-underlying-caching-provider,in a standard way>> and even managed programmatically via `@Inject @CacheName(\"qute-cache\") Cache`."
msgstr "Quarkus アプリケーションに `quarkus-cache` エクステンションが存在する場合、 `CacheSectionHelper` が登録され、_自動的_ に設定されます。キャッシュの名前は `qute-cache` です。これは <<cache#configuring-the-underlying-caching-provider,in a standard way>> と定義でき、 `@Inject @CacheName(\"qute-cache\") Cache` を介してプログラムで管理することもできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Then, the `{#cached}` section can be used in a template:"
msgstr "その後、{#cached}` セクションをテンプレート内で使用できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If the `key` param is not used then all clients of the template share the same cached value."
msgstr "`key` パラメーターが使用されていない場合は、テンプレートのすべてのクライアントが同じキャッシュ値を共有します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This part of the template will be cached and the `{service.findResult}` expression is only evaluated when a cache entry is missing/invalidated."
msgstr "テンプレートのこの部分はキャッシュされ、キャッシュエントリーが見つからない、または無効になっている場合にのみ `{service.findResult}` 式が評価されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `key` param is set and so a different cached value is used for each result of the `{currentUser.username}` expression."
msgstr "`key` パラメーターが設定されているため、 `{currentUser.username}` の結果ごとに異なるキャッシュ値が使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "When using cache it's very often important to have the option to invalidate a cache entry by the specific key. In Qute the key of a cache entry is a `String` that consist of the template name, line and column of the starting `{#cached}` tag and the optional `key` parameter: `{TEMPLATE}:{LINE}:{COLUMN}_{KEY}`. For example, `foo.html:10:1_alpha` is a key for the cached section in a template `foo.html`, the `{#cached}` tag is placed on the line 10, column 1. And the optional `key` parameter resolves to `alpha`."
msgstr "キャッシュを使用する場合、特定のキーでキャッシュエントリーを無効にするオプションを持つことが非常に重要です。Qute では、キャッシュエントリーのキーは、テンプレート名、開始 `{#cached}` タグの行と列、およびオプションの `key` パラメーターで構成される `String` (`{TEMPLATE}:{LINE}:{COLUMN}_{KEY}`) です。たとえば、 `foo.html:10:1_alpha` はテンプレート`foo.html` のキャッシュされたセクションのキーであり、 `{#cached}` タグは 10 行目の 1 列目に配置されます。オプションの `key` パラメーターは `alpha` に解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Rendering Output"
msgstr "レンダリング出力"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"`TemplateInstance` provides several ways to trigger the rendering and consume the result.\n"
"The most straightforward approach is represented by `TemplateInstance.render()`.\n"
"This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.\n"
"By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished."
msgstr "`TemplateInstance` は、レンダリングをトリガーして結果を消費するためのいくつかの方法を提供しています。最も簡単な方法は `TemplateInstance.render()` です。このメソッドは同期レンダリングをトリガーし、レンダリングが終了するまで現在のスレッドをブロックして出力を返します。対照的に、 `TemplateInstance.renderAsync()` は `CompletionStage<String>` を返し、レンダリングが終了すると完了します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateInstance.renderAsync()` Example"
msgstr "`TemplateInstance.renderAsync()` Example"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Register a callback that is executed once the rendering is finished."
msgstr "レンダリング終了後に実行されるコールバックを登録します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.\n"
"`TemplateInstance.createUni()` returns a new `Uni<String>` object.\n"
"If you call `createUni()` the template is not rendered right away.\n"
"Instead, every time `Uni.subscribe()` is called a new rendering of the template is triggered."
msgstr "また、 link:https://smallrye.io/smallrye-mutiny/[Mutiny] 型を返す2つのメソッドがあります。 `TemplateInstance.createUni()` は新しい `Uni<String>` オブジェクトを返します。 `createUni()` を呼び出しても、テンプレートはすぐにレンダリングされません。その代わり、 `Uni.subscribe()` が呼び出されるたびに、テンプレートの新しいレンダリングがトリガーされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateInstance.createUni()` Example"
msgstr "`TemplateInstance.createUni()` Example"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"`TemplateInstance.createMulti()` returns a new `Multi<String>` object.\n"
"Each item represents a part/chunk of the rendered template.\n"
"Again, `createMulti()` does not trigger rendering.\n"
"Instead, every time a computation is triggered by a subscriber, the template is rendered again."
msgstr ""
"`TemplateInstance.createMulti()` は新しい `Multi<String>` オブジェクトを返します。\n"
"各アイテムはレンダリングされたテンプレートの一部/チャンクを表します。\n"
"繰り返しになりますが、 `createMulti()` はレンダリングをトリガーしません。\n"
"代わりに、サブスクライバーによって計算がトリガーされるたびに、テンプレートが再びレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateInstance.createMulti()` Example"
msgstr "`TemplateInstance.createMulti()` Example"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The template rendering is divided in two phases. During the first phase, which is asynchronous, all expressions in the template are resolved and a _result tree_ is built. In the second phase, which is synchronous, the result tree is _materialized_, i.e. one by one the result nodes emit chunks that are consumed/buffered by the specific consumer."
msgstr "テンプレートのレンダリングは2つのフェーズに分かれています。最初のフェーズ(非同期)では、テンプレート内のすべての式が解決され、 _結果ツリー_ が構築されます。同期的な第2フェーズでは、結果ツリーが _マテリアライズされ_ 、結果ノードが1つずつ、特定のコンシューマによって消費/バッファリングされるチャンクを出力します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Engine Configuration"
msgstr "エンジン設定"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Value Resolvers"
msgstr "値リゾルバ"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Value resolvers are used when evaluating expressions.\n"
"First the resolvers that apply to the given `EvalContext` are filtered.\n"
"Then the resolver with _highest priority_ is used to resolve the data.\n"
"If a `io.quarkus.qute.Results.NotFound` object is returned then the next available resolver is used instead.\n"
"However, `null` return value is considered a valid result."
msgstr ""
"値リゾルバーは式を評価するときに使用されます。\n"
"まず、指定された `EvalContext` に適用されるリゾルバーがフィルタリングされます。\n"
"次に、_ 優先度が最も高い _ リゾルバーを使用してデータを解決します。\n"
"`io.quarkus.qute.Results.NotFound` オブジェクトが返された場合は、代わりに次の利用可能なリゾルバーが使用されます。\n"
"ただし、戻り値 `null` は有効な結果と見なされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A custom `io.quarkus.qute.ValueResolver` can be registered programmatically via `EngineBuilder.addValueResolver()`."
msgstr "カスタム `io.quarkus.qute.ValueResolver` は、 `EngineBuilder.addValueResolver()` を介してプログラムで登録できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`ValueResolver` Builder Example"
msgstr "`ValueResolver` ビルダー例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, the <<engine-customization,`@EngineConfiguration`>> annotation can be used to register a `ValueResolver` implemented as a CDI bean."
msgstr "Quarkus では、<<engine-customization,`@EngineConfiguration`>> アノテーションを使用して、CDI Bean として実装された `ValueResolver` を登録できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Keep in mind that the reflection-based value resolver has priority `-1` and the max priority value for resolvers generated from <<template_data,`@TemplateData`>> and <<typesafe_expressions,type-safe expressions>> is `10`."
msgstr "リフレクションベースの値リゾルバーの優先度は -1 であり、 <<template_data,`@TemplateData`>> から生成されたリゾルバーの最大優先度値および <<typesafe_expressions,type-safe expressions>> は `10` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Locator"
msgstr "テンプレートロケーター"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A template can be either registered manually or automatically via a template locator.\n"
"The locators are used whenever the `Engine.getTemplate()` method is called, and the engine has no template for a given id stored in the cache.\n"
"The locator is responsible for using the correct character encoding when reading the contents of a template."
msgstr "テンプレートは、手動で登録するか、テンプレートロケータを介して自動的に登録することができます。ロケーターは、 `Engine.getTemplate()` メソッドが呼び出されたときに、エンジンがキャッシュに保存している所定の ID のテンプレートがない場合に使用されます。ロケーターは、テンプレートの内容を読み取る際に、正しい文字エンコーディングを使用する責任があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In Quarkus, all templates from the `src/main/resources/templates` are located automatically and the encoding set via `quarkus.qute.default-charset` (UTF-8 by default) is used.\n"
"Custom locators can be <<template-locator-registration,registered>> by using the `@Locate` annotation."
msgstr ""
"Quarkus では、 `src/main/resources/templates` にあるすべてのテンプレートが自動的に配置され、 `quarkus.qute.default-charset` (デフォルトは UTF-8) で設定したエンコーディングが使用されます。\n"
"カスタムロケーターは、 `@Locate` アノテーションを使用して <<template-locator-registration,registered>> を行うことができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Content Filters"
msgstr "コンテンツフィルタ"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Content filters can be used to modify the template contents before parsing."
msgstr "コンテンツフィルタを使用して、解析前にテンプレートコンテンツを変更することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Content Filter Example"
msgstr "コンテンツフィルター例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Escape all occurrences of `${`."
msgstr "すべての `${` との一致をエスケープします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Strict Rendering"
msgstr "strict レンダリング"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The strict rendering enables the developers to catch insidious errors caused by typos and invalid expressions.\n"
"If enabled then any expression that cannot be resolved, i.e. is evaluated to an instance of `io.quarkus.qute.Results.NotFound`, will always result in a `TemplateException` and the rendering is aborted.\n"
"A `NotFound` value is considered an error because it basically means that no value resolver was able to resolve the expression correctly."
msgstr "strict レンダリングにより、開発者は、タイプミスや無効な式によって引き起こされるわかりにくいエラーをキャッチすることができます。この機能を有効にすると、解決できない式、つまり `io.quarkus.qute.Results.NotFound` のインスタンスとして評価される式は、常に `TemplateException` となり、レンダリングは中断されます。 `NotFound` 値は基本的に、値リゾルバーが式を正しく解決できなかったことを意味するため、エラーとみなされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`null` is a valid value though. It is considered `falsy` as described in <<if_section>> and does not produce any output."
msgstr "しかし、 `null` は有効な値です。<<if_section>> にあるように `falsy` とみなされ、何も出力されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Strict rendering is enabled by default.\n"
"However, you can disable this functionality via `io.quarkus.qute.EngineBuilder.strictRendering(boolean)`."
msgstr "strict レンダリングはデフォルトで有効になっています。しかし、 `io.quarkus.qute.EngineBuilder.strictRendering(boolean)` によって、この機能を無効にすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In Quarkus, a dedicated config property can be used instead: `quarkus.qute.strict-rendering`."
msgstr "Quarkus では、専用の config プロパティーである `quarkus.qute.strict-rendering` を代わりに使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If you really need to use an expression which can potentially lead to a \"not found\" error, you can use _default values_ and _safe expressions_ in order to suppress the error.\n"
"A default value is used if the previous part of an expression cannot be resolved or resolves to `null`.\n"
"You can use the elvis operator to output the default value: `{foo.bar ?: 'baz'}`, which is effectively the same as the following virtual method: `{foo.bar.or('baz')}`.\n"
"A safe expression ends with the `??` suffix and results in `null` if the expression cannot be resolved.\n"
"It can be very useful e.g. in `{#if}` sections: `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}`.\n"
"In fact, `??` is just a shorthand notation for `.or(null)`, i.e. `{#if valueNotFound??}` becomes `{#if valueNotFound.or(null)}`."
msgstr "\"not found\" エラーを引き起こす可能性のある式をどうしても使いたい場合は、_デフォルト値_ および _安全な式_ を使ってエラーを抑制することができます。デフォルト値は、式の前のパーツが解決できないか、 `null` に解決される場合に使用されます。エルビス演算子を使ってデフォルト値 `{foo.bar ?: 'baz'}` を出力することができます。これは事実上、仮想メソッド `{foo.bar.or('baz')}` と同じになります。安全な式は `??` という接尾辞で終わり、式が解決できない場合は `null` という結果になります。これは、たとえば `{#if}` セクションの `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}` では非常に便利です。実際のところ、 `??` は `.or(null)` の簡単な表記法に過ぎず、たとえば `{#if valueNotFound??}` は `{#if valueNotFound.or(null)}` となります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Quarkus Integration"
msgstr "Quarkus 統合"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you want to use Qute in your Quarkus application, add the following dependency to your project:"
msgstr "QuarkusアプリケーションでQuteを使用する場合は、次の依存関係をプロジェクトに追加します:"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.\n"
"Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "Quarkusでは、事前に設定されたエンジンインスタンスが提供され、インジェクションに利用できます。 `@ApplicationScoped` スコープのBean、 `io.quarkus.qute.Engine` 型のBean、 `@Default` 修飾子が自動的に登録されます。さらに、 `src/main/resources/templates` ディレクトリーにあるすべてのテンプレートが検証され、簡単にインジェクションすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A valid template file name is a sequence of non-whitespace characters. For example, a template file named `foo and bar.html` will be ignored."
msgstr "有効なテンプレートファイル名は、空白以外の文字のシーケンスです。たとえば、名前が `foo and bar.html` のテンプレートファイルは無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If there is no `Location` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr "`Location` 修飾子が与えられていない場合は、フィールド名がテンプレートを特定するために使われます。この特定のケースでは、コンテナーはパス `src/main/resources/templates/items.html` でテンプレートを見つけようとします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `Location` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr "`Location` 修飾子は、 `src/main/resources/templates` からの相対パスからテンプレートを注入するようにコンテナーに指示します。この場合のフルパスは `src/main/resources/templates/detail/items2_v1.html` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Inject the configured `Engine` instance."
msgstr "設定された `Engine` インスタンスを注入します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Engine Customization"
msgstr "エンジンのカスタマイズ"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Additional components can be registered manually via `EngineBuilder` methods in a CDI observer method at runtime:"
msgstr "追加のコンポーネントは、実行時に CDI オブザーバーメソッドの `EngineBuilder` メソッドを使用して手動で登録できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"However, in this particular case the section helper factory is ignored during validation at build time.\n"
"If you want to register a section that participates in validation of templates at build time then use the convenient `@EngineConfiguration` annotation:"
msgstr ""
"ただし、この特定のケースでは、ビルド時の検証でセクションヘルパーファクトリーは無視されます。\n"
"ビルド時のテンプレート検証に参加する登録する場合は、便利な `@EngineConfiguration` アノテーションを使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A `SectionHelperFactory` annotated with `@EngineConfiguration` is used during validation of templates at build time and automatically registered at runtime (a) as a section factory and (b) as a CDI bean."
msgstr "`@EngineConfiguration` アノテーションが付けられた `SectionHelperFactory` は、ビルド時のテンプレート検証で使用され、実行時に (a) セクションファクトリー、および、(b) CDI Bean として自動的に登録されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A CDI bean instance is used at runtime - this means that the factory can define injection points"
msgstr "CDI Beanインスタンスは実行時に使用されます - これはファクトリーが注入ポイントを定義できることを意味します"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Validate that `foo` parameter is always present; e.g. `{#custom foo='bar' /}` is ok but `{#custom /}` results in a build failure."
msgstr "`foo` パラメーターが常に存在することを検証します。たとえば、 `{#custom foo='bar' /}` は問題ありませんが、 `{#custom /}` はビルド時に失敗します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Use the injected `Service` during rendering."
msgstr "レンダリング時に注入された `Service` を使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `@EngineConfiguration` annotation can be also used to register `ValueResolver`, `NamespaceResolver` and `ParserHook` components."
msgstr "`@EngineConfiguration` アノテーションは、 `ValueResolver`、 `NamespaceResolver`、および `ParserHook` コンポーネントを登録するためにも使用できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Locator Registration"
msgstr "テンプレートロケーターの登録"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The easiest way to register <<template-locator,template locators>> is to make them CDI beans.\n"
"As the custom locator is not available during the build time when a template validation is done, you need to disable the validation via the `@Locate` annotation."
msgstr "<<template-locator,テンプレートロケーター>> を登録する最も簡単な方法は、これらを CDI Bean にすることです。テンプレート検証を行うビルド時にはカスタムロケーターは利用できないので、 `@Locate` アノテーションで検証を無効化する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Custom Locator Example"
msgstr "カスタムロケーターの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A template named `bar.html` is located by the custom locator at runtime."
msgstr "実行時に、カスタムロケーターによって `bar.html` という名前のテンプレートが配置されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A regular expression `foo.*` disables validation for templates whose name is starting with `foo`."
msgstr "正規表現 `foo.*` は、名前が `foo` で始まるテンプレートのバリデーションを無効にします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Injection fields are resolved as template locators annotated with `@Locate` are registered as singleton session beans."
msgstr "注入フィールドは `@Locate` でアノテーションされたテンプレートロケーターとして解決され、シングルトンセッション Bean として登録されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Variants"
msgstr "テンプレートバリアント"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Sometimes it's useful to render a specific variant of the template based on the content negotiation.\n"
"This can be done by setting a special attribute via `TemplateInstance.setVariant()`:"
msgstr ""
"場合によっては、コンテンツネゴシエーションに基づき、テンプレートの特定バリアントをレンダリングすると便利です。\n"
"これは `TemplateInstance.setVariant()` を使用して特別な属性を設定することで実行できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"When using `quarkus-rest-qute` or `quarkus-resteasy-qute` the content negotiation is performed automatically.\n"
"For more information, see the <<rest_integration>> section."
msgstr ""
"`quarkus-rest-qute` または `quarkus-resteasy-qute` を使用すると、コンテンツネゴシエーションが自動的に実行されます。\n"
"詳細は、<<rest_integration>> セクションを参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Injecting Beans Directly In Templates"
msgstr "テンプレートに直接Beansを注入"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A CDI bean annotated with `@Named` can be referenced in any template through `cdi` and/or `inject` namespaces:"
msgstr "`@Named` でアノテーションされた CDI Bean は、 `cdi` や `inject` 名前空間を通して、任意のテンプレートで参照することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "First, a bean with name `personService` is found and then used as the base object."
msgstr "まず、 `personService` という名前の Bean が見つかり、それをベースオブジェクトとして使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr "まず、 `foo` という名前のBeanを見つけ、それをベースオブジェクトとして使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`@Named @Dependent` beans are shared across all expressions in a template for a single rendering operation, and destroyed after the rendering finished."
msgstr "`@Named @Dependent` Bean は、1 つのレンダリング操作用にテンプレート内のすべての式で共有され、レンダリングが終了した後に破棄されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"All expressions with `cdi` and `inject` namespaces are validated during build.\n"
"For the expression `cdi:personService.findPerson(10).name`, the implementation class of the injected bean must either declare the `findPerson` method or a matching <<template_extension_methods,template extension method>> must exist.\n"
"For the expression `inject:foo.price`, the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching <<template_extension_methods,template extension method>> must exist."
msgstr ""
"名前空間 `cdi` と `inject` を含むすべての式は、ビルド時に検証されます。\n"
"`cdi:personService.findPerson(10).name` という式では、注入される Bean の実装クラスは `findPerson` メソッドを宣言しているか、マッチする <<template_extension_methods,template extension method>> が存在しなければなりません。\n"
"`inject:foo.price` という式では、注入される Bean の実装クラスは `price` プロパティー (例: `getPrice()` メソッド) を持つか、マッチする <<template_extension_methods,template extension method>> が存在しなければなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr "`@Named` でアノテーションされたすべてのBeanに対して `ValueResolver` も生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If your application serves xref:http-reference.adoc[HTTP requests] you can also inject the current `io.vertx.core.http.HttpServerRequest` via the `inject` namespace, e.g. `{inject:vertxRequest.getParam('foo')}`."
msgstr "アプリケーションが xref:http-reference.adoc[HTTP リクエスト] を提供する場合、 `inject` 名前空間を介して現在の `io.vertx.core.http.HttpServerRequest` を注入することもできます (例: `{inject:vertxRequest.getParam('foo')}`)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Sometimes it may be necessary to access public methods and properties of a CDI bean that is not annotated with `@Named`.\n"
"However, if you don't control the source of the bean it is not possible to add the `@Named` annotation.\n"
"Nevertheless, it is possible to create an intermediate CDI bean annotated with `@Named`.\n"
"This intermediate bean can inject the bean in question and make it accessible.\n"
"A Java record is a very convenient way to define such an intermediate CDI bean."
msgstr ""
"場合によっては、 `@Named` アノテーションが付けられていない CDI Bean のパブリックメソッドとプロパティーにアクセスする必要がある場合があります。\n"
"ただし、Bean のソースを制御していない場合は、 `@Named` アノテーションを追加できません。\n"
"ただし、 `@Named` アノテーションが付けられた中間 CDI Bean を作成することは可能です。\n"
"この中間 Bean は、問題の Bean を注入してアクセス可能にできます。\n"
"Java レコードは、このような中間 CDI Bean を定義するのに非常に便利な方法です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If no name is explicitly specified by the `value` member the https://jakarta.ee/specifications/cdi/4.1/jakarta-cdi-spec-4.1#default_name[default name is assigned] - the simple name of the bean class, after converting the first character to lower case. In this particular case, the default name is `userData`."
msgstr "`value` メンバーによって名前が明示的に指定されていない場合は、 https://jakarta.ee/specifications/cdi/4.1/jakarta -cdi-spec-4.1#default_name[デフォルト名が割り当てられます] (最初の文字を小文字に変換した後の Bean クラスの単純な名前)。この特定のケースでは、デフォルト名は `userData` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `@Singleton` scope is added automatically."
msgstr "`@Singleton` スコープが自動的に追加されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "All parameters of the canonical constructor are injection points. The accessor methods can be used to obtain the injected bean."
msgstr "標準コンストラクターのパラメーターはすべて注入ポイントです。アクセサーメソッドを使用して、注入された Bean を取得できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "And then in a template you can simply use `{cdi:userData.info}` or `{cdi:userData.username}`."
msgstr "そしてテンプレートでは `{cdi:userData.info}` または `{cdi:userData.username}` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Expressions"
msgstr "型安全な式"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Template expressions can be optionally type-safe.\n"
"Which means that an expression is validated against the existing Java types and template extension methods.\n"
"If an invalid/incorrect expression is found then the build fails."
msgstr "テンプレート式は、オプションでタイプセーフにすることができます。これは、式が既存のJavaの型とテンプレート拡張メソッドに対して検証されることを意味します。無効な/不正確な式が見つかった場合、ビルドは失敗します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For example, if there is an expression `item.name` where `item` maps to `org.acme.Item` then `Item` must have a property `name` or a matching template extension method must exist."
msgstr "例えば、 `item.name` という式があり、 `item` が `org.acme.Item` にマップされている場合、 `Item` には `name` というプロパティーがあるか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"An optional _parameter declaration_ is used to bind a Java type to expressions whose first part matches the parameter name.\n"
"Parameter declarations are specified directly in a template."
msgstr "オプションの _パラメーター宣言_ は、最初のパートがパラメーター名と一致する式に Java 型をバインドするために使用されます。パラメーター宣言はテンプレートで直接指定します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A Java type should be always identified with a _fully qualified name_ unless it's a JDK type from the `java.lang` package - in this case, the package name is optional.\n"
"Parameterized types are supported, however wildcards are always ignored - only the upper/lower bound is taken into account.\n"
"For example, the parameter declaration `{@java.util.List<? extends org.acme.Foo> list}` is recognized as `{@java.util.List<org.acme.Foo> list}`.\n"
"Type variables are not handled in a special way and should never be used."
msgstr "Java タイプは、 `java.lang` パッケージの JDK タイプでない限り、常に _fully qualified name_ で識別される必要があります。この場合、パッケージ名はオプションになります。パラメーター化されたタイプもサポートされていますが、ワイルドカードは常に無視され、上限と下限のみが考慮されます。たとえば、パラメーター宣言 `{@java.util.List<? extends org.acme.Foo> list}` は `{@java.util.List<org.acme.Foo> list}` として認識されます。タイプ変数は特別な方法で扱われることはないため、決して使用しないでください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parameter Declaration Example"
msgstr "パラメーター宣言の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "パラメーター宣言 - `foo` を `org.acme.Foo` にマップします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Not validated - not matching a param declaration."
msgstr "検証されていません - パラメーター宣言にマッチしません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "この式は検証されています。 `org.acme.Foo` はプロパティー `message` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Likewise, the Java type of the object resolved from `foo.message` must have a property `toLowerCase` or a matching template extension method must exist."
msgstr "同様に、 `foo.message` から解決されたオブジェクトの Java 型は、プロパティー `toLowerCase` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A value resolver is automatically generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr "パラメーター宣言で使用されるすべての型に対して値リゾルバが自動的に生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Method parameters of <<typesafe_templates,type-safe templates>> are automatically turned into parameter declarations."
msgstr "<<typesafe_templates,type-safe templates>> のメソッドパラメーターは、自動的にパラメーター宣言に変換されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that sections can override names that would otherwise match a parameter declaration:"
msgstr "セクションは、パラメーター宣言にマッチする名前をオーバーライドできることに注意してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Validated against `org.acme.Foo`."
msgstr "`org.acme.Foo` に対して検証されています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "検証されていません - `foo` はループセクションでオーバーライドされています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A parameter declaration may specify the _default value_ after the key.\n"
"The key and the default value are separated by an equals sign: `{@int age=10}`.\n"
"The default value is used in the template if the parameter key resolves to `null` or is not found."
msgstr "パラメーター宣言では、キーの後に _default value_ を指定することができます。キーとデフォルト値は等号で区切られます (`{@int age=10}`)。 デフォルト値は、パラメーターのキーが `null` に解決されるか、見つからない場合に、テンプレート内で使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"For example, if there's a parameter declaration `{@String foo=\"Ping\"}` and `foo` is not found then you can use `{foo}` and the output will be `Ping`.\n"
"On the other hand, if the value is set (e.g. via `TemplateInstance.data(\"foo\", \"Pong\")`) then the output of `{foo}` will be `Pong`."
msgstr "たとえば、パラメーター宣言 `{@String foo=\"Ping\"}` があり、 `foo` が見つからない場合、 `{foo}` を使用すると `Ping` が出力されます。一方、(たとえば `TemplateInstance.data(\"foo\", \"Pong\")` を介して) 値が設定されている場合は、 `{foo}` の出力は `Pong` となります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The type of a default value must be assignable to the type of the parameter declaration. For example, see the incorrect parameter declaration that results in a build failure: `{@org.acme.Foo foo=1}`."
msgstr "デフォルト値の型は、パラメーター宣言の型に割り当て可能でなければなりません。これは、ビルドの失敗につながる誤ったパラメーター宣言の例です: `{@org.acme.Foo foo=1}`。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The default value is actually an <<expressions,expression>>. So the default value does not have to be a literal (such as `42` or `true`). For example, you can leverage the `@TemplateEnum` and specify an enum constant as a default value of a parameter declaration: `{@org.acme.MyEnum myEnum=MyEnum:FOO}`.\n"
"However, the infix notation is not supported in default values unless the parentheses are used for grouping, e.g. `{@org.acme.Foo foo=(foo1 ?: foo2)}`."
msgstr ""
"実際のデフォルト値は <<expressions,expression>> です。そのため、デフォルト値はリテラル (`42` や `true` など) である必要はありません。たとえば、 `@TemplateEnum` を使用して、パラメーター宣言のデフォルト値として enum 定数を指定できます (`{@org.acme.MyEnum myEnum=MyEnum:FOO}`)。\n"
"しかし、括弧を使用してグループ化されていない限り (例: `{@org.acme.Foo foo=(foo1 ?: foo2)}`)、デフォルト値で中置記法はサポートされません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The type of a default value is not validated in <<standalone,Qute standalone>>."
msgstr "<<standalone,Qute standalone>> では、デフォルト値のタイプは検証されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "More Parameter Declarations Examples"
msgstr "その他のパラメーター宣言の例 "

#: _versions/3.27/guides/qute-reference.adoc
msgid "A primitive type."
msgstr "Java プリミティブタイプ。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`String` is replaced with `java.lang.String`: `{@java.util.List<java.lang.String> strings}`"
msgstr "`String` は `java.lang.String` に置き換えられます: `{@java.util.List<java.lang.String> strings}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The wildcard is ignored and the upper bound is used instead: `{@java.util.Map<String,Number>}`"
msgstr "ワイルドカードは無視され、代わりに上限値が使用されます: `{@java.util.Map<String,Number>}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The wildcard is ignored and the `java.lang.Object` is used instead: `{@java.util.Optional<java.lang.Object>}`"
msgstr "ワイルドカードは無視され、代わりに `java.lang.Object` が使用されます: `{@java.util.Optional<java.lang.Object>}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The type is `java.lang.String`, the key is `name` and the default value is `Quarkus`."
msgstr "タイプは `java.lang.String` で、キーは `name`、デフォルト値は `Quarkus` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Templates"
msgstr "タイプセーフテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"You can define type-safe templates in your Java code.\n"
"Parameters of type-safe templates are automatically turned into _parameter declarations_ that are used to bind <<typesafe_expressions>>.\n"
"The type-safe expressions are then validated at build time."
msgstr ""
"Java コードでタイプセーフなテンプレートを定義できます。\n"
"タイプセーフなテンプレートのパラメーターは、<<typesafe_expressions>> のバインドに使用される _パラメーター宣言_ に自動変換されます。\n"
"その後、タイプセーフな式はビルド時に検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "There are two ways to define a type-safe template:"
msgstr "タイプセーフなテンプレートは、2 つの方法で定義できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Annotate a class with `@io.quarkus.qute.CheckedTemplate` and all its `static native` methods will be used to define type-safe templates and the list of parameters they require."
msgstr "クラスにアノテーション `@io.quarkus.qute.CheckedTemplate` を付けると、そのすべての `static native` メソッドが、タイプセーフなテンプレートと、それに必要なパラメーターリストを定義するために使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Use a Java record that implements `io.quarkus.qute.TemplateInstance`; the record components represent the template parameters and `@io.quarkus.qute.CheckedTemplate` can be optionally used to configure the template."
msgstr "`io.quarkus.qute.TemplateInstance` を実装する Java レコードを使用します。レコードコンポーネントはテンプレートパラメーターを表し、オプションで `@io.quarkus.qute.CheckedTemplate` を使用してテンプレートを設定できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Nested Type-safe Templates"
msgstr "ネストされたタイプセーフなテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If using <<rest_integration,templates in Jakarta REST resources>>, you can rely on the following convention:"
msgstr "<<rest_integration,templates in Jakarta REST resources>> を使用する場合、次の規則を適用できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if\n"
"your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt`\n"
"and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr "テンプレートファイルを `/src/main/resources/templates` ディレクトリーに整理し、リソースクラスごとに 1 つのディレクトリーにグループ化します。つまり、 `ItemResource` クラスが `hello` と `goodbye` の 2 つのテンプレートを参照している場合は、 `/src/main/resources/templates/ItemResource/hello.txt` と `/src/main/resources/templates/ItemResource/goodbye.txt` に配置します。リソースクラスごとにテンプレートをグループ化することで、テンプレートへのナビゲートが容易になります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "各リソースクラスで、リソースクラス内で `@CheckedTemplate static class Template {}` クラスを宣言します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "リ ソ ース のテ ン プ レー ト フ ァ イ ルごとに `public static native TemplateInstance method();` を 1 つずつ宣言 し ます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Use those static methods to build your template instances."
msgstr "テンプレートインスタンスを構築するには、これらの静的メソッドを使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "ItemResource.java"
msgstr "ItemResource.java"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr "`templates/ItemResource/item.html` に対して `TemplateInstance` を与えるメソッドを宣言し、その `Item item` パラメーターを宣言することで、テンプレートを検証することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `item` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "`item` パラメーターは自動的に <<typesafe_expressions,parameter declaration>> に変換されるので、この名前を参照するすべての式が検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Make the `Item` object accessible in the template."
msgstr "テンプレート内で `Item` オブジェクトにアクセスできるようにします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "By default, the templates defined in a class annotated with `@CheckedTemplate` can only contain type-safe expressions, i.e. expressions that can be validated at build time. You can use `@CheckedTemplate(requireTypeSafeExpressions = false)` to relax this requirement."
msgstr "デフォルトでは、 `@CheckedTemplate` でアノテーションされたクラスで定義されたテンプレートは、タイプセーフな式、つまり、ビルド時に検証可能な式のみを含むことができます。この要件を緩和するために、 `@CheckedTemplate(requireTypeSafeExpressions = false)` を使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Top-level Type-safe Templates"
msgstr "トップレベルタイプセーフテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can also declare a top-level Java class annotated with `@CheckedTemplate`:"
msgstr "また、 `@CheckedTemplate` でアノテーションされたトップレベルの Java クラスを宣言することもできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Top-level checked templates"
msgstr "トップレベルチェック済テンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This declares a template with path `templates/hello.txt`. The `name` parameter is automatically turned into a  <<typesafe_expressions,parameter declaration>>, so that all expressions referencing this name will be validated."
msgstr "これは、パス `templates/hello.txt` を持つテンプレートを宣言します。 `name` パラメーターは自動的に <<typesafe_expressions,parameter declaration>> に変換されるため、この名前を参照するすべての式が検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Then declare one `public static native TemplateInstance method();` per template file.\n"
"Use those static methods to build your template instances:"
msgstr "そして、テンプレートファイルごとに `public static native TemplateInstance method();` を宣言します。これらの静的メソッドを使用してテンプレートインスタンスを構築します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "HelloResource.java"
msgstr "HelloResource.java"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Records"
msgstr "テンプレートレコード"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A Java record that implements `io.quarkus.qute.TemplateInstance` denotes a type-safe template.\n"
"The record components represent the template parameters and `@io.quarkus.qute.CheckedTemplate` can be optionally used to configure the template."
msgstr ""
"`io.quarkus.qute.TemplateInstance` を実装する Java レコードは、タイプセーフなテンプレートを表します。\n"
"レコードコンポーネントはテンプレートパラメーターを表し、オプションで `@io.quarkus.qute.CheckedTemplate` を使用してテンプレートを設定できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Declares a type-safe template with the Java record. The template is located at `/src/main/resources/templates/HelloResource/Hello.html`."
msgstr "Java レコードを使用してタイプセーフなテンプレートを宣言します。テンプレートは `/src/main/resources/templates/HelloResource/Hello.html` にあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Instantiate the record and use it as an ordinary `TemplateInstance`."
msgstr "レコードをインスタンス化し、通常の `TemplateInstance` として使用します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Customized Template Path"
msgstr "カスタマイズされたテンプレート・パス"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The path of a type-safe template (`@CheckedTemplate` method or record) consists of a _base path_ and a _defaulted name_.\n"
"The _base path_ is supplied by the `@CheckedTemplate#basePath()`.\n"
"By default, the simple name of the enclosing class for a nested static class or an empty string for a top level class is used.\n"
"The _defaulted name_ is derived by the strategy specified in `@CheckedTemplate#defaultName()`.\n"
"By default, the name of the `@CheckedTemplate` method/record is used as is."
msgstr ""
"`@CheckedTemplate` メソッドまたはレコードのタイプセーフなテンプレートパスには、 _ベースパス_ と _デフォルトの名前_が使用されます。\n"
" _ベースパス_ は `@CheckedTemplate#basePath()` で指定されます。\n"
"デフォルトでは，ネストした静的クラスの場合は宣言クラスのsimple name，トップレベルクラスの場合は空文字列が使用されます。\n"
"_デフォルトの名前_ は， `@CheckedTemplate#defaultName()` で指定された戦略によって導出されます。\n"
"デフォルトでは、 `@CheckedTemplate` のメソッドの名前がそのまま使われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A template record that is not annotated with `@CheckedTemplate` is treated as if it was annotated with `@CheckedTemplate` with default values."
msgstr "`@CheckedTemplate` でアノテーションが付けられていないテンプレートレコードは、デフォルト値で `@CheckedTemplate` でアノテーションが付けられているものとして扱われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Customized Template Path Example"
msgstr "カスタマイズされたTemplate Pathの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The template path for this method will be `items/item-and-order`."
msgstr "このメソッドのテンプレートパスは、 `items/item-and-order` になります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Fragments"
msgstr "タイプセーフフラグメント"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"You can also define a type-safe <<fragments,fragment>> of a type-safe template in your Java code.\n"
"There are two ways to define a type-safe fragment:"
msgstr "Javaコード内でタイプセーフ・テンプレートのタイプセーフ・ xref:fragments[フラグメントを] 定義することもできます。タイプセーフ・フラグメントを定義する方法は2つあります："

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "A _native static_ method annotated with `@CheckedTemplate`, with a name that contains a dollar sign `$`."
msgstr "`@CheckedTemplate` でアノテーションされた _ネイティブの静的_ メソッドで、ドル記号 `$` を含む名前を持ちます。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "A Java record that implements `io.quarkus.qute.TemplateInstance` and its name contains a dollar sign `$`."
msgstr "`io.quarkus.qute.TemplateInstance` を実装し、その名前にドル記号 `$` を含む Java レコード。"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The name of the fragment is derived from the annotated member name.\n"
"The part before the last occurrence of a dollar sign `$` is the method name of the related type-safe template.\n"
"The part after the last occurrence of a dollar sign is the fragment identifier.\n"
"The strategy defined by the relevant `CheckedTemplate#defaultName()` is honored when constructing the defaulted names."
msgstr "このフラグメ ントの名前は、アノテートされたメンバ名から派生します。最後のドル記号 `$` の前の部分は、関連するタイプセーフ・テンプレートのメソッド名です。この関数は、「Transition」（遷移）関数を使用して、遷移元と遷移先の間の関係を定義します。デフォルトの名前を作成する際には、関連する `CheckedTemplate#defaultName()` で定義されているストラテジーが尊重されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Fragment Example"
msgstr "タイプセーフフラグメントの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Quarkus validates at build time that each template that corresponds to the `Templates#items()` contains a fragment with identifier `item`. Moreover, the parameters of the fragment method are validated too. In general, all type-safe expressions that are found in the fragment and that reference some data from the original/outer template require a specific parameter to be present."
msgstr "Quarkusでは、ビルド時に、 `Templates#items()` に対応する各テンプレートに、識別子 `item` を持つフラグメントが含まれているかどうかが検証されます。さらに、フラグメントメソッドのパラメーターも検証されます。一般に、フラグメントに含まれ、オリジナル／アウターテンプレートのデータを参照するすべてのタイプセーフ 式には、特定のパラメータが必要です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Fragment Definition in `items.html`"
msgstr "`items.html` におけるフラグメントの定義"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Defines a fragment with identifier `item`."
msgstr "識別子 `item` を持つフラグメントを定義します"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `{item.name}` expression implies that the `Templates#items$item()` method must declare a parameter of name `item` and type `org.acme.Item`."
msgstr "`{item.name}` 式は、 `Templates#items$item()` メソッドが、名前 `item` 、型 `org.acme.Item` のパラメータを宣言しなければならないことを意味します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Fragment Call Site Example"
msgstr "タイプセーフフラグメントコールサイト例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can specify `@CheckedTemplate#ignoreFragments=true` in order to disable this feature, i.e. a dollar sign `$` in the method name will not result in a checked fragment method."
msgstr "この機能を無効にするために、 `@CheckedTemplate#ignoreFragments=true` を指定することができます。つまり、メソッド名にドル記号 `$` を指定しても、チェックされたフラグメントメソッドになることはありません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Contents"
msgstr "テンプレートの内容"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It is also possible to specify the contents for a type-safe template directly in your Java code.\n"
"A `static native` method of a class annotated with `@CheckedTemplate` or a Java record that implements `TemplateInstance` may be annotated with `@io.quarkus.qute.TemplateContents`.\n"
"The annotation value is used as the template contents.\n"
"The template id/path is derived from the type-safe template."
msgstr ""
"型セーフテンプレートの内容を Java コード内で直接指定することもできます。\n"
"`@CheckedTemplate` でアノテーションが付けられたクラスの `static native` メソッド、または `TemplateInstance` を実装する Java レコードには、 `@io.quarkus.qute.TemplateContents` でアノテーションが付けられる場合があります。\n"
"アノテーション値はテンプレートの内容として使用されます。\n"
"テンプレート ID/パスは、タイプセーフテンプレートから派生されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Contents Example"
msgstr "テンプレートコンテンツの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Defines the contents for the type-safe template represented by the `Hello` record. The derived template id is `HelloResource/Hello`."
msgstr "`Hello` レコードによって表される型セーフテンプレートの内容を定義します。派生テンプレート ID は `HelloResource/Hello` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Extension Methods"
msgstr "テンプレート拡張メソッド"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Extension methods can be used to extend the data classes with new functionality (to extend the set of accessible properties and methods) or to resolve expressions for a specific <<namespace_extension_methods,namespace>>.\n"
"For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr "拡張メソッドは、データクラスを新しい機能で拡張するため(アクセス可能なプロパティーとメソッドのセットを拡張するため)、または特定の link:#namespace_extension_methods[名前空間] のための式を解決するために使用することができます。例えば、 _計算されたプロパティー_ や _仮想メソッド_ を追加することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A value resolver is automatically generated for a method annotated with `@TemplateExtension`.\n"
"If a class is annotated with `@TemplateExtension` then a value resolver is generated for every _non-private static method_ declared on the class.\n"
"Method-level annotations override the behavior defined on the class.\n"
"Methods that do not meet the following requirements are ignored."
msgstr "値リゾルバは、 `@TemplateExtension` でアノテーションされたメソッドに対して自動的に生成されます。クラスが `@TemplateExtension` でアノテーションされている場合、そのクラスで宣言されている _プライベートではないスタティック・メソッド_ ごとに値リゾルバが生成されます。メソッドレベルのアノテーションは、クラスで定義された動作をオーバーライドします。以下の要件を満たさないメソッドは無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A template extension method:"
msgstr "テンプレート拡張メソッドは:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "must not be `private`"
msgstr "`private` であってはなりません"

#: _versions/3.27/guides/qute-reference.adoc
msgid "must be static,"
msgstr "`static` でなければなりません"

#: _versions/3.27/guides/qute-reference.adoc
msgid "must not return `void`."
msgstr "`void` を返してはいけません"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If there is no namespace defined the class of the first parameter that is not annotated with `@TemplateAttribute` is used to match the base object. Otherwise, the namespace is used to match an expression."
msgstr "名前空間が定義されていない限り、 `@TemplateAttribute` でアノテーションされた最初のパラメーターのクラスがベース・オブジェクトにマッチするように使用されます。そうでなければ、名前空間が式をマッチするのに使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Matching by Name"
msgstr "名前によるマッチング"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The method name is used to match the property name by default."
msgstr "メソッド名は、デフォルトでプロパティ名と一致するように使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Extension Method Example"
msgstr "拡張メソッドの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr "このメソッドは、 `Item.class` 型のベース・オブジェクトと `discountedPrice` プロパティー名を持つ式にマッチします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This template extension method makes it possible to render the following template:"
msgstr "このテンプレート拡張メソッドを使うと、以下のテンプレートをレンダリングすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr "`item` は `org.acme.Item` のインスタンスに解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "However, it is possible to specify the matching name with `matchName()`."
msgstr "ただし、 `matchName()` でマッチング名を指定することは可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateExtension#matchName()` Example"
msgstr "`TemplateInstance.createUni()` の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A special constant - `TemplateExtension#ANY` - can be used to specify that the extension method matches any name."
msgstr "特別な定数 - `TemplateExtension#ANY` - を使用すると、エクステンションメソッドが任意の名前にマッチするように指定することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateExtension#ANY` Example"
msgstr "`TemplateExtension#ANY` の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "An additional string method parameter is used to pass the actual property name."
msgstr "追加の文字列メソッドパラメータは、実際のプロパティー名を渡すために使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's also possible to match the name against a regular expression specified in `matchRegex()`."
msgstr "また、 `matchRegex()` で指定された正規表現と名前を照合することも可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateExtension#matchRegex()` Example"
msgstr "`TemplateInstance.createUni()` の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Finally, `matchNames()` can be used to specify a collection of matching names.\n"
"An additional string method parameter is mandatory as well."
msgstr "最後に、 `matchNames()` を使用して、一致する名前のコレクションを指定することができます。追加の文字列メソッド・パラメータも必須です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`TemplateExtension#matchNames()` Example"
msgstr "`TemplateInstance.createUni()` の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Superfluous matching conditions are ignored. The conditions sorted by priority in descending order are:\n"
"`matchRegex()`, `matchNames()` and `matchName()`."
msgstr "余分な一致条件は無視されます。優先順位の高い順に並べると、以下のようになります。 `matchRegex()` , `matchNames()` および `matchName()` 。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Method Parameters"
msgstr "メソッドパラメーター"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An extension method may declare parameters.\n"
"If no namespace is specified then the first parameter that is not annotated with `@TemplateAttribute` is used to pass the base object, i.e. `org.acme.Item` in the first example.\n"
"If matching any name or using a regular expression, then a string method parameter (not not annotated with `@TemplateAttribute`) needs to be used to pass the property name.\n"
"Parameters annotated with `@TemplateAttribute` are obtained via `TemplateInstance#getAttribute()`.\n"
"All other parameters are treated as virtual method parameters and resolved when rendering the template and passed to the extension method."
msgstr "拡張メソッドはパラメータを宣言できます。 `org.acme.Item` 名前空間が指定されていない場合は、 `@TemplateAttribute` でアノテーションされていない最初のパラメータがベース・オブジェクトを渡すために使用されます。任意の名前にマッチする場合、または正規表現を使用する場合は、プロパティ名を渡すために ( `@TemplateAttribute` でアノテーションされていない) 文字列メソッド・パラメータを使用する必要があります。 `@TemplateAttribute` でアノテーションされたパラメータは、 `TemplateInstance#getAttribute()` を介して取得されます。他のすべてのパラメータは仮想メソッド・パラメータとして扱われ、テンプレートをレンダリングするときに解決され、拡張メソッドに渡されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Multiple Parameters Example"
msgstr "複数のパラメーターの例"

#: _versions/3.27/guides/qute-reference.adoc
#, fuzzy
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale()`/`setScale()` virtual method name and two virtual method parameters - `scale` and `mode`."
msgstr "このメソッドは、 `scale()` / `setScale()` の仮想メソッド名と、 `scale` と `mode` の2つの仮想メソッドパラメータを持つ、 `BigDecimal.class` 型のベースオブジェクトを持つ式にマッチします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr "`item.discountedPrice` は `BigDecimal` のインスタンスに解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Namespace Extension Methods"
msgstr "名前空間拡張メソッド"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given <<expressions,namespace>>.\n"
"Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.\n"
"The first matching extension method is used to resolve an expression."
msgstr "`TemplateExtension#namespace()` が指定された場合、拡張メソッドが、指定された <<expressions,namespace>> を持つ式を解決するために使用されます。同じ名前空間を共有するテンプレート拡張メソッドは、 `TemplateExtension#priority()` で順に 1 つのリゾルバにグループ化されます。最初にマッチする拡張メソッドが式の解決に使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Namespace Extension Method Example"
msgstr "名前空間拡張メソッド例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "These extension methods can be used as follows."
msgstr "これらの拡張メソッドは、以下のように使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The output is `Hello world!`"
msgstr "出力は `Hello world!` です"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The output is `olleh`"
msgstr "出力は `olleh` です"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Built-in Template Extensions"
msgstr "組み込みテンプレートエクステンション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkusは、組み込みの拡張メソッドのセットを提供しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Maps"
msgstr "マップ"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr "`keys` または `keySet` : マップに含まれるキーのセットビューを返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for key in map.keySet}`"
msgstr "`{#for key in map.keySet}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr "`values` : マップに含まれる値のコレクションビューを返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for value in map.values}`"
msgstr "`{#for value in map.values}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr "`size` : マップ内のキーと値の対応付けの個数を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{map.size}`"
msgstr "`{map.size}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr "`isEmpty` : マップにキーと値のマッピングが含まれていない場合に true を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if map.isEmpty}`"
msgstr "`{#if map.isEmpty}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr "`get(key)` : 指定したキーがマッピングされた値を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{map.get('foo')}`"
msgstr "`{map.get('foo')}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr "マップ値は、直接アクセスすることもできます : `{map.myKey}` 。正規の識別子ではないキーには大括弧表記を使用します: `{map['my key']}` 。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Lists"
msgstr "リスト"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr "`get(index)` : リストの指定した位置の要素を返す"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{list.get(0)}`"
msgstr "`{list.get(0)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`reversed`: Returns a reversed iterator over a list"
msgstr "`reversed`: リストを逆にしたイテレータを返す"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for r in recordsList.reversed}`"
msgstr "`{#for r in recordsList.reversed}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`take`: Returns the first `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr "`take`: 与えられたリストから最初の `n` 要素を返します。 `n` が範囲外の場合は `IndexOutOfBoundsException` を投げます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for r in recordsList.take(3)}`"
msgstr "`{#for r in recordsList.take(3)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`takeLast`: Returns the last `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr "`takeLast`: 与えられたリストから最後の `n` 要素を返します。 `n` が範囲外の場合は `IndexOutOfBoundsException` を投げます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#for r in recordsList.takeLast(3)}`"
msgstr "`{#for r in recordsList.takeLast(3)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`first`: Returns the first element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr "`first`: 指定されたリストの最初の要素を返します。リストが空の場合、 `NoSuchElementException` をスローします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{recordsList.first}`"
msgstr "`{recordsList.first}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`last`: Returns the last element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr "`last`: 指定されたリストの最後の要素を返します。リストが空の場合、 `NoSuchElementException` をスローします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{recordsList.last}`"
msgstr "`{recordsList.last}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A list element can be accessed directly via an index: `{list.10}` or even `{list[10]}`."
msgstr "リストの要素にはインデックス (`{list.10}` または `{list[10]}`) を介して直接アクセスすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Integer Numbers"
msgstr "整数値"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`mod`: Modulo operation"
msgstr "`mod` : モデューロ演算"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{#if counter.mod(5) == 0}`"
msgstr "`{#if counter.mod(5) == 0}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`plus` or `+`: Addition"
msgstr "`plus` または `+`: 加算"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{counter + 1}`"
msgstr "`{counter + 1}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{age plus 10}`"
msgstr "`{age plus 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{age.plus(10)}`"
msgstr "`{age.plus(10)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`minus` or `-`: Subtraction"
msgstr "`minus` または `-`: 引き算"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{counter - 1}`"
msgstr "`{counter - 1}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{age minus 10}`"
msgstr "`{age minus 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{age.minus(10)}`"
msgstr "`{age.minus(10)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Strings"
msgstr "Strings"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`fmt` or `format`: Formats the string instance via `java.lang.String.format()`"
msgstr "`fmt` または `format`: `java.lang.String.format()` によって文字列のインスタンスをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{myStr.fmt(\"arg1\",\"arg2\")}`"
msgstr "`{myStr.fmt(\"arg1\",\"arg2\")}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{myStr.format(locale,arg1)}`"
msgstr "`{myStr.format(locale,arg1)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`+`: Infix notation for concatenation, works with `String` and `StringBuilder` base objects"
msgstr "`+`: 連結のための中置記法。`String` および `StringBuilder` 基本オブジェクトで動作します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{item.name + '_' + mySuffix}`"
msgstr "`{item.name + '_' + mySuffix}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{name + 10}`"
msgstr "`{name + 10}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:['<value>']`: Returns the string value, e.g. to easily concatenate another string value"
msgstr "`str:['<value>']`: 文字列値を返します。たとえば、別の文字列値を簡単に連結できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:['/path/to/'] + fileName}`"
msgstr "`{str:['/path/to/'] + fileName}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:fmt` or `str:format`: Formats the supplied string value via `java.lang.String.format()`"
msgstr "`str:fmt` または `str:format`: 与えられた文字列値を `java.lang.String.format()` でフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:format(\"Hello %s!\",name)}`"
msgstr "`{str:format(\"Hello %s!\",name)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:fmt(locale,'%tA',now)}`"
msgstr "`{str:fmt(locale,'%tA',now)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:fmt('/path/to/%s', fileName)}`"
msgstr "`{str:fmt('/path/to/%s', fileName)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:concat`: Concatenates the string representations of the specified arguments."
msgstr "`str:concat`: 指定された引数の文字列表現を連結します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:concat(\"Hello \",name,\"!\")}` yields `Hello Foo!` if `name` resolves to `Foo`"
msgstr "`{str:concat(\"Hello \",name,\"!\")}` `name` が `Foo` に解決された場合、`Hello Foo!` が返されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:concat('/path/to/', fileName)}`"
msgstr "`{str:concat('/path/to/', fileName)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:join`: Joins the string representations of the specified arguments together with a delimiter."
msgstr "`str:join`: 指定された引数の文字列表現を区切り文字で結合します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:join('_','Qute','is','cool')}` yields `Qute_is_cool`"
msgstr "`{str:join('_','Qute','is','cool')}` は `Qute_is_cool` を生成します"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:builder`: Returns a new string builder."
msgstr "`str:builder`: 新しい文字列ビルダーを返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:builder('Qute').append(\"is\").append(\"cool!\")}` yields `Qute is cool!`"
msgstr "`{str:builder('Qute').append(\"is\").append(\"cool!\")}` は `Qute is cool!` を生成します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:builder('Qute') + \"is\" + whatisqute + \"!\"}` yields `Qute is cool!` if `whatisqute` resolves to `cool`"
msgstr "`{str:builder('Qute') + \"is\" + whatisqute + \"!\"}` `whatisqute` が `cool` に解決される場合、`Qute is cool!` が生成されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`str:eval`: Evaluates the string representation of the first argument as a template in the <<current_context_object,current context>>."
msgstr "`str:eval`:<<current_context_object,current context>> で最初の引数の文字列表現をテンプレートとして評価します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:eval('Hello {name}!')` yields `Hello lovely!` if `name` resolves to `lovely`"
msgstr "`{str:eval('Hello {name}!')` は、`name` が `lovely` に解決された場合、`Hello lovely!` を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:eval(myTemplate)}` yields `Hello lovely!` if `myTemplate` resolves to `Hello {name}!` and `name` resolves to `lovely`"
msgstr "`{str:eval(myTemplate)}` `myTemplate` が `Hello lovely!` に解決された場合、`Hello{name}!` と `name` は `lovely` に対して解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{str:eval('/path/to/{fileName}')}` yields `/path/to/file.txt` if `fileName` resolves to `file.txt`"
msgstr "`{str:eval('/path/to/{fileName}')}` は、`fileName` が `file.txt` に解決される場合、`/path/to/file.txt` を生成します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Config"
msgstr "設定"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr "`config:<name>` 又は `config:[<name>]` : 指定したプロパティー名の設定値を返します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr "`{config:foo}` または `{config:['property.with.dot.in.name']}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr "`config:property(name)` : 指定したプロパティー名の設定値を返します。名前は式で動的に取得することが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:property('quarkus.foo')}`"
msgstr "`{config:property('quarkus.foo')}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:property(foo.getPropertyName())}`"
msgstr "`{config:property(foo.getPropertyName())}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`config:boolean(name)`: Returns the config value for the given property name as a boolean; the name can be obtained dynamically by an expression"
msgstr "`config:boolean(name)`: 指定したプロパティー名の設定値をbooleanとして返します。名前は式で動的に取得することが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"
msgstr "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"
msgstr "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`config:integer(name)`: Returns the config value for the given property name as an integer; the name can be obtained dynamically by an expression"
msgstr "`config:integer(name)`: 指定したプロパティー名の設定値をintegerで返します。名前は式で動的に取得することが可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:integer('quarkus.foo')}`"
msgstr "`{config:integer('quarkus.foo')}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{config:integer(foo.getPropertyName())}`"
msgstr "`{config:integer(foo.getPropertyName())}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Time"
msgstr "時間"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr "`{dateTime.format('d MMM uuuu')}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`format(pattern,locale)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`format(pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale,timeZone)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr "`{time:format(myDate,'d MMM uuuu')}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern,locale)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr "`{time:format(myDate,'d MMM uuuu', myLocale)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale,timeZone)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "@TemplateData"
msgstr "@TemplateData"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"A value resolver is automatically generated for a type annotated with `@TemplateData`.\n"
"This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr "値リゾルバは、 `@TemplateData` でアノテーションされた型に対して自動的に生成されます。これにより、Quarkusでは、実行時にデータにアクセスするためのリフレクションの使用を避けることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr "非publicのメンバー、コンストラクタ、静的イニシャライザ、静的メソッド、合成メソッド、ボイドメソッドは常に無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Any instance of `Item` can be used directly in the template:"
msgstr "`Item` の任意のインスタンスをテンプレート内で直接使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr "`items` は `org.acme.Item` インスタンスのリストに解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.\n"
"Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr "さらに、 `@TemplateData.properties()` と `@TemplateData.ignore()` を使用して、生成されるリゾルバを微調整することができます。最後に、アノテーションの「ターゲット」を指定することも可能です。これは、アプリケーションによって管理されないサードパーティーのクラスに便利です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr "生成された値リゾルバは、 `BigDecimal.setScale()` メソッドを呼び出す方法を知っています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Accessing Static Fields and Methods"
msgstr "静的なフィールドとメソッドへのアクセス"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If `@TemplateData#namespace()` is set to a non-empty value then a namespace resolver is automatically generated to access the public static fields and methods of the target class.\n"
"By default, the namespace is the FQCN of the target class where dots and dollar signs are replaced by underscores.\n"
"For example, the namespace for a class with name `org.acme.Foo` is `org_acme_Foo`.\n"
"The static field `Foo.AGE` can be accessed via `{org_acme_Foo:AGE}`.\n"
"The static method `Foo.computeValue(int number)` can be accessed via `{org_acme_Foo:computeValue(10)}`."
msgstr "もし `@TemplateData#namespace()` が空でない値に設定されている場合、ターゲットクラスのパブリック静的フィールドとメソッドにアクセスするための名前空間リゾルバーが自動的に生成されます。デフォルトでは、名前空間はターゲットクラスの FQCN で、ドットやドル記号はアンダースコアに置き換えられます。たとえば、名前 `org.acme.Foo` を持つクラスの名前空間は `org_acme_Foo` となります。静的フィールド `Foo.AGE` には、 `{org_acme_Foo:AGE}` からアクセスすることができます。静的メソッド `Foo.computeValue(int number)` には、 `{org_acme_Foo:computeValue(10)}` を介してアクセスすることができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A namespace can only consist of alphanumeric characters and underscores."
msgstr "名前空間は、英数字とアンダースコアだけで構成されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Class Annotated With `@TemplateData`"
msgstr "`@TemplateData` でアノテーションされたクラス"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A name resolver with the namespace `model_Statuses` is generated automatically."
msgstr "名前空間が `model_Statuses` のネームリゾルバーが自動的に生成されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Accessing Class Constants"
msgstr "クラス定数にアクセスするテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Convenient Annotation For Enums"
msgstr "enum の便利なアノテーション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"There's also a convenient annotation to access enum constants: `@io.quarkus.qute.TemplateEnum`.\n"
"This annotation is functionally equivalent to `@TemplateData(namespace = TemplateData.SIMPLENAME)`, i.e. a namespace resolver is automatically generated for the target enum and the simple name of the target enum is used as the namespace."
msgstr "また、enum 定数にアクセスするための便利なアノテーションとして、 `@io.quarkus.qute.TemplateEnum` があります。このアノテーションは、機能的には `@TemplateData(namespace = TemplateData.SIMPLENAME)` と同等です。つまり、対象の enum に対して自動的に名前空間リゾルバーが生成され、対象の enum の単純名が名前空間として使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Enum Annotated With `@TemplateEnum`"
msgstr "`@TemplateEnum` でアノテーションされた enum"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A name resolver with the namespace `Status` is generated automatically."
msgstr "名前空間 `Status` を持つネームリゾルバーが自動的に生成される。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`@TemplateEnum` declared on a non-enum class is ignored. Also, if an enum also declares the `@TemplateData` annotation, then the `@TemplateEnum` annotation is ignored."
msgstr "enum 以外のクラスで宣言された `@TemplateEnum` は無視されます。また、enum が `@TemplateData` アノテーションを宣言する場合は、 `@TemplateEnum` アノテーションは無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template Accessing Enum Constants"
msgstr "enum 定数にアクセスするテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Quarkus detects possible namespace collisions and fails the build if a specific namespace is defined by multiple `@TemplateData` and/or `@TemplateEnum` annotations."
msgstr "Quarkus は、名前空間の競合の可能性を検出し、特定の名前空間が複数の `@TemplateData` や `@TemplateEnum` アノテーションによって定義されている場合、ビルドを失敗させます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Global Variables"
msgstr "グローバル変数"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `io.quarkus.qute.TemplateGlobal` annotation can be used to denote static fields and methods that supply _global variables_ which are accessible in any template."
msgstr "アノテーション `io.quarkus.qute.TemplateGlobal` は、任意のテンプレートからアクセス可能な _グローバル変数_ を提供する静的フィールドとメソッドを示すために使用できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Global variables are:"
msgstr "グローバル変数は次のとおりです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "added as _computed data_ of any `TemplateInstance` during initialization,"
msgstr "初期化中に、任意の `TemplateInstance` の _計算データ_ として追加されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "accessible with the `global:` namespace."
msgstr "`global:` 名前空間でアクセス可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "When using `TemplateInstance#computedData(String, Function<String, Object>)` a mapping function is associated with a specific key and this function is used each time a value for the given key is requested. In case of global variables, a static method is called or a static field is read in the mapping function."
msgstr "`TemplateInstance#computedData(String, Function<String, Object>)` を使用している場合、 マッピング関数は特定のキーに関連付けられ、指定されたキーの値が要求されるたびに、この関数が使用されます。グローバル変数の場合は、静的メソッドが呼び出されるか、マッピング関数で静的フィールドが読み取られます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Global Variables Definition"
msgstr "グローバル変数の定義"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If a class is annotated with `@TemplateGlobal` then every non-void non-private static method that declares no parameters and every non-private static field is considered a global variable. The name is defaulted, i.e. the name of the field/method is used."
msgstr "クラスが `@TemplateGlobal` でアノテーションが付けられている場合、パラメーターを宣言しないすべての非 void 非プライベート静的メソッドとすべての非プライベート静的フィールドは、グローバル変数と見なされます。名前はデフォルトです。つまり、フィールド/メソッドの名前が使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Method-level annotations override the class-level annotation. In this particular case, the name is not defaulted but selected explicitly."
msgstr "メソッドレベルのアノテーションは、クラスレベルのアノテーションをオーバーライドします。この特別なケースでは、名前はデフォルトではなく、明示的に選択されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A Template Accessing Global Variables"
msgstr "グローバル変数にアクセスするテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`currentUser` resolves to `Globals#user()`."
msgstr "`currentUser` resolves to `Globals#user()`."

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `global:` namespace is used; `age` resolves to `Globals#age`."
msgstr "`global:` 名前空間が使用され、 `age` は `Globals#age` に解決されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`myColors` resolves to `Globals#myColors()`."
msgstr "`myColors` resolves to `Globals#myColors()`."

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that global variables implicitly add <<typesafe_expressions,parameter declarations>> to all templates and so any expression that references a global variable is validated during build."
msgstr "グローバル変数は暗黙のうちにすべてのテンプレートに <<typesafe_expressions,parameter declarations>> を追加するため、グローバル変数を参照する式はビルド時に検証されることに注意してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The Output"
msgstr "出力"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Resolving Conflicts"
msgstr "競合の解消"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If not accessed via the `global:` namespace the global variables may conflict with regular data objects.\n"
"<<typesafe_templates,Type-safe templates>> override the global variables automatically.\n"
"For example, the following definition overrides the global variable supplied by the `Globals#user()` method:"
msgstr ""
"`global:` 名前空間経由でアクセスしない場合、グローバル変数は通常のデータオブジェクトと競合する可能性があります。\n"
"<<typesafe_templates,Type-safe templates>> は自動的にグローバル変数をオーバーライドします。\n"
"たとえば次の定義は、 `Globals#user()` メソッドが提供するグローバル変数をオーバーライドします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Template Definition"
msgstr "タイプセーフテンプレート定義"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`currentUser` conflicts with the global variable supplied by `Globals#user()`."
msgstr "`currentUser` は `Globals#user()` が提供するグローバル変数と競合しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "So the corresponding template does not result in a validation error even though the `Globals#user()` method returns `java.lang.String` which does not have the `name` property:"
msgstr "そのため、 `Globals#user()` メソッドが `java.lang.String` を返し、それが `name` プロパティーを持たないにもかかわらず、対応するテンプレートはバリデーションエラーにはなりません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`templates/hello.txt`"
msgstr "`templates/hello.txt`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`org.acme.User` has the `name` property."
msgstr "`org.acme.User` には `name` プロパティーがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For other templates an explicit parameter declaration is needed:"
msgstr "その他のテンプレートでは、明示的なパラメーター宣言が必要です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This parameter declaration overrides the declaration added by the global variable supplied by the `Globals#user()` method."
msgstr "このパラメーター宣言は、 `Globals#user()` メソッドが提供するグローバル変数によって追加される宣言を上書きします。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Native Executables"
msgstr "ネイティブ実行可能ファイル"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In the JVM mode a reflection-based value resolver may be used to access properties and call methods of the model classes.\n"
"But this does not work for xref:building-native-image.adoc[a native executable] out of the box.\n"
"As a result, you may encounter template exceptions like `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` even if the `Foo` class declares a relevant getter method."
msgstr "JVM モードでは、リフレクションベースの値リゾルバーが、プロパティーにアクセスし、モデルクラスのメソッドを呼び出すために使われる場合があります。しかし、これは xref:building-native-image.adoc[ネイティブ実行可能ファイル] に対しては、そのままではうまくいきません。その結果、たとえ `Foo` クラスが関連するゲッターメソッドを宣言していたとしても、 `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` といったテンプレート例外に遭遇するかも知れません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "There are several ways to solve this problem:"
msgstr "この問題を解決するには、いくつかの方法があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Make use of <<typesafe_templates,type-safe templates>> or <<typesafe_expressions,type-safe expressions>>"
msgstr "<<typesafe_templates,タイプセーフテンプレート>> または <<typesafe_expressions,タイプセーフな式>> をご利用ください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In this case, an optimized value resolver is generated automatically and used at runtime"
msgstr "この場合、最適化されたバリューリゾルバーが自動的に生成され、実行時に使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This is the preferred solution"
msgstr "これが望ましい解決策です"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Annotate the model class with <<template_data,`@TemplateData`>> - a specialized value resolver is generated and used at runtime"
msgstr "モデルクラスに <<template_data,`@TemplateData`>> のアノテーションを付ける - 実行時に専用の値リゾルバーが生成され、使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Annotate the model class with `@io.quarkus.runtime.annotations.RegisterForReflection` to make the reflection-based value resolver work. More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr "リフレクションベースの値リゾルバーが機能するためには、モデルクラスにアノテーション `@io.quarkus.runtime.annotations.RegisterForReflection` が必要です。 `@RegisterForReflection` アノテーションの詳細は、xref:writing-native-applications-tips.adoc#registerForReflection[ネイティブアプリケーションのヒント] ページを参照してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "[[resteasy_integration]] REST Integration"
msgstr "[[resteasy_integration]] REST インテグレーション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you want to use Qute in your Jakarta REST application, then depending on which Jakarta REST stack you are using, you'll need to register the proper extension first."
msgstr "Jakarta REST アプリケーションで Qute を使用する場合は、使用している Jakarta REST スタックに応じて適切なエクステンションを最初に登録する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you are using Quarkus REST (formerly RESTEasy Reactive) via the `quarkus-rest` extension, then in your `pom.xml` file, add:"
msgstr "`quarkus-rest` エクステンションを介して Quarkus REST (旧 RESTEasy Reactive) を使用している場合は、 `pom.xml` ファイルに以下を追加します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If instead you are using the legacy RESTEasy Classic-based `quarkus-resteasy` extension, then in your `pom.xml` file, add:"
msgstr "従来の RESTEasy Classic ベースの `quarkus-resteasy` エクステンションを使用している場合は、 `pom.xml` ファイルに以下を追加します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Both of these extensions register a special response filter which enables resource methods to return a `TemplateInstance`, thus freeing users of having to take care of all necessary internal steps."
msgstr "これら両方のエクステンションは、リソースメソッドが `TemplateInstance` を返せるようにする特別な応答フィルターを登録します。そのため、ユーザーによる内部ステップの処理が不要になります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If using Quarkus REST, a resource method that returns `TemplateInstance` is considered non-blocking. You need to annotate the method with `io.smallrye.common.annotation.Blocking` in order to mark the method as blocking. For example if it's also annotated with `@RunOnVirtualThread`."
msgstr "Quarkus REST を使用する場合、 `TemplateInstance` を返すリソースメソッドはブロッキングではないと見なされます。メソッドをブロッキングとしてマークするには、メソッドにアノテーション `io.smallrye.common.annotation.Blocking` を付ける必要があります。たとえば、 `@RunOnVirtualThread` のアノテーションも付けられている場合などです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The end result is that a using Qute within a Jakarta REST resource may look as simple as:"
msgstr "最終的には、Jakarta REST リソース内で Qute を使用すると、次のようにシンプルになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"If there is no `@Location` qualifier provided, the field name is used to locate the template.\n"
"In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "`@Location` の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/hello.txt` であるテンプレートを注入しています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered.\n"
"In this case, we put the name value under the key `name`.\n"
"The data map is accessible during rendering."
msgstr "`Template.data()` は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、名前の値をキー `name` の下に置きます。データマップはレンダリング中にアクセス可能です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "レンダリングをトリガーしないことに注意してください - これは特別な `ContainerResponseFilter` の実装によって自動的に行われます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Users are encouraged to use <<typesafe_templates,Type-safe templates>> that help to organize the templates for a specific Jakarta REST resource and enable <<typesafe_expressions,type-safe expressions>> automatically."
msgstr "ユーザーは、特定の Jakarta REST リソースのテンプレートを整理し、自動的に <<typesafe_expressions,type-safe expressions>> を有効化できる <<typesafe_templates,Type-safe templates>> を使用することが推奨されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The content negotiation is performed automatically.\n"
"The resulting output depends on the `Accept` header received from the client."
msgstr "コンテンツネゴシエーションは自動的に実行されます。結果の出力はクライアントから受け取った `Accept` ヘッダーに依存します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr "注入されたフィールドから派生したベースパスを持つバリアントテンプレートを注入します - `src/main/resources/templates/item`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr "`text/plain` では `src/main/resources/templates/item.txt` のテンプレートが使用されます。 `text/html` では `META-INF/resources/templates/item.html` のテンプレートが使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `RestTemplate` util class can be used to obtain a template instance from a body of a Jakarta REST resource method:"
msgstr "`RestTemplate` util クラスを使用すると、Jakarta REST リソースメソッドのボディからテンプレートインスタンスを取得することができます:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "RestTemplate Example"
msgstr "RestTemplate の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The name of the template is derived from the resource class and method name; `DetailResource/item` in this particular case."
msgstr "テンプレートの名前は、リソースクラスとメソッド名から派生しています。このケースでは、 `DetailResource/item` です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Unlike with `@Inject` the templates obtained via `RestTemplate` are not validated, i.e. the build does not fail if a template does not exist."
msgstr "`@Inject` とは異なり、 `RestTemplate` 経由で取得したテンプレートは検証されません。即ち、テンプレートが存在しなくてもビルドは失敗しません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Vert.x Integration"
msgstr "Vert.x インテグレーション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "If you want to use `io.vertx.core.json.JsonObject` as data in your templates, then you will need to add the `quarkus-vertx` extension to your build file if not already part of your dependencies (most applications use this extension by default)."
msgstr "テンプレートで `io.vertx.core.json.JsonObject` をデータとして使用する場合、依存関係にまだ含まれていなければ、ビルドファイルに `quarkus-vertx` エクステンションを追加する必要があります (ほとんどのアプリケーションでは、このエクステンションがデフォルトで使用されます)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/qute-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/qute-reference.adoc
msgid "With this dependency included, we have a special value resolver for `io.vertx.core.json.JsonObject` which makes it possible to access the properties of a JSON object in a template:"
msgstr "この依存関係を含めると、 `io.vertx.core.json.JsonObject` の特別な値リゾルバーが作成され、テンプレート内の JSON オブジェクトのプロパティーにアクセスできるようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "src/main/resources/templates/foo.txt"
msgstr "src/main/resources/templates/foo.txt"

#: _versions/3.27/guides/qute-reference.adoc
msgid "QuteVertxIntegration.java"
msgstr "QuteVertxIntegration.java"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `QuteVertxIntegration#render()` output should look like:"
msgstr "`QuteVertxIntegration#render()` の出力は次のようになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Development Mode"
msgstr "開発モード"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In the development mode, all files located in `src/main/resources/templates` are watched for changes.\n"
"By default, a template modification results in an application restart that also triggers build-time validations."
msgstr ""
"開発モードでは、 `src/main/resources/templates` にあるすべてのファイルの変更が監視されます。\n"
"デフォルトでは、テンプレートを変更するとアプリケーションが再起動され、ビルド時の検証もトリガーされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"However, it's possible to use the `quarkus.qute.dev-mode.no-restart-templates` configuration property to specify the templates for which the application is not restarted.\n"
"The configuration value is a regular expression that matches the template path relative from the `templates` directory and `/` is used as a path separator.\n"
"For example, `quarkus.qute.dev-mode.no-restart-templates=templates/foo.html` matches the template `src/main/resources/templates/foo.html`.\n"
"The matching templates are reloaded and only runtime validations are performed."
msgstr ""
"ただし、 `quarkus.qute.dev-mode.no-restart-templates` 設定プロパティーを使用して、アプリケーションを再起動しないテンプレートを指定することは可能です。\n"
"設定値は、 `templates` ディレクトリーからの相対テンプレートパスに一致する正規表現であり、パス区切り文字として `/` が使用されます。\n"
"たとえば、 `quarkus.qute.dev-mode.no-restart-templates=templates/foo.html` はテンプレート `src/main/resources/templates/foo.html` と一致します。\n"
"一致するテンプレートがリロードされ、実行時の検証のみが実行されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Testing"
msgstr "テスト"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"In the test mode, the rendering results of injected and type-safe templates are recorded in the managed `io.quarkus.qute.RenderedResults` which is registered as a CDI bean.\n"
"You can inject `RenderedResults` in a test or any other CDI bean and assert the results.\n"
"However, it's possible to set the `quarkus.qute.test-mode.record-rendered-results` configuration property to `false` to disable this feature."
msgstr ""
"テストモードの場合、注入されたタイプセーフテンプレートのレンダリング結果は、CDI Bean として登録されている管理対象の `io.quarkus.qute.RenderedResults` に記録されます。\n"
"テストまたは他の CDI Bean に `RenderedResults` を注入し、結果をアサートできます。\n"
"この機能は、 `quarkus.qute.test-mode.record-rendered-results` 設定プロパティーを `false` に設定することで無効にできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safe Message Bundles"
msgstr "タイプセーフメッセージバンドル"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Basic Concepts"
msgstr "基本概念"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The basic idea is that every message is potentially a very simple template.\n"
"In order to prevent type errors, a message is defined as an annotated method of a *message bundle interface*.\n"
"Quarkus generates the *message bundle implementation* at build time."
msgstr ""
"基本的な考え方として、すべてのメッセージを非常に単純なテンプレートである可能性があるとみなします。\n"
"タイプエラーを防ぐために、メッセージは *メッセージバンドルインターフェイス* のアノテーション付きメソッドとして定義されます。\n"
"Quarkus はビルド時に *メッセージバンドル実装* を生成します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Message Bundle Interface Example"
msgstr "メッセージバンドルインターフェイスの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr "メッセージバンドルインターフェイスを表します。 バンドル名のデフォルトは `msg` で、テンプレート式の名前空間として使用されます。例: `{msg:hello_name}`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Each method must be annotated with `@Message`. The value is a qute template. If no value is provided, then a corresponding value from a localized file is taken. If no such file exists, an exception is thrown and the build fails."
msgstr "各メソッドには `@Message` のアノテーションが必要です。その値は qute テンプレートです。値が指定されていない場合、ローカライズされたファイルから対応する値が取得されます。該当するファイルがない場合は例外がスローされ、ビルドは失敗します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The method parameters can be used in the template."
msgstr "メソッドのパラメーターはテンプレートで使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The message bundles can be used at runtime:"
msgstr "メッセージバンドルは、実行時に使用することができます:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr "`io.quarkus.qute.i18n.MessageBundles#get()` を経由し、直接コードの中で使用。例: `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "`@Inject` であなたのBeanに注入。 例: `@Inject AppMessages`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "メッセージ・バンドル名前空間を介してテンプレート内で参照。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`msg` is the default namespace."
msgstr "`msg` がデフォルトの名前空間です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`hello_name` is the message key."
msgstr "`hello_name` がメッセージキーです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr "`Lucie` はメッセージバンドルインターフェースメソッドのパラメーターです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It is also possible to obtain a localized message for a key resolved at runtime using a reserved key `message`. The validation is skipped in this case though."
msgstr "また、予約されたキー `message` を使用して、実行時に解決されたキーのローカライズされたメッセージを取得することも可能である。この場合、検証はスキップされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Default Bundle Name"
msgstr "デフォルトのバンドル名"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The bundle name is defaulted unless it's specified with `@MessageBundle#value()`.\n"
"For a top-level class the `msg` value is used by default.\n"
"For a nested class the name consists of the simple names of all enclosing classes in the hierarchy (top-level class goes first), followed by the simple name of the message bundle interface.\n"
"Names are separated by underscores."
msgstr ""
"`@MessageBundle#value()` で指定されていない限り、バンドル名がデフォルトになります。\n"
"最上位クラスの場合、デフォルトで `msg` 値が使用されます。\n"
"ネストされたクラスの場合、名前は階層内に含まれるすべてのクラスの単純名 (最上位クラスが最初) で設定され、その後にメッセージバンドルインターフェイスの単純名が続きます。\n"
"名前はアンダースコアで区切られます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "For example, the name of the following message bundle will be defaulted to `Controller_index`:"
msgstr "例えば、以下のメッセージバンドルの名前は、デフォルトで `Controller_index` になります:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "This message could be used in a template via `{Controller_index:hello(name)}`."
msgstr "このメッセージは、 `{Controller_index:hello(name)}` を介してテンプレートで使用することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The bundle name is also used as a part of the name of a localized file, e.g. `Controller_index` in the `Controller_index_de.properties`."
msgstr "バンドル名は、ローカライズされたファイル名の一部としても使用されます。例えば、 `Controller_index` は、 `Controller_index_de.properties` となります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Bundle Name and Message Keys"
msgstr "バンドル名とメッセージキー"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Message keys are used directly in templates.\n"
"The bundle name is used as a namespace in template expressions.\n"
"The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.\n"
"However, the `@Message` can override this strategy and even define a custom key.\n"
"By default, the annotated element's name is used as-is.\n"
"Other possibilities are:"
msgstr ""
"メッセージキーはテンプレート内で直接使用されます。\n"
"バンドル名はテンプレート式の名前空間として使用されます。\n"
"`@MessageBundle` は、メソッド名からメッセージキーを生成するために使用するデフォルトストラテジーを定義するために使用できます。\n"
"ただし、 `@Message` はこのストラテジーをオーバーライドし、カスタムキーを定義することもできます。\n"
"デフォルトでは、アノテーションされた要素の名前がそのまま使用されます。\n"
"他の可能性としては、以下のようなものがあります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "キャメルケースを止め、ハイフン化したもの。 例: `helloName()` -> `hello-name`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr "キャメルケースを止め、パーツをアンダースコア区切りとしたもの。例: `helloName()` -> `hello_name`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Validation"
msgstr "バリデーション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "All message bundle templates are validated:"
msgstr "すべてのメッセージバンドルテンプレートは検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr "名前空間を持たない全ての式はパラメーターにマッピングする必要があります。例: `Hello {foo}` の場合、メソッドは `foo` という名前のパラメータを持つ必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr "すべての式はパラメーターの型に対して検証されます。例: `Hello {foo.bar}` で、パラメーター `foo` の型が `org.acme.Foo` の場合、 `org.acme.Foo` は `bar` という名前のプロパティーを持つ必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A warning message is logged for each _unused_ parameter."
msgstr "_未使用の_ パラメーターごとに警告メッセージが記録されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr "`{msg:hello(item.name)}` のようなメッセージバンドルメソッドを参照する式も検証されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Localization"
msgstr "ローカライゼーション"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"The default locale specified via the `quarkus.default-locale` config property is used for the `@MessageBundle` interface by default.\n"
"However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.\n"
"Additionally, there are two ways to define a localized bundle:"
msgstr "デフォルトでは、 `@MessageBundle` インターフェイスには `quarkus.default-locale` 設定プロパティーで指定したデフォルトロケールが使用されます。しかし、 `io.quarkus.qute.i18n.MessageBundle#locale()` を使用して、カスタムのロケールを指定することができます。さらに、ローカライズされたバンドルを定義するには、以下の 2 つの方法があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr "`@Localized` でアノテーションされたデフォルトのインターフェイスを拡張するインターフェイスを作成します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Create a UTF-8 encoded file located in the `src/main/resources/messages` directory of an application archive; e.g. `msg_de.properties`."
msgstr "アプリケーションアーカイブの `src/main/resources/messages` ディレクトリーにある UTF-8 エンコードファイルを作成します (例: `msg_de.properties`)。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "While a localized interface enables easy refactoring, an external file might be more convenient in many situations."
msgstr "ローカライズされたインターフェイスはリファクタリングを容易にしますが、外部ファイルの方が便利な場面も多いかもしれません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Localized Interface Example"
msgstr "ローカライズされたインターフェースの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The value is the locale tag string (IETF)."
msgstr "値はロケールタグ文字列(IETF)です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The value is the localized template."
msgstr "値はローカライズされたテンプレートです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Message bundle files must be encoded in _UTF-8_.\n"
"The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by a language tag (IETF; e.g. `en-US`).\n"
"The language tag may be omitted, in which case the language tag of the default bundle locale is used.\n"
"For example, if bundle `msg` has default locale `en`, then `msg.properties` is going to be treated as `msg_en.properties`.\n"
"If both `msg.properties` and `msg_en.properties` are detected, an exception is thrown and build fails.\n"
"The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).\n"
"Blank lines are ignored.\n"
"Keys are _mapped to method names_ from the corresponding message bundle interface.\n"
"Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.\n"
"A value may be spread out across several adjacent normal lines.\n"
"In such case, the line terminator must be escaped with a backslash character `\\`.\n"
"The behavior is very similar to the behavior of the `java.util.Properties.load(Reader)` method."
msgstr ""
"メッセージバンドルファイルは _UTF-8_ でエンコードされていなければなりません。\n"
"ファイル名は、関連するバンドル名 (例: `msg`) とアンダースコアで構成され、その後に言語タグ (IETF、たとえば `en-US`) が続きます。\n"
"言語タグは省略できます。その場合、デフォルトのバンドルロケールの言語タグが使用されます。\n"
"たとえば、バンドル `msg` のデフォルトロケールが `en` の場合、 `msg.properties` は `msg_en.properties` として扱われます。\n"
"`msg.properties` と `msg_en.properties` の両方が検出されると、例外がスローされ、ビルドは失敗します。\n"
"ファイル形式は非常にシンプルで、各行はキーと値のペア (等号を区切り文字として使用) またはコメント (行頭は `#`) を表します。\n"
"空行は無視されます。\n"
"キーは、対応するメッセージバンドルインターフェースから _メソッド名にマッピング_ されます。\n"
"値は、通常 `io.quarkus.qute.i18n.Message#value()` で定義されるテンプレートを表します。\n"
"値は、隣接する複数の通常行をまたぐことがあります。\n"
"その場合、行の終端をバックスラッシュ文字 `\\` でエスケープする必要があります。\n"
"動作は `java.util.Properties.load(Reader)` メソッドの動作によく似ています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Localized File Example - `msg_de.properties`"
msgstr "ローカライズされたファイルの例 - `msg_de.properties`"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Each line in a localized file represents a key/value pair. The key must correspond to a method declared on the message bundle interface. The value is the message template."
msgstr "ローカライズされたファイルの各行は、キーと値のペアを表します。キーは、メッセージバンドルインターフェイスで宣言されたメソッドに対応しなければなりません。値はメッセージテンプレートになります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Keys and values are separated by the equals sign."
msgstr "キーと値は等号で区切られています。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "We use the `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files. But in fact, the suffix could be anything - it is just ignored."
msgstr "この例では `.properties` という接尾辞を使用していますが、これはほとんどの IDE やテキストエディターが `.properties` ファイルのシンタックスハイライトをサポートしているからです。しかし、実際には接尾辞は何でもよいため、単に無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "An example properties file is generated into the target directory for each message bundle interface automatically. For example, by default if no name is specified for `@MessageBundle` the file `target/qute-i18n-examples/msg.properties` is generated when the application is build via `mvn clean package`. You can use this file as a base for a specific locale. Just rename the file - e.g. `msg_fr.properties`, change the message templates and move it in the `src/main/resources/messages` directory."
msgstr "メッセージバンドルインターフェイスごとに、ターゲットディレクトリーにサンプルのプロパティーファイルが自動的に生成されます。たとえば、デフォルトで `@MessageBundle` に名前が指定されない場合、 `mvn clean package` を用いてアプリケーションをビルドすると、 `target/qute-i18n-examples/msg.properties` というファイルが生成されます。このファイルは、特定のロケールのベースとして使用することができます。単にファイル名を変更 (例: `msg_fr.properties`) して メッセージのテンプレートを変更し、これを `src/main/resources/messages` ディレクトリーに移動します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Value Spread Out Across Several Adjacent Lines"
msgstr "複数の隣接する行にまたがる値"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Note that the line terminator is escaped with a backslash character `\\` and white space at the start of the following line is ignored. I.e. `{msg:hello('Edgar')}` would be rendered as `Hello Edgar and good morning!`."
msgstr "行の終端はバックスラッシュ文字 `\\` でエスケープされ、次の行の先頭の空白は無視されることに注意してください。つまり、 `{msg:hello('Edgar')}` は `Hello Edgar and good morning!` とレンダリングされます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Once we have the localized bundles defined, we need a way to _select_ the correct bundle for a specific template instance, i.e. to specify the locale for all message bundle expressions in the template.\n"
"By default, the locale specified via the `quarkus.default-locale` configuration property is used to select the bundle.\n"
"Alternatively, you can specify the `locale` attribute of a template instance."
msgstr ""
"ローカライズされたバンドルを定義した後、特定のテンプレートインスタンスに対して正しいバンドルを _選択_ する方法、つまりテンプレート内のすべてのメッセージバンドル式に対してロケールを指定する方法が必要です。\n"
"デフォルトでは、 `quarkus.default-locale` 設定プロパティーで指定したロケールが、バンドルの選択に使用されます。\n"
"また、テンプレートインスタンスの `locale` 属性を指定することもできます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "`locale` Attribute Example"
msgstr "`locale` 属性の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can set a `Locale` instance or a locale tag string (IETF)."
msgstr "`Locale` インスタンスかロケールタグ文字列 (IETF) をセットすることが出来ます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "When using <<rest_integration,`quarkus-rest-qute`>> (or `quarkus-resteasy-qute`) the `locale` attribute is derived from the `Accept-Language` header if not set by a user."
msgstr "<<rest_integration,`quarkus-rest-qute`>> を使用する場合にユーザーが `locale` 属性を設定していなければ、それは `Accept-Language` ヘッダーから導出されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The `@Localized` qualifier can be used to inject a localized message bundle interface."
msgstr "`@Localized` 修飾子を使用して、ローカライズされたMessage Bundleインタフェースを注入することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Injected Localized Message Bundle Example"
msgstr "注入されたローカライズされた Message Bundle例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The annotation value is a locale tag string (IETF)."
msgstr "アノテーションの値はロケールタグ文字列(IETF)です。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Enums"
msgstr "列挙"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"There is a convenient way to localize enums.\n"
"If there is a message bundle method that accepts a single parameter of an enum type and has no message template defined:"
msgstr ""
"列挙は、便利な方法でローカライズできます。\n"
"列挙型の単一のパラメーターを受け入れ、メッセージテンプレートが未定義のメッセージバンドルメソッドがある場合:"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The value is intentionally not provided. There's also no key/value pair for this method in a localized file."
msgstr "値は意図的に提供されていません。また、ローカライズされたファイルにはこのメソッドのキー/値のペアはありません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Then it receives a generated template like:"
msgstr "次に、以下のような生成されたテンプレートを受け取ります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Furthermore, a special message method is generated for each enum constant.\n"
"Finally, each localized file must contain keys and values for all enum constants:"
msgstr ""
"さらに、各列挙定数に対して特別なメッセージメソッドが生成されます。\n"
"最後に、ローカライズされた各ファイルには、すべての定数メッセージキーのキーと値が含まれている必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Message keys for enum constants"
msgstr "列挙定数のメッセージキー"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"By default, the message key consists of the method name followed by the `\\_` separator and the constant name.\n"
"If any constant name of a particular enum contains the `_` or the `$` character then the `\\_$` separator must be used for all message keys for this enum instead.\n"
"For example, `methodName_$CONSTANT_1=Value 1` or `methodName_$CONSTANT$1=Value 1`.\n"
"A constant of a localized enum may not contain the `_$` separator."
msgstr ""
"デフォルトでは、メッセージキーにはメソッド名、その後に `\\_` 区切り文字、定数名を使用して構成されます。\n"
"特定の列挙型の定数名に `_` または `$` 文字が含まれている場合、この列挙型のすべてのメッセージキーには代わりに `\\_$` 区切り文字を使用する必要があります。\n"
"たとえば、 `methodName_$CONSTANT_1 =Value 1` または `methodName_$CONSTANT$1 =Value 1` などです。\n"
"ローカライズされた列挙型の定数には、 `_$` 区切り文字を含めることはできません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "In a template, the localized message for an enum constant can be obtained with a message bundle method like `{msg:methodName(enumConstant)}`."
msgstr "テンプレートでは、列挙定数のローカライズされたメッセージは、 `{msg:methodName(enumConstant)}` のようなメッセージバンドルメソッドで取得できます。。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "There is also <<convenient-annotation-for-enums,`@TemplateEnum`>> - a convenient annotation to access enum constants in a template."
msgstr "<<convenient-annotation-for-enums,`@TemplateEnum`>> もあります。これは、テンプレート内の列挙定数にアクセスするために使用できるアノテーションです。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Message Templates"
msgstr "メッセージテンプレート"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Every method of a message bundle interface must define a message template.\n"
"The value is normally defined by `io.quarkus.qute.i18n.Message#value()`, but for convenience, there is also an option to define the value in a localized file.\n"
"Message templates are validated during the build.\n"
"If a missing message template is detected, an exception is thrown and the build fails."
msgstr ""
"メッセージバンドルインターフェースのすべてのメソッドは、メッセージテンプレートを定義する必要があります。\n"
"通常、値は `io.quarkus.qute.i18n.Message#value()` によって定義されますが、利便性のために、ローカライズされたファイル内で値を定義するオプションもあります。\n"
"メッセージテンプレートはビルド時に検証されます。\n"
"テンプレートが欠落していると検出された場合、例外が出力され、ビルドが失敗します。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Example of the Message Bundle Interface without the value"
msgstr "値のない Message Bundle Interface の例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The annotation value is not defined. In such a case, the value from supplementary localized file is taken."
msgstr "アノテーションの値が定義されていない。この場合、ローカライズされた補足ファイルの値が使用される。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The annotation value is defined and preferred to the value defined in the localized file."
msgstr "アノテーションの値は、ローカライズされたファイルに定義された値を優先して定義される。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Supplementary localized file"
msgstr "ローカライズされた補足ファイル"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The value is ignored as `io.quarkus.qute.i18n.Message#value()` is always prioritized."
msgstr "`io.quarkus.qute.i18n.Message#value()` は常に優先されるため、この値は無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"It is also possible to define a _default message template_.\n"
"The default template is only used if the `Message#value()` is not specified and no relevant message template is defined in a localized file."
msgstr ""
"_デフォルトのメッセージテンプレート_ を定義することも可能です。\n"
"デフォルトのテンプレートは、`Message#value()` が指定されておらず、ローカライズされたファイルにも該当するメッセージテンプレートが定義されていない場合にのみ使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Example of the Message Bundle Interface with a default value"
msgstr "デフォルト値があるメッセージバンドルインターフェイスの例"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The annotation value is only used if no message template is defined in a localized file."
msgstr "アノテーション値は、ローカライズされたファイルにメッセージテンプレートが定義されていない場合にのみ使用されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/qute-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Qute Used as a Standalone Library"
msgstr "スタンドアローンライブラリーとして使用する場合のQute"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"Qute is primarily designed as a Quarkus extension.\n"
"However. it is possible to use it as a \"standalone\" library.\n"
"In this case, some features are not available and some additional configuration is needed."
msgstr "Quteは、主にQuarkusのエクステンションとして設計されています。しかし、「スタンドアロン」のライブラリとして使用することも可能です。この場合、いくつかの機能は利用できず、いくつかの追加設定が必要となります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Engine"
msgstr "エンジン"

#: _versions/3.27/guides/qute-reference.adoc
msgid ""
"First, no managed `Engine` instance is available out of the box.\n"
"You'll need to configure a new instance via `Engine.builder()`."
msgstr "まず第一に、すぐに使用できるマネージド `Engine` インスタンスはありません。新しいインスタンスを `Engine.builder()` で設定する必要があります。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template locators"
msgstr "テンプレートロケーター"

#: _versions/3.27/guides/qute-reference.adoc
msgid "By default, no <<template-locator,template locators>> are registered, i.e. `Engine.getTemplate(String)` will not work."
msgstr "デフォルトでは、<<template-locator,テンプレートロケーター>> は登録されていません。つまり、 `Engine.getTemplate(String)` は機能しません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "You can register a custom template locator using `EngineBuilder.addLocator()` or parse a template manually and put the result in the cache via `Engine.putTemplate(String, Template)`."
msgstr "カスタムテンプレートロケーターは `EngineBuilder.addLocator()` を使って登録するか、テンプレートを手動で解析して、 `Engine.putTemplate(String, Template)` で結果をキャッシュに格納することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Template initializers"
msgstr "テンプレートイニシャライザー"

#: _versions/3.27/guides/qute-reference.adoc
msgid "No `TemplateInstance.Initializer` is registered by default, therefore <<global_variables,`@TemplateGlobal`>> annotations are ignored."
msgstr "デフォルトで `TemplateInstance.Initializer` は登録されていないため、<<global_variables,`@TemplateGlobal`>> アノテーションは無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A custom `TemplateInstance.Initializer` can be registered with `EngineBuilder#addTemplateInstanceInitializer()` and initialize a template instance with any data and attributes."
msgstr "カスタム `TemplateInstance.Initializer` は、 `EngineBuilder#addTemplateInstanceInitializer()` を使用して登録でき、任意のデータと属性を使用してテンプレートインスタンスを初期化できます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "No section helpers are registered by default."
msgstr "デフォルトでは、セクションヘルパーは登録されていません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultSectionHelpers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "デフォルトの値リゾルバーのセットは、便利な `EngineBuilder.addDefaultSectionHelpers()` メソッドと `EngineBuilder.addDefaults()` メソッドを介して、それぞれ登録することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Value resolvers"
msgstr "値リゾルバー"

#: _versions/3.27/guides/qute-reference.adoc
msgid "No <<value-resolvers,``ValueResolver``s>> are generated automatically."
msgstr "<<value-resolvers,``ValueResolver``s>> は自動的に生成されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "<<template_extension_methods,`@TemplateExtension` methods>> will not work."
msgstr "<<template_extension_methods,`@TemplateExtension` メソッド>> は動作しません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "<<template_data,`@TemplateData`>> and <<convenient-annotation-for-enums,`@TemplateEnum`>> annotations are ignored."
msgstr "<<template_data,`@TemplateData`>> と <<convenient-annotation-for-enums,`@TemplateEnum`>> のアノテーションは無視されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultValueResolvers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "デフォルトの値リゾルバーのセットは、便利な `EngineBuilder.addDefaultValueResolvers()` メソッドと `EngineBuilder.addDefaults()` メソッドを介して、それぞれ登録することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Not all functionality provided by the built-in extension methods is covered by the default value resolvers. However, a custom value resolver can be easily built via the `ValueResolver.builder()`."
msgstr "組み込みの拡張メソッドによって提供されるすべての機能が、デフォルトの値リゾルバーによってカバーされているわけではありません。ただし、カスタムの値リゾルバーは `ValueResolver.builder()` を使って簡単に構築することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It's recommended to register a `ReflectionValueResolver` instance via `Engine.addValueResolver(new ReflectionValueResolver())` so that Qute can access object properties and call public methods."
msgstr "Qute がオブジェクトのプロパティーにアクセスし、パブリックメソッドを呼び出せるように、 `Engine.addValueResolver (new ReflectionValueResolver())` を介して `ReflectionValueResolver` インスタンスを登録することが推奨されます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Keep in mind that reflection may not work correctly in some restricted environments or may require additional configuration, e.g. registration in case of a GraalVM native image."
msgstr "リフレクションは、一部の制限された環境では正しく動作しないか、GraalVM ネイティブイメージの場合の登録など、追加の設定が必要な場合があることに留意してください。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "No user-defined tags are registered automatically."
msgstr "ユーザー定義のタグは自動的に登録されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "A tag can be registered manually via `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()`"
msgstr "タグは、 `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()` を介して手動で登録することができます。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Type-safety"
msgstr "タイプセーフ"

#: _versions/3.27/guides/qute-reference.adoc
msgid "<<typesafe_expressions>> are not validated."
msgstr "link:#typesafe_expressions[typeafe_expressions] は検証されません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "<<type-safe-message-bundles,Type-safe message bundles>> are not supported."
msgstr "link:#type-safe-message-bundles[Type-safeメッセージバンドル]はサポートされていません。"

#: _versions/3.27/guides/qute-reference.adoc
msgid "Injection"
msgstr "インジェクション"

#: _versions/3.27/guides/qute-reference.adoc
msgid "It is not possible to inject a `Template` instance and vice versa - a template cannot inject a `@Named` CDI bean via the `inject:` and `cdi:` namespace."
msgstr "`Template` インスタンスを注入することはできませんし、その逆もできません。テンプレートは、 `inject:` および `cdi:` の名前空間を介して `@Named` CDI Bean を注入することはできません。"
