msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "gRPC code generation reference guide"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "This reference guide explains how to configure gRPC code generation. It is recommended to read the xref:grpc.adoc[official gRPC guide] first."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Enabling gRPC code generation"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "By default, `\\*.proto` files located in the `src/main/proto` directory are compiled into Java sources during the build process."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Using Maven"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "To enable gRPC code generation, add the following dependency to your project:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Next, ensure that the `generate-code` phase is enabled in the Quarkus Maven plugin:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Using Gradle"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "For Gradle, add the following dependency to your project:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Customizing the _proto_ directory"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"By default, it is assumed that the `\\*.proto` files are located in the `src/main/proto` directory.\n"
"You can configure this location using the `quarkus.grpc.codegen.proto-directory` property in your **build descriptor**."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "With Maven, add the following configuration:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "With Gradle, use the following configuration:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Generating Descriptor Set"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Protocol Buffers do not contain descriptions of their own types. Thus, given only a raw message without the corresponding .proto file defining its type, it is difficult to extract any useful data. However, the contents of a .proto file can itself be https://protobuf.dev/programming-guides/techniques/#self-description[represented using protocol buffers]."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "By default, Quarkus does not generate these descriptors. Quarkus does provide several configuration options for generating them. These would be added to your `application.properties` or `application.yml` file:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`quarkus.generate-code.grpc.descriptor-set.generate`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Set to `true` to enable generation"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`quarkus.generate-code.grpc.descriptor-set.output-dir`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Set this to a value relative to the project's build directory (i.e. `target` for Maven, `build` for Gradle)"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Maven default value: `target/generated-sources/grpc`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Gradle default value: `$buildDir/classes/java/quarkus-generated-sources/grpc`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`quarkus.generate-code.grpc.descriptor-set.name`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Name of the descriptor set file to generate"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Default value: `descriptor_set.dsc`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Configuring gRPC code generation for dependencies"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"You may have dependencies that contain `\\*.proto` files you want to compile to Java sources.\n"
"This section explains how to configure code generation to include these `\\*.proto` files during code generation."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Proto files for imports"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"The Protocol Buffers specification provides a way to import `proto` files.\n"
"The Quarkus code generation mechanism lets you control the scope of dependencies to scan for possible imports by setting the `quarkus.generate-code.grpc.scan-for-imports` property in your `application.properties`.\n"
"You can set it to one of the following values:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`all` - scan all dependencies"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`none` - don't scan dependencies, use only what is defined in `src/main/proto` or `src/test/proto`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`groupId1:artifactId1,groupId2:artifactId2` - scan only the specified dependencies by group ID and artifact ID."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"If not specified, the property defaults to `com.google.protobuf:protobuf-java`.\n"
"To override it, set the `quarkus.generate-code.grpc.scan-for-imports` property in your `application.properties`.\n"
"For example:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Proto files from dependencies"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"In some cases, you may want to use `proto` files from a different project to generate gRPC stubs.\n"
"To do this:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Add a dependency on the artifact that contains the proto file to your project."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "In `application.properties`, specify the dependencies you want to scan for proto files."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "The value of the property can be `none`, which is the default, or a comma-separated list of `groupId:artifactId` coordinates."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"If the dependency contains many proto files, and you want to generate classes for only a subset of them, you can specify glob patterns per dependency.\n"
"The paths to match are relative to the `src/main/resources` path in the dependency. For example:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Note that `:` characters in the property keys must be escaped."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Kotlin code generation"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`protoc` also supports https://protobuf.dev/reference/kotlin/kotlin-generated/[generating Kotlin code] in addition to the generated Java code."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "By default, the Kotlin code generation is enabled if the dependency `io.quarkus:quarkus-kotlin` is present."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "To explicitly en-/disable this feature, set the `quarkus.generate-code.grpc.kotlin.generate` property in your `application.properties` file to `true` or `false`."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protobuf-kotlin` needs to be included as dependency in the project."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Skipping code generation"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "You can skip gRPC code generation using:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "The `grpc.codegen.skip` system property: `-Dgrpc.codegen.skip=true`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "The `quarkus.grpc.codegen.skip` property in your `application.properties` file: `quarkus.grpc.codegen.skip=true`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Generating Java files from proto with the protobuf-maven-plugin"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"Alternatively, to generate stubs for `proto` files, you can use the `protobuf-maven-plugin`.\n"
"However, it's recommended to use Quarkus support unless you have a specific need."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "To do this, define the following properties in the `<properties>` section:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "These properties configure the gRPC version and the `protoc` version."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Then, add the `eu.maveniverse.maven.nisse:plugin3` and the `protobuf-maven-plugin` configuration to the `build` section:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "The `protobuf-maven-plugin` generates stub classes from your gRPC service definition (`proto` files)."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Class generation uses the tool `protoc`, which is OS-specific. This is why we use the Nisse Maven plugin to target the executable compatible with the operating system."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Note: This configuration instructs the `protobuf-maven-plugin` to generate default gRPC classes and classes using Mutiny to fit with the Quarkus development experience."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "When using `protobuf-maven-plugin`, instead of the `quarkus-maven-plugin`, you need to re-generate classes (using `mvn compile`) every time you update the `proto` files."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"In order for the Nisse Maven plugin to generate the correct properties, we need to make sure the `nisse.compat.osDetector` system\n"
"property is set. This can be done by adding the following `.mvn/maven.config` file:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Using generated gRPC classes from dependencies"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"When gRPC classes, which are classes generated from `proto` files, are in a dependency of the application, the dependency needs a Jandex index.\n"
"You can create a Jandex index using the `jandex-maven-plugin`.\n"
"More information on this topic can be found in the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "If you are using Gradle, you can use the following configuration:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"It is recommended to package the `proto` files in a dependency instead of the generated classes, so Quarkus can generate optimized classes.\n"
"Refer to the <<scan-for-proto, dedicated section>> for more information."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Argument files"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "When the `protoc` command line exceeds the maximum command length, you can ask Quarkus to use an argument file to pass the arguments to the `protoc` command."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "To enable this feature, set the `quarkus.generate-code.grpc.use-arg-file` property in your `application.properties` file to `true`."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "If you are on Windows, and the command line exceeds 8190 characters, Quarkus automatically uses an argument file to pass the arguments to the `protoc` command."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Local vs. Downloaded `protoc`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"To generate gRPC classes, Quarkus uses the `protoc` artifact from the `com.google.protobuf` group id.\n"
"However, to ensure the support of various platforms, Quarkus automatically downloads _all_ the possible variants of the `protoc` artifact.\n"
"In addition, Quarkus downloads both `protoc` and the plugin used to generate gRPC classes in Java.\n"
"For example, even if you are using Linux, Quarkus downloads the `protoc` and the Java plugin artifacts for Windows and MacOS."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "The next table lists the different variants of the `protoc` and plugin artifacts:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "*Platform*"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "*Classifier*"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "*Dependencies*"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Linux/ARM64"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`linux-aarch_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:linux-aarch_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:linux-aarch_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Linux/Power PC 64 bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`linux-ppcle_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:linux-ppcle_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:linux-ppcle_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Linux/S390 64 bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`linux-s390_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:linux-s390_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:linux-s390_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Linux/x86 32bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`linux-x86_32`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:linux-x86_32` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:linux-x86_32`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Linux/x86 64bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`linux-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:linux-x86_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:linux-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Mac osx/ARM64"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`osx-aarch_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:osx-aarch_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:osx-aarch_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Mac osx/x86 64bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`osx-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:osx-x86_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:osx-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Windows x86 32 bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`windows-x86_32`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:windows-x86_32` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:windows-x86_32`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Windows x86 64 bits"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`windows-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "`com.google.protobuf:protoc:VERSION:exe:windows-x86_64` and `io.grpc:protoc-gen-grpc-java:VERSION:exe:windows-x86_64`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Because of the packaging of `protoc` and the plugin (using classifier), it's not possible to exclude undesired platforms individually."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid ""
"You can, however, exclude the `protoc` dependency altogether and use the `quarkus.grpc.protoc-path` system property to configure the path to the `protoc` executable installed on your machine.\n"
"Thus, you don't need to download any `protoc` variants:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Step 1: Exclusion of `protoc`"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Step 2: Passing the `quarkus.grpc.protoc-path` property:"
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Using this approach requires to have `protoc` installed locally. It will not download any `protoc` artifact."
msgstr ""

#: _versions/3.27/guides/grpc-generation-reference.adoc
msgid "Unfortunately, this only works for `protoc` and not for the Java plugin. The Java plugin is always downloaded."
msgstr ""
