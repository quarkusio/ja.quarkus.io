msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/getting-started.adoc
msgid "Creating Your First Application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Learn how to create a Hello World Quarkus app.\n"
"This guide covers:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Bootstrapping an application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Creating a Jakarta REST endpoint"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Injecting beans"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Functional tests"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Packaging of the application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Verify Maven is using the Java you expect"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"If you have multiple JDK's installed, it is not certain Maven will pick up the expected java\n"
"and you could end up with unexpected results.\n"
"You can verify which JDK Maven uses by running `mvn --version`."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"In this guide, we create a straightforward application serving a `hello` endpoint. To demonstrate\n"
"dependency injection, this endpoint uses a `greeting` bean."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "This guide also covers the testing of the endpoint."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "We recommend that you follow the instructions from <<bootstrapping-the-project,Bootstrapping the project>> and onwards to create the application step by step."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Download an {quickstarts-archive-url}[archive] or clone the git repository:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "The solution is located in the `getting-started` link:{quickstarts-tree-url}/getting-started[directory]."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Bootstrapping the project"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "The easiest way to create a new Quarkus project is to open a terminal and run the following command:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "It generates the following in `./getting-started`:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "the Maven structure"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "an `org.acme.GreetingResource` resource exposed on `/hello`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "an associated unit test"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "a landing page that is accessible on `http://localhost:8080` after starting the application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "example `Dockerfile` files for both `native` and `jvm` modes in `src/main/docker`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "the application configuration file"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Once generated, look at the `pom.xml`.\n"
"You will find the import of the Quarkus BOM, allowing you to omit the version of the different Quarkus dependencies.\n"
"In addition, you can see the `quarkus-maven-plugin` responsible of the packaging of the application and also providing the development mode."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "In a Gradle project, you would find a similar setup:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "the Quarkus Gradle plugin"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "an `enforcedPlatform` directive for the Quarkus BOM"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "If we focus on the dependencies section, you can see the extension allowing the development of REST applications:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "The Jakarta REST resources"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "During the project creation, the `src/main/java/org/acme/GreetingResource.java` file has been created with the following content:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "It's a very simple REST endpoint, returning \"Hello from Quarkus REST\" to requests on \"/hello\"."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Differences with vanilla Jakarta REST"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"With Quarkus, there is no need to create an `Application` class. It's supported, but not required. In addition, only one instance\n"
"of the resource is created and not one per request. You can configure this using the different `*Scoped` annotations (`ApplicationScoped`, `RequestScoped`, etc)."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Running the application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Now we are ready to run our application:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Once started, you can request the provided endpoint:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Hit `CTRL+C` to stop the application, or keep it running and enjoy the blazing fast hot-reload."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Using injection"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.\n"
"If you're new to CDI then we recommend you to read the xref:cdi.adoc[Introduction to CDI] guide."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Quarkus only implements a subset of the CDI features and comes with non-standard features and specific APIS, you can learn more about it in the xref:cdi-reference.adoc[Contexts and Dependency Injection guide]."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "ArC comes as a dependency of `quarkus-rest` so you already have it handy."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Let's modify the application and add a companion bean.\n"
"Create the `src/main/java/org/acme/GreetingService.java` file with the following content:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Edit the `GreetingResource` class to inject the `GreetingService` and create a new endpoint using it:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"If you stopped the application\n"
"(keep in mind you don't have to do it, changes will be automatically deployed by our live reload feature),\n"
"restart the application with:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Then check that the endpoint returns `hello quarkus` as expected:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Development Mode"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"`quarkus:dev` runs Quarkus in development mode. This enables live reload with background compilation, which means\n"
"that when you modify your Java files and/or your resource files and refresh your browser, these changes will automatically take effect.\n"
"This works too for resource files like the configuration property file.\n"
"Refreshing the browser triggers a scan of the workspace, and if any changes are detected, the Java files are recompiled\n"
"and the application is redeployed; your request is then serviced by the redeployed application. If there are any issues\n"
"with compilation or deployment an error page will let you know."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"This will also listen for a debugger on port `5005`. If you want to wait for the debugger to attach before running you\n"
"can pass `-Dsuspend` on the command line. If you don't want the debugger at all you can use `-Ddebug=false`."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Testing"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "All right, so far so good, but wouldn't it be better with a few tests, just in case."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "In the generated build file, you can see 2 test dependencies:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Quarkus supports https://junit.org/junit5/[JUnit 5] tests."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Because of this, in the case of Maven, the version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire Maven Plugin] must be set, as the default version does not support JUnit 5:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"We also set the `java.util.logging` system property to make sure tests will use the correct log manager and `maven.home` to ensure that custom configuration\n"
"from `${maven.home}/conf/settings.xml` is applied (if any)."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"The generated project contains a simple test.\n"
"Edit the `src/test/java/org/acme/GreetingResourceTest.java` to match the following content:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "By using the `QuarkusTest` runner, you instruct JUnit to start the application before the tests."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Check the HTTP response status code and content"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "These tests use https://rest-assured.io/[RestAssured], but feel free to use your favorite library."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "You can run these using Maven:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "You can also run the test from your IDE directly (be sure you stopped the application first)."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"By default, tests will run on port `8081` so as not to conflict with the running application. We automatically\n"
"configure RestAssured to use this port. If you want to use a different client you should use the `@TestHTTPResource`\n"
"annotation to directly inject the URL of the tested application into a field on the test class. This field can be of the type\n"
"`String`, `URL` or `URI`. This annotation can also be given a value for the test path. For example, if I want to test\n"
"a Servlet mapped to `/myservlet` I would just add the following to my test:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"The test port can be controlled via the `quarkus.http.test-port` config property. Quarkus also creates a system\n"
"property called `test.url` that is set to the base test URL for situations where you cannot use injection."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Working with multi-module project or external modules"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Quarkus heavily utilizes https://github.com/smallrye/jandex[Jandex] at build time, to discover various classes or annotations. One immediately recognizable application of this, is CDI bean discovery.\n"
"As a result, most of the Quarkus extensions will not work properly if this build time discovery isn't properly setup."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "This index is created by default on the project on which Quarkus is configured for, thanks to our Maven and Gradle plugins."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"However, when working with a multi-module project, be sure to read the `Working with multi-module projects` section of the\n"
"xref:maven-tooling.adoc#multi-module-maven[Maven] or xref:gradle-tooling.adoc#multi-module-gradle[Gradle] guides."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"If you plan to use external modules (for example, an external library for all your domain objects),\n"
"you will need to make these modules known to the indexing process either by adding the Jandex plugin (if you can modify them)\n"
"or via the `quarkus.index-dependency` property inside your `application.properties` (useful in cases where you can't modify the module)."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Be sure to read the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide for more information."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Packaging and run the application"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "The application is packaged using:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "It produces several outputs in `/target`:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"`getting-started-1.0.0-SNAPSHOT.jar` - containing just the classes and resources of the projects, it's the regular\n"
"artifact produced by the Maven build - it is *not* the runnable jar;"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"the `quarkus-app` directory which contains the `quarkus-run.jar` jar file - being an executable _jar_. Be aware that it's not an _über-jar_ as\n"
"the dependencies are copied into subdirectories of `quarkus-app/lib/`."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "You can run the application using: `java -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "If you want to deploy your application somewhere (typically in a container), you need to deploy the whole `quarkus-app` directory."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Before running the application, don't forget to stop the hot reload mode (hit `CTRL+C`), or you will have a port conflict."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Configuring the banner"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"By default, when a Quarkus application starts (in regular or dev mode), it will display an ASCII art banner. The banner can be disabled by setting `quarkus.banner.enabled=false` in `application.properties`,\n"
"by setting the `-Dquarkus.banner.enabled=false` Java System Property, or by setting the `QUARKUS_BANNER_ENABLED` environment variable to `false`.\n"
"Furthermore, users can supply a custom banner by placing the banner file in `src/main/resources` and configuring `quarkus.banner.path=name-of-file` in `application.properties`."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Non Application endpoints"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"Various Quarkus extensions contribute non-application endpoints that provide different kinds of information about the application.\n"
"Examples of such extensions are the xref:smallrye-health.adoc[health], xref:telemetry-micrometer.adoc[metrics], xref:openapi-swaggerui.adoc[OpenAPI] and info extensions."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "These non application endpoints are normally accessible under the `/q` prefix like so:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "`/q/health`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "`/q/metrics`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "`/q/openapi`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "`/q/info`"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "but users can also choose to expose one that might present a security risk under a different TCP port using a dedicated xref:management-interface-reference.adoc[management interface]."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Info endpoint"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "If the application contains the `quarkus-info` extension, then Quarkus will by default expose the `/q/info` endpoint which provides information about the build, java version, version control, and operating system. The level of detail of the exposed information is configurable."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "All CDI beans implementing the `InfoContributor` will be picked up and their data will be appended to the endpoint."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "Configuration Reference"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "What's next?"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid ""
"This guide covered the creation of an application using Quarkus.\n"
"However, there is much more.\n"
"We recommend continuing the journey by creating xref:getting-started-dev-services.adoc[your second Quarkus application], with Dev Services and persistence.\n"
"You can learn about creating a native executable and packaging it in a container with the xref:building-native-image.adoc[building a native executable guide].\n"
"If you are interested in reactive, we recommend the xref:getting-started-reactive.adoc[getting started with reactive guide], where you can see how to implement reactive applications with Quarkus."
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "In addition, the xref:tooling.adoc[tooling guide] document explains how to:"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "scaffold a project in a single command line"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "enable the _development mode_ (hot reload)"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "import the project in your favorite IDE"
msgstr ""

#: _versions/3.27/guides/getting-started.adoc
msgid "and more"
msgstr ""
