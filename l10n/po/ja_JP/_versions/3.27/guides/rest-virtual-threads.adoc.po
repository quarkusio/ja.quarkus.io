msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Use virtual threads in REST applications"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"In this guide, we see how you can use virtual threads in a REST application.\n"
"Because virtual threads are all about I/O, we will also use the REST client."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"The application built into this guide is quite simple.\n"
"It calls a weather service for two cities (Valence, France, and Athens, Greece) and decides the best place based on the current temperature."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Create the Maven project"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"This command generates a new project importing the Quarkus REST (formerly RESTEasy Reactive), REST client, and https://github.com/FasterXML/jackson[Jackson] extensions,\n"
"and in particular, adds the following dependencies:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"You might wonder why we use _reactive_ extensions.\n"
"Virtual threads have limitations, and we can only integrate them properly when using the reactive extensions.\n"
"No worries: your code will be written 100% in a synchronous / imperative style."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Check the xref:./virtual-threads.adoc#why-not[virtual thread reference guide] for details."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Prepare the `pom.xml` file"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "We need to customize the `pom.xml` file to use virtual threads."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "1) Locate the line with `<maven.compiler.release>17</maven.compiler.release>`, and replace it with:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "2) In the maven-surefire-plugin and maven-failsafe-plugin configurations, add the following `argLine` parameter:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "The `-Djdk.tracePinnedThreads` will detect pinned carrier threads while running tests (See xref:./virtual-threads.adoc#pinning[the virtual thread reference guide for details])."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "--enable-preview on Java 19 and 20"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"If you are using a Java 19 or 20, add the `--enable-preview` flag in the `argLine` and as `parameters` of the maven compiler plugin.\n"
"Note that we strongly recommend Java 21."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Create the weather client"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"This section is not about virtual threads.\n"
"Because we need to do some I/O to demonstrate virtual threads usage, we need a client doing I/O operations.\n"
"In addition, the REST client is virtual thread friendly: it does not pin and handle propagation correctly."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Create the `src/main/java/org/acme/WeatherService.java` class with the following content:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"This class models the HTTP interaction with the weather service.\n"
"Read more about the rest client in the dedicated xref:./rest-client.adoc[guide]."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Create the HTTP endpoint"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Now, create the `src/main/java/org/acme/TheBestPlaceToBeResource.java` class with the following content:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Instructs Quarkus to invoke this method on a virtual thread"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Run the application in dev mode"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Make sure that you use OpenJDK and JVM versions supporting virtual thread and launch the _dev mode_ with `./mvnw quarkus:dev`:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Must be 19+, we recommend 21+"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Launch the dev mode"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"Then, in a browser, open http://localhost:8080.\n"
"You should get something like:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "As you can see, the endpoint runs on a virtual thread."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "It's essential to understand what happened behind the scene:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Quarkus creates the virtual thread to invoke your endpoint (because of the `@RunOnVirtualThread` annotation)."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "When the code invokes the rest client, the virtual thread is blocked, BUT the carrier thread is not blocked (that's the virtual thread _magic touch_)."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Once the first invocation of the rest client completes, the virtual thread is rescheduled and continues its execution."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "The second rest client invocation happens, and the virtual thread is blocked again (but not the carrier thread)."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Finally, when the second invocation of the rest client completes, the virtual thread is rescheduled and continues its execution."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "The method returns the result. The virtual thread terminates."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "The result is captured by Quarkus and written in the HTTP response"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Verify pinning using tests"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "In the `pom.xml,` we added an `argLine` argument to the surefire and failsafe plugins:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"The `-Djdk.tracePinnedThreads` dumps the stack trace if a virtual thread cannot be _unmounted_ smoothly (meaning that it blocks the carrier thread).\n"
"That's what we call _pinning_ (more info in xref:./virtual-threads.adoc#pinning[the virtual thread reference guide])."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"We recommend enabling this flag in tests.\n"
"Thus, you can check that your application behaves correctly when using virtual threads.\n"
"Just check your log after having run the test.\n"
"If you see a stack trace... better check what's wrong.\n"
"If your code (or one of your dependencies) pins, it might be better to use regular worker thread instead."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Create the `src/test/java/org/acme/TheBestPlaceToBeResourceTest.java` class with the following content:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"It is a straightforward test, but at least it will detect if our application is pinning.\n"
"Run the test with either:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "`r` in dev mode (using continuous testing)"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "`./mvnw test`"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"As you will see, it does not pin - no stack trace.\n"
"It is because the REST client is implemented in a virtual-thread-friendly way."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "The same approach can be used with integration tests."
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "Conclusion"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid ""
"This guide shows how you can use virtual threads with Quarkus REST and the REST client.\n"
"Learn more about virtual threads support on:"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "xref:./messaging-virtual-threads.adoc[@RunOnVirtualThread in messaging applications] (this guide covers Apache Kafka)"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "xref:./grpc-virtual-threads.adoc[@RunOnVirtualThread in gRPC services]"
msgstr ""

#: _versions/3.27/guides/rest-virtual-threads.adoc
msgid "xref:./virtual-threads.adoc[the virtual thread reference guide] (include native compilation and containerization)"
msgstr ""
