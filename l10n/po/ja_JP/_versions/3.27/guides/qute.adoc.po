msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/qute.adoc
msgid "Qute Templating Engine"
msgstr "Qute テンプレートエンジン"

#: _versions/3.27/guides/qute.adoc
msgid ""
"Qute is a templating engine developed specifically for Quarkus.\n"
"Reflection usage is minimized to reduce the size of native images.\n"
"The API combines both the imperative and the non-blocking reactive style of coding.\n"
"In development mode, all files located in `src/main/resources/templates` are monitored for changes, and modifications become visible immediately.\n"
"Furthermore, we aim to detect most template issues at build time.\n"
"In this guide, you will learn how to easily render templates in your application."
msgstr ""
"Qute は、Quarkus 専用に開発されたテンプレートエンジンです。\n"
"ネイティブイメージのサイズを縮小するために、リフレクションの使用は最小限に抑えられています。\n"
"API は、命令型とノンブロッキングリアクティブ型の両方のコーディングスタイルを組み合わせています。\n"
"開発モードでは、`src/main/resources/templates` にあるすべてのファイルの変更が監視され、変更はすぐに表示されます。\n"
"さらに、ほとんどのテンプレートの問題をビルド時に検出することを目指しています。\n"
"このガイドでは、アプリケーションでテンプレートを簡単にレンダリングする方法を説明します。"

#: _versions/3.27/guides/qute.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/qute.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/qute.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/qute.adoc
msgid "The solution is located in the `qute-quickstart` link:{quickstarts-tree-url}/qute-quickstart[directory]."
msgstr "ソリューションは `qute-quickstart` link:{quickstarts-tree-url}/qute-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/qute.adoc
msgid "Serving Qute templates via HTTP"
msgstr "HTTP 経由での Qute テンプレートの提供"

#: _versions/3.27/guides/qute.adoc
msgid "If you want to serve your templates via HTTP:"
msgstr "テンプレートを HTTP 経由で提供する場合:"

#: _versions/3.27/guides/qute.adoc
msgid "The Qute Web extension allows you to directly serve via HTTP templates located in `src/main/resources/templates/pub/`. In that case you don't need any Java code to \"plug\" the template, for example, the template `src/main/resources/templates/pub/foo.html` will be served from the paths `/foo` and `/foo.html` by default."
msgstr "Qute Web エクステンションを使用すると、`src/main/resources/templates/pub/` にある HTTP テンプレートを介して直接提供できます。その場合、テンプレートを \"接続\" するための Java コードは必要ありません。たとえば、テンプレート `src/main/resources/templates/pub/foo.html` は、デフォルトでパス `/foo` および `/foo.html` から提供されます。"

#: _versions/3.27/guides/qute.adoc
msgid "For finer control, you can combine it with Quarkus REST to control how your template will be served. All files located in the `src/main/resources/templates` directory and its subdirectories are registered as templates and can be injected in a REST resource."
msgstr "より細かく制御するには、Quarkus REST と組み合わせて、テンプレートの提供方法を制御できます。`src/main/resources/templates` ディレクトリーとそのサブディレクトリーにあるすべてのファイルは、テンプレートとして登録され、REST リソースに注入できます。"

#: _versions/3.27/guides/qute.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/qute.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/qute.adoc
msgid "The Qute Web extension, while hosted in the Quarkiverse, is part of the Quarkus Platform and its version is defined in the Quarkus Platform BOM."
msgstr "Quarkiverse でホストされている Qute Web エクステンションは、Quarkus プラットフォームの一部であり、そのバージョンは Quarkus プラットフォーム BOM で定義されています。"

#: _versions/3.27/guides/qute.adoc
msgid "Serving Hello World with Qute"
msgstr "Qute を使用した Hello World の提供"

#: _versions/3.27/guides/qute.adoc
msgid "Let's start with a Hello World template:"
msgstr "まずは Hello World テンプレートから始めましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "src/main/resources/templates/pub/hello.html"
msgstr "src/main/resources/templates/pub/hello.html"

#: _versions/3.27/guides/qute.adoc
msgid "`{http:param('name', 'Quarkus')}` is an expression that is evaluated when the template is rendered (Quarkus is the default value)."
msgstr "`{http:param('name', 'Quarkus')}` は、テンプレートがレンダリングされるときに評価される式です (Quarkus がデフォルト値です)。"

#: _versions/3.27/guides/qute.adoc
msgid "Templates located in the `pub` directory are served via HTTP. This behavior is built-in, no controllers are needed. For example, the template `src/main/resources/templates/pub/foo.html` will be served from the paths `/foo` and `/foo.html` by default."
msgstr "`pub` ディレクトリーにあるテンプレートは、HTTP 経由で提供されます。この動作は組み込みであり、コントローラーは必要ありません。たとえば、テンプレート `src/main/resources/templates/pub/foo.html` は、デフォルトではパス `/foo` と `/foo.html` から提供されます。"

#: _versions/3.27/guides/qute.adoc
msgid "Once your application is running, you can open your browser and navigate to: http://localhost:8080/hello?name=Martin"
msgstr "アプリケーションが実行されたら、ブラウザーを開いてアドレス http://localhost:8080/hello?name=Martin に移動します。"

#: _versions/3.27/guides/qute.adoc
msgid "For more information about Qute Web options, see the https://docs.quarkiverse.io/quarkus-qute-web/dev/index.html[Qute Web guide]."
msgstr "Qute Web オプションの詳細は、https://docs.quarkiverse.io/quarkus-qute-web/dev/index.html[Qute Web ガイド] を参照してください。"

#: _versions/3.27/guides/qute.adoc
msgid "Hello Qute and REST"
msgstr "Hello Qute と REST"

#: _versions/3.27/guides/qute.adoc
#, fuzzy
msgid "For finer control, you can combine Qute Web with Quarkus REST (formerly RESTEasy Reactive) or the legacy RESTEasy Classic-based extension to control how your template will be served"
msgstr "Qute WebをQuarkus REST（旧RESTEasy Reactive）または従来のRESTEasy Classicベースの拡張機能と組み合わせることで、テンプレートの配信方法をより細かく制御できます。"

#: _versions/3.27/guides/qute.adoc
#, fuzzy
msgid "Using the `quarkus-rest-qute` extension:"
msgstr "`quarkus-rest-qute` ："

#: _versions/3.27/guides/qute.adoc
msgid "A very simple text template:"
msgstr "非常にシンプルなテキストテンプレート:"

#: _versions/3.27/guides/qute.adoc
msgid "hello.txt"
msgstr "hello.text"

#: _versions/3.27/guides/qute.adoc
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr "`{name}` は、テンプレートがレンダリングされたときに評価される値の式です。"

#: _versions/3.27/guides/qute.adoc
msgid "Now let's inject the \"compiled\" template in the resource class."
msgstr "では、リソースクラスに「コンパイル済み」テンプレートを注入してみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource.java"
msgstr "HelloResource.java"

#: _versions/3.27/guides/qute.adoc
msgid "If there is no `@Location` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "`@Location` の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/hello.txt` であるテンプレートを注入しています。"

#: _versions/3.27/guides/qute.adoc
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr "`Template.data()` は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、名前の値をキー `name` の下に置きます。データマップはレンダリング中にアクセス可能です。"

#: _versions/3.27/guides/qute.adoc
#, fuzzy
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation provided by `quarkus-rest-qute`."
msgstr "私たちはレンダリングをトリガーしていないことに注意してください - これは `quarkus-rest-qute` によって提供される特別な `ContainerResponseFilter` 実装によって自動的に行われます。"

#: _versions/3.27/guides/qute.adoc
msgid "If your application is running, you can request the endpoint:"
msgstr "アプリケーションが動作している場合は、エンドポイントを要求することができます:"

#: _versions/3.27/guides/qute.adoc
msgid "Type-safe templates"
msgstr "タイプセーフテンプレート"

#: _versions/3.27/guides/qute.adoc
msgid "There's an alternate way to declare your templates in your Java code, which relies on the following convention:"
msgstr "Java コードでテンプレートを宣言する別の方法もあり、以下の規約に依存しています。"

#: _versions/3.27/guides/qute.adoc
msgid ""
"Organize your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if\n"
"your `FruitResource` class references two templates `apples` and `oranges`, place them at `/src/main/resources/templates/FruitResource/apples.txt`\n"
"and `/src/main/resources/templates/FruitResource/oranges.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr ""
"テンプレートファイルを `/src/main/resources/templates` ディレクトリーに整理し、リソースクラスごとに 1 つのディレクトリーにグループ化します。\n"
"`FruitResource` クラスが `apples` と `oranges` の 2 つのテンプレートを参照している場合は、これらを `/src/main/resources/templates/FruitResource/apples.txt` と `/src/main/resources/templates/FruitResource/oranges.txt` に配置します。リソースクラスごとにテンプレートをグループ化すると、テンプレートへの移動が容易になります。"

#: _versions/3.27/guides/qute.adoc
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "各リソースクラスで、リソースクラス内で `@CheckedTemplate static class Template {}` クラスを宣言します。"

#: _versions/3.27/guides/qute.adoc
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "リ ソ ース のテ ン プ レー ト フ ァ イ ルごとに `public static native TemplateInstance method();` を 1 つずつ宣言 し ます。"

#: _versions/3.27/guides/qute.adoc
msgid "Use those static methods to build your template instances."
msgstr "テンプレートインスタンスを構築するには、これらの静的メソッドを使用します。"

#: _versions/3.27/guides/qute.adoc
msgid "Here's the previous example, rewritten using this style:"
msgstr "先ほどの例を、このスタイルで書き換えてみました:"

#: _versions/3.27/guides/qute.adoc
msgid "We'll start with a very simple template:"
msgstr "まずはとてもシンプルなテンプレートから:"

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource/hello.txt"
msgstr "HelloResource/hello.txt"

#: _versions/3.27/guides/qute.adoc
msgid "Now let's declare and use this template in the resource class."
msgstr "次に、このテンプレートをリソースクラスで宣言して使用してみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "This declares a template with path `templates/HelloResource/hello`."
msgstr "これは、パス `templates/HelloResource/hello.txt` でテンプレートを宣言します。"

#: _versions/3.27/guides/qute.adoc
#, fuzzy
msgid "`Templates.hello()` returns a new template instance that is returned from the resource method. Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation provided by `quarkus-rest-qute`."
msgstr "`Templates.hello()` はリソースメソッドから返された新しいテンプレートインスタンスを返します。私たちはレンダリングをトリガーしないことに注意してください - これは が提供する特別な 実装によって自動的に行われます。 `quarkus-rest-qute` `ContainerResponseFilter` "

#: _versions/3.27/guides/qute.adoc
msgid "Once you have declared a `@CheckedTemplate` class, we will check that all its methods point to existing templates, so if you try to use a template from your Java code and you forgot to add it, we will let you know at build time :)"
msgstr "`@CheckedTemplate` クラスを宣言したら、すべてのメソッドが既存のテンプレートを指しているかどうかをチェックしますので、もし Java コードからテンプレートを使おうとして追加するのを忘れてしまった場合は、ビルド時にお知らせします :)"

#: _versions/3.27/guides/qute.adoc
msgid "Keep in mind this style of declaration allows you to reference templates declared in other resources too:"
msgstr "このスタイルの宣言では、他のリソースで宣言されたテンプレートも参照できることを覚えておいてください。"

#: _versions/3.27/guides/qute.adoc
msgid "GreetingResource.java"
msgstr "GreetingResource.java"

#: _versions/3.27/guides/qute.adoc
msgid "Top-level type-safe templates"
msgstr "トップレベルのタイプセーフテンプレート"

#: _versions/3.27/guides/qute.adoc
msgid ""
"Naturally, if you want to declare templates at the top-level, directly in `/src/main/resources/templates/hello.txt`, for example,\n"
"you can declare them in a top-level (non-nested) `Templates` class:"
msgstr "当然のことながら、トップレベルでテンプレートを宣言したい場合、例えば `/src/main/resources/templates/hello.txt` で直接宣言したい場合は、トップレベル(非入れ子)の `Templates` クラスで宣言することができます:"

#: _versions/3.27/guides/qute.adoc
msgid "This declares a template with path `templates/hello`."
msgstr "これは、パス `templates/hello.txt` でテンプレートを宣言します。"

#: _versions/3.27/guides/qute.adoc
msgid "Template Parameter Declarations"
msgstr "テンプレートパラメーター宣言"

#: _versions/3.27/guides/qute.adoc
msgid "If you declare a *parameter declaration* in a template then Qute attempts to validate all expressions that reference this parameter and if an incorrect expression is found the build fails."
msgstr "テンプレートで *パラメーター宣言* を宣言した場合、Quteはこのパラメーターを参照するすべての式の検証を試み、間違った式が見つかった場合はビルドが失敗します。"

#: _versions/3.27/guides/qute.adoc
msgid "Let's suppose we have a simple class like this:"
msgstr "このようなシンプルなクラスがあったとしましょう:"

#: _versions/3.27/guides/qute.adoc
msgid "Item.java"
msgstr "Item.java"

#: _versions/3.27/guides/qute.adoc
msgid "And we'd like to render a simple HTML page that contains the item name and price."
msgstr "そして、商品名と価格が記載されたシンプルな HTML ページをレンダリングしたいと思います。"

#: _versions/3.27/guides/qute.adoc
msgid "Let's start again with the template:"
msgstr "改めてテンプレートから始めてみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "ItemResource/item.html"
msgstr "ItemResource/item.html"

#: _versions/3.27/guides/qute.adoc
msgid "This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail."
msgstr "この式は検証済みです。式を `{item.nonSense}` に変更するとビルドに失敗します。"

#: _versions/3.27/guides/qute.adoc
msgid "This is also validated."
msgstr "これも検証されています。"

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a resource class with type-safe templates:"
msgstr "最後に、タイプセーフなテンプレートを使ってリソースクラスを作ってみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "ItemResource.java"
msgstr "ItemResource.java"

#: _versions/3.27/guides/qute.adoc
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr "`templates/ItemResource/item.html` に対して `TemplateInstance` を与えるメソッドを宣言し、その `Item item` パラメーターを宣言することで、テンプレートを検証することができます。"

#: _versions/3.27/guides/qute.adoc
msgid "Make the `Item` object accessible in the template."
msgstr "テンプレート内で `Item` オブジェクトにアクセスできるようにします。"

#: _versions/3.27/guides/qute.adoc
msgid "When the `--parameters` compiler argument is enabled, Quarkus REST may infer the parameter names from the method argument names, making the `@PathParam(\"id\")` annotation optional in this case."
msgstr "`--parameters` コンパイラ引数が有効な場合、Quarkus REST はメソッドの引数名からパラメータ名を推測することができるため、この場合 `@PathParam(\"id\")` アノテーションはオプションになります。"

#: _versions/3.27/guides/qute.adoc
msgid "Template parameter declaration inside the template itself"
msgstr "テンプレート内部のテンプレートパラメーター宣言"

#: _versions/3.27/guides/qute.adoc
msgid "Alternatively, you can declare your template parameters in the template file itself."
msgstr "あるいは、テンプレートファイル自体でテンプレートパラメーターを宣言することもできます。"

#: _versions/3.27/guides/qute.adoc
msgid "item.html"
msgstr "item.html"

#: _versions/3.27/guides/qute.adoc
msgid "Optional parameter declaration. Qute attempts to validate all expressions that reference the parameter `item`."
msgstr "オプションのパラメーター宣言。Qute は、パラメーター `item` を参照するすべての式の検証を試みます。"

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a resource class."
msgstr "最後に、リソースクラスを作成してみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "Inject the template with path `templates/item.html`."
msgstr "パスが `templates/item.html` のテンプレートを注入します。"

#: _versions/3.27/guides/qute.adoc
msgid "Template Extension Methods"
msgstr "テンプレート拡張メソッド"

#: _versions/3.27/guides/qute.adoc
msgid "*Template extension methods* are used to extend the set of accessible properties of data objects."
msgstr "*テンプレート拡張メソッド* は 、データオブジェクトのアクセス可能なプロパティーのセットを拡張するために使用されます。\n"

#: _versions/3.27/guides/qute.adoc
msgid ""
"Sometimes, you're not in control of the classes that you want to use in your template, and you cannot add methods\n"
"to them. Template extension methods allow you to declare new methods for those classes that will be available\n"
"from your templates just as if they belonged to the target class."
msgstr "場合によっては、テンプレートで使用するクラスを制御できず、そのクラスにメソッドを追加できないことがあります。テンプレート拡張メソッドを使用すると、テンプレートから利用できるようになるクラスの新しいメソッドを、あたかもターゲットクラスに属しているかのように宣言できます。"

#: _versions/3.27/guides/qute.adoc
msgid ""
"Let's keep extending on our simple HTML page that contains the item name, price and add a discounted price.\n"
"The discounted price is sometimes called a \"computed property\".\n"
"We will implement a template extension method to render this property easily.\n"
"Let's update our template:"
msgstr "アイテム名、価格、値引き価格を含むシンプルな HTML ページを拡張していきましょう。値引き価格は「計算プロパティー」と呼ばれることがあります。このプロパティーを簡単にレンダリングするためのテンプレート拡張メソッドを実装します。テンプレートを更新してみましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource/item.html"
msgstr "HelloResource/item.html"

#: _versions/3.27/guides/qute.adoc
msgid "`if` is a basic control flow section."
msgstr "`if` は、基本的な制御フローのセクションです。"

#: _versions/3.27/guides/qute.adoc
msgid "This expression is also validated against the `Item` class and obviously there is no such property declared. However, there is a template extension method declared on the `TemplateExtensions` class - see below."
msgstr "この式は `Item` クラスに対しても検証されており、明らかにそのようなプロパティーは宣言されていません。しかし、 `TemplateExtensions` クラスにはテンプレート拡張メソッドが宣言されています - 以下を参照してください。"

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a class where we put all our extension methods:"
msgstr "最後に、すべての拡張メソッドを置くクラスを作りましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "TemplateExtensions.java"
msgstr "TemplateExtensions.java"

#: _versions/3.27/guides/qute.adoc
msgid "A static template extension method can be used to add \"computed properties\" to a data class. The class of the first parameter is used to match the base object and the method name is used to match the property name."
msgstr "静的テンプレート拡張メソッドを使用して、データクラスに「計算プロパティー」を追加することができます。最初のパラメーターのクラスはベースオブジェクトと一致するように使用され、メソッド名はプロパティー名と一致するように使用されます。"

#: _versions/3.27/guides/qute.adoc
msgid ""
"you can place template extension methods in every class if you annotate them with `@TemplateExtension` but we advise to keep them either\n"
"grouped by target type, or in a single `TemplateExtensions` class by convention."
msgstr "テンプレート拡張メソッドは、 `@TemplateExtension` でアノテーションを付ければ、すべてのクラスに配置することができますが、規約上、ターゲットタイプでグループ化するか、 `TemplateExtensions` クラスにまとめておくことをお勧めします。"

#: _versions/3.27/guides/qute.adoc
msgid "Rendering Periodic Reports"
msgstr "定期レポートのレンダリング"

#: _versions/3.27/guides/qute.adoc
msgid ""
"The templating engine can also be very useful for rendering periodic reports.\n"
"You'll need to add the `quarkus-scheduler` and `quarkus-qute` extensions first.\n"
"In your `pom.xml` file, add:"
msgstr ""
"テンプレートエンジンは、定期的なレポートをレンダリングする場合にも非常に便利なことがあります。\n"
"まず `quarkus-scheduler` および `quarkus-qute` エクステンションを追加する必要があります。\n"
"`pom.xml` ファイルに以下を追加します。"

#: _versions/3.27/guides/qute.adoc
msgid "Let's suppose we have a `SampleService` bean whose `get()` method returns a list of samples."
msgstr "`SampleService` Beanがあり、その `get()` メソッドがサンプルのリストを返すとしましょう。"

#: _versions/3.27/guides/qute.adoc
msgid "Sample.java"
msgstr "Sample.java"

#: _versions/3.27/guides/qute.adoc
msgid "The template is simple:"
msgstr "テンプレートはシンプルです:"

#: _versions/3.27/guides/qute.adoc
msgid "report.html"
msgstr "report.html"

#: _versions/3.27/guides/qute.adoc
msgid "The loop section makes it possible to iterate over iterables, maps and streams."
msgstr "ループセクションでは、イテレーション、マップ、ストリームの反復処理が可能になります。"

#: _versions/3.27/guides/qute.adoc
msgid "This value expression is using the https://en.wikipedia.org/wiki/Elvis_operator[elvis operator] - if the name is null the default value is used."
msgstr "この値式は link:https://en.wikipedia.org/wiki/Elvis_operator[elvis 演算子] を使用します - nameが NULL の場合はデフォルト値が使用されます。"

#: _versions/3.27/guides/qute.adoc
msgid "ReportGenerator.java"
msgstr "ReportGenerator.java"

#: _versions/3.27/guides/qute.adoc
msgid "In this case, we use the `@Location` qualifier to specify the template path: `templates/reports/v1/report_01.html`."
msgstr "この場合、 `@Location` 修飾子を使用してテンプレートのパスを指定します: `templates/reports/v1/report_01.html` ."

#: _versions/3.27/guides/qute.adoc
msgid "Use the `@Scheduled` annotation to instruct Quarkus to execute this method on the half hour. For more information see the xref:scheduler.adoc[Scheduler] guide."
msgstr "`@Scheduled` アノテーションを使用して、Quarkusにこのメソッドを30分毎に実行するよう指示します。詳細については、 link:scheduler[スケジューラーガイド] を参照してください。"

#: _versions/3.27/guides/qute.adoc
msgid "The `TemplateInstance.render()` method triggers rendering. Note that this method blocks the current thread."
msgstr "`TemplateInstance.render()` メソッドはレンダリングをトリガします。このメソッドは現在のスレッドをブロックすることに注意してください。"

#: _versions/3.27/guides/qute.adoc
msgid "Qute Reference Guide"
msgstr "Qute リファレンスガイド"

#: _versions/3.27/guides/qute.adoc
msgid "To learn more about Qute, please refer to the xref:qute-reference.adoc[Qute reference guide]."
msgstr "Qute について詳しく知りたい方は、 link:qute-reference[Qute リファレンスガイド] を参考にしてください。"

#: _versions/3.27/guides/qute.adoc
msgid "Qute Configuration Reference"
msgstr "Qute 設定リファレンス"

#: _versions/3.27/guides/qute.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
