msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/qute.adoc
msgid "Qute Templating Engine"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"Qute is a templating engine developed specifically for Quarkus.\n"
"Reflection usage is minimized to reduce the size of native images.\n"
"The API combines both the imperative and the non-blocking reactive style of coding.\n"
"In development mode, all files located in `src/main/resources/templates` are monitored for changes, and modifications become visible immediately.\n"
"Furthermore, we aim to detect most template issues at build time.\n"
"In this guide, you will learn how to easily render templates in your application."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The solution is located in the `qute-quickstart` link:{quickstarts-tree-url}/qute-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Serving Qute templates via HTTP"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "If you want to serve your templates via HTTP:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The Qute Web extension allows you to directly serve via HTTP templates located in `src/main/resources/templates/pub/`. In that case you don't need any Java code to \"plug\" the template, for example, the template `src/main/resources/templates/pub/foo.html` will be served from the paths `/foo` and `/foo.html` by default."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "For finer control, you can combine it with Quarkus REST to control how your template will be served. All files located in the `src/main/resources/templates` directory and its subdirectories are registered as templates and can be injected in a REST resource."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The Qute Web extension, while hosted in the Quarkiverse, is part of the Quarkus Platform and its version is defined in the Quarkus Platform BOM."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Serving Hello World with Qute"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Let's start with a Hello World template:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "src/main/resources/templates/pub/hello.html"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "`{http:param('name', 'Quarkus')}` is an expression that is evaluated when the template is rendered (Quarkus is the default value)."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Templates located in the `pub` directory are served via HTTP. This behavior is built-in, no controllers are needed. For example, the template `src/main/resources/templates/pub/foo.html` will be served from the paths `/foo` and `/foo.html` by default."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Once your application is running, you can open your browser and navigate to: http://localhost:8080/hello?name=Martin"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "For more information about Qute Web options, see the https://docs.quarkiverse.io/quarkus-qute-web/dev/index.html[Qute Web guide]."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Hello Qute and REST"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "For finer control, you can combine Qute Web with Quarkus REST (formerly RESTEasy Reactive) or the legacy RESTEasy Classic-based extension to control how your template will be served"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Using the `quarkus-rest-qute` extension:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "A very simple text template:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "hello.txt"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Now let's inject the \"compiled\" template in the resource class."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "If there is no `@Location` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation provided by `quarkus-rest-qute`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "If your application is running, you can request the endpoint:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Type-safe templates"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "There's an alternate way to declare your templates in your Java code, which relies on the following convention:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"Organize your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if\n"
"your `FruitResource` class references two templates `apples` and `oranges`, place them at `/src/main/resources/templates/FruitResource/apples.txt`\n"
"and `/src/main/resources/templates/FruitResource/oranges.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Use those static methods to build your template instances."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Here's the previous example, rewritten using this style:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "We'll start with a very simple template:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource/hello.txt"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Now let's declare and use this template in the resource class."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This declares a template with path `templates/HelloResource/hello`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "`Templates.hello()` returns a new template instance that is returned from the resource method. Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation provided by `quarkus-rest-qute`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Once you have declared a `@CheckedTemplate` class, we will check that all its methods point to existing templates, so if you try to use a template from your Java code and you forgot to add it, we will let you know at build time :)"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Keep in mind this style of declaration allows you to reference templates declared in other resources too:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "GreetingResource.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Top-level type-safe templates"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"Naturally, if you want to declare templates at the top-level, directly in `/src/main/resources/templates/hello.txt`, for example,\n"
"you can declare them in a top-level (non-nested) `Templates` class:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This declares a template with path `templates/hello`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Template Parameter Declarations"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "If you declare a *parameter declaration* in a template then Qute attempts to validate all expressions that reference this parameter and if an incorrect expression is found the build fails."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Let's suppose we have a simple class like this:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Item.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "And we'd like to render a simple HTML page that contains the item name and price."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Let's start again with the template:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "ItemResource/item.html"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This is also validated."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a resource class with type-safe templates:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "ItemResource.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Make the `Item` object accessible in the template."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "When the `--parameters` compiler argument is enabled, Quarkus REST may infer the parameter names from the method argument names, making the `@PathParam(\"id\")` annotation optional in this case."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Template parameter declaration inside the template itself"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Alternatively, you can declare your template parameters in the template file itself."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "item.html"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Optional parameter declaration. Qute attempts to validate all expressions that reference the parameter `item`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a resource class."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Inject the template with path `templates/item.html`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Template Extension Methods"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "*Template extension methods* are used to extend the set of accessible properties of data objects."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"Sometimes, you're not in control of the classes that you want to use in your template, and you cannot add methods\n"
"to them. Template extension methods allow you to declare new methods for those classes that will be available\n"
"from your templates just as if they belonged to the target class."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"Let's keep extending on our simple HTML page that contains the item name, price and add a discounted price.\n"
"The discounted price is sometimes called a \"computed property\".\n"
"We will implement a template extension method to render this property easily.\n"
"Let's update our template:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "HelloResource/item.html"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "`if` is a basic control flow section."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This expression is also validated against the `Item` class and obviously there is no such property declared. However, there is a template extension method declared on the `TemplateExtensions` class - see below."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Finally, let's create a class where we put all our extension methods:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "TemplateExtensions.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "A static template extension method can be used to add \"computed properties\" to a data class. The class of the first parameter is used to match the base object and the method name is used to match the property name."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"you can place template extension methods in every class if you annotate them with `@TemplateExtension` but we advise to keep them either\n"
"grouped by target type, or in a single `TemplateExtensions` class by convention."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Rendering Periodic Reports"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid ""
"The templating engine can also be very useful for rendering periodic reports.\n"
"You'll need to add the `quarkus-scheduler` and `quarkus-qute` extensions first.\n"
"In your `pom.xml` file, add:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Let's suppose we have a `SampleService` bean whose `get()` method returns a list of samples."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Sample.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The template is simple:"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "report.html"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The loop section makes it possible to iterate over iterables, maps and streams."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "This value expression is using the https://en.wikipedia.org/wiki/Elvis_operator[elvis operator] - if the name is null the default value is used."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "ReportGenerator.java"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "In this case, we use the `@Location` qualifier to specify the template path: `templates/reports/v1/report_01.html`."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Use the `@Scheduled` annotation to instruct Quarkus to execute this method on the half hour. For more information see the xref:scheduler.adoc[Scheduler] guide."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "The `TemplateInstance.render()` method triggers rendering. Note that this method blocks the current thread."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Qute Reference Guide"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "To learn more about Qute, please refer to the xref:qute-reference.adoc[Qute reference guide]."
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "Qute Configuration Reference"
msgstr ""

#: _versions/3.27/guides/qute.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
