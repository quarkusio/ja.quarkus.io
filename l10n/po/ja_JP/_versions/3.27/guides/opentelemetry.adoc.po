msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Using OpenTelemetry"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] (OTel) to provide\n"
"Observability for interactive web applications."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "On these page we show the signal independent features of the extension."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This document is part of the xref:observability.adoc[Observability in Quarkus reference guide] which features this and other observability related components."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The old OpenTelemetry guide has been split into this generic guide, the xref:opentelemetry-tracing.adoc[OpenTelemetry Tracing Guide], the new xref:opentelemetry-metrics.adoc[OpenTelemetry Metrics Guide] and the xref:opentelemetry-logging.adoc[OpenTelemetry Logging Guide]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The use of *the https://opentelemetry.io/docs/instrumentation/java/automatic/[OpenTelemetry Agent] is not needed nor recommended*. Quarkus Extensions and the libraries they provide, are directly instrumented. That agent doesn't work with native mode."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Introduction"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "https://opentelemetry.io/docs/what-is-opentelemetry/[OpenTelemetry] is an Observability framework and toolkit designed to create and manage telemetry data such as traces, metrics, and logs. Crucially, OpenTelemetry is vendor- and tool-agnostic."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Quarkus provides manual and automatic instrumentation for tracing and manual instrumentation capabilities for metrics."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This will allow Quarkus based applications to be observable by tools and services supporting OpenTelemetry."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Automatic metrics instrumentation in Quarkus is done by the xref:telemetry-micrometer.adoc[Quarkus Micrometer extension]. We plan to provide, in the future, a bridge for those metrics to be available in OpenTelemetry as well."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"Quarkus supports the OpenTelemetry Autoconfiguration. The configurations match what you can see at\n"
"https://opentelemetry.io/docs/languages/java/configuration/[OpenTelemetry SDK Autoconfigure]\n"
"with the `quarkus.*` prefix."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This guide provides a crosscutting explanation of the OpenTelemetry extension and how to use it. If you need details about any particular signal (tracing or metrics), please refer to the signal specific guide."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "With the introduction of OpenTelemetry Metrics, the original, single page guide had to be split according to signal types, as follows:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "xref:opentelemetry-tracing.adoc[OpenTelemetry Tracing Guide]"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The tracing functionality is supported and *on* by default."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "xref:opentelemetry-metrics.adoc[OpenTelemetry Metrics Guide]"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Enable Metrics"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The metrics functionality is experimental and *off* by default. You will need to activate it by setting:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "At build time on your `application.properties` file."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "xref:opentelemetry-logging.adoc[OpenTelemetry Logging Guide]"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Enable Logs"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The logging functionality is experimental and *off* by default. You will need to activate it by setting:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Using the extension"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"If you already have your Quarkus project, you can add the `quarkus-opentelemetry` extension\n"
"to it by running the following command in your project base directory:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This will add the following to your build file:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Create the configuration"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Disable all or parts of the OpenTelemetry extension"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "Once you add the dependency, the extension will generate tracing data by default. To enable metrics or disable the OpenTelemetry extension globally or partially these are the properties to use (they are extracted from the config reference below):"
msgstr "依存関係を追加すると、拡張機能はデフォルトでトレースデータを生成します。OpenTelemetry エクステンションをグローバルに、あるいは部分的に有効にしたり無効にしたりするには、以下のプロパティを使用します (以下の config リファレンスから抜粋しています)："

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Affected Signal"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Property name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Default value"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Description"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "All"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "true"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "If false, disable the OpenTelemetry usage at *build* time."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.sdk.disabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "false"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Comes from the OpenTelemetry autoconfiguration. If true, will disable the OpenTelemetry SDK usage at *runtime*."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "All output"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.exporter.otlp.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"Deprecated for removal.\n"
"\n"
"If false will disable the default OTLP exporter at *build* time."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Traces"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.traces.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "If false, disable the OpenTelemetry tracing usage at *build* time."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Traces output"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.traces.exporter`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "cdi"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "List of exporters to be used for tracing, separated by commas. Has one of the values from _ExporterType_: `otlp`, `cdi`, `none`. This is a *build* time property and setting it to `none` will disable tracing data output."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Metrics"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.metrics.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Metrics are disabled by default at *build* time because they are experimental."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Metrics output"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.metrics.exporter`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "List of exporters to be used for metrics, separated by commas. Has one of the values from _ExporterType_: `otlp`, `cdi`, `none`. This is a *build* time property and setting it to `none` will disable metrics data output."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Logs"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.logs.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Logs are disabled by default at *build* time because they are experimental."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Logs output"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.logs.exporter`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "List of exporters to be used for logs, separated by commas. Has one of the values from _ExporterType_: `otlp`, `cdi`, `none`. This is a *build* time property and setting it to `none` will disable logs data output."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "`quarkus.otel.logs.handler.enabled`"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "If false, disable the OpenTelemetry logs handler at *runtime*. This removes the bridge between the Quarkus logging system (JBoss LogManager) and OpenTelemetry logs."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "If you need to enable or disable the exporter at runtime, you can use the xref:opentelemetry-tracing.adoc#sampler[sampler] because it has the ability to filter out all the spans if needed."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Particular instrumentation components can be disabled in tracing, like ignore client requests but keep server ones. For more details, please check the xref:opentelemetry-tracing.adoc[OpenTelemetry Tracing Guide]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Resource"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation\n"
"of the entity that is producing telemetry, it adds attributes to the exported trace or metric to characterize who is producing the telemetry. Quarkus follows the https://opentelemetry.io/docs/languages/java/configuration/#resources[resources auto-configuration] specified by the Java OpenTelemetry SDK."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Default"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "The following attributes are added by default to resources."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Attribute name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Content example"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Origin"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "service.name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"opentelemetry-quickstart\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Value comes from the artifactId, from the `quarkus.application.name` property or from `quarkus.otel.resource.attributes=service.name=cart` property."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "host.name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"myHost\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Resolved at startup"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "service.version"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"1.0-SNAPSHOT\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Resolved at build time from the artifact version"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "telemetry.sdk.language"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"java\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Static value"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "telemetry.sdk.name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"opentelemetry\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Resolved at build time"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "telemetry.sdk.version"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"1.32.0\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "webengine.name"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"Quarkus\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "webengine.version"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "\"999-SNAPSHOT\""
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Quarkus version resolved at build time"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Using configuration"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"You can add additional attributes by setting the `quarkus.otel.resource.attributes` config property that is described in the <<configuration-reference>>.\n"
"Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that\n"
"is described in the xref:config-reference.adoc#configuration-sources[Quarkus Configuration Reference]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This will add the attributes for `deployment.environment`, `service.name` and `service.namespace` to the resource and be included in traces and metrics."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Using CDI beans"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid ""
"If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the OTel SDK."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Semantic conventions"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "OpenTelemetry provides a set of https://opentelemetry.io/docs/specs/semconv/http/http-spans/[semantic conventions] to standardize the data collected by the instrumentation."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "When creating manual instrumentation, while naming metrics or attributes you should follow those conventions and not create new names to represent existing conventions. This will make data correlation easier to perform across services."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Exporters"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The Default"
msgstr "デフォルト"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The Quarkus OpenTelemetry extension uses its own signal exporters built on top of Vert.x for optimal performance and maintainability. All *Quarkus built in exporters use the OTLP protocol* through a couple of data senders, using `grpc` (the default) and `http/protobuf`."
msgstr "QuarkusのOpenTelemetryエクステンションは、パフォーマンスとメンテナンス性を最適化するために、Vert.xの上に構築された独自のシグナルエクスポーターを使用しています。 *Quarkusの内蔵エクスポータは* すべて、 `grpc` （デフォルト）と `http/protobuf` を使用して、いくつかのデータセンダを介して *OTLPプロトコルを使用* します。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The active exporter is automatically wired by CDI, that's why the `quarkus.otel.traces.exporter`, `quarkus.otel.metrics.exporter` and `quarkus.otel.logs.exporter` properties default value is `cdi`. This is not because of the protocol being used in the data transfer but because of how the exporters are wired."
msgstr "アクティブなエクスポータはCDIによって自動的に配線されます。そのため、 `quarkus.otel.traces.exporter` 、 `quarkus.otel.metrics.exporter` 、 `quarkus.otel.logs.exporter` プロパティのデフォルト値は `cdi` となります。これは、データ転送で使用されるプロトコルのためではなく、エクスポータの配線方法のためです。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "CDI (Context Dependency Injection) will manage the exporters to use, according to the selected protocol or when applications implement their own CDI exporter, like in tests."
msgstr "CDI (Context Dependency Injection) は、選択されたプロトコルに従って、あるいはアプリケーションがテストのように独自の CDI エクスポーターを実装している場合に、使用するエクスポーターを管理します。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.protocol` property instructs Quarkus to switch the senders and defaults to `grpc` but `http/protobuf` can also be used."
msgstr "`quarkus.otel.exporter.otlp.protocol` プロパティは、Quarkusに送信者の切り替えを指示し、デフォルトは `grpc` ですが、 `http/protobuf` を使用することもできます。"

#: _versions/3.27/guides/opentelemetry.adoc
msgid "If you change the protocol, you also need to change the port in the endpoint. The default port for `grpc` is `4317` and for `http/protobuf` is `4318`."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "Using CDI to produce a test exporter"
msgstr "CDIを使ってテストエクスポーターを作成"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "Leaving the default as CDI is particularly useful for tests. In the following example a Span exporter class is wired with CDI and then the telemetry can be used in test code."
msgstr "デフォルトを CDI にしておくと、特にテストに便利です。次の例では、Span exporter クラスを CDI で配線し、そのテレメトリをテストコードで使用しています。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "Creating a custom `SpanExporter` bean:"
msgstr "カスタム `SpanExporter` Bean の作成："

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "Where `InMemorySpanExporter` is a class from the OpenTelemetry test utilities dependency:"
msgstr "`InMemorySpanExporter` は OpenTelemetry テストユーティリティ依存のクラスです："

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The bean of that class can be injected to access the telemetry data. This is an example to obtain the spans:"
msgstr "そのクラスの Bean を注入して、遠隔測定データにアクセスできます。これはスパンを取得する例です："

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"If this is used in an integration test, you should access the class from inside the running process and not from the test class.\n"
"A viable option could be to expose that data through a REST endpoint method:"
msgstr "これを統合テストで使う場合は、テストクラスからではなく、実行中のプロセス内部からこのクラスにアクセスしなければなりません。実行可能な方法としては、REST のエンドポイントメソッドでデータを公開する方法があります："

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "This excludes calls to the export endpoint itself."
msgstr "これは、エクスポート・エンドポイント自体への呼び出しを除きます。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "For more details please take a look at the https://github.com/quarkusio/quarkus/blob/main/integration-tests/opentelemetry/src/main/java/io/quarkus/it/opentelemetry/ExporterResource.java[ExporterResource] in the Quarkus integration tests."
msgstr "詳細については、Quarkus統合テストの link:https://github.com/quarkusio/quarkus/blob/main/integration-tests/opentelemetry/src/main/java/io/quarkus/it/opentelemetry/ExporterResource.java[ExporterResourceを] 参照してください。"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "The OpenTelemetry OTLP exporter"
msgstr "OpenTelemetry OTLP エクスポーター"

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "This is currently not supported in Quarkus. Configuration example for traces: `quarkus.otel.tracing.exporter=otlp`."
msgstr "これは現在、Quarkusではサポートされていません。トレースの設定例: `quarkus.otel.tracing.exporter=otlp` ."

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid "However, it's also not needed because Quarkus own default exporters will send data using the OTLP protocol."
msgstr "しかし、Quarkus独自のデフォルトのエクスポートツールは、OTLPプロトコルを使用してデータを送信するため、これも必要ありません。"

#: _versions/3.27/guides/opentelemetry.adoc
msgid "On Quarkiverse"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Additional exporters will be available in the Quarkiverse https://docs.quarkiverse.io/quarkus-opentelemetry-exporter/dev/index.html[quarkus-opentelemetry-exporter] project."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Currently, are available the following exporters (may be outdated) for:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Legacy Jaeger"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Microsoft Azure"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Google Cloud"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Also on Quarkiverse, the https://docs.quarkiverse.io/quarkus-amazon-services/dev/opentelemetry.html[Quarkus AWS SDK has integration with OpenTelemetry]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Logging exporter (for debugging)"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "You can output all metrics to the console, for debugging/development purposes."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Don't use this in production."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "You will need to add the following dependency to your project:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Then, setting the exporter to `logging` in the `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Set the metrics exporter to `logging`. Normally you don't need to set this. The default is `cdi`."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Set the interval to export the metrics. The default is `1m`, which is too long for debugging."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Set the traces exporter to `logging`. Normally you don't need to set this. The default is `cdi`."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Visualizing the data"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "We recommend the xref:observability-devservices-lgtm.adoc[Getting Started with Grafana-OTel-LGTM]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This provides a Quarkus Dev service using an \"all-in-one\" https://github.com/grafana/docker-otel-lgtm[Grafana OTel LGTM]."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Grafana is used to visualize data, Loki to store logs, Tempo to store traces and Prometheus to store metrics. Also provides and OTel collector to receive the data."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "This provides an easy way to visualize all OpenTelemetry data generated by the application."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "You can also use the xref:logging-exporter-for-debugging[logging exporter] to output all traces and metrics to the console."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "OpenTelemetry Configuration Reference"
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Quarkus supports the OpenTelemetry Autoconfiguration for Traces.\n"
"The configurations match what you can see at\n"
"https://opentelemetry.io/docs/languages/java/configuration/[OpenTelemetry SDK Autoconfigure]\n"
"adding the usual `quarkus.*` prefix."
msgstr "QuarkusはOpenTelemetry Autoconfiguration for Tracesをサポートしています。コンフィギュレーションは、 link:https://opentelemetry.io/docs/languages/java/configuration/[OpenTelemetry SDK Autoconfigureで] 通常の `quarkus.*` プレフィックスを追加したものと同じです。"

#: _versions/3.27/guides/opentelemetry.adoc
msgid "Quarkus OpenTelemetry configuration properties now have the `quarkus.otel.*` prefix."
msgstr ""

#: _versions/3.27/guides/opentelemetry.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
