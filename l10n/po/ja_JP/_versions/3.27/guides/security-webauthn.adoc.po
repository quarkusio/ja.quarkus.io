msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Using Security with WebAuthn"
msgstr "WebAuthnと共にSecurityを使用"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use WebAuthn authentication instead of\n"
"passwords."
msgstr "このガイドでは、Quarkus アプリケーションで、パスワードの代わりに WebAuthn 認証を使用する方法を説明します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "A WebAuthn or PassKeys-capable device, or https://developer.chrome.com/docs/devtools/webauthn/[an emulator of those]."
msgstr "WebAuthn または PassKeys 対応デバイス、または https://developer.chrome.com/docs/devtools/webauthn/[それらのエミュレーター]。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Introduction to WebAuthn"
msgstr "WebAuthnの紹介"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism designed to replace passwords. In short, every\n"
"time you write a service for registering new users, or logging them in, instead of asking for a password, you\n"
"use WebAuthn, which will replace the password."
msgstr "link:https://webauthn.guide/[WebAuthn] は、パスワードを置き換えるために設計された認証メカニズムです。つまり、新しいユーザーを登録したり、ログインしたりするサービスを書くたびに、パスワードを要求する代わりに、WebAuthn を使って、パスワードを置き換えるのです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"WebAuthn replaces the password with a proof of identity. In practice, users, instead of having to invent a password,\n"
"store it or remember it, will use a hardware token that will generate a proof of identity specifically for your\n"
"service or website. This can be done by asking users to press their thumb on their phone, or pressing a button\n"
"on a https://www.yubico.com[YubiKey] on a computer."
msgstr "WebAuthnは、パスワードをID証明に置き換えます。実際には、ユーザーは、パスワードを考案したり、保存したり、記憶したりする代わりに、あなたのサービスやウェブサイトのために特別にID証明を生成するハードウェアトークンを使用することになります。これは、ユーザーに携帯電話で親指を押してもらったり、パソコンで link:https://www.yubico.com[YubiKey] のボタンを押したりすることで実現可能です。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"So, when you register your user, you use your browser to enter your user information (username, your name, etc…)\n"
"and instead of typing a password to identify yourself, you click a button which will invoke the WebAuthn browser\n"
"API which will ask you to do something (press a button, use your fingerprint). Then, your browser will generate\n"
"a proof of identity which you can send to your service instead of a password."
msgstr "そこで、ユーザーを登録する際に、ブラウザーでユーザー情報（ユーザー名、自分の名前など）を入力しパスワードを入力して本人確認をする代わりに、ボタンをクリックすると、WebAuthn ブラウザー API が実行され、何か（ボタンを押す、指紋を使う）をするように要求されます。すると、ブラウザーはパスワードの代わりに、サービスに送信できるID証明を生成します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"This proof of identity, when you register, consists mostly in a public key. Actually there's a lot of stuff in\n"
"there but the most interesting is the public key. This public key is not stored on your device, or your browser.\n"
"It is generated especially for the target service (tied to its URI), and derived from the hardware authenticator.\n"
"So the association of the hardware authenticator and the target service will always derive the same private and\n"
"public key pair, none of which are stored anywhere. You can for example, take your YubiKey to another computer\n"
"and it will keep generating the same private/public keys for the same target service."
msgstr "この登録時のID証明は、ほとんどが公開鍵で構成されています。実際にはいろいろなものがありますが、最も興味深いのは公開鍵です。この公開鍵は、あなたのデバイスやブラウザに保存されているわけではありません。この公開鍵は、対象となるサービスのために特別に生成され（そのURIに関連付けられます）、ハードウェア認証デバイスから導出されたものです。したがって、ハードウェア認証デバイスとターゲットサービスの関連付けは、常に同じ秘密鍵と公開鍵のペアを導き出すことになります。例えば、YubiKeyを別のコンピュータに持ち出しても、同じターゲットサービスに対して同じ秘密鍵と公開鍵を生成し続けることができます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"So, when you register, you send (mostly) a public key instead of a password, and the service stores that information\n"
"as WebAuthn credentials for your new user account, and this is what will identify you later."
msgstr "そのため、登録時にはパスワードの代わりに（主に）公開鍵を送信し、サービスはその情報を新しいユーザーアカウントのWebAuthnクレデンシャルとして保存し、これが後にあなたを識別することになります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Then, when you need to log in to that service, instead of typing your password (which doesn't exist, remember?),\n"
"you press a button on the login form, and the browser will ask you to do something, and then it will send\n"
"a signature to your service instead of a password. That signature requires the private key that is derived from\n"
"your authenticator hardware and the target service, and so when your service receives it, it can verify that it\n"
"corresponds to the signature of the public key you stored as credentials."
msgstr "そして、そのサービスにログインする必要があるとき、パスワードを入力する代わりに（これは存在しませんよ）、ログインフォームのボタンを押すと、ブラウザーが何かを尋ねてきて、パスワードの代わりに署名をサービスに送信してくれます。その署名にはあなたの認証ハードウェアと対象サービスから得られる秘密鍵が必要なので、あなたのサービスがそれを受け取ると、それがあなたがクレデンシャルとして保存した公開鍵の署名と一致するかどうかを検証することができるのです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"So, to recap: registration sends a generated public key instead of a password, and login sends a signature for\n"
"that public key, allowing you to verify that the user is who they were when they registered."
msgstr "つまり、まとめると、登録時にはパスワードの代わりに生成した公開鍵を送信し、ログイン時にはその公開鍵に対する署名を送信することで、ユーザーが登録時の人物であることを確認することができるのです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"In practice, it's a little more complex, because there needs to be a handshake with the server before you\n"
"can use the hardware authenticator (ask for a challenge and other things), so there are always two calls to your\n"
"service: one before login or registration, before calling the hardware authenticator, and then the normal\n"
"login or registration."
msgstr "実際にはもう少し複雑で、ハードウェア認証機能を使う前にサーバーとハンドシェイクする必要があるため（チャレンジを求めるなど）、サービスには常に2つの呼び出しがあります。1つはログインや登録の一つ前のハードウェア認証デバイスを呼び出す前、そしてもう1つは通常のログインや登録の時です。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "And also there are a lot more fields to store than just a public key, but we will help you with that."
msgstr "また、公開鍵以外にも保存するフィールドはたくさんありますが、それについては私たちがお手伝いします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Just in case you get there wondering what's the relation with https://fidoalliance.org/passkeys/[PassKeys]\n"
"and whether we support it: sure, yes, PassKeys is a way that your authenticator devices can share and sync\n"
"their credentials, which you can then use with our WebAuthn authentication."
msgstr ""
"https://fidoalliance.org/passkeys/[PassKeys] との関連について、そしてサポート対象かどうかについて気になるかもしれませんが、\n"
"もちろんこれはサポート対象です。PassKeys は、オーセンティケーターデバイスがその認証情報を共有および同期できる方法です。\n"
"認証情報は、続いて WebAuthn 認証で使用できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The WebAuthn specification requires HTTPS to be used for communication with the server, though\n"
"some browsers allow `localhost`. If you must use HTTPS in dev mode, you can always use the\n"
"https://docs.quarkiverse.io/quarkus-ngrok/dev/index.html[quarkus-ngrok] extension."
msgstr ""
"WebAuthn 仕様では、サーバーとの通信に HTTPS を使用する必要がありますが、\n"
"一部のブラウザーでは `localhost` が許可されています。開発モードで HTTPS を使用する必要がある場合は、\n"
"https://docs.quarkiverse.io/quarkus-ngrok/dev/index.html[quarkus-ngrok] を常に使用できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "In this example, we build a very simple microservice which offers four endpoints:"
msgstr "この例では、4つのエンドポイントを提供する、非常にシンプルなマイクロサービスを構築します:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`/api/public`"
msgstr "`/api/public`"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`/api/public/me`"
msgstr "`/api/public/me`"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/public/me` endpoint can be accessed anonymously and returns the current username if there is one, or `<not logged in>` if not.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "`/api/public` エンドポイントは匿名でアクセスすることができます。 `/api/public/me` エンドポイントは匿名でアクセスでき、現在のユーザー名がある場合はそのユーザー名を、ない場合は `<not logged in>` を返します。 `/api/admin` エンドポイントは RBAC (Role-Based Access Control) で保護されており、 `admin` のロールを与えられたユーザーのみがアクセスすることができます。このエンドポイントでは、 `@RolesAllowed` アノテーションを使用して、アクセス制約を宣言的に適用しています。 `/api/users/me` のエンドポイントも RBAC (Role-Based Access Control) で保護されており， `user` のロールが付与されたユーザのみがアクセスできるようになっています．レスポンスとして、ユーザーに関する詳細情報を含むJSONドキュメントが返されます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The solution is located in the `security-webauthn-quickstart` link:{quickstarts-tree-url}/security-webauthn-quickstart[directory]."
msgstr "ソリューションは `security-webauthn-quickstart` link:{quickstarts-tree-url}/security-webauthn-quickstart[ディレクトリ] にあります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "選択したデータベースコネクタライブラリを追加することを忘れないでください。ここでは、PostgreSQLをIDストアとして使用しています。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"This command generates a Maven project, importing the `security-webauthn` extension\n"
"which allows you to use WebAuthn to authenticate users."
msgstr "このコマンドは Maven プロジェクトを生成し、WebAuthn を使ってユーザー認証を行うための `security-webauthn` エクステンションをインポートします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `security-webauthn` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Quarkusプロジェクトをすでに設定している場合は、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `security-webauthn` エクステンションをプロジェクトに追加できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Writing the application"
msgstr "アプリケーションの記述"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr "まず、 `/api/public` のエンドポイントを実装することから始めましょう。以下のソースコードからわかるように、これは通常のJakarta RESTリソースに過ぎません："

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。ここでの主な違いは、 `admin` ロールで付与されたユーザーだけがエンドポイントにアクセスできるように `@RolesAllowed` アノテーションを使用していることです:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal and we return the user's name. This information is loaded from the database."
msgstr "最後に、 `/api/users/me` エンドポイントを考えてみましょう。下のソースコードを見ればわかるように、 `user` の役割を持つユーザのみを信頼しています。現在認証されているプリンシパルへのアクセスを得るために `SecurityContext` を使用しており、ユーザーの名前を返します。この情報はデータベースから読み込まれます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Storing our WebAuthn credentials"
msgstr "WebAuthnのクレデンシャルの保存"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"We can now describe how our WebAuthn credentials are stored in our database with two entities. Note that we've\n"
"simplified the model in order to only store one credential per user (who could actually have more than one WebAuthn credential\n"
"and other data such as roles):"
msgstr ""
"これで、WebAuthn 認証情報がデータベースにどのように保存されるかを、2 つのエンティティーで説明できるようになりました。\n"
"ユーザーごとに認証情報を 1 つしか保存しないように、モデルを簡略化した点に注意してください (ユーザーは実際には複数の WebAuthn 認証情報\n"
"とロールなどの他のデータを持つことが可能)。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "And our user entity:"
msgstr "ユーザーエンティティーは次のようになります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "A note about usernames and credential IDs"
msgstr "ユーザー名とクレデンシャルIDに関する注意点"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Usernames are unique and to your users. Every created WebAuthn credential record has a unique ID."
msgstr "ユーザー名はユーザーごとに一意です。作成されたすべての WebAuthn 認証情報レコードには一意の ID があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"You can allow (if you want, but you don't have to) your users to have more than one authenticator device,\n"
"which means a single username can map to multiple credential IDs, all of which identify the same user."
msgstr ""
"ユーザーが複数のオーセンティケーターデバイスを持つことを許可することもできます (必要に応じてであり、必須ではありません)。\n"
"つまり、単一のユーザー名を複数の認証情報 ID にマップすることができ、それらはすべて同じユーザーを識別します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Exposing your entities to Quarkus WebAuthn"
msgstr "Quarkus WebAuthnにエンティティを公開する"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"You need to define a bean implementing the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] in order to allow the Quarkus WebAuthn\n"
"extension to load and store credentials. This is where you tell Quarkus how to turn your data model into the\n"
"WebAuthn security model:"
msgstr ""
"Quarkus WebAuthn エクステンションが認証情報をロードして保存できるようにするには、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] を実装する Bean を\n"
"定義する必要があります。ここで、Quarkus に対してデータモデルを WebAuthn の\n"
"セキュリティーモデルに変換する方法を指定します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Warning: When implementing your own `WebAuthnUserProvider.store` method, make sure that you never allow creating\n"
"new credentials for a `username` that already exists. Otherwise you risk allowing third-parties to impersonate existing\n"
"users by letting them add their own credentials to existing accounts. If you want to allow existing users to register\n"
"more than one WebAuthn credential, you must make sure in `WebAuthnUserProvider.store` that the user is currently logged\n"
"in under the same `username` to which you want to add new credentials. In every other case, make sure to return a failed\n"
"`Uni` from this method. In this particular example, this is checked using a unicity constraint on the user name, which\n"
"will cause the transaction to fail if the user already exists."
msgstr ""
"警告: 独自の `WebAuthnUserProvider.store` メソッドを実装する際は、既に存在する `username` に対して新しい認証情報の作成を\n"
"許可しないようにします。そうしないと、サードパーティーが既存ユーザーになりすまし、\n"
"自分の認証情報を既存のアカウントに追加できてしまうリスクがあります。\n"
"既存ユーザーが複数の WebAuthn 認証情報を登録できるようにしたい場合は、新しい認証情報を追加する際に、そのユーザーが現在同じ `username` でログインしていることを \n"
"`WebAuthnUserProvider.store` 内で確認する必要があります。それ以外の場合は、このメソッドから失敗した `Uni` を必ず返してください。\n"
"この具体的な例では、ユーザー名に対する一意性制約を設けることでチェックを行っており、\n"
"すでに存在するユーザーに対して処理が実行されるとトランザクションが失敗するようになっています。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Configuration"
msgstr "設定"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Because we want to delegate login and registration to the default Quarkus WebAuthn endpoints, we need to enable them\n"
"in configuration (`src/main/resources/application.properties`):"
msgstr ""
"ログインと登録をデフォルトの Quarkus WebAuthn エンドポイントに委譲したいため、設定内 (`src/main/resources/application.properties`) でそれらを\n"
"有効にする必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Writing the HTML application"
msgstr "HTMLアプリケーションの作成"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"We now need to write a web page with links to all our APIs, as well as a way to register a new user, login, and logout,\n"
"in `src/main/resources/META-INF/resources/index.html`:"
msgstr "次に、すべてのAPIへのリンクと、新規ユーザー登録、ログイン、ログアウトを行うためのWebページを `src/main/resources/META-INF/resources/index.html` に記述する必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Trying the application"
msgstr "アプリケーションを試す"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The application is now protected and the identities are provided by our database."
msgstr "アプリケーションは保護され、IDは私たちのデータベースから提供されるようになりました。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Run your application in dev mode with:"
msgstr "次のようにdevモードでアプリケーションを実行します:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"which will start a PostgreSQL Dev Service container,\n"
"and open http://localhost:8080 in your browser."
msgstr "これで、PostgreSQL Dev Service コンテナが起動します。ブラウザで http://localhost:8080 を開いてください。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Initially, you will have no credentials registered, and no current user:"
msgstr "初期状態では、クレデンシャルが登録されておらず、現在のユーザーもいない状態です。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The current user is displayed on the left, and you can use the top menu to try accessing the public API, which\n"
"should work, while the user and admin APIs will fail and redirect you to the current page."
msgstr "左側に現在のユーザーが表示され、上部メニューで公開APIにアクセスしてみると、うまくいくはずですが、ユーザーAPIとadmin APIは失敗して現在のページにリダイレクトされます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Start by registering your WebAuthn credentials by entering a username, first and last names on the `Register`\n"
"form on the right, then pressing the `Register` button:"
msgstr "まず、右側の `Register` フォームにユーザー名、氏名を入力し、 `Register` ボタンを押して、WebAuthn のクレデンシャルを登録します:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Your browser will ask you to activate your WebAuthn authenticator (you will need a WebAuthn-capable browser\n"
"and possibly device, or you can use https://developer.chrome.com/docs/devtools/webauthn/[an emulator of those]):"
msgstr ""
"ブラウザーが WebAuthn オーセンティケーターを有効化するよう求めてきます (WebAuthn 対応のブラウザーと、\n"
"場合によってはデバイスが必要です。または、 https://developer.chrome.com/docs/devtools/webauthn/[それらのエミュレーター] を使用することもできます）。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "You will then be logged in, and can check that the user API is now accessible:"
msgstr "その後、ログインし、ユーザーAPIにアクセスできるようになったことを確認できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "At this stage you can `Logout`:"
msgstr "この段階で `Logout` できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Then press the `Login` button, and you will be logged in:"
msgstr "その後、 `Login` ボタンを押せば、ログイン状態になります:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The admin API is only accessible if you register with the `admin` user name."
msgstr "admin APIは、 `admin` のユーザー名で登録した場合のみアクセス可能です。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Explanation of the flow for WebAuthn authentication."
msgstr "WebAuthn 認証のフローの説明"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "There are two modes of operation for how you want to handle user and credential creation:"
msgstr "ユーザーと認証情報の作成を処理する方法には、次の 2 つの操作モードがあります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"By default, the solution we have seen handles user and credential creation and logins automatically\n"
"via the <<WebAuthn endpoints>> provided out of the box by this extension."
msgstr ""
"デフォルトでは、これまでに見てきたソリューションは、このエクステンションが標準で提供する <<WebAuthn endpoints>> を通じて、\n"
"ユーザーおよび認証情報の作成とログインを自動的に処理します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"In this scenario, all you have to to is provide a link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to\n"
"tell Quarkus how to find, store and update your credentials (see\n"
"<<Exposing your entities to Quarkus WebAuthn>>)."
msgstr ""
"このシナリオでは、Quarkus に認証情報の検索、保存、および更新方法を伝えるために、\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] の提供のみを実行します (詳細は \n"
"<<Exposing your entities to Quarkus WebAuthn>> を参照)。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Thus, triggering a registration on the client requires obtaining a challenge from the server (see\n"
"<<Obtain a registration challenge>>), which will then be returned to the client which\n"
"uses that to create new credentials and send them to the server (see\n"
"<<Trigger a registration>>) which will store the credentials and log you in:"
msgstr ""
"したがって、クライアントで登録をトリガーするには、サーバーからチャレンジを取得する必要があります (<<Obtain a registration challenge>> \n"
"を参照)。取得したチャレンジはクライアントに返され、クライアントはそれを使用して\n"
"新しい認証情報を作成し、それをサーバーに送信します (<<Trigger a registration>> を参照)。\n"
"サーバーは、認証情報を保存し、ユーザーをログインさせます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Later, triggering a login on the client requires obtaining a challenge from the server (see\n"
"<<Obtain a login challenge>>), which will then be returned to the client which\n"
"uses that to get the required credentials and send proof of them to the server (see\n"
"<<Trigger a login>>) which will update the credentials and log you in:"
msgstr ""
"その後、クライアントでログインをトリガーするには、サーバーからチャレンジを取得する必要があります (<<Obtain a login challenge>> を参照）。\n"
"取得したチャレンジはクライアントに返され、\n"
"クライアントはそれを使用して必要な認証情報を取得し、それらの証明をサーバーに送信します (<<Trigger a login>> を参照）。\n"
"サーバーは認証情報を更新し、ユーザーをログインさせます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you want to customise the registration and login flow, you can also handle user and credential\n"
"creation and logins yourself via your own logic (see <<Handling login and registration endpoints yourself>>)."
msgstr ""
"登録とログインフローをカスタマイズしたい場合は、独自のロジックを使用して、\n"
"ユーザーと認証情報の作成およびログインも自身で処理できます (<<Handling login and registration endpoints yourself>> を参照)。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "WebAuthn endpoints"
msgstr "WebAuthnのエンドポイント"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The Quarkus WebAuthn extension comes out of the box with these REST endpoints pre-defined:"
msgstr "Quarkus WebAuthnエクステンションには、これらのRESTエンドポイントがあらかじめ定義されています:"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Obtain a registration challenge"
msgstr "登録チャレンジの取得"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`GET /q/webauthn/register-options-challenge?username=<username>&displayName=<displayName>`: Set up and obtain a registration challenge"
msgstr "`GET /q/webauthn/register-options-challenge?username=<username>&displayName=<displayName>`: 登録チャレンジをセットアップして取得する"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Query parameters:"
msgstr "クエリーパラメーター"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`username` is a username. Required."
msgstr "`username` はユーザー名です。必須です。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`displayName` is a human-palatable name for the user account. Optional."
msgstr "`displayName` は、判読しやすいユーザーアカウントの名前です。オプションです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This causes a cookie to be set for the challenge, it will be used by the registration step later."
msgstr "これにより、チャレンジ用の Cookie が設定され、後で登録手順で使用されます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Response"
msgstr "レスポンス"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Trigger a registration"
msgstr "登録をトリガーする"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`POST /q/webauthn/register?username=<username>`: Trigger a registration"
msgstr "`POST /q/webauthn/register?username=<username>`: 登録をトリガーする"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"This uses the challenge cookie set by the registration challenge and clears it. It\n"
"also uses your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to store the new credentials, and sets up\n"
"the <<configuration-reference,session cookie>> to log you in."
msgstr ""
"これは、登録チャレンジによって設定されたチャレンジ Cookie を使用し、それをクリアします。\n"
"また、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] を使用して新しい認証情報を保存し、\n"
"<<configuration-reference,session cookie>> をセットアップしてログインできるようにします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This is only enabled if the `quarkus.webauthn.enable-registration-endpoint` configuration is set to `true`."
msgstr "これは、 `quarkus.webauthn.enable-registration-endpoint` 設定が `true` に設定されている場合にのみ有効になります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Request"
msgstr "リクエスト"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This returns a 204 with no body."
msgstr "これは、ボディを持たない204を返却します"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Obtain a login challenge"
msgstr "ログインチャレンジの取得"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`GET /q/webauthn/login-options-challenge?username=<username>`: Set up and obtain a login challenge"
msgstr "`GET /q/webauthn/login-options-challenge?username=<username>`: ログインチャレンジをセットアップして取得する"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`username` is a username. Optional in the case of https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (with PassKeys)."
msgstr "`username` はユーザー名です。 https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (PassKeys 付き) の場合はオプションです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This causes a cookie to be set for the challenge, it will be used by the login step later."
msgstr "これにより、チャレンジ用の Cookie が設定され、後でログイン手順で使用されます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Trigger a login"
msgstr "ログインをトリガーする"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"This uses the challenge cookie set by the login challenge and clears it. It\n"
"also uses your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to find and update the credentials, and sets up\n"
"the <<configuration-reference,session cookie>> to log you in."
msgstr ""
"これは、ログインチャレンジによって設定されたチャレンジ Cookie を使用し、\n"
"それをクリアします。また、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] を使用して認証情報を探して保存し、\n"
"<<configuration-reference,session cookie>> をセットアップしてログインできるようにします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This is only enabled if the `quarkus.webauthn.enable-login-endpoint` configuration is set to `true`."
msgstr "これは、 `quarkus.webauthn.enable-login-endpoint` 設定が `true` に設定されている場合にのみ有効になります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Logout"
msgstr "ログアウト"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`GET /q/webauthn/logout`: Logs you out"
msgstr "`GET /q/webauthn/logout` :ログアウトします。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This will clear the <<configuration-reference,session cookie>> to log you out."
msgstr "これにより、<<configuration-reference,session cookie>> がクリアされ、ログアウトできます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This returns a 302 redirect to the root URI of your application."
msgstr "これは、アプリケーションのルートURIへの302リダイレクトを返します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Related Origins"
msgstr "Related Origins"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "`GET /.well-known/webauthn`: Retreives the list of https://passkeys.dev/docs/advanced/related-origins/[related origins]."
msgstr "`GET /.well-known/webauthn`: https://passkeys.dev/docs/advanced/related-origins/[related origins] のリストを取得する"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "This defaults to the current origin on which Quarkus is deployed, but can be <<quarkus-security-webauthn_quarkus-webauthn-origins,configured>>."
msgstr "これは Quarkus がデプロイされている現在のオリジンにデフォルト設定されますが、<<quarkus-security-webauthn_quarkus-webauthn-origins,設定>> することができます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "WebAuthn JavaScript library"
msgstr "WebAuthn JavaScript ライブラリ"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Because there's so much JavaScript needed to set WebAuthn up in the browser, the Quarkus WebAuthn extension ships with\n"
"a JavaScript library to help you talk to the WebAuthn endpoints, at `/q/webauthn/webauthn.js`. You can set it up like this:"
msgstr "ブラウザでWebAuthnを設定するには多くのJavaScriptが必要なため、Quarkus WebAuthnエクステンションには、WebAuthnのエンドポイントとの対話を支援するJavaScriptライブラリが同梱されています（ `/q/webauthn/webauthn.js` ）。このように設定することができます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Or, if you need to customise the endpoints:"
msgstr "または、エンドポイントをカスタマイズする必要がある場合は、以下のようになります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "CSRF considerations"
msgstr "CSRF に関する考慮事項"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you use the endpoints provided by Quarkus, they will not be protected by xdoc:security-csrf-prevention.adoc[CSRF], but\n"
"if you define your own endpoints and use this JavaScript library to access them you will need to configure CSRF via headers:"
msgstr ""
"Quarkus が提供するエンドポイントを使用する場合、xdoc:security-csrf-prevention.adoc[CSRF] によって保護されませんが、\n"
"独自のエンドポイントを定義し、この JavaScript ライブラリーを使用してそれらにアクセスする場合は、ヘッダー経由で CSRF を設定する必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Invoke registration"
msgstr "登録の呼出"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.register` method invokes the registration challenge endpoint, then calls the authenticator and invokes the registration endpoint\n"
"for that registration, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""
"`webAuthn.register` メソッドは、登録チャレンジエンドポイントを呼び出し、次にオーセンティケーターを呼び出してその登録のための登録エンドポイントを呼び出し、\n"
"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise オブジェクト] を返します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Invoke login"
msgstr "ログインの呼出"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.login` method invokes the login challenge endpoint, then calls the authenticator and invokes the login endpoint\n"
"for that login, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""
"`webAuthn.login` メソッドは、ログインチャレンジエンドポイントを呼び出し、次にオーセンティケーターを呼び出してそのログインのためのログインエンドポイントを呼び出し、\n"
"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise オブジェクト] を返します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "The username is optional, in the case of https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (with PassKeys)"
msgstr "https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (PassKeys 付き) の場合、ユーザー名はオプションです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Only invoke the registration challenge and authenticator"
msgstr "登録チャレンジと認証デバイスのみを呼出"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.registerClientSteps` method invokes the registration challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the registration endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""
"`webAuthn.registerClientSteps` メソッドは、登録チャレンジエンドポイントを呼び出し、次にオーセンティケーターを呼び出して、\n"
"登録エンドポイントへの送信に適した JSON オブジェクトを含む\n"
" https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise オブジェクト] を返します。この JSON オブジェクトを使用して、たとえば、認証情報を非表示フォームの `input` に保存し、\n"
"通常の HTML フォームの一部として送信できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Only invoke the login challenge and authenticator"
msgstr "ログインチャレンジと認証デバイスのみを呼出"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.loginClientSteps` method invokes the login challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the login endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""
"`webAuthn.loginClientSteps` メソッドはログインチャレンジのエンドポイントを呼び出し、次にオーセンティケーターを呼び出して、\n"
"ログインエンドポイントへの送信に適した JSON オブジェクトを\n"
"含む https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise オブジェクト] を返します。この JSON オブジェクトを使用して、たとえば、認証情報を非表示フォームの `input` に保存し、\n"
"通常の HTML フォームの一部として送信できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Handling login and registration endpoints yourself"
msgstr "ログインと登録のエンドポイントを自分でハンドリングする"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Sometimes, you will want to ask for more data than just a username in order to register a user,\n"
"or you want to deal with login and registration with custom validation, and so the default WebAuthn login\n"
"and registration endpoints are not enough."
msgstr ""
"ユーザーを登録するために、ユーザー名だけでなく、追加のデータを要求したり、カスタムバリデーションでログインや登録を\n"
"処理したりする必要がある場合があります。そのため、デフォルトの WebAuthn ログインおよび登録エンドポイントでは\n"
"十分でないことがあります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"In this case, you can use the `WebAuthn.loginClientSteps` and `WebAuthn.registerClientSteps` methods from the JavaScript\n"
"library, store the authenticator data in hidden form elements, and send them as part of your form payload\n"
"to the server to your custom login or registration endpoints."
msgstr ""
"この場合、JavaScript ライブラリーの `WebAuthn.loginClientSteps` と `WebAuthn.registerClientSteps` メソッドを使用して、\n"
"オーセンティケーターデータを非表示フォーム要素に保存し、\n"
"それらをフォームのペイロードの一部としてサーバーのカスタムログインまたは登録エンドポイントに送信できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you are storing them in form input elements, you can then use the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnLoginResponse.html[`WebAuthnLoginResponse`] and\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnRegistrationResponse.html[`WebAuthnRegistrationResponse`] classes,\n"
"mark them as `@BeanParam` and then use the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#login(io.quarkus.security.webauthn.WebAuthnLoginResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.login`]\n"
"and link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#register(io.quarkus.security.webauthn.WebAuthnRegisterResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.register`]\n"
"methods to replace the `/q/webauthn/login` and `/q/webauthn/register` endpoints."
msgstr ""
"フォーム入力要素に保存する場合、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnLoginResponse.html[`WebAuthnLoginResponse`] および\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnRegistrationResponse.html[`WebAuthnRegistrationResponse`] クラスを使用し、\n"
"それらに `@BeanParam` を付与することで\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#login(io.quarkus.security.webauthn.WebAuthnLoginResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.login`]\n"
"および link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#register(io.quarkus.security.webauthn.WebAuthnRegisterResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.register`] メソッドを使用して、\n"
"`/q/webauthn/login` および `/q/webauthn/register` エンドポイントを置き換えることができます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"In most cases you can keep using the `/q/webauthn/login-options-challenge` and `/q/webauthn/register-options-challenge` challenge-initiating\n"
"endpoints, because this is not where custom logic is required."
msgstr ""
"ほとんどの場合、 `/q/webauthn/login-options-challenge` と `/q/webauthn/register-options-challenge` のチャレンジ開始エンドポイントを使い続けることができます。\n"
"ここでは、カスタムロジックが必要ないためです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"In this case, the registration flow is a little different because you will write your own registration endpoint\n"
"which will handle storing of the credentials and setting up the session cookie:"
msgstr ""
"この場合、登録フローは少し異なります。認証情報の保存とセッション Cookie のセットアップを処理する\n"
"独自の登録エンドポイントを作成するためです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Similarly, the login flow is a little different because you will write your own login endpoint\n"
"which will handle updating the credentials and setting up the session cookie:"
msgstr ""
"同様に、ログインフローも少し異なります。独自のログインエンドポイントを作成するためです。\n"
"このログインエンドポイントは、認証情報の更新とセッション Cookie のセットアップを処理します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you handle user and credential creation and logins yourself in your endpoints, you only need\n"
"to provide a read-only view of your entities in your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`], so you can skip\n"
"the `store` and `update` methods:"
msgstr ""
"ユーザーおよび認証情報の作成やログインを自身でエンドポイントで処理する場合、\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] にエンティティーの読み取り専用ビューを提供することのみが必要です。そのため、 `store` および `update`メソッド\n"
"は省略できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"When setting up your own login and registration endpoints, you don't need to enable the default endpoints, so you can\n"
"remove the `quarkus.webauthn.enable-login-endpoint` and `quarkus.webauthn.enable-registration-endpoint` configuration."
msgstr ""
"独自のログインおよび登録エンドポイントを設定する場合、デフォルトのエンドポイントを有効にする必要はありません。これにより、\n"
"`quarkus.webauthn.enable-login-endpoint` および `quarkus.webauthn.enable-registration-endpoint` 設定を削除できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Thankfully, you can use the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] bean to handle the WebAuthn-specific part of\n"
"your registration and login endpoints, and focus on your own logic:"
msgstr ""
"ありがたいことに、次のリンクを使用できます:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] Bean は WebAuthn 固有の部分を処理します\n"
"登録とログインのエンドポイントを分離し、独自のロジックに集中します。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`]\n"
"methods do not set or read the <<configuration-reference,session cookie>>, so you will have to take care\n"
"of it yourself, but it allows you to use other means of storing the user, such as JWT. You can use the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#rememberUser(java.lang.String,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.rememberUser`]\n"
" and link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#logout(io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.logout`]\n"
" methods on the same link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] class if you want to manually set up login cookies."
msgstr ""
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] メソッドは、\n"
"<<configuration-reference,session cookie>> の設定や読み取りを行わないため、それは自身で管理する必要がありますが、\n"
"JWT など他の方法を使用してユーザーを保存できます。ログイン Cookie を手動で設定したい場合は、\n"
"同じ link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] クラスの\n"
" link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#rememberUser(java.lang.String,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.rememberUser`] および link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#logout(io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.logout`] \n"
"メソッドを使用できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Blocking version"
msgstr "ブロッキング版"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"If you're using a blocking data access to the database, you can safely block on the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] methods,\n"
"with `.await().indefinitely()`, because nothing is async in the `register` and `login` methods, besides the\n"
"data access with your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`]."
msgstr ""
"データベースへのブロッキングデータアクセスを使用している場合、\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] メソッドは、\n"
"`.await().indefinitely()` で安全にブロックできます。なぜなら、 `register` および `login` メソッドでは、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] を介した\n"
"データアクセス以外は非同期処理が行われないからです。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"You will have to add the `@Blocking` annotation on your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] class in order for the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr ""
"Quarkus WebAuthn エンドポイントがその呼び出しをワーカープールに委任するには、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] クラス\n"
"に `@Blocking` アノテーションを追加する必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Virtual-Threads version"
msgstr "仮想スレッドバージョン"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"You will have to add the `@RunOnVirtualThread` annotation on your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] class in order to tell the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr ""
"Quarkus WebAuthn エンドポイントがその呼び出しをワーカープールに委任するには、link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] クラス\n"
"に `@RunOnVirtualThread` アノテーションを追加する必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Testing WebAuthn"
msgstr "WebAuthnのテスト"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"Testing WebAuthn can be complicated because normally you need a hardware token, which is why we've made the\n"
"`quarkus-test-security-webauthn` helper library:"
msgstr "通常、ハードウェアトークンが必要なため、WebAuthn のテストは複雑です。そのため、私たちは `quarkus-test-security-webauthn` というヘルパーライブラリを作りました。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"With this, you can use link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnHardware.html[`WebAuthnHardware`]\n"
"to emulate an authenticator token, as well as the\n"
"link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnEndpointHelper.html[`WebAuthnEndpointHelper`]\n"
"helper methods in order to invoke the WebAuthn endpoints, or even fill your form\n"
"data for custom endpoints:"
msgstr ""
"これにより、link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnHardware.html[`WebAuthnHardware`] を使用して、\n"
"認証トークンをエミュレートしたり、\n"
"link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnEndpointHelper.html[`WebAuthnEndpointHelper`] ヘルパーメソッドを\n"
"使用して WebAuthn エンドポイントを呼び出したり、カスタムエンドポイント用に\n"
"フォームデータを埋めることができます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"For this test, since we're testing both the provided callback endpoint, which updates users\n"
"in its link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] and the manual `LoginResource` endpoint, which deals with users\n"
"manually, we need to override the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] with one that doesn't update the\n"
"`scooby` user:"
msgstr ""
"このテストでは、提供されたコールバックエンドポイント (link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] 内でユーザーを更新) と、\n"
"ユーザーを手動で処理する手動の `LoginResource` エンドポイントの両方をテストするため、\n"
"`scooby` ユーザーを更新しない link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] に\n"
"オーバーライドする必要があります。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/security-webauthn.adoc
msgid ""
"The security encryption key can be set with the\n"
"link:all-config#quarkus-vertx-http_quarkus.http.auth.session.encryption-key[`quarkus.http.auth.session.encryption-key`]\n"
"configuration option, as described in the link:security-authentication-mechanisms#form-auth[security guide]."
msgstr ""
"セキュリティー暗号鍵は、link:security-authentication-mechanisms#form-auth[セキュリティーガイド] で\n"
"説明されているように、link:all-config#quarkus-vertx-http_quarkus.http.auth.session.encryption-key[`quarkus.http.auth.session.encryption-key`] 設定オプションで\n"
"設定できます。"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.27/guides/security-webauthn.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
