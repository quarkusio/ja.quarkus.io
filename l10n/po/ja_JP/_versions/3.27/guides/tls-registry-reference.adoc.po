msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "TLS registry reference"
msgstr "TLS レジストリーリファレンス"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS Registry is a Quarkus extension that centralizes TLS configuration, making it easier to manage and maintain secure connections across your application.\n"
"When defining TLS configurations in a single centralized location, you can use the TLS Registry to reference these configurations from multiple components within the application, which ensures consistency and reduces the potential for configuration errors."
msgstr ""
"TLS レジストリーは、TLS 設定を一元管理する Quarkus エクステンションです。アプリケーション全体のセキュアな接続の管理と保守を容易にします。\n"
"TLS 設定を 1 カ所で集中して定義する場合、TLS レジストリーを使用して、アプリケーション内の複数のコンポーネントからこの設定を参照できます。これにより、一貫性が確保され、設定エラーの可能性が軽減されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS Registry consolidates settings and supports multiple named configurations.\n"
"Therefore, you can tailor TLS settings for different application parts.\n"
"This flexibility is particularly useful when different components require distinct security configurations."
msgstr ""
"TLS レジストリーは設定を統合し、複数の名前付き設定をサポートしています。\n"
"したがって、さまざまなアプリケーションパーツに合わせて TLS 設定をカスタマイズできます。\n"
"この柔軟性は、各コンポーネントに異なるセキュリティー設定が必要な場合に特に役立ちます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS Registry extension is automatically included in your project when you use compatible extensions, such as Quarkus REST, gRPC, SmallRye GraphQL Client\n"
", or Reactive Routes\n"
"."
msgstr ""
"Quarkus REST、gRPC、SmallRye GraphQL Client、Reactive Routes などの互換性のあるエクステンションを使用すると、\n"
"TLS レジストリーエクステンションがプロジェクトに自動的に追加されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "As a result, applications that use the TLS Registry can be ready to handle secure communications out of the box."
msgstr "そのため、TLS レジストリーを使用するアプリケーションは、すぐにセキュアな通信を処理できるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"TLS Registry also provides automatic certificate reloading\n"
", integration with Let's Encrypt (ACME)\n"
", support for Kubernetes Cert-Manager,\n"
"and compatibility with various keystore formats, such as PKCS12, PEM, and JKS."
msgstr ""
"TLS レジストリーは、証明書の自動再読み込み、\n"
"Let's Encrypt (ACME) との統合、\n"
"Kubernetes Cert-Manager のサポート、\n"
"および PKCS12、PEM、JKS などのさまざまなキーストアフォーマットとの互換性も提供します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Using the TLS registry"
msgstr "TLS レジストリーの使用"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"To configure a TLS connection, including key and truststores, use the `+quarkus.tls.*+` properties.\n"
"These properties are required for:"
msgstr ""
"キーとトラストストアを含む TLS 接続を設定するには、 `+quarkus.tls.*+` プロパティーを使用します。\n"
"これらのプロパティーは次の場合に必要です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Setting up the default TLS configuration, defined directly under `+quarkus.tls.*+`"
msgstr "デフォルトの TLS 設定を設定する (`+quarkus.tls.*+` の直下に定義)。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Creating separate, named configurations by using `+quarkus.tls.<name>.*+`.\n"
"By specifying the `+quarkus.tls.<name>.*+` properties, you can adapt the TLS settings for a specific component."
msgstr ""
"`+quarkus.tls.<name>.*+` を使用して、個別の名前付き設定を作成します。\n"
"`+quarkus.tls.<name>.*+` プロパティーを使用すると、特定のコンポーネントの TLS 設定を受け入れることができます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The default TLS configuration is not a fallback or global configuration.\n"
"Each named TLS configuration, or \"TLS bucket,\" must provide its own properties.\n"
"For instance, `quarkus.tls.reload-period` will only be applied to the default TLS configuration."
msgstr ""
"デフォルトの TLS 設定は、フォールバック/グローバル設定ではありません。\n"
"名前付き TLS 設定 (または TLS バケット) はそれぞれ独自のプロパティーを提供する必要があります。\n"
"たとえば、`quarkus.tls.reload-period` はデフォルトの TLS 設定のみに適用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"As described in detail link:https://github.com/quarkusio/quarkus/blob/main/adr/0004-using-the-tls-registry-for-clients.adoc#configuring-clients-with-the-tls-registry[here], Quarkus client extensions (such as REST, GRPC, and so on) ignore properties defined in default (that is, unnamed) TLS configurations.\n"
"The `quarkus.tls.trust-all` property is the only exception."
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/adr/0004-using-the-tls-registry-for-clients.adoc#configuring-clients-with-the-tls-registry[ここで] 詳しく説明するように、Quarkusのクライアント拡張（RESTやGRPCなど）は、デフォルトの（つまり名前のない）TLS設定で定義されたプロパティを無視します。 `quarkus.tls.trust-all` プロパティは唯一の例外です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configuring HTTPS for a HTTP server"
msgstr "HTTP サーバーの HTTPS の設定"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To ensure secure client-server communication, the client is often required to verify the server's authenticity."
msgstr "クライアントとサーバー間のセキュアな通信を確保するには、多くの場合、クライアントがサーバーの信頼性を検証する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The server must use a keystore that contains its certificate and private key."
msgstr "サーバーは、証明書と秘密鍵を含むキーストアを使用する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The client needs to be configured with a truststore to validate the server's certificate."
msgstr "サーバーの証明書を検証するために、クライアントにトラストストアを設定する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"During the TLS handshake, the server presents its certificate, which the client then validates.\n"
"This prevents man-in-the-middle attacks and secures data transmission."
msgstr ""
"TLS ハンドシェイク中に、サーバーは証明書を提示し、クライアントはそれを検証します。\n"
"これにより、中間者攻撃を防ぎ、データ転送をセキュアに行うことができます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The following sections guide you through setting up HTTPS by using PEM or PKCS12 keystore types.\n"
"In addition, they provide information on how to use named configurations to specify and manage multiple TLS setups at once, which makes it possible for you to define distinct settings for each."
msgstr ""
"次のセクションでは、PEM または PKCS12 キーストアタイプを使用して HTTPS を設定する方法を説明します。\n"
"さらに、名前付き設定を使用して複数の TLS 設定を一度に指定および管理する方法も説明します。この方法を使用すると、それぞれに個別の設定を定義できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Use one of the following configuration examples based on your keystore type:"
msgstr "キーストアタイプに応じて、次のいずれかの設定例を使用してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*By using PEM files:*"
msgstr "*PEM ファイルを使用する場合:*"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*By using a `p12` (PKCS12) keystore:*"
msgstr "*`p12` (PKCS12) キーストアを使用する場合:*"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*Distinguishing multiple configurations with names:*"
msgstr "*複数の設定を名前で区別する場合:*"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configuring HTTPS for a client"
msgstr "クライアントの HTTPS の設定"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following example configures a gRPC client named \"hello\" to use HTTPS with a truststore from the default TLS configuration:"
msgstr "次の例では、\"hello\" という名前の gRPC クライアントを、デフォルトの TLS 設定のトラストストアと HTTPS を使用するように設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configuring mTLS"
msgstr "mTLS の設定"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To set up mutual TLS (mTLS) in your {project-name} application, configure the server and the client by creating and managing both a keystore and a truststore for each:"
msgstr "{project-name} アプリケーションで相互 TLS (mTLS) を設定するには、サーバーとクライアントにキーストアとトラストストアの両方を作成して管理することで、それぞれを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*Server keystore*: Contains the server's certificate and private key."
msgstr "*サーバーのキーストア*: サーバーの証明書と秘密鍵が格納されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*Client keystore*: Contains the client's certificate and private key."
msgstr "*クライアントのキーストア*: クライアントの証明書と秘密鍵が格納されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*Server truststore*: Stores the client's certificate for authenticating the client."
msgstr "*サーバーのトラストストア*: クライアントを認証するためのクライアント証明書が保存されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*Client truststore*: Stores the server's certificate for authenticating the server."
msgstr "*クライアントのトラストストア*: サーバーを認証するためのサーバーの証明書が保存されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "An example configuration for specifying keystores and truststores:"
msgstr "キーストアとトラストストアを指定するための設定例:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This configuration enables mTLS by ensuring that both the server and client validate each other's certificates, which provides an additional layer of security."
msgstr "この設定により、サーバーとクライアントの両方が互いの証明書を検証することで mTLS が有効になり、セキュリティーがさらに強化されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Referencing a TLS configuration"
msgstr "TLS 設定の参照"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To reference an example _named_ configuration that you created by using the `quarkus.tls.<name>.*` properties as explained in <<using-the-tls-registry>>, use the `tls-configuration-name` property as shown in the following examples:"
msgstr "<<using-the-tls-registry>> で説明されているように、`quarkus.tls.<name>.*` プロパティーを使用して作成したサンプルの _名前付き_ 設定を参照するには、次の例に示すように `tls-configuration-name` プロパティーを使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Example configuration for the core HTTP server:"
msgstr "コア HTTP サーバーの設定例:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Example configuration for a gRPC client:"
msgstr "gRPC クライアントの設定例:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Example configuration for a SmallRye GraphQL client:"
msgstr "SmallRye GraphQL クライアントの設定例:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When using the Typesafe GraphQL client with a certificate reloading mechanism, as described in the <<reloading-certificates>> section, it is essential to override the bean's scope to `RequestScoped` or another similar scope shorter than the application.\n"
"This is because, by default, the Typesafe client is an application-scoped bean.\n"
"Shortening the scope guarantees that new instances of the bean created after a certificate reload will be configured with the latest certificate.\n"
"Dynamic clients are `@Dependent` scoped; inject them into components with an appropriate scope."
msgstr ""
"証明書リロードメカニズムとともに Typesafe GraphQL クライアントを使用する場合 (<<reloading-certificates>> セクション参照)、Bean のスコープを `RequestScoped` またはアプリケーションより短い同様のスコープにオーバーライドする必要があります。\n"
"これは、デフォルトでは Typesafe クライアントがアプリケーションスコープの Bean であるためです。\n"
"スコープを短くすることで、証明書のリロード後に作成されたBean の新しいインスタンスが最新の証明書で設定されます。\n"
"動的クライアントは `@Dependent` スコープであるため、適切なスコープを持つコンポーネントに注入します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Referencing the default truststore of SunJSSE"
msgstr "SunJSSE のデフォルトのトラストストアを参照する"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"JDK distributions typically contain a truststore in the `$JAVA_HOME/lib/security/cacerts` file.\n"
"This truststore is used as a default truststore by SunJSSE, the default implementation of the Java Secure Socket Extension (JSSE).\n"
"SSL/TLS capabilities provided by SunJSSE are leveraged by various Java Runtime components, such as `javax.net.ssl.HttpsURLConnection` and others."
msgstr ""
"JDK ディストリビューションには通常、`$JAVA_HOME/lib/security/cacerts` ファイルにトラストストアが含まれています。\n"
"このトラストストアは、Java Secure Socket Extension (JSSE) のデフォルト実装である SunJSSE によってデフォルトのトラストストアとして使用されます。\n"
"SunJSSE によって提供される SSL/TLS 機能は、`javax.net.ssl.HttpsURLConnection` などのさまざまな Java Runtime コンポーネントによって活用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Although Quarkus extensions typically do not honor the default truststore of SunJSSE, it is still practical to use it in some situations.\n"
"This applies when migrating from legacy technologies or running on a Linux distribution where the SunJSSE truststore is synchronized with the operating system (OS)."
msgstr ""
"Quarkus エクステンションは通常、SunJSSE のデフォルトのトラストストアを尊重しませんが、状況によってはそれを使用することが実用的です。\n"
"これは、従来のテクノロジーから移行する場合、または SunJSSE トラストストアがオペレーティングシステム (OS) と同期されている Linux ディストリビューションで実行する場合に適用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To simplify the use of the SunJSSE truststore, Quarkus TLS Registry provides a TLS configuration under the name `javax.net.ssl` that mimics the default behavior of SunJSSE:"
msgstr "SunJSSE トラストストアの使用を簡素化するために、Quarkus TLS レジストリーは、SunJSSE のデフォルトの動作を模倣した `javax.net.ssl` という名前の TLS 設定を提供します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If the `javax.net.ssl.trustStore` system property is defined, its value is honored as a truststore."
msgstr "`javax.net.ssl.trustStore` システムプロパティーが定義されている場合、その値はトラストストアとして尊重されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Otherwise, the paths `$JAVA_HOME/lib/security/jssecacerts` and `$JAVA_HOME/lib/security/cacerts` are checked, and the first existing file is used as a truststore."
msgstr "それ以外の場合は、`$JAVA_HOME/lib/security/jssecacerts` and `$JAVA_HOME/lib/security/cacerts` のパスがチェックされ、最初の既存のファイルがトラストストアとして使用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If neither condition is met, an `IllegalStateException` is thrown."
msgstr "どちらの条件も満たされない場合は、`IllegalStateException` がスローされます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The password for opening the truststore is taken from the `javax.net.ssl.trustStorePassword` system property.\n"
"If this property is not set, the default password `changeit` is used."
msgstr ""
"トラストストアを開くためのパスワードは、`javax.net.ssl.trustStorePassword` システムプロパティーから取得されます。\n"
"このプロパティーが設定されていない場合は、デフォルトのパスワード `changeit` が使用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The `javax.net.ssl` configuration can be used as a value for various `*.tls-configuration-name` properties, as shown below:"
msgstr "`javax.net.ssl` 設定は、以下に示すように、さまざまな `*.tls-configuration-name` プロパティーの値として使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The `javax.net.ssl` TLS configuration can be neither customized nor overridden."
msgstr "`javax.net.ssl` TLS 設定は、カスタマイズもオーバーライドもできません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configuring TLS"
msgstr "TLS の設定"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"TLS configuration primarily involves managing keystores and truststores.\n"
"The specific setup depends on the format used, such as PEM, P12, or JKS."
msgstr ""
"TLS 設定には、主にキーストアとトラストストアの管理が含まれます。\n"
"具体的な設定は、使用されるフォーマット (PEM、P12、JKS など) により異なります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following sections outline the various properties available for configuring TLS."
msgstr "次のセクションでは、TLS を設定するために使用できるさまざまなプロパティーを説明します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Key stores"
msgstr "キーストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Key stores store private keys and certificates.\n"
"They are mainly used on the server side but can also be used on the client side when mTLS is used."
msgstr ""
"キーストアには秘密鍵と証明書が保存されます。\n"
"これらは主にサーバー側で使用されますが、mTLS を使用する場合はクライアント側でも使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PEM keystores"
msgstr "PEM キーストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Privacy Enhanced Mail (PEM) keystores are composed of a list of file pairs:"
msgstr "Privacy Enhanced Mail (PEM) キーストアは、ファイルペアのリストから構成されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*The certificate file* - a `.crt` or `.pem` file."
msgstr "*証明書ファイル* - `.crt` または `.pem` ファイル"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "*The private key file* - often a `.key` file."
msgstr "*秘密鍵ファイル* - 多くの場合は `.key` ファイル"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a PEM keystore:"
msgstr "PEM キーストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"In most cases, you only need a single pair consisting of a certificate and a private key.\n"
"Even if the certificate is part of a certificate chain, it includes only one private key that corresponds to the end-entity certificate."
msgstr ""
"ほとんどの場合、証明書と秘密鍵で構成されるペアが 1 つだけ必要です。\n"
"証明書が証明書チェーンの一部である場合でも、キーストアに含まれる秘密鍵は、エンドエンティティー証明書に対応するもの 1 つだけです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When multiple pairs are configured, the selection of one of the configured pairs of certificates and private keys is based on Server Name Indication (SNI).\n"
"The client sends the name of the server to which the client is attempting to connect, and the server selects the appropriate pair of certificates and private keys.\n"
"To use this feature, ensure that xref:./tls-registry-reference.adoc#sni[SNI] is enabled on both the client and server."
msgstr ""
"複数のペアが設定されている場合、設定された証明書と秘密鍵のペアの 1 つが、Server Name Indication (SNI) に基づいて選択されます。\n"
"クライアントは接続しようとしているサーバーの名前を送信し、サーバーは適切な証明書と秘密鍵のペアを選択します。\n"
"この機能を使用するには、クライアントとサーバーの両方で xref:./tls-registry-reference.adoc#sni[SNI] が有効になっていることを確認してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When configuring multiple key pairs or certificate pairs, the server executes the configured pairs in a lexicographical order of their names by default, as demonstrated with `store.pem.a` and `store.pem.b` in the previous example.\n"
"The pair with the lowest lexicographical order is executed first.\n"
"To change this, you can define the order by using the `quarkus.tls.key-store.pem.order` property.\n"
"For example, `quarkus.tls.key-store.pem.order=b,c,a`."
msgstr ""
"複数の鍵ペアまたは証明書ペアを設定する場合、前の例の `store.pem.a` と `store.pem.b` で示されているように、サーバーはデフォルトで設定されたペアを名前の辞書順に実行します。\n"
"辞書順が最も下位のペアが最初に実行されます。\n"
"これを変更するには、 `quarkus.tls.key-store.pem.order` プロパティーを使用して順序を定義します。\n"
"たとえば、 `quarkus.tls.key-store.pem.order=b,c,a` です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This setting is important when using SNI, because it uses the first specified pair as the default."
msgstr "この設定は、最初に指定されたペアをデフォルトとして使用するため、SNI を使用する場合に重要です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When using PEM keystore, the following formats are supported:"
msgstr "PEM キーストアを使用する場合、次のフォーマットがサポートされます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PKCS#8 private key (unencrypted)"
msgstr "PKCS#8 秘密鍵 (暗号化されていない)"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PKCS#1 RSA private key (unencrypted)"
msgstr "PKCS#1 RSA 秘密鍵 (暗号化されていない)"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Encrypted PKCS#8 private key (encrypted with AES-128-CBC)"
msgstr "暗号化された PKCS#8 秘密鍵 (AES-128-CBC で暗号化)"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "In the later case, the `quarkus.tls.key-store.pem.password` or `quarkus.tls.key-store.pem.<name>.password` property must be set to the password used to decrypt the private key."
msgstr "後者の場合、`quarkus.tls.key-store.pem.password` または `quarkus.tls.key-store.pem.<name>.password` プロパティーは、秘密鍵の複合に使用するパスワードに設定する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "An encrypted PEM keystore configuration example:"
msgstr "暗号化された PEM キーストアの設定例: "

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PKCS12 keystores"
msgstr "PKCS12 キーストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PKCS12 keystores are single files that contain the certificate and the private key."
msgstr "PKCS12 キーストアは、証明書と秘密鍵を含む単一のファイルです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a PKCS12 keystore:"
msgstr "PKCS12 キーストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`.p12` files are password-protected, so you need to provide the password to open the keystore."
msgstr "`.p12` ファイルはパスワードで保護されているため、キーストアを開くにはパスワードを指定する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"These files can include more than one certificate and private key.\n"
"If this is the case, take either of the following actions:"
msgstr ""
"このファイルには、複数の証明書と秘密鍵を含めることができます。\n"
"その場合は、次のいずれかの操作を実行してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Provide and configure the alias of the certificate and the private key you want to use:"
msgstr "使用する証明書と秘密鍵のエイリアスを指定して設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Alternatively, use SNI to select the appropriate certificate and private key.\n"
"Note that all keys must use the same password."
msgstr ""
"または、SNI を使用して適切な証明書と秘密鍵を選択します。\n"
"すべてのキーに同じパスワードを使用する必要があることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "JKS keystores"
msgstr "JKS キーストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "JKS keystores are single files that contain the certificate and the private key for the server or client, used to authenticate and establish secure communications in TLS/SSL connections."
msgstr "JKS キーストアは、サーバーまたはクライアントの証明書と秘密鍵を含む単一のファイルです。TLS/SSL 接続で認証してセキュアな通信を確立するために使用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"JKS is an old but still widely used Java-specific format.\n"
"However, to work with this format, you must use specific, and nowadays also deprecated, Java tooling.\n"
"Thus, its use with your {project-name} application is not recommended."
msgstr ""
"JKS は古いフォーマットですが、今でも広く使用されている Java 固有のフォーマットです。\n"
"ただし、このフォーマットを扱うには、現在では非推奨となっている特定の Java ツールを使用する必要があります。\n"
"したがって、{project-name} アプリケーションでの使用は推奨されません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Additionally, OpenShift cert-manager or Let's Encrypt does not typically provide JKS and remains PEM-only."
msgstr "また、OpenShift cert-manager や Let’s Encrypt は、通常 JKS を提供せず、現在も PEM しか提供しません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a JKS keystore:"
msgstr "JKS キーストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the keystore.\n"
"Also, they can include more than one certificate and private key.\n"
"If this is the case:"
msgstr ""
"`.jks` ファイルはパスワードで保護されているため、キーストアを開くにはパスワードを入力する必要があります。\n"
"また、複数の証明書と秘密鍵を含めることもできます。\n"
"この場合、次のことが可能です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Provided keystores"
msgstr "提供されたキーストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If you need more control over the keystore used in a TLS configuration, you can provide a CDI bean implementing the `io.quarkus.tls.runtime.KeyStoreProvider` interface. Quarkus calls `KeyStoreProvider::getKeyStore` when the TLS configuration is <<startup-checks,initially created>> and any time the configuration is <<reloading-certificates,reloaded>>. The resulting keystore and options are then made available via `TlsConfiguration::getKeyStore` and `TlsConfiguration::getKeyStoreOptions`."
msgstr "TLS 設定で使用されるキーストアをより細かく制御する必要がある場合は、`io.quarkus.tls.runtime.KeyStoreProvider`インターフェイスを実装する CDI Bean を提供できます。Quarkus は TLS 設定が<<startup-checks,最初に作成される>> 場合、および設定が <<reloading-certificates,リロード>> されるたびに、`KeyStoreProvider::getKeyStore` を呼び出します。結果として得られるキーストアとオプションは、`TlsConfiguration::getKeyStore` と `TlsConfiguration::getKeyStoreOptions` を介して利用できるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Example KeyStoreProvider"
msgstr "KeyStoreProvider の例"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The CDI bean implementing the `KeyStoreProvider` interface can be `@ApplicationScoped`, `@Singleton` or `@Dependent`."
msgstr "`KeyStoreProvider` インターフェイスを実装する CDI Bean は、`@ApplicationScoped`、`@Singleton`、または `@Dependent` にすることができます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Use the `@Identifier` qualifier to indicate a named TLS configuration for which to provide keystore options. Omit the qualifier (or use `@Default` explicitly) to indicate the default TLS configuration. See <<referencing-a-tls-configuration>> for more details."
msgstr "`@Identifier` 修飾子を使用して、キーストアオプションを提供する名前付き TLS 設定を指定します。修飾子を省略 (または明示的に `@Default` を使用) して、デフォルトの TLS 設定を指定します。詳細は、<<referencing-a-tls-configuration>> を参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Other CDI beans can be injected for runtime access to keystore material."
msgstr "キーストアマテリアルへの実行時アクセスのために、他の CDI Bean を注入できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "SNI"
msgstr "SNI"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Server Name Indication (SNI) is a TLS extension that makes it possible for a client to specify the host name to which it attempts to connect during the TLS handshake.\n"
"SNI enables a server to present different TLS certificates for multiple domains on a single IP address, which facilitates secure communication for virtual hosting scenarios."
msgstr ""
"Server Name Indication (SNI) は、TLS ハンドシェイク中にクライアントが接続を試みるホスト名を指定できるようにする TLS エクステンションです。\n"
"SNI を使用すると、サーバーが単一の IP アドレス上の複数のドメインに対して異なる TLS 証明書を提示できるようになります。これにより、仮想ホスティングシナリオでセキュアな通信が容易になります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To enable SNI:"
msgstr "SNI を有効にするには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "With SNI enabled, the client indicates the server name during the TLS handshake, which allows the server to select the appropriate certificate:"
msgstr "SNI が有効な場合、クライアントは TLS ハンドシェイク中にサーバー名を示します。これにより、サーバーが適切な証明書を選択できるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When configuring the keystore with PEM files, multiple certificate (CRT) and key files must be provided.\n"
"CRT is a common file extension for X.509 certificate files, typically in PEM (Privacy-Enhanced Mail) format.\n"
"These files contain the public certificate."
msgstr ""
"PEM ファイルを使用してキーストアを設定する場合は、複数の証明書 (CRT) ファイルと鍵ファイルを提供する必要があります。\n"
"CRT は、X.509 証明書ファイルの一般的なファイル拡張子であり、通常は PEM (Privacy-Enhanced Mail) フォーマットです。\n"
"このファイルには公開証明書が含まれています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When configuring the keystore with a JKS or P12 file, the server selects the appropriate certificate based on the SNI host name provided by the client during the TLS handshake.\n"
"The server matches the SNI hostname with the common name (CN) or subject alternative names (SAN) configured in the certificates stored in the keystore.\n"
"All keystore and alias passwords must be identical."
msgstr ""
"JKS または P12 ファイルを使用してキーストアを設定する場合、サーバーが TLS ハンドシェイク中にクライアントによって提供された SNI ホスト名に基づいて適切な証明書を選択します。\n"
"サーバーは、SNI ホスト名を、キーストアに保存されている証明書に設定されているコモンネーム (CN) またはサブジェクト代替名 (SAN) と照合します。\n"
"すべてのキーストアとエイリアスのパスワードが同一である必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Credential providers"
msgstr "認証情報プロバイダー"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "You can use a credential provider instead of passing the keystore password and alias password in the configuration."
msgstr "設定でキーストアのパスワードとエイリアスのパスワードを渡す代わりに、認証情報プロバイダーを使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"A credential provider offers a way to retrieve the keystore and alias password.\n"
"Note that the credential provider is only used if the password or alias password is not set in the configuration."
msgstr ""
"認証情報プロバイダーは、キーストアとエイリアスのパスワードを取得する方法として機能します。\n"
"認証情報プロバイダーは、設定でパスワードまたはエイリアスパスワードが設定されていない場合にのみ使用されることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a credential provider:"
msgstr "認証情報プロバイダーを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The credential provider can only be used with PKCS12 and JKS keystores."
msgstr "認証情報プロバイダーは、PKCS12 および JKS キーストアでのみ使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Trust stores"
msgstr "トラストストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Trust stores are used to store the certificates of the trusted parties.\n"
"In regular TLS, the client uses a truststore to authenticate the server.\n"
"With mutual TLS (mTLS), both the server and the client use truststores to authenticate each other."
msgstr ""
"トラストストアは、信頼できる当事者の証明書を保存するために使用されます。\n"
"通常の TLS では、クライアントがトラストストアを使用してサーバーを認証します。\n"
"相互 TLS (mTLS) では、サーバーとクライアントの両方がトラストストアを使用して相互に認証します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PEM truststores"
msgstr "PEM トラストストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"PEM truststores are composed of a list of `.crt` or `.pem` files.\n"
"Each of them contains a certificate."
msgstr ""
"PEM トラストストアは、 `.crt` または `.pem` ファイルのリストで構成されます。\n"
"それぞれに証明書が含まれています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a PEM truststore:"
msgstr "PEM トラストストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "PKCS12 truststores"
msgstr "PKCS12 トラストストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"PKCS12 truststores are a single file containing the certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are included."
msgstr ""
"PKCS12 トラストストアは、証明書を含む単一のファイルです。\n"
"複数の証明書が含まれている場合は、エイリアスを使用して適切な証明書を選択できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a PKCS12 truststore:"
msgstr "PKCS12 トラストストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike keystores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr ""
"`.p12` ファイルはパスワードで保護されているため、トラストストアを開くにはパスワードを入力する必要があります。\n"
"ただし、キーストアとは異なり、トラストストアには秘密鍵ではなく公開証明書が含まれているため、エイリアスにパスワードは必要ありません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "JKS truststores"
msgstr "JKS トラストストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"JKS truststores are single files that contain multiple certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are present.\n"
"However, avoid using the JKS format, because it is less secure than PKCS12."
msgstr ""
"JKS トラストストアは、複数の証明書を含む単一のファイルです。\n"
"複数の証明書が存在する場合は、エイリアスを使用して適切な証明書を選択できます。\n"
"ただし、JKS フォーマットは PKCS12 よりもセキュリティーが低いため、使用しないでください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure a JKS truststore:"
msgstr "JKS トラストストアを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike keystores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr ""
"`.jks` ファイルはパスワードで保護されているため、トラストストアを開くにはパスワードを入力する必要があります。\n"
"ただし、キーストアとは異なり、トラストストアには秘密鍵ではなく公開証明書が含まれているため、エイリアスにパスワードは必要ありません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Provided truststores"
msgstr "提供されたトラストストア"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If you need more control over the truststore used in a TLS configuration, you can provide a CDI bean implementing the `io.quarkus.tls.runtime.TrustStoreProvider` interface. Quarkus calls `TrustStoreProvider::getTrustStore` when the TLS configuration is <<startup-checks,initially created>> and any time the configuration is <<reloading-certificates,reloaded>>. The resulting truststore and options are then made available via `TlsConfiguration::getTrustStore` and `TlsConfiguration::getTrustStoreOptions`."
msgstr "TLS 設定で使用されるトラストストアをより細かく制御する必要がある場合は、`io.quarkus.tls.runtime.TrustStoreProvider`インターフェイスを実装する CDI Bean を提供できます。Quarkus は TLS 設定が<<startup-checks,最初に作成される>> 場合、および設定が <<reloading-certificates,リロード>> されるたびに、`TrustStoreProvider::getTrustStore` を呼び出します。結果として得られるトラストストアとオプションは、`TlsConfiguration::getTrustStore` および `TlsConfiguration::getTrustStoreOptions` を介して利用できるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Example TrustStoreProvider"
msgstr "TrustStoreProvider の例"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The CDI bean implementing the `TrustStoreProvider` interface can be `@ApplicationScoped`, `@Singleton` or `@Dependent`."
msgstr "`TrustStoreProvider` インターフェイスを実装する CDI Bean は、`@ApplicationScoped`、`@Singleton`、または `@Dependent` にすることができます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Use the `@Identifier` qualifier to indicate a named TLS configuration for which to provide truststore options. Omit the qualifier (or use `@Default` explicitly) to indicate the default TLS configuration. See <<referencing-a-tls-configuration>> for more details."
msgstr "`@Identifier` 修飾子を使用して、トラストストアオプションを提供する名前付き TLS 設定を指定します。修飾子を省略 (または明示的に `@Default` を使用) して、デフォルトの TLS 設定を指定します。詳細は、<<referencing-a-tls-configuration>> を参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Other CDI beans can be injected for runtime access to truststore material."
msgstr "トラストストアマテリアルへの実行時アクセスのために、他の CDI Bean を注入できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Instead of passing the truststore password in the configuration, you can use a credential provider.\n"
"A credential provider allows you to retrieve passwords and other credentials.\n"
"Note that the credential provider is used only if the password is not set in the configuration."
msgstr ""
"設定でトラストストアのパスワードを渡す代わりに、認証情報プロバイダーを使用できます。\n"
"認証情報プロバイダーを使用すると、パスワードやその他の認証情報を取得できます。\n"
"認証情報プロバイダーは、設定でパスワードが指定されていない場合にのみ使用されることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The credential provider can only be used with PKCS12 and JKS truststores."
msgstr "認証情報プロバイダーは、PKCS12 および JKS トラストストアでのみ使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Other properties"
msgstr "その他のプロパティー"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "While keystores and truststores are the most important properties, there are other properties you can use to configure TLS."
msgstr "キーストアとトラストストアは最も重要なプロパティーですが、TLS を設定するために使用できる他のプロパティーもあります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "While the following examples use the _default_ configuration, you can use the _named_ configuration by prefixing the properties with the configuration's name."
msgstr "次の例では _デフォルト_ の設定を使用していますが、プロパティーの前に設定名を付けることで、_名前付き_ 設定を使用することもできます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Cipher suites"
msgstr "暗号化スイート"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Cipher suites are a list of ciphers that you can use during the TLS handshake.\n"
"You can configure an ordered list of enabled cipher suites.\n"
"If not configured, a reasonable default is selected from the built-in ciphers.\n"
"However, when specified, your configuration precedes the default suite defined by the SSL engine in use."
msgstr ""
"暗号スイートは、TLS ハンドシェイク中に使用できる暗号のリストです。\n"
"有効な暗号スイートの順序付きリストを設定できます。\n"
"設定されていない場合は、組み込みの暗号の中から適切なデフォルトが選択されます。\n"
"ただし、設定を指定すると、その設定が、使用中の SSL エンジンによって定義されているデフォルトスイートよりも優先されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure the cipher suites:"
msgstr "暗号スイートを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "TLS protocol versions"
msgstr "TLS プロトコルのバージョン"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS protocol versions are the list of protocols that can be used during the TLS handshake.\n"
"Enabled TLS protocol versions are specified as an ordered list separated by commas.\n"
"The relevant configuration property is `quarkus.tls.protocols` or `quarkus.tls.<name>.protocols` for named TLS configurations.\n"
"It defaults to `TLSv1.3, TLSv1.2` if not configured."
msgstr ""
"TLS プロトコルバージョンは、TLS ハンドシェイク中に使用できるプロトコルのリストです。\n"
"有効な TLS プロトコルバージョンを、コンマ区切りの順序付きリストとして指定します。\n"
"関連する設定プロパティー、`quarkus.tls.protocols` または 名前付き TLS 設定の `quarkus.tls.<name>.protocols` です。\n"
"設定されていない場合は、デフォルトで `TLSv1.3, TLSv1.2` になります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The available options are `TLSv1`, `TLSv1.1`, `TLSv1.2`, and `TLSv1.3`."
msgstr "使用可能なオプションは、 `TLSv1`、 `TLSv1.1`、 `TLSv1.2`、 `TLSv1.3` です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "For example, to only enable `TLSv1.3`:"
msgstr "たとえば `TLSv1.3` のみを有効にするには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Handshake timeout"
msgstr "ハンドシェイクタイムアウト"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When a TLS connection is established, the handshake phase is the first step.\n"
"During this phase, the client and server exchange information to establish the connection, which typically includes the cipher suite, the TLS protocol version, and the certification validation."
msgstr ""
"TLS 接続が確立されると、ハンドシェイクフェーズが最初のステップになります。\n"
"このフェーズでは、クライアントとサーバーは接続を確立するための情報 (通常は暗号スイート、TLS プロトコルバージョン、証明書の検証などが含まれる) を交換します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure the timeout for the handshake phase:"
msgstr "ハンドシェイクフェーズのタイムアウトを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "ALPN"
msgstr "ALPN"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Application-Layer Protocol Negotiation (ALPN) is a TLS extension that allows the client and server to negotiate which protocol they will use for communication during the TLS handshake.\n"
"ALPN enables more efficient communication by allowing the client to indicate its preferred application protocol to the server before establishing the TLS connection."
msgstr ""
"Application-Layer Protocol Negotiation (ALPN) は、TLS ハンドシェイク中にクライアントとサーバーが通信に使用するプロトコルをネゴシエートできるようにする TLS エクステンションです。\n"
"ALPN は、TLS 接続を確立する前に、クライアントが優先アプリケーションプロトコルをサーバーに指定できるようにすることで、より効率的な通信を可能にします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This helps in scenarios like HTTP/2, where multiple protocols might be available, allowing for faster protocol selection."
msgstr "これは、複数のプロトコルが利用できる可能性がある HTTP/2 などのシナリオで役立ち、プロトコルの選択を高速化します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "ALPN is enabled by default."
msgstr "ALPN はデフォルトで有効になっています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To disable it:"
msgstr "無効にするには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Disabling ALPN is not recommended for non-experts, as it can lead to performance degradation, protocol negotiation issues, and unexpected behavior, particularly with protocols like HTTP/2.\n"
"However, disabling ALPN can be useful for diagnosing native inconsistencies or testing performance in specific edge cases where protocol negotiation causes conflicts."
msgstr ""
"ALPN を無効にすることは、エキスパート以外には推奨されません。特に HTTP/2 などのプロトコルで、パフォーマンスの低下、プロトコルネゴシエーションの問題、予期しない動作が発生する可能性があるためです。\n"
"ただし、ALPN の無効化は、プロトコルネゴシエーションによって競合が発生する特殊なケースで、固有の不整合を診断したり、パフォーマンスをテストしたりするのに役立ちます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Certificate Revocation List (CRL)"
msgstr "証明書失効リスト (CRL)"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"A Certificate Revocation List (CRL) is a list of certificates that the issuing Certificate Authority (CA) revoked before their scheduled expiration date.\n"
"When a certificate is compromised, no longer needed, or deemed invalid, the CA adds it to the CRL to inform relying parties not to trust it anymore."
msgstr ""
"証明書失効リスト (CRL) は、予定の有効期限より前に発行元の認証局 (CA) によって失効させられたデジタル証明書のリストです。\n"
"証明書が侵害されたり、不要になったり、無効と判断されたりした場合、CA は証明書を CRL に追加して、その証明書を信頼しないよう証明書利用者に通知します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "You can configure the CRL with the list of certificate files you no longer trust by using the DER or PKCS#7 (P7B) formats."
msgstr "CRL は、DER または PKCS#7 (P7B) フォーマットを使用して、信頼できなくなった証明書ファイルのリストで設定できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "For the DER format, pass DER-encoded CRLs."
msgstr "DER フォーマットの場合、DER でエンコードされた CRL を渡します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "For the PKCS#7 format, pass the `SignedData` object, where the only significant field is `crls`."
msgstr "PKCS#7 フォーマットの場合、 `SignedData` オブジェクトを渡します。この場合、重要なフィールドは `crls` だけです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure the CRL:"
msgstr "CRL を設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Trusting all certificates and hostname verification"
msgstr "すべての証明書とホスト名の検証を信頼する"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"You can configure your TLS connection to trust all certificates and disable the hostname verification.\n"
"Note that these are two different processes:"
msgstr ""
"すべての証明書を信頼し、ホスト名の検証を無効にするように TLS 接続を設定できます。\n"
"これらは 2 つの異なるプロセスであることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Trusting all certificates ignores the certificate validation, so all certificates are trusted.\n"
"This method is useful for testing with self-signed certificates, but it should not be used in production."
msgstr ""
"すべての証明書を信頼すると、証明書の検証が無視されるため、すべての証明書が信頼されます。\n"
"この方法は自己署名証明書を使用したテストには便利ですが、実稼働環境では使用しないでください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Hostname verification is the process of verifying the server's identity."
msgstr "ホスト名の検証は、サーバーのアイデンティティーを検証するプロセスです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "It is useful to prevent man-in-the-middle attacks and often defaults to `HTTPS` or `LDAPS`."
msgstr "これは中間者攻撃を防ぐのに役立ち、多くの場合、デフォルトで `HTTPS` または `LDAPS` に設定されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "These two properties should not be used in production."
msgstr "これら 2 つのプロパティーは、実稼働環境では使用しないでください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To trust all certificates:"
msgstr "すべての証明書を信頼するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To disable hostname verification:"
msgstr "ホスト名の検証を無効にするには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Preventing client renegotiation"
msgstr "クライアントの再ネゴシエーションの防止"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Client-initiated renegotiation allows a client to request new session parameters, such as a different cipher suite, during an established TLS connection.\n"
"While this feature can provide flexibility, it also introduces a potential security risk when using TLS 1.2."
msgstr ""
"クライアント開始の再ネゴシエーションにより、クライアントは確立された TLS 接続中に、異なる暗号スイートなどの新しいセッションパラメーターをリクエストできます。\n"
"この機能は柔軟性を提供しますが、TLS 1.2 を使用する場合には潜在的なセキュリティーリスクも発生します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When a client initiates a new TLS handshake, the server typically consumes significantly more CPU resources than the client. This resource asymmetry can be exploited to launch denial-of-service (DoS) attacks, overwhelming the server with renegotiation requests."
msgstr "クライアントが新しい TLS ハンドシェイクを開始すると、通常、サーバーはクライアントよりも大幅に多くの CPU リソースを消費します。このリソースの非対称性は、サービス拒否 (DoS) 攻撃を開始するために悪用され、再ネゴシエーションリクエストでサーバーを圧倒する可能性があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "TLS 1.3 completely removes support for renegotiation, effectively closing this potential attack vector."
msgstr "TLS 1.3 では再ネゴシエーションのサポートが完全に削除され、この潜在的な攻撃ベクトルが事実上閉じられます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To secure TLS 1.2 and earlier, set `jdk.tls.rejectClientInitiatedRenegotiation` to `true` to prevent client-initiated renegotiation."
msgstr "TLS 1.2 以前を保護するには、`jdk.tls.rejectClientInitiatedRenegotiation` を `true` に設定して、クライアントが開始した再ネゴシエーションを防止します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If you are using the Quarkus-provided `Dockerfile` in JVM mode, you can disable renegotiation by adding the property to the `JAVA_OPTS_APPEND` environment variable:"
msgstr "Quarkus が提供する `Dockerfile` を JVM モードで使用している場合は、`JAVA_OPTS_APPEND` 環境変数にプロパティーを追加することで、再ネゴシエーションを無効化できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following table lists the supported properties:"
msgstr "次の表は、サポートされるプロパティの一覧です:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The registry API"
msgstr "レジストリー API"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "While extensions automatically use the TLS registry, you can also access the TLS configuration programmatically through the registry API."
msgstr "エクステンションは自動的に TLS レジストリーを使用します。一方、ユーザーはレジストリー API を介してプログラムで TLS 設定にアクセスすることもできます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"To access the TLS configuration, inject the `TlsConfigurationRegistry` bean.\n"
"You can retrieve a named TLS configuration by calling `get(\"<NAME>\")` or the default configuration by calling `getDefault()`."
msgstr ""
"TLS 設定にアクセスするには、 `TlsConfigurationRegistry` Bean を注入します。\n"
" `get(\"<NAME>\")` を呼び出して名前付き TLS 設定を取得するか、 `getDefault()` を呼び出してデフォルト設定を取得します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The `TlsConfiguration` object contains the keystores, truststores, cipher suites, protocols, and other properties.\n"
"It also provides a way to create an `SSLContext` from the configuration."
msgstr ""
"`TlsConfiguration` オブジェクトには、キーストア、トラストストア、暗号スイート、プロトコル、およびその他のプロパティーが含まれています。\n"
"また、設定から `SSLContext` を作成する方法も提供します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "You can also use the `TlsConfiguration` object to configure the Vert.x client or server, such as `KeyCertOptions`, `TrustOptions`, and so on."
msgstr "また、 `TlsConfiguration` オブジェクトを使用して、 `KeyCertOptions`、 `TrustOptions` などの Vert.x クライアントまたはサーバーを設定することもできます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Registering a certificate from an extension"
msgstr "エクステンションからの証明書の登録"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"This section is only for extension developers.\n"
"An extension can register a certificate in the TLS registry.\n"
"This is useful when an extension needs to provide a certificate to the application or provides a different format."
msgstr ""
"このセクションはエクステンション開発者専用です。\n"
"エクステンションは、TLS レジストリーに証明書を登録できます。\n"
"これは、エクステンションがアプリケーションに証明書を提供する必要がある場合、または異なるフォーマットを提供する場合に便利です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To register a certificate in the TLS registry by using the extension, the _processor_ extension must produce a `TlsCertificateBuildItem` composed of a name and a `CertificateSupplier`."
msgstr "エクステンションを使用して TLS レジストリーに証明書を登録するには、_プロセッサー_ エクステンションで、名前と `CertificateSupplier` で構成される `TlsCertificateBuildItem` を生成する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The certificate supplier is a runtime object generally retrieved by using a recorder method."
msgstr "証明書サプライヤーは、通常、レコーダーメソッドを使用して取得されるランタイムオブジェクトです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "An example of a certificate supplier:"
msgstr "証明書サプライヤーの例:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Startup checks"
msgstr "起動時チェック"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When an application that uses the TLS extension starts, the TLS registry performs several checks to ensure the configuration is correct:"
msgstr "TLS エクステンションを使用するアプリケーションが起動すると、TLS レジストリーは、設定が正しいことを確認するために、以下に示すいくつかのチェックを実行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Keystores and truststores are accessible."
msgstr "キーストアとトラストストアにアクセスできる。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Aliases are available and accessible in the keystores and truststores."
msgstr "エイリアスがキーストアとトラストストアで使用可能であり、アクセスできる。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Certificates are valid."
msgstr "証明書が有効である。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Cipher suites and protocols are valid."
msgstr "暗号スイートとプロトコルが有効である。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Certificate Revocation Lists (CRLs) are valid."
msgstr "証明書失効リスト (CRL) が有効である。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "If any of these checks fail, the application will not start."
msgstr "これらのチェックのいずれかが失敗すると、アプリケーションは起動しません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Reloading certificates"
msgstr "証明書の再読み込み"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The `TlsConfiguration` obtained from the `TLSConfigurationRegistry` includes a mechanism for reloading certificates.\n"
"The `reload` method refreshes the keystores, truststores, and CRLs, typically by reloading them from the file system."
msgstr ""
"`TLSConfigurationRegistry` から取得された `TlsConfiguration` には、証明書をリロードするためのメカニズムが含まれています。\n"
"`reload` メソッドは、通常はファイルシステムからキーストア、トラストストア、CRL をリロードして更新します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The reload operation is not automatic and must be triggered manually.\n"
"Additionally, the `TlsConfiguration` implementation must support reloading, as is the case for the configured certificate."
msgstr ""
"リロード操作は自動ではなく、手動でトリガーする必要があります。\n"
"さらに、`TlsConfiguration` 実装はリロードをサポートする必要があります (設定された証明書の場合と同様)。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The `reload` method returns a `boolean` indicating whether the reload was successful.\n"
"A value of `true` means the reload operation was successful, not necessarily that there were updates to the certificates."
msgstr ""
"`reload` メソッドは、リロードが成功したかどうかを示す `boolean` を返します。\n"
"`true` 値は、リロード操作が成功したことを意味しますが、必ずしも証明書が更新されたことを意味するわけではありません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "After a `TlsConfiguration` has been reloaded, servers and clients using this configuration may need to perform specific actions to apply the new certificates."
msgstr "`TlsConfiguration` がリロードされた後、この設定を使用するサーバーとクライアントが、新しい証明書を適用するために特定の操作を実行する必要がある場合があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The preferred approach for informing clients and servers about the certificate reload is to fire a CDI event of type `io.quarkus.tls.CertificateUpdatedEvent`.\n"
"To do so, inject a CDI event of this type and fire it when a reload occurs."
msgstr "証明書のリロードをクライアントとサーバーに通知するための好ましい方法は、 `io.quarkus.tls.CertificateUpdatedEvent` タイプの CDI イベントを発生させることです。そのためには、このタイプのCDIイベントを注入し、リロードが発生したときにそれを発生させます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
#, fuzzy
msgid "An example of manually reloading a TLS configuration and notifying components by firing a `CertificateUpdatedEvent` and reacting to it:"
msgstr "手動でTLSコンフィギュレーションをリロードし、 `CertificateUpdatedEvent` 、それに反応することでコンポーネントに通知する例："

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Periodic reloading"
msgstr "定期的なリロード"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry includes a built-in mechanism for periodically checking the file system for changes and reloading certificates.\n"
"The `reload-period` property specifies the interval for reloading certificates and emits a `CertificateUpdatedEvent` each time certificates are reloaded."
msgstr ""
"TLS レジストリーには、ファイルシステムの変更を定期的にチェックし、証明書を再読み込みするためのメカニズムが組み込まれています。\n"
"`reload-period` プロパティーは、証明書をリロードする間隔を指定し、証明書がリロードされるたびに `CertificateUpdatedEvent` を発行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure periodic certificate reloading:"
msgstr "定期的な証明書の再読み込みを設定するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "For each named configuration, you can set a specific reload period:"
msgstr "名前付き設定ごとに、特定のリロード期間を設定できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Impacted servers and clients might need to listen to the `CertificateUpdatedEvent` to apply the new certificates.\n"
"This is automatically handled for the Quarkus HTTP, REST, gRPC, and WebSocket servers, as well as the management interface if enabled.\n"
"On the client side, Quarkus REST Client automatically handles certificate update events."
msgstr "影響を受けるサーバーとクライアントは、新しい証明書を適用するために `CertificateUpdatedEvent` をリッスンする必要がある場合があります。これは、Quarkus HTTP、REST、gRPC、WebSocketサーバー、および管理インターフェイス（有効な場合）で自動的に処理されます。クライアント側では、Quarkus RESTクライアントが証明書の更新イベントを自動的に処理します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "In Quarkus dev mode, when files are touched, it will trigger the `CertificateUpdatedEvent` much more frequently."
msgstr "Quarkus 開発モードでは、ファイルが変更されると、 `CertificateUpdatedEvent` がより頻繁にトリガーされます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Using Kubernetes secrets or cert-manager"
msgstr "Kubernetes シークレットまたは cert-manager の使用"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When running in Kubernetes, you can use Kubernetes secrets to store the keystores and truststores."
msgstr "Kubernetes で実行する場合、Kubernetes シークレットを使用してキーストアとトラストストアを保存できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Using Kubernetes secrets"
msgstr "Kubernetes シークレットの使用"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "By using the secret below as an example, create a secret with the keystores and truststores to use Kubernetes secrets:"
msgstr "以下のシークレットを例として、Kubernetes シークレットを使用するためのキーストアとトラストストアが含まれるシークレットを作成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Mount the secret as a volume in the pod, which is the easiest way to use these certificates:"
msgstr "シークレットを Pod 内のボリュームとしてマウントします。これは、証明書を使用する最も簡単な方法です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configure the TLS registry to use the certificates:"
msgstr "証明書を使用するように TLS レジストリーを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "You can combine this with the periodic reloading to automatically reload the certificates when they change."
msgstr "これを定期的なリロードと組み合わせて、証明書が変更されたときに自動的にリロードできるようにします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Using cert-manager"
msgstr "cert-manager の使用"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When running in Kubernetes, you can use cert-manager to generate and renew certificates automatically.\n"
"Cert-manager produces a secret containing the keystores and truststores.\n"
"Configuring the TLS registry is the same as when using Kubernetes secrets.\n"
"The generated secret includes the following files:"
msgstr ""
"Kubernetes で実行する場合、cert-manager を使用して証明書を自動的に生成および更新できます。\n"
"cert-manager は、キーストアとトラストストアが含まらえるシークレットを生成します。\n"
"TLS レジストリーの設定は、Kubernetes シークレットを使用する場合と同じです。\n"
"生成されたシークレットには次のファイルが含まれます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`tls.crt` for the certificate"
msgstr "証明書用の `tls.crt`"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`tls.key` for the private key"
msgstr "秘密鍵用の `tls.key`"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`ca.crt` for the CA certificate (if needed)"
msgstr "CA 証明書用の `ca.crt` (必要な場合)"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To configure automatic certificate renewal, use the periodic reloading mechanism:"
msgstr "証明書の自動更新を設定するには、定期的なリロードメカニズムを使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Working with OpenShift serving certificates"
msgstr "OpenShift 提供証明書の使用"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When running your application in OpenShift, you can use the link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift serving certificates] to generate and renew TLS certificates automatically.\n"
"The Quarkus TLS registry can use these certificates and Certificate Authority (CA) files to handle HTTPS traffic and validate certificates securely."
msgstr ""
"OpenShift でアプリケーションを実行する場合、link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift 提供証明書] を使用して、TLS 証明書を自動的に生成および更新できます。\n"
"Quarkus TLS レジストリーは、この証明書と認証局 (CA) ファイルを使用して、HTTPS トラフィックを処理し、証明書をセキュアに検証できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Acquiring a certificate"
msgstr "証明書の取得"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"To have OpenShift generate a serving certificate, annotate an existing _Service_ object.\n"
"The generated certificate will be stored in a secret, which you can then mount in your pod."
msgstr ""
"OpenShift でサービス証明書を生成するには、既存の _Service_ オブジェクトにアノテーションを付けます。\n"
"生成された証明書はシークレットに保存され、Pod にマウントできるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following snippet uses an example _Service_ object with an annotation for generating a TLS certificate."
msgstr "次のスニペットでは、TLS 証明書を生成するためのアノテーションが付いたサンプルの _Service_ オブジェクトを使用しています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "View the configuration of the _Service_ object:"
msgstr "_Service_ オブジェクトの設定を表示します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To generate a certificate, add his annotation to your already created OpenShift `service`:"
msgstr "証明書を生成するには、すでに作成されている OpenShift `service` に次のアノテーションを追加します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The annotation `service.beta.openshift.io/serving-cert-secret-name` instructs OpenShift to generate a certificate and store it in a secret named `my-tls-secret`."
msgstr "アノテーション `service.beta.openshift.io/serving-cert-secret-name` は、証明書を生成し、それを `my-tls-secret` という名前のシークレットに保存するよう OpenShift に指示します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Mount the secret as a volume in your pod by updating your _Deployment_ configuration:"
msgstr "_Deployment_ 設定を更新して、シークレットを Pod 内のボリュームとしてマウントします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Define a volume to mount the secret.\n"
"Use the same name as the secret declared above."
msgstr ""
"シークレットをマウントするボリュームを定義します。\n"
"上記で宣言したシークレットと同じ名前を使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Set up the keystore with the paths to the certificate and private key.\n"
"This can be configured by using environment variables or configuration files.\n"
"This example uses environment variables.\n"
"OpenShift serving certificates always create the `tls.crt` and `tls.key` files."
msgstr ""
"証明書と秘密鍵へのパスを使用してキーストアを設定します。\n"
"これは、環境変数または設定ファイルを使用して設定できます。\n"
"この例では環境変数を使用します。\n"
"OpenShift 提供証明書は必ず `tls.crt` ファイルと `tls.key` ファイルを作成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Mount the secret in the container.\n"
"Ensure that the path matches the one used in the configuration (here `/etc/tls`)."
msgstr ""
"コンテナーにシークレットをマウントします。\n"
"パスが、設定で使用されているパス (ここでは `/etc/tls`) と一致していることを確認します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configure the port to serve HTTPS."
msgstr "HTTPS を提供するポートを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Deploy your application to use the certificate generated by OpenShift.\n"
"This will make the service available over HTTPS."
msgstr ""
"OpenShift によって生成された証明書を使用するようにアプリケーションをデプロイします。\n"
"これにより、HTTPS 経由でサービスが利用できるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "By setting the `quarkus.tls.key-store.pem.acme.cert` and `quarkus.tls.key-store.pem.acme.key` variables or their environment variable variant, the TLS registry will use the certificate and private key from the secret."
msgstr "`quarkus.tls.key-store.pem.acme.cert` および `quarkus.tls.key-store.pem.acme.key` 変数またはその環境変数バリアントを設定すると、TLS レジストリーがシークレットからの証明書と秘密鍵を使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"This configures the default keystore for the Quarkus HTTP server, which allows the server to use the certificate.\n"
"For information about using this certificate in a named configuration, see xref:referencing-a-tls-configuration[]."
msgstr ""
"これにより、Quarkus HTTP サーバーのデフォルトのキーストアが設定され、サーバーが証明書を使用できるようになります。\n"
"名前付き設定でこの証明書を使用する方法については、xref:referencing-a-tls-configuration[] を参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Trusting the Certificate Authority (CA)"
msgstr "認証局 (CA) を信頼する"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "<<acquiring-a-certificate>>"
msgstr "<<acquiring-a-certificate>>"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Now that your service uses a certificate issued by OpenShift, configure your client applications to trust this certificate.\n"
"To do so, create a ConfigMap that holds the CA certificate, and then configure the pod to mount it.\n"
"The following steps use a Quarkus REST client as an example, but the same approach applies to any client."
msgstr ""
"サービスが OpenShift によって発行された証明書を使用するようになったら、この証明書を信頼するようにクライアントアプリケーションを設定します。\n"
"これを行うには、CA 証明書を保持する ConfigMap を作成し、それをマウントするように Pod を設定します。\n"
"次の手順では、Quarkus REST クライアントを例として使用しますが、どのクライアントでも同じ方法が使用されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Start by defining an _empty_ ConfigMap, which will be populated with the CA certificate:"
msgstr "まず、CA 証明書を入力する _空_ の ConfigMap を定義します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The `service.beta.openshift.io/inject-cabundle` annotation is used to inject the CA certificate into the ConfigMap.\n"
"Note that the ConfigMap initially has no data — it is empty.\n"
"During its processing, OpenShift injects the CA certificate into the ConfigMap in the `service-ca.crt` file."
msgstr ""
"`service.beta.openshift.io/inject-cabundle` アノテーションは、CA 証明書を ConfigMap に注入するために使用されます。\n"
"この ConfigMap は、最初はデータがなく、空であることに注意してください。\n"
"処理中に、OpenShift は CA 証明書を `service-ca.crt` ファイルの ConfigMap に注入します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Mount the ConfigMap by adding a volume and mounting it in your _Deployment_ configuration:"
msgstr "ボリュームを追加して _Deployment_ 設定にマウントすることで、ConfigMap をマウントします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Mount the ConfigMap in the container.\n"
"Ensure that the path matches the one used in the configuration (in this example `/deployments/tls`)."
msgstr ""
"ConfigMap をコンテナーにマウントします。\n"
"パスが設定で使用されているパスと一致していることを確認します (この例では `/deployments/tls`)。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Define a volume to mount the ConfigMap and reference the ConfigMap that receives the CA certificate."
msgstr "ConfigMap をマウントし、CA 証明書を受け取る ConfigMap を参照するためのボリュームを定義します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configure the REST client to use this CA certificate."
msgstr "この CA 証明書を使用するように REST クライアントを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Consider the following REST client interface:"
msgstr "次のような REST クライアントインターフェイスがあるとします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Configure the base URI and the configuration key.\n"
"The name must be in the format `<service-name>.<namespace>.svc`.\n"
"Otherwise, the certificate will not be trusted.\n"
"Ensure that the `configKey` is also configured."
msgstr ""
"ベース URI と設定鍵を設定します。\n"
"名前は、 `<service-name>.<namespace>.svc` フォーマットにします。\n"
"そうでない場合、証明書は信頼されません。\n"
"`configKey` も設定されていることを確認してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configure the REST client to trust the CA certificate generated by OpenShift:"
msgstr "OpenShift によって生成された CA 証明書を信頼するように REST クライアントを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Configure the `hero` REST client with the TLS configuration named `my-service-tls`."
msgstr "`my-service-tls` という名前の TLS 設定を使用して、 `hero` REST クライアントを設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Set up the `my-service-tls` TLS configuration, specifically the truststore with the CA certificate.\n"
"Ensure the path matches the one used in the Kubernetes _Deployment_ configuration.\n"
"The file is always named `service-ca.crt`."
msgstr ""
"`my-service-tls` TLS 設定、具体的には CA 証明書を含むトラストストアを設定します。\n"
"パスが Kubernetes _Deployment_ 設定で使用されているパスと一致していることを確認します。\n"
"ファイルの名前は必ず `service-ca.crt` になります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Certificate renewal"
msgstr "証明書の更新"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"OpenShift automatically renews the serving certificates it generates.\n"
"When the certificate is renewed, the secret is updated with the new certificate and private key."
msgstr ""
"OpenShift は生成した提供証明書を自動的に更新します。\n"
"証明書が更新されると、シークレットが新しい証明書と秘密鍵で更新されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To ensure your application uses the new certificate, you can use the periodic reloading feature of the Quarkus TLS registry."
msgstr "アプリケーションが新しい証明書を使用するようにするには、Quarkus TLS レジストリーの定期的な再読み込み機能を使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "By setting the `reload-period` property, the TLS registry will periodically check the keystores and truststores for changes and reload them if needed:"
msgstr "`reload-period` プロパティーを設定すると、TLS レジストリーはキーストアとトラストストアの変更を定期的にチェックし、必要に応じて再読み込みします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Optionally, implement a custom mechanism to reload the certificates when the secret is updated.\n"
"See <<reloading-certificates>> for more information."
msgstr ""
"必要に応じて、シークレットが更新されたときに証明書を再読み込みするカスタムメカニズムを実装します。\n"
"詳細は <<reloading-certificates>> を参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Quarkus CLI commands and development Certificate Authority"
msgstr "Quarkus CLI コマンドと開発用認証局"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry provides Quarkus CLI commands to generate a development Certificate Authority (CA) and trusted certificates.\n"
"This avoids having to use self-signed certificates locally."
msgstr ""
"TLS レジストリーは、開発用認証局 (CA) と信頼済み証明書を生成するための Quarkus CLI コマンドを備えています。\n"
"これにより、自己署名証明書をローカルで使用する必要がなくなります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following snippet shows the description of the `quarkus tls` command, containing two sub-commands:"
msgstr "次のスニペットは、2 つのサブコマンドを含む `quarkus tls` コマンドの説明を示しています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This is useful for local development, as it allows Quarkus to act as its own certificate authority, which can be used to sign other certificates."
msgstr "これは、Quarkus が独自の認証局として機能し、他の証明書に署名するために使用できるため、ローカル開発に便利です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This is useful when creating a certificate for secure communication between your application and external services or clients during development."
msgstr "これは、開発中にアプリケーションと外部サービスまたはクライアント間でセキュアな通信を確立するための証明書を作成するときに便利です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"In most cases, you generate the Quarkus Development CA once and then generate certificates signed by this CA.\n"
"The Quarkus Development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"It is only valid for development purposes and only trusted on the local machine.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`, and installed in the system truststore."
msgstr ""
"ほとんどの場合、Quarkus Development CA を一度生成してから、この CA によって署名された証明書を生成します。\n"
"Quarkus Development CA は、ローカルで証明書に署名するために使用できる認証局です。\n"
"これは開発目的にのみ有効であり、ローカルマシン上でのみ信頼されます。\n"
"生成された CA は `$HOME/.quarkus/quarkus-dev-root-ca.pem` に配置され、システムトラストストアにインストールされます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Understanding self-signed versus CA-signed certificates"
msgstr "自己署名証明書と CA 署名証明書の違いについて"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When developing with TLS, you can use two types of certificates:"
msgstr "TLS を使用して開発する場合、次の 2 種類の証明書を使用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"**Self-signed certificate**: The certificate is signed by the same entity that uses it.\n"
"It is not trusted by default.\n"
"This type of certificate is typically used when a Certificate Authority (CA) is unavailable or when a simple setup is needed.\n"
"It is not suitable for production and is intended only for development."
msgstr ""
"**自己署名証明書**: この証明書は、それを使用するエンティティーと同じエンティティーによって署名されます。\n"
"デフォルトでは信頼されません。\n"
"このタイプの証明書は、通常、認証局 (CA) が利用できない場合や、簡単なセットアップが必要な場合に使用されます。\n"
"実稼働環境には適しておらず、開発目的でのみ使用する必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"**CA-signed certificate**: The certificate is signed by a Certificate CA, a trusted entity.\n"
"This certificate is trusted by default and is the standard choice for production environments."
msgstr ""
"**CA 署名証明書**: 証明書は、信頼済みエンティティーである証明書 CA によって署名されます。\n"
"この証明書はデフォルトで信頼されており、実稼働環境での標準的な選択肢です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"While you can use a self-signed certificate for local development, it has limitations.\n"
"Browsers and tools like `curl`, `wget`, and `httpie` typically do not trust self-signed certificates, requiring manual import of the CA in your operating system."
msgstr ""
"ローカル開発には自己署名証明書を使用できますが、制限があります。\n"
"通常、`curl`、`wget`、`httpie` などのブラウザーやツールは、自己署名証明書を信頼しないため、オペレーティングシステムに CA を手動でインポートする必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"To avoid this issue, use a development CA to sign certificates and install the CA in the system truststore.\n"
"This ensures that the system trusts all certificates signed by the CA.\n"
"Quarkus simplifies the generation of a development CA and the certificates that are signed by this CA."
msgstr ""
"この問題を回避するには、開発 CA を使用して証明書に署名し、その CA をシステムトラストストアにインストールします。\n"
"これにより、システムは CA によって署名されたすべての証明書を信頼するようになります。\n"
"Quarkus は、開発 CA とこの CA によって署名される証明書の生成を簡素化します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Generate a development CA"
msgstr "開発 CA の生成"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"Note that the generated CA is only valid for development purposes and can only be trusted on the local machine."
msgstr ""
"開発 CA は、ローカルで証明書に署名するために使用できる認証局です。\n"
"生成された CA は開発目的でのみ有効であり、ローカルマシン上でのみ信頼できることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "To generate a development CA:"
msgstr "開発用 CA を生成するには、次のように指定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`--install` installs the CA in the system truststore.\n"
"Windows, Mac, and Linux (Fedora and Ubuntu) are supported.\n"
"However, depending on your browser, you might need to import the generated CA manually.\n"
"Refer to your browser's documentation for more information.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`."
msgstr ""
"`--install` は、システムトラストストアに CA をインストールします。\n"
"Windows、Mac、Linux (Fedora および Ubuntu) がサポートされています。\n"
"ただし、ブラウザーによっては、生成された CA を手動でインポートすることを推奨します。\n"
"詳細は、ブラウザーのドキュメントを参照してください。\n"
"生成された CA は `$HOME/.quarkus/quarkus-dev-root-ca.pem` に配置されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`--renew` renews the CA if it already exists.\n"
"When this option is used, the private key is changed, so you need to regenerate the certificates signed by the CA.\n"
"If the CA expires, it will automatically renew without requiring the `--renew` option."
msgstr ""
"`--renew` は、CA がすでに存在する場合にそれを更新します。\n"
"このオプションを使用すると、秘密鍵が変更されます。そのため、CA によって署名された証明書を再生成する必要があります。\n"
"CA の有効期限が切れると、 `--renew` オプションを必要とせずに自動的に更新されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`--truststore` also generates a PKCS12 truststore containing the CA certificate."
msgstr "`--truststore` は、CA 証明書を含む PKCS12 トラストストアも生成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "When installing the certificate, your system might ask for your password to install the certificate in the system truststore or ask for confirmation in a dialog on Windows."
msgstr "証明書をインストールするときに、システムのトラストストアに証明書をインストールするためのパスワードの入力を求められたり、Windows のダイアログで確認を求められたりすることがあります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "On Windows, run as administrator from an elevated terminal to install the CA in the system truststore."
msgstr "Windows では、管理者権限を持つターミナルから管理者として実行し、システムのトラストストアに CA をインストールしてください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Generating a trusted (signed) certificate"
msgstr "信頼済み (署名済み) 証明書の生成"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "<<generate-a-development-ca>>"
msgstr "<<generate-a-development-ca>>"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"After installing the Quarkus Development CA, generate a trusted certificate.\n"
"This certificate will be signed by the Quarkus Development CA and trusted by your system."
msgstr ""
"Quarkus 開発用 CA をインストールしたら、信頼済み証明書を生成します。\n"
"この証明書は Quarkus 開発用 CA によって署名され、システムによって信頼されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This command generates a certificate signed by the Quarkus Development CA, which your system will trust if properly installed or imported."
msgstr "このコマンドは、Quarkus 開発用 CA によって署名された証明書を生成します。開発用 CA は、適切にインストールまたはインポートされた場合にシステムによって信頼されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The certificate is stored in `./.certs/`.\n"
"Two files are generated:"
msgstr ""
"証明書は `./.certs/` に保存されます。\n"
"以下の 2 つのファイルが生成されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`$NAME-keystore.p12`: Contains the private key and the certificate.\n"
"It is password-protected."
msgstr ""
"`$NAME-keystore.p12`: 秘密鍵と証明書が含まれます。\n"
"パスワードで保護されています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`$NAME-truststore.p12`: Contains the CA certificate, which you can use as a truststore, for example, for testing."
msgstr "$NAME-truststore.p12`: テスト用などにトラストストアとして使用できる CA 証明書が含まれています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Additional options are available:"
msgstr "以下に示すその他のオプションも利用できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "A `.env` file is also generated when generating the certificate, making the Quarkus dev mode aware of these certificates."
msgstr "証明書を生成するときに `.env` ファイルも生成されます。これにより、Quarkus 開発モードがこれらの証明書を認識するようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Run your application in dev mode to use these certificates:"
msgstr "アプリケーションを開発モードで実行して、これらの証明書を使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Open the Dev UI by using HTTPS: `https://localhost:8443/q/dev` or by issuing a `curl` request:"
msgstr "HTTPS (`https://localhost:8443/q/dev`) を使用するか、 `curl` リクエストを発行して Dev UI を開きます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Quarkus generates a self-signed certificate if the Quarkus Development CA is not installed."
msgstr "Quarkus 開発用 CA がインストールされていない場合、Quarkus は自己署名証明書を生成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Generating a self-signed certificate"
msgstr "自己署名証明書の生成"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Even if the Quarkus Development CA is installed, you can generate a self-signed certificate:"
msgstr "Quarkus Development CA がインストールされている場合でも、自己署名証明書を生成できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "This generates a self-signed certificate that the Quarkus Development CA does not sign."
msgstr "これにより、Quarkus 開発用 CA によって署名されない自己署名証明書が生成されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Uninstalling the Quarkus Development CA"
msgstr "Quarkus Development CA のアンインストール"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Uninstalling the Quarkus Development CA from your system depends on your OS."
msgstr "システムから Quarkus Development CA をアンインストールする方法は、OS によって異なります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Windows"
msgstr "Windows での CA 証明書の削除"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "List the CA certificate on Windows by using the Powershell terminal with administrator rights:"
msgstr "管理者権限で Powershell ターミナルを使用して、Windows 上の CA 証明書をリスト表示します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Delete the stored CA certificate and replace `$Serial_Number` with the serial number of the CA certificate:"
msgstr "保存されている CA 証明書を削除します。 `$Serial_Number` を CA 証明書のシリアル番号に置き換えます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Linux"
msgstr "Linux での CA 証明書の削除"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "On Fedora:"
msgstr "Fedora の場合:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "On Ubuntu:"
msgstr "Ubuntu の場合:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Deleting the CA certificate on Mac"
msgstr "Mac での CA 証明書の削除"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "On Mac:"
msgstr "Mac の場合:"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Automatic certificate management with Let's Encrypt"
msgstr "Let's Encrypt による証明書の自動管理"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "link:https://letsencrypt.org[Let's Encrypt] is a free, automated certificate authority provided by link:https://www.abetterinternet.org/[Internet Security Research Group]."
msgstr "link:https://letsencrypt.org[Let's Encrypt] は、link:https://www.abetterinternet.org/[Internet Security Research Group] が提供する無料の自動化された認証局です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Let's Encrypt uses link:https://datatracker.ietf.org/doc/html/rfc8555[Automated certificate management environment (ACME) protocol] to support automatic certificate issuance and renewal.\n"
"To learn more about Let's Encrypt and ACME, see link:https://letsencrypt.org/docs/[Let's Encrypt documentation]."
msgstr ""
"Let's Encrypt は、証明書の自動発行と自動更新をサポートするためにlink:https://datatracker.ietf.org/doc/html/rfc8555[自動証明書管理環境 (ACME) プロトコル] を使用します。\n"
"Let's Encrypt と ACME の詳細は、link:https://letsencrypt.org/docs/[Let's Encrypt のドキュメント] を参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry extension allows a CLI ACME client to issue and renew Let's Encrypt certificates.\n"
"Your application uses this TLS registry extension to resolve ACME protocol challenges."
msgstr ""
"TLS レジストリーエクステンションにより、CLI ACME クライアントは Let's Encrypt 証明書を発行および更新できるようになります。\n"
"アプリケーションは、この TLS レジストリーエクステンションを使用して、ACME プロトコルのチャレンジを解決します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Follow the steps below to have your Quarkus application prepared and automatically updated with new and renewed Let's Encrypt certificates."
msgstr "以下のステップに従って、Quarkus アプリケーションを準備し、新しい Let's Encrypt 証明書と更新された Let's Encrypt 証明書で自動的に更新します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Ensure that a fully resolvable DNS domain name is available that you can use to access your application.\n"
"You can use this domain name to create a Let's Encrypt account and pass the Let's Encrypt ACME challenges to prove that you own this domain.\n"
"You can use link:https://ngrok.com/[ngrok] to start experimenting with the Quarkus Let's Encrypt ACME feature; for more information, see the <<lets-encrypt-ngrok,Testing with ngrok>> section below."
msgstr ""
"アプリケーションにアクセスするために使用できる、完全に解決可能な DNS ドメイン名が利用可能であることを確認します。\n"
"このドメイン名は、Let's Encrypt アカウントを作成し、Let's Encrypt ACME チャレンジに成功してこのドメインを所有していることを証明するために使用できます。\n"
"link:https://ngrok.com/[ngrok] を使用して Quarkus Let's Encrypt ACME 機能を試すことができます。詳細は、以下の <<lets-encrypt-ngrok,Testing with ngrok>> セクションを参照してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Your Quarkus HTTPS application must use a _build-time_ property to enable a Let's Encrypt ACME challenge route:"
msgstr "Quarkus HTTPS アプリケーションでは、_build-time_ プロパティーを使用して Let's Encrypt ACME チャレンジルートを有効にする必要があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry can manage the challenge process from either the main HTTP interface or the management interface.\n"
"Using a management interface is **strongly** recommended to let Quarkus deal with ACME challenge configuration separately from the main application's deployment and security requirements:"
msgstr ""
"TLS レジストリーは、メイン HTTP インターフェイスまたは管理インターフェイスのいずれかからチャレンジプロセスを管理できます。\n"
"メインアプリケーションのデプロイメントとセキュリティーの要件とは別に、Quarkus が ACME チャレンジ設定を処理できるように、管理インターフェイスを使用することが **強く** 推奨されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Port 80"
msgstr "ポート 80"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"The Let's Encrypt ACME challenge requires that the application is reachable on port `80`, essentially `http://your-dns-name`.\n"
"Ensure the port `80` is accessible from the Internet.\n"
"It might require an explicit security policy depending on your hosting provider."
msgstr ""
"Let's Encrypt ACME チャレンジでは、アプリケーションがポート `80` (基本的には `http://your-dns-name`) でアクセスできる必要があります。\n"
"ポート `80` がインターネットからアクセス可能であることを確認します。\n"
"ホスティングプロバイダーによっては、明示的なセキュリティーポリシーが必要になる場合があります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"We also recommend setting `quarkus.http.insecure-requests` to `redirect` to redirect all HTTP requests to HTTPS.\n"
"The ACME challenge accepts self-signed certificates and up to 10 redirections:"
msgstr ""
"また、すべての HTTP リクエストを HTTPS にリダイレクトするために、 `quarkus.http.insecure-requests` を `redirect` に設定することが推奨されます。\n"
"ACME チャレンジは、自己署名証明書と最大で 10 件のリダイレクトを受け入れます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The challenge is served from the primary HTTP interface, which is accessible from your DNS domain name."
msgstr "このチャレンジは、DNS ドメイン名からアクセス可能プライマリー HTTP インターフェイスから提供されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Do not start your application yet."
msgstr "アプリケーションはまだ開始しないでください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Application preparation"
msgstr "アプリケーションの準備"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Before you request a Let's Encrypt certificate:"
msgstr "Let's Encrypt 証明書をリクエストする前に、以下を実行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Move to the root directory of your application."
msgstr "アプリケーションの root ディレクトリーに移動します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Run the TLS registry Let's Encrypt CLI `prepare` command:"
msgstr "TLS レジストリー Let's Encrypt CLI の `prepare` コマンドを実行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The `prepare` command does the following:"
msgstr "`prepare` コマンドは以下を実行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Creates a `.letsencrypt` folder in your application's root directory."
msgstr "アプリケーションの root ディレクトリーに `.letsencrypt` フォルダーを作成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Creates a self-signed domain certificate and private key for your application configured in the previous <<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> step to start and accept HTTPS requests."
msgstr "HTTPS リクエストを開始して受け入れるために、前の <<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> ステップで設定したアプリケーション用の自己署名ドメイン証明書と秘密鍵を作成します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Creates a `.env` configuration file in the root directory of your application and configures it to use the self-signed domain certificate and private key until you obtain the Let's Encrypt certificate."
msgstr "アプリケーションの root ディレクトリーに `.env` 設定ファイルを作成し、Let's Encrypt 証明書を取得するまで、自己署名ドメイン証明書と秘密鍵を使用するように設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The following snippet shows an example of the generated `.env` file:"
msgstr "次のスニペットは、生成された `.env` ファイルの例を示しています。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "The `.env` file does not contain the `quarkus.tls.lets-encrypt.enabled` and `quarkus.management.enabled` properties as they are build-time properties that require a rebuild of the application."
msgstr "`quarkus.tls.lets-encrypt.enabled` プロパティーと `quarkus.management.enabled` プロパティーは、アプリケーションの再構築を必要とするビルド時のプロパティーであるため、 `.env` ファイルには含まれません。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Starting your application"
msgstr "アプリケーションの起動"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Start your application:"
msgstr "アプリケーションを起動します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Access your application endpoint by using `https://your-domain-name:8443/`; for example, `https://your-domain-name:8443/hello`, and accept a self-signed certificate in the browser."
msgstr "`https://your-domain-name:8443/` を使用してアプリケーションエンドポイントにアクセスし (例: `https://your-domain-name:8443/hello`)、ブラウザーで自己署名証明書を受け入れます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Keep the application running and request your first Let's Encrypt certificate."
msgstr "アプリケーションを実行したまま、最初の Let's Encrypt 証明書をリクエストします。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Issue a certificate"
msgstr "証明書の発行"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "From the application directory, run the `issue-certificate` command to acquire your first Let's Encrypt certificate:"
msgstr "アプリケーションディレクトリーから `issue-certificate` コマンドを実行して、最初の Let's Encrypt 証明書を取得します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Set your domain name."
msgstr "ドメイン名を設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Provide your contact email address that Let's Encrypt can use to contact you in case of any issues with your Let's Encrypt account."
msgstr "Let's Encrypt アカウントに問題が発生した場合に Let's Encrypt が連絡するために使用できるメールアドレスを入力します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Set your application management URL, which you can use to handle ACME challenges.\n"
"Use `https://localhost:8443/` if you choose not to enable a management router in the <<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> step."
msgstr ""
"ACME チャレンジの処理に使用できるアプリケーション管理 URL を設定します。\n"
"<<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> ステップで管理ルーターを有効にしない場合は、 `https://localhost:8443/` を使用します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "During the processing of the `issue-certificate` command, the TLS registry CLI performs the following tasks:"
msgstr "`issue-certificate` コマンドの処理中に、TLS レジストリー CLI は次のタスクを実行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Checks if the application is prepared to serve the challenge."
msgstr "アプリケーションがチャレンジに対応する準備ができているか確認します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Creates and records Let's Encrypt account information."
msgstr "Let's Encrypt アカウント情報を作成し、記録します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Issues a Let's Encrypt certificate request."
msgstr "Let's Encrypt 証明書リクエストを発行します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Interacts with the Quarkus application to resolve ACME challenges."
msgstr "Quarkus アプリケーションと対話して ACME チャレンジを解決します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"When the Let's Encrypt certificate chain and private key have been successfully acquired, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is informed that a new certificate and private key are ready and reloads them automatically."
msgstr ""
"Let's Encrypt 証明書チェーンと秘密鍵が正常に取得されると、それらは PEM フォーマットに変換され、アプリケーションの `.letsencrypt` フォルダーにコピーされます。\n"
"TLS レジストリーには、新しい証明書と秘密鍵の準備ができたことが通知され、それらの自動リロードが実行されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Access your application's endpoint using `https://your-domain-name:8443/` again.\n"
"Confirm in the browser that the Let's Encrypt certificate authority is now signing your domain certificate."
msgstr ""
"`https://your-domain-name:8443/` を使用して、アプリケーションのエンドポイントに再度アクセスします。\n"
"ブラウザーで、Let's Encrypt 認証局がドメイン証明書に署名することを確認します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Note that currently, the `issue-certificate` command implicitly creates a Let's Encrypt account to make it easy for users to get started with the ACME protocol.\n"
"Support for the Let's Encrypt account management will evolve further."
msgstr ""
"現時点では、ユーザーが ACME プロトコルを簡単に開始できるように、 `issue-certificate` コマンドにより暗黙的に Let's Encrypt アカウントが作成されることに注意してください。\n"
"Let's Encrypt アカウント管理のサポートはさらに今後さらに進化する予定です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Renewing a certificate"
msgstr "証明書の更新"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Renewing certificates is similar to issuing the first certificate, but it requires an existing account created during the <<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> step."
msgstr "証明書の更新は最初の証明書の発行と似ていますが、<<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> ステップで作成された既存アカウントが必要です。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Run the following command to renew your Let's Encrypt certificate and set your domain DNS name:"
msgstr "次のコマンドを実行して、Let's Encrypt 証明書を更新し、ドメインの DNS 名を設定します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "During this command, TLS registry CLI reads a Let's Encrypt account information recorded during the <<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> step, issues a Let's Encrypt certificate request, and communicates with a Quarkus application to have ACME challenges resolved."
msgstr "このコマンドの実行中、TLS レジストリー CLI は <<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> ステップで記録された Let's Encrypt アカウント情報を読み取り、Let's Encrypt 証明書リクエストを発行し、ACME チャレンジを解決するために Quarkus アプリケーションと通信します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully renewed, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is notified when a new certificate and private key are ready, and it automatically reloads them."
msgstr ""
"Let's Encrypt 証明書チェーンと秘密鍵が正常に更新されると、それらは PEM フォーマットに変換され、アプリケーションの `.letsencrypt` フォルダーにコピーされます。\n"
"TLS レジストリーには、新しい証明書と秘密鍵の準備ができたことが通知され、それらの自動リロードが実行されます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Testing with ngrok"
msgstr "ngrok によるテスト"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "link:https://ngrok.com/[ngrok] can be used to provide a secure HTTPS tunnel to your application running on localhost, and make it easy to test HTTPS based applications."
msgstr "link:https://ngrok.com/[ngrok] を使用すると、ローカルホストで実行されているアプリケーションにセキュアな HTTPS トンネルを提供し、HTTPS ベースのアプリケーションを簡単にテストできるようになります。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "ngrok provides a simplified way of getting started with the Quarkus Let's Encrypt ACME feature."
msgstr "ngrok を使用すると、容易に Quarkus Let's Encrypt ACME 機能を使い始めることができます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Initiate testing by asking ngrok to reserve a domain:"
msgstr "ngrok にドメインを予約するように要求することでテストを開始します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"You can use link:https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse ngrok] in dev mode or reserve it directly in the ngrok dashboard.\n"
"Unfortunately, you cannot use your ngrok domain to test the Quarkus Let's Encrypt ACME feature immediately.\n"
"This is because ngrok itself uses Let's Encrypt and intercepts ACME challenges that are meant to be handled by the Quarkus application instead."
msgstr ""
"開発モードで link:https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse ngrok] を使用するか、ngrok ダッシュボードで直接予約できます。\n"
"残念ながら、ngrok ドメインを使用して Quarkus Let's Encrypt ACME 機能をすぐにテストすることはできません。\n"
"これは、ngrok 自体が Let's Encrypt を使用し、Quarkus アプリケーションで処理されるはずの ACME チャレンジを傍受するためです。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Therefore, remove the ngrok Let's Encrypt certificate policy from your ngrok domain:"
msgstr "よって、ngrok ドメインから ngrok Let's Encrypt 証明書ポリシーを削除します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "`YOUR-RESERVED-DOMAIN-ID` is your reserved domain's id which starts from `rd_`, you can find it in the link:https://dashboard.ngrok.com/cloud-edge/domains[ngrok dashboard domains section]."
msgstr "`YOUR-RESERVED-DOMAIN-ID` は、 `rd_` で始まる予約済みドメインの ID です。この ID は、 link:https://dashboard.ngrok.com/cloud-edge/domains[ngrok ダッシュボードドメインセクション] で確認できます。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Because ngrok only forwards ACME challenges over HTTP, start ngrok by using the following command:"
msgstr "ngrok は ACME チャレンジを HTTP 経由でのみ転送するため、次のコマンドを使用して ngrok を起動します。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid ""
"`8080` is the localhost HTTP port your application is listening on.\n"
"Note that the application will be accessible from `http://YOUR-NGROK-DOMAIN` on port `80` but redirected to your local machine on port `8080`."
msgstr ""
"`8080` は、アプリケーションがリッスンしているローカルホストの HTTP ポートです。\n"
"アプリケーションは、ポート `80` の `http://YOUR-NGROK-DOMAIN` からアクセスできますが、ポート `8080` のローカルマシンにリダイレクトされることに注意してください。"

#: _versions/3.27/guides/tls-registry-reference.adoc
msgid "Test the Quarkus Let's Encrypt ACME feature from your local machine."
msgstr "ローカルマシンから Quarkus Let's Encrypt ACME 機能をテストします。"
