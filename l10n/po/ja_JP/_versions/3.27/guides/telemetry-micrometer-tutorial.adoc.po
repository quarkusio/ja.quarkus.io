msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Collect metrics using Micrometer"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Create an application that uses the Micrometer metrics library to collect runtime, extension and application metrics and expose them as a Prometheus (OpenMetrics) endpoint."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "This document is part of the xref:observability.adoc[Observability in Quarkus reference guide] which features this and other observability related components."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"We recommend that you follow the instructions to create the application step by step, but you can skip right to the solution if you prefer.\n"
"Either:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Clone the git repository: `git clone {quickstarts-clone-url}`, or"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "The solution is located in the `micrometer-quickstart` link:{quickstarts-tree-url}/micrometer-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Create the Maven project"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Create a new project with the following command:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"This command generates a Maven project, that imports the `micrometer-registry-prometheus` extension as a dependency.\n"
"This extension will load the core `micrometer` extension as well as additional library dependencies required to support prometheus."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "To maintain backwards compatibility, the extension uses the Prometheus client v0.x from Micrometer 1.13+, instead of their default v1.x client."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Create a REST endpoint"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Let's first add a simple endpoint that calculates prime numbers."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Start your application in dev mode:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Review automatically generated metrics"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "The Micrometer extension automatically times HTTP server requests."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Let's use `curl` (or a browser) to visit our endpoint a few times:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"The Micrometer Prometheus MeterRegistry extension creates an endpoint we can use to observe collected metrics.\n"
"Let's take a look at the metrics that have been collected:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and\n"
"`http_server_requests_seconds_max` in the output."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Dimensional labels are added for the request uri, the HTTP method\n"
"(GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field.\n"
"You should find something like this:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Metrics appear lazily, you often won't see any data for your endpoint until it is accessed."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Exported metrics format"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"By default, the  metrics are exported using the Prometheus format `application/openmetrics-text`,\n"
"you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Inject the MeterRegistry"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "To register meters, you need a reference to the `MeterRegistry` that is configured and maintained by the Micrometer extension."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "The `MeterRegistry` can be injected into your application as follows:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Add a Counter"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Counters are used to measure values that only increase."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Let's add a counter that tracks how often we test a number to see if it is prime.\n"
"We'll add a dimensional label (also called an attribute or a tag) that will allow us to aggregate this counter value in different ways."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Find or create a counter called `example.prime.number` that has a `type` label with the specified value."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Increment that counter."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Review collected metrics"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "If you did not leave Quarkus running in dev mode, start it again:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Try the following sequence and look for `example_prime_number_total` in the plain text\n"
"output."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Note that the `_total` suffix is added when Micrometer applies Prometheus naming conventions to\n"
"`example.prime.number`, the originally specified counter name."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Notice that there is one measured value for each unique combination of `example_prime_number_total` and `type` value."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Looking at the dimensional data produced by this counter, you can count:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "how often a negative number was checked: `type=\"not-natural\"`"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "how often the number one was checked: `type=\"one\"`"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "how often an even number was checked: `type=\"even\"`"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "how often a prime number was checked: `type=\"prime\"`"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "how often a non-prime number was checked: `type=\"not-prime\"`"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "You can also count how often a number was checked (generally) by aggregating all of these values together."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Add a Timer"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Timers are a specialized abstraction for measuring duration.\n"
"Let's add a timer to measure how long it takes to determine if a number is prime."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Call a method that wraps the original `testPrimeNumber` method."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Create a `Timer.Sample` that tracks the start time"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Call the method to be timed and store the boolean result"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Find or create a `Timer` using the specified id and a `prime` label with the result value, and record the duration captured by the `Timer.Sample`."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Micrometer will apply Prometheus conventions when emitting metrics for this timer.\n"
"Specifically, measured durations are converted into seconds and this unit is included in the metric name."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Try the following sequence and look for the following entries in the plain text output:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "`example_prime_number_test_seconds_count` -- how many times the method was called"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "`example_prime_number_test_seconds_sum` -- the total duration of all method calls"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"`example_prime_number_test_seconds_max` -- the maximum observed duration within a decaying interval.\n"
"This value will return to 0 if the method is not invoked frequently."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Looking at the dimensional data produced by this counter, you can use the sum and the count to calculate how long (on average) it takes to determine if a number is prime.\n"
"Using the dimensional label, you might be able to understand if there is a significant difference in duration for numbers that are prime when compared with numbers that are not."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Add a Gauge"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Gauges measure a value that can increase or decrease over time, like the speedometer on a car.\n"
"The value of a gauge is not accumulated, it is observed at collection time.\n"
"Use a gauge to observe the size of a collection, or the value returned from a function."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Define list that will hold arbitrary numbers."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Register a gauge that will track the size of the list."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"Create a REST endpoint to populate the list.\n"
"Even numbers are added to the list, and odd numbers remove an element from the list."
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Then try the following sequence and look for `example_list_size` in the plain text output:"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Summary"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid "Congratulations!"
msgstr ""

#: _versions/3.27/guides/telemetry-micrometer-tutorial.adoc
msgid ""
"You have created a project that uses the Micrometer and Prometheus Meter Registry extensions to collect metrics.\n"
"You've observed some of the metrics that Quarkus captures automatically, and have added a `Counter` and `Timer` that are unique to the application.\n"
"You've also added dimensional labels to metrics, and have observed how those labels shape the data emitted by the prometheus endpoint."
msgstr ""
