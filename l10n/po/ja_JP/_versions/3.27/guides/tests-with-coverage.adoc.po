msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Measuring the coverage of your tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Learn how to measure the test coverage of your application. This guide covers:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Measuring the coverage of your Unit Tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Measuring the coverage of your Integration Tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Separating the execution of your Unit Tests and Integration Tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Consolidating the coverage for all your tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Please note that code coverage is not supported in native mode."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Having completed the xref:getting-started-testing.adoc[Testing your application guide]"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"The application built in this guide is just a Jakarta REST endpoint (hello world) that relies on dependency injection to use a service.\n"
"The service will be tested with JUnit 5 and the endpoint will be annotated via a `@QuarkusTest` annotation."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Solution"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step. However, you can go right to the completed example.\n"
"Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "The solution is located in the `tests-with-coverage-quickstart` link:{quickstarts-tree-url}/tests-with-coverage-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Starting from a simple project and two tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Let's start from an empty application created with the Quarkus Maven plugin:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Now we'll be adding all the elements necessary to have an application that is properly covered with tests."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "First, a Jakarta REST resource serving a hello endpoint:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "This endpoint uses a greeting service:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "The project will also need a test:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Setting up JaCoCo"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Now we need to add JaCoCo to our project. To do this we need to add the following to the build file:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"This Quarkus extension takes care of everything that would usually be done via the JaCoCo Maven plugin, so no additional\n"
"config is required."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"Using both the extension and the plugin requires special configuration, if you add both you will get lots of errors about classes\n"
"already being instrumented. The configuration needed is detailed below."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Working with multi-module projects"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"Up until `3.2`, `data-file` and `report-location` were always relative to the module's build output directory, which prevented from\n"
"working with multi-module projects where you want to aggregate all coverages into a single parent directory. Starting in `3.3`,\n"
"specifying a `data-file` or `report-location` will assume the path as is. Here is an example on how to set up the `surefire` plugin:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "If you need to configure the `argLine` property of the Surefire plugin (e.g. for setting memory parameters), you need to use https://maven.apache.org/surefire/maven-surefire-plugin/faq.html#late-property-evaluation[Maven late property evaluation^], otherwise the Jacoco agent will not be correctly added, and regular JUnit tests and Quarkus `ComponentTest` will not get covered. Example: `<argLine>@{argLine} -your -extra -arguments</argLine>`."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Running the tests with coverage"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"Run `mvn verify`, the tests will be run and the results will end up in `target/jacoco-reports`. This is all that is needed,\n"
"the `quarkus-jacoco` extension allows JaCoCo to just work out of the box."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "There are some config options that affect this:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "When working with a multi-module project, then for code coverage to work properly, the upstream modules need to be properly xref:cdi-reference.adoc#bean_discovery[indexed]."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Coverage for tests not using @QuarkusTest"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"The Quarkus automatic JaCoCo config will only work for tests that are annotated with `@QuarkusTest`. If you want to check\n"
"the coverage of other tests as well then you will need to fall back to the JaCoCo maven plugin."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "In addition to including the `quarkus-jacoco` extension in your `pom.xml` you will need the following config:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "This config tells it to ignore `@QuarkusTest` related classes, as they are loaded by `QuarkusClassLoader`"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Add the `jacoco` gradle plugin"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Set this config to `false` if you are also using the `quarkus-jacoco` extension and have at least one `@QuarkusTest`.  The default `jacocoTestReport` task can be skipped since `quarkus-jacoco` will generate the combined report of regular unit tests and `@QuarkusTest` classes since the execution data is recorded in the same file."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"This config will only work if at least one `@QuarkusTest` is being run. If you are not using `@QuarkusTest` then\n"
"you can simply use the JaCoCo plugin in the standard manner with no additional config."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Coverage for Integration Tests"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "To get code coverage data from integration tests, the following requirements need to be met:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "The built artifact is a jar (and not a container or native binary)."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "JaCoCo needs to be configured in your build tool."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "The application must have been built with `quarkus.package.write-transformed-bytecode-to-build-output` set to `true`"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Setting `quarkus.package.write-transformed-bytecode-to-build-output=true` should be done with caution and only if subsequent builds are done in a clean environment - i.e. the build tool's output directory has been completely cleaned."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"In the `pom.xml`, you can add the following plugin configuration for JaCoCo. This will append integration test data into the same destination file as unit tests,\n"
"re-build the JaCoCo report after the integration tests are complete, and thus produce a comprehensive code-coverage report."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "All executions should be in the same `<plugin>` definition so make sure you concatenate all of them."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "In order to run the integration tests as a jar with the JaCoCo agent, add the following to your `pom.xml`."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Sharing the same value for `quarkus.test.arg-line` might break integration test runs that test different types of Quarkus artifacts. In such cases, the use of Maven profiles is advised."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Setting coverage thresholds"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"You can set thresholds for code coverage using the JaCoCo Maven plugin. Note the element `<dataFile>${project.build.directory}/jacoco-quarkus.exec</dataFile>`.\n"
"You must set it matching your choice for `quarkus.jacoco.data-file`."
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Excluding classes from the verification task can be configured as following:"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "`classDirectories` needs to be read after evaluation phase in Gradle"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Currently, there is a bug in Gradle JaCoCo which requires the `excludes` to be specified in this manner - https://github.com/gradle/gradle/issues/14760.  Once this issue is fixed, excludes"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Exclude all classes in `org/example/package` package"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid "Conclusion"
msgstr ""

#: _versions/3.27/guides/tests-with-coverage.adoc
msgid ""
"You now have all the information you need to study the coverage of your tests!\n"
"But remember, some code that is not covered is certainly not well tested. But some code that is covered is not necessarily *well* tested. Make sure to write good tests!"
msgstr ""
