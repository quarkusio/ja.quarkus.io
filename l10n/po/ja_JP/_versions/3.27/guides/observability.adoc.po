msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/observability.adoc
msgid "Observability in Quarkus"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Observability can be defined as the capability to allow a human to ask and answer questions about a system."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Over the time, many extensions have been developed to provide observability capabilities to Quarkus applications. This guide will provide an overview of the observability extensions available in Quarkus and which can be used to provide observability according to the needs of your Quarkus application."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Telemetry"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Telemetry contains data about the internal state of the system and can be split into categories or *signals*:"
msgstr ""

#: _versions/3.27/guides/observability.adoc
#, fuzzy
msgid "*Logging*, classical local or centralised logs"
msgstr "*ロギング* 、古典的なローカルまたは集中ログ"

#: _versions/3.27/guides/observability.adoc
msgid "*Metrics*, metrics calculated in each Quarkus application instance"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*Tracing*, distributed tracing across applications"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*Profiling*, to analyze and monitor the application's performance, resource usage, and runtime behavior"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*Events*, the most generic signal. It's a representation of something significant happening during the execution of a program."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Guidelines"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "There is only one important guideline in Quarkus observability:"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The https://opentelemetry.io/docs/specs/otel/protocol/[OpenTelemetry OTLP protocol] is the recommended way to send telemetry out of a Quarkus application. This provides a unified output for the application's telemetry."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Overview"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Some extensions have overlapping functionality and there are recommended extensions for each type of signal."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The following table provides an overview of the observability extensions available in Quarkus, the signals they provide and which is the recommended extension for each signal."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Extension"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Logging"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Metrics"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Tracing"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Profiling"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Health Check"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Events"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:opentelemetry.adoc[quarkus-opentelemetry]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "O"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "R"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "X"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:telemetry-micrometer.adoc[quarkus-micrometer]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:telemetry-micrometer-to-opentelemetry.adoc[quarkus-micrometer-opentelemetry]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:jfr.adoc[quarkus-jfr]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:logging.adoc[Logging in Quarkus]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:logging.adoc#json-logging[quarkus-logging-json]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "xref:centralized-log-management.adoc[quarkus-logging-gelf]"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "D"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*R* - recommended"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*X* - supports"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*D* - deprecated"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "*O* - off by default"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The signals"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Logging and events"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "We can say a log line is a type of event that includes a severity classification. The OpenTelemetry project recognizes this approach, resulting in an OpenTelemetry API for logs and events that is pretty much the same."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Log is a much older concept and is still widely used in the industry, that's why the overview table from above has different columns for logs and events."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "In the future we'll see a convergence of these two concepts, as people start adopting OpenTelemetry Logs."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Quarkus logging extensions"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Quarkus uses the *JBoss Log Manager* logging backend to publish application and framework logs either in the console or files. These logs can also be forwarded to a centralized logging system, either by using the legacy xref:centralized-log-management.adoc[`quarkus-logging-gelf`] extension or the recommended xref:opentelemetry.adoc[`quarkus-opentelemetry`] or xref:telemetry-micrometer-to-opentelemetry.adoc[`quarkus-micrometer-opentelemetry`] extensions."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "OpenTelemetry logs are disabled by default in the `quarkus-opentelemetry` extension, but enabled by default in the `quarkus-micrometer-opentelemetry` extension."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Other events"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "There is no recommended way to generate observability events in Quarkus because the OpenTelemetry Events API is still under development and its use is not recommended, yet."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The xref:jfr.adoc[`quarkus-jfr`] extension can generate observability related events."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Quarkus has been using Micrometer to collect metrics from the application for a long time. Almost all the out-of-the-box metrics instrumentation in Quarkus are implemented with Micrometer."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "More recently, OpenTelemetry Metrics has become available in the xref:opentelemetry.adoc[`quarkus-opentelemetry`] extension, but it's disabled by default because metrics semantic conventions are not stable yet."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The solution is to use the xref:telemetry-micrometer-to-opentelemetry.adoc[`quarkus-micrometer-opentelemetry`] extension to allow using *Micrometer metrics* and *OpenTelemetry logs and traces* at the same time with a unified output using the OTLP protocol. Manual OpenTelemetry metrics can also be created with this extension and all signals are enabled by default, for convenience."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Quarkus uses OpenTelemetry Tracing to provide tracing capabilities to the application. The xref:opentelemetry.adoc[`quarkus-opentelemetry`] and the xref:telemetry-micrometer-to-opentelemetry.adoc[`quarkus-micrometer-opentelemetry`] extensions are the recommended way to use for tracing."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "Quarkus uses the Java Flight Recorder (JFR) to provide profiling capabilities to the application. The xref:jfr.adoc[`quarkus-jfr`] extension is the recommended way to generate the events necessary to profile the application."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The OpenTelemetry profiling signal, still under development, might be available in the future."
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "See telemetry"
msgstr ""

#: _versions/3.27/guides/observability.adoc
msgid "The xref:observability-devservices-lgtm.adoc[Grafana LGTM Dev Service] extension is available to visualize the telemetry data for logs, metrics and traces in Grafana."
msgstr ""
