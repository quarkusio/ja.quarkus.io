msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Infinispan Cache"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"By default, Quarkus Cache uses Caffeine as backend.\n"
"It's possible to use Infinispan instead."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Infinispan as cache backend"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "When using Infinispan as the backend for Quarkus cache, each cached item will be stored in Infinispan:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"The backend uses the _<default>_ Infinispan client (unless configured differently), so ensure its configuration is\n"
"set up accordingly (or use the xref:infinispan-dev-services.adoc[Infinispan Dev Service])"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Both the key and the value are marshalled using Protobuf with Protostream."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Use the Infinispan backend"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "First, add the `quarkus-infinispan-cache` extension to your project:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Then, use the `@CacheResult` and other cache annotations as detailed in the xref:cache.adoc[Quarkus Cache guide]:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Configure the Infinispan backend"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"The Infinispan backend uses the `<default>` Infinispan client.\n"
"Refer to the xref:infinispan-client-reference.adoc[Infinispan reference] for configuring the access to Infinispan."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "In dev mode, you can use the xref:infinispan-dev-services.adoc[Infinispan Dev Service]."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "If you want to use another Infinispan for your cache, configure the `client-name` as follows:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Marshalling"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "When interacting with Infinispan in Quarkus, you can easily serialize and deserialize Java primitive types when storing or retrieving data from the cache. No additional marshalling configuration is required for Infinispan."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Ask this method execution to be cached in the 'weather-cache'"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "The key combines `String` dayOfWeek, `int` dayOfMonth and `String` city. The associated value is of type `String`."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"Quarkus uses Protobuf for data serialization in Infinispan by default. Infinispan recommends using Protobuf as the preferred\n"
"way to structure data. Therefore, when working with Plain Old Java Objects (POJOs), users need\n"
"to supply the schema for marshalling in Infinispan."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Marshalling Java types"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Let's say we want a composite Key using `java.time.LocalDate`."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Request that the response of this method execution be cached in 'weather-cache'"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "The key combines a `java.util.LocalDate` date and a `String` city. The associated value is of type 'String'."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Since Infinispan serializes data by default using Protobuf in Quarkus, executing the code will result in the following error:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Protobuf does not inherently know how to marshal `java.time.LocalDate`. Fortunately, Protostream provides a straightforward solution to this problem using `@ProtoAdapter` and `@ProtoSchema`."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Marshalling your POJOs"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Just like with Java types, when using your POJOs as keys or values, you can follow this approach:"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Request that the response of this method execution be cached in 'my-cache'"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "The key is a `String`. The associated value is of type `org.acme.ExpensiveResponse`."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "In this case, you'll need to define the schema for your Java type using `@Proto` and `@ProtoSchema`. This schema can encompass all types and adapters used in your Quarkus application."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"Read more about it in the xref:infinispan-client-reference.adoc[Infinispan reference] in the Annotation\n"
"based serialization section."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Expiration"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "You have the option to configure two properties for data expiration: *lifespan* and *max-idle*."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Lifespan"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"In Infinispan, *lifespan* refers to a configuration parameter that determines the maximum time an\n"
"entry (or an object) can remain in the cache since it was created or last accessed before it is\n"
"considered expired and removed from the cache."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"When you configure the *lifespan* parameter for entries in an Infinispan cache,\n"
"you specify a time duration. After an entry has been added to the cache or accessed\n"
"(read or written), it starts its lifespan countdown. If the time since the entry\n"
"was created or last accessed exceeds the specified \"lifespan\" duration, the entry\n"
"is considered expired and becomes eligible for eviction from the cache."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "Max Idle"
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid ""
"When you configure the *max-idle* parameter for entries in an Infinispan cache, you specify a time\n"
"duration. After an entry has been accessed (read or written) in the cache, if there are no subsequent\n"
"accesses to that entry within the specified duration, it is considered idle. Once the idle time\n"
"exceeds the *max-idle* duration, the entry is considered expired and eligible for eviction from\n"
"the cache."
msgstr ""

#: _versions/3.27/guides/cache-infinispan-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
