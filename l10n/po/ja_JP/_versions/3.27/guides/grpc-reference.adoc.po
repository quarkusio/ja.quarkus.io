msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/grpc-reference.adoc
msgid "gRPC reference guide"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Using gRPC with Quarkus"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"If you need to implement a gRPC service or consume it, you need the `quarkus-grpc` extension.\n"
"It handles both sides."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Using Maven"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "To enable gRPC, add the following dependency to your project:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Next, ensure that the `generate-code` phase is enabled in the Quarkus Maven plugin:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Using Gradle"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "For Gradle, add the following dependency to your project:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Selecting a gRPC server"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"Quarkus provides two implementation of the gRPC server: gRPC Java (based on Netty) and Vert.x.\n"
"Both of them support TLS."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "One of the advantage of the Vert.x based server is the ability to use a single server to handle HTTP requests and gRPC requests. This is useful if you want to expose both REST and gRPC endpoints on the same port. This is not possible with the gRPC Java server (using a separate server)."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "To select the gRPC server implementation, set the `quarkus.grpc.server.use-separate-server` property in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "We recommend the usage of the Vert.x based gRPC server, as it is more flexible and better integrated in the Quarkus ecosystem."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "You cannot use both servers at the same time."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Selecting gRPC clients"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"As for the server, Quarkus proposes two alternatives for the gRPC clients: gRPC Java and Vert.x.\n"
"Unlike for the server, you can select the transport for each client:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"While it's not the default, we recommend using the Vert.x based client, as it is more flexible and better integrated in the Quarkus ecosystem.\n"
"It does not change the stubs you can use, as they are generated by the gRPC framework.\n"
"However, it changes the way the client communicates with the server."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Configuring TLS for gRPC services"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "With the Vert.x based server"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "If you use the Vert.x based server, you can configure TLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"The previous configuration uses the xref:./tls-registry-reference.adoc[centralized TLS configuration].\n"
"This is the recommended approach."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "You can also configure the server directly using the following properties:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "You can use `key-store-file` and `key-store-password` to configure the keystore file and its password when using JKS or P12. For PEM, use the `certificate` and `key` properties:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "The `quarkus.http.insecure-requests` property is used to disable insecure requests."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "When TLS is enabled, it covers both HTTP and gRPC traffic."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "With the gRPC Java server"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "If you use the gRPC Java server, you can configure TLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "This server only supports `PEM` format for the certificate and the key."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Configuring TLS for gRPC clients"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "As for the server, you can configure the clients using the centralized TLS configuration or directly."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "With the centralized TLS configuration"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "When using the Quarkus (Vert.x-based) client, you can configure TLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Direct configuration"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "If you use JKS trust-store, use the following configuration:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "If you use PEM certificates as trust-store, use the following configuration:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "When using the gRPC Java client, you can configure TLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "gRPC Java client only support the `PEM` format for the trust-store."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Configuring mTLS"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "You can configure mutual TLS (mTLS) for gRPC services and clients."
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "Using the centralized TLS configuration"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "When using the Quarkus HTTP server (`quarkus.grpc.server.use-separate-server=false`) and Quarkus gRPC client (`quarkus.grpc.clients.hello.use-quarkus-grpc-client=true`), you can configure mTLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid ""
"When using the gRPC Java server, you can configure mTLS by setting the following properties in your `application.properties` file:\n"
"When using the Vert.x based server and Vert.x-based client, you can configure mTLS by setting the following properties in your `application.properties` file:"
msgstr ""

#: _versions/3.27/guides/grpc-reference.adoc
msgid "If you use P12 format for the trust-store and the key-certificate, use the following configuration:"
msgstr ""
