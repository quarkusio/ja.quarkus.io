msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Quarkus gRPC Zero"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "gRPC code generation that runs on the JVM so you do not need native protoc binaries."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "*Make gRPC code generation portable: no native protoc, no surprises.*"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "TL;DR"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Quarkus gRPC Zero brings gRPC code generation into the JVM so you no longer need native 'protoc' binaries. Add the extension, build your project, and the generated stubs appear just like before."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "The important outcome is consistent, portable builds across developer machines, CI, containers, and even unusual architectures."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Why this matters"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "If you have spent time wrestling with platform-specific `protoc` binaries, cross-compiled plugins, you know the cost: slow onboarding, fragile builds, extra Docker layers, and ongoing maintenance. Quarkus gRPC Zero removes that operational burden so teams can focus on APIs and features instead of trying to find the right combination of dependencies to compile `proto` files."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "What Quarkus gRPC Zero does"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Quarkus gRPC Zero runs the `protoc` compilation inside the JVM as a pure Quarkus _codegen_  module."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "From a developer point of view nothing changes: you keep writing `.proto` files, run your Quarkus build, and use the generated sources."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "The difference is that builds are portable and predictable on any JVM host. It avoids having to download dozen of dependencies to handle every OS/architecture combination."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Benefits"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Portable builds that behave the same on laptops, CI, containers, and edge devices."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Simpler CI and less downloads as you don't need native executables."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Less maintenance for platform teams who no longer manage platform-specific toolchains."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "A small, self-contained Java dependency that performs `proto` file compilation."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Quick start"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Add the extension to your project. Replace 'VERSION' with the release you choose."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid ""
"If you are migrating from an existing Quarkus gRPC setup, you need to exclude the 'quarkus-grpc-codegen' artifact from your 'quarkus-grpc' dependency and add 'quarkus-grpc-zero' instead as a drop-in replacement.\n"
"Build your project as usual and generated sources will appear during the build step."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Example workflow"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Add the 'quarkus-grpc' dependency with exclusions for 'quarkus-grpc-codegen' and include 'quarkus-grpc-zero'."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Keep authoring '.proto' files as before."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Run the Quarkus build. Generated stubs will be produced on the JVM and compilation completes normally."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "The developer ergonomics are unchanged, but there are no native tools invoked during the process."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Current status and roadmap"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Quarkus gRPC Zero is  currently experimental but ready for early adopters."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid ""
"It passes integration tests and works in typical Quarkus builds.\n"
"We are actively improving the project and welcome feedback, real-world testing, and bug reports to guide stabilization and future features."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Under the Hood"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid ""
"The extension embeds a version of `libprotobuf`, compiled to WebAssembly (with the CLI stripped out) and translated into pure Java bytecode thanks to https://chicory.dev[Chicory].\n"
"The result is a self-contained JAR that provides the full `protoc` engine capabilities (including plugin support) and runs on any JVM, transparently and portably across platforms."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Try it and report any errors"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid ""
"Please try Quarkus gRPC Zero in your projects.\n"
"We want real-world feedback and we especially want to hear about any errors, edge cases, or surprising behavior you encounter.\n"
"We are happy to quickly to turn things around to fix outstanding bugs."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "If you see an error, open a ticket at the project repository: https://github.com/quarkiverse/quarkus-grpc-zero/issues[quarkiverse/quarkus-grpc-zero issues]"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Your reports will shape the project and help us make code generation reliable for everyone."
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid "Closing"
msgstr ""

#: _posts/2025-10-16-grpc-zero.adoc
msgid ""
"Quarkus gRPC Zero is about outcomes: consistent builds and no more native `protoc` maintenance.\n"
"Try it, use it in your CI, and please report any feedback so we can make it production-ready for every environment."
msgstr ""
