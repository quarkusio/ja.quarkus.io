msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Getting Started with A2A Java SDK and gRPC"
msgstr "A2A Java SDKとgRPCを使い始めるには"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Let's learn how to create an A2A server agent and an A2A client that can communicate using the gRPC transport."
msgstr "gRPCトランスポートを使用して通信できるA2AサーバーエージェントとA2Aクライアントを作成する方法を学びましょう。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The ability for AI agents to communicate across different frameworks and languages is key to\n"
"building polyglot multi-agent systems. The recent https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[0.3.0.Alpha1] and https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[0.3.0.Beta1] releases of the A2A Java SDK take a\n"
"significant step forward in this area by adding support for the gRPC transport and the HTTP+JSON/REST transport, offering greater flexibility and improved performance."
msgstr "AIエージェントが異なるフレームワークや言語にまたがって通信する能力は、ポリグロット・マルチエージェント・システムを構築するための鍵です。最近リリースされたA2A Java SDKの link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[0.3.0.Alpha] 1と link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[0.3.0.Beta] 1は、gRPCトランスポートとHTTP+JSON/RESTトランスポートのサポートを追加し、より大きな柔軟性とパフォーマンスの向上を提供することで、この分野で大きな一歩を踏み出しました。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"In this post, we'll demonstrate how to create an A2A server agent and an A2A client that support\n"
"multiple transports, where the gRPC transport will be selected."
msgstr "この投稿では、複数のトランスポートをサポートするA2AサーバーエージェントとA2Aクライアントを作成する方法を示します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Dice Agent Sample"
msgstr "ダイスエージェント サンプル"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"To see the multi-transport support in action, we're going to take a look at the new\n"
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport[Dice Agent]\n"
"sample from the https://github.com/a2aproject/a2a-samples[a2a-samples] repo."
msgstr "マルチトランスポートサポートを実際に見るために、 link:https://github.com/a2aproject/a2a-samples[a2a-samples] repoの新しい link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport[Dice Agent] サンプルを見てみましょう。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The `DiceAgent` is a simple https://github.com/a2aproject/a2a-samples/blob/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgent.java[Quarkus LangChain4j AI service] that can make use of https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceTools.java[tools] to roll dice of different sizes and check if the result of a roll is a prime number."
msgstr "`DiceAgent` はシンプルな link:https://github.com/a2aproject/a2a-samples/blob/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgent.java[Quarkus LangChain4j AIサービスで] 、 link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceTools.java[ツールを使って] さまざまなサイズのサイコロを振り、出た目が素数かどうかをチェックすることができます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A2A Server Agent"
msgstr "A2Aサーバーエージェント"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"There are three key things in our sample application that turn our Quarkus LangChain4j AI service into an A2A\n"
"server agent:"
msgstr "サンプルアプリケーションには、Quarkus LangChain4j AIサービスをA2Aサーバーエージェントに変える3つのポイントがあります："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A dependency on at least one A2A Java SDK Server Reference implementation in the server application's\n"
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/pom.xml[pom.xml] file. In this sample, we've added dependencies on both `io.github.a2asdk:a2a-java-sdk-reference-grpc`\n"
"and `io.github.a2asdk:a2a-java-sdk-reference-jsonrpc` since we want our A2A server agent to be able to support\n"
"both the gRPC and JSON-RPC transports."
msgstr "サーバーアプリケーションの link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/pom.xml[pom.xml] ファイルにある、少なくとも1つのA2A Java SDK Server Reference実装への依存関係。このサンプルでは、A2AサーバーエージェントがgRPCとJSON-RPCの両方のトランスポートをサポートできるようにするため、 `io.github.a2asdk:a2a-java-sdk-reference-grpc` と `io.github.a2asdk:a2a-java-sdk-reference-jsonrpc` の両方に依存関係を追加しています。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgentCardProducer.java[DiceAgentCardProducer], which defines the `AgentCard` for our A2A server agent."
msgstr "link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgentCardProducer.java[DiceAgentCardProducerは] 、A2Aサーバーエージェントの `AgentCard` 。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgentExecutorProducer.java[DiceAgentExecutorProducer], which calls our `DiceAgent` AI service."
msgstr "`DiceAgent` AI サービスを呼び出す link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceAgentExecutorProducer.java[DiceAgentExecutorProducer] 。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Let's look closer at the `DiceAgentCardProducer`:"
msgstr "`DiceAgentCardProducer` を詳しく見てみましょう："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The preferred transport for our A2A server agent, `gRPC` in this sample. This is the transport protocol available at the primary endpoint URL."
msgstr "A2Aサーバーエージェントの優先トランスポートで、このサンプルでは `gRPC` です。これは、プライマリエンドポイントURLで利用可能なトランスポートプロトコルです。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This is the primary endpoint URL for our A2A server agent. Since `gRPC` is our preferred transport and since\n"
"we'll be using the HTTP port for gRPC and JSON-RPC, we're specifying `\"localhost:\" + httpPort` here."
msgstr "これは、A2AサーバーエージェントのプライマリエンドポイントURLです。 `gRPC` が私たちの推奨するトランスポートで、gRPC と JSON-RPC には HTTP ポートを使用するので、ここでは `\"localhost:\" + httpPort` を指定しています。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We can optionally specify additional interfaces supported by our A2A server agent here. Since we also want\n"
"to support the JSON-RPC transport, we'll be adding that in this section."
msgstr "オプションで、A2Aサーバーエージェントがサポートする追加のインターフェイスをここで指定できます。JSON-RPCトランスポートもサポートしたいので、このセクションで追加します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The primary endpoint URL can optionally be specified in the additional interfaces section for completeness."
msgstr "プライマリ・エンドポイントのURLは、オプションで追加インターフェースのセクションで指定することができます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The JSON-RPC transport URL. Notice that we're using the HTTP port for both JSON-RPC and gRPC."
msgstr "JSON-RPC トランスポート URL。JSON-RPC と gRPC の両方に HTTP ポートを使用していることに注意してください。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Port Configuration for the Transports"
msgstr "トランスポートのポート構成"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"In the previous section, we mentioned that we're using the HTTP port for both the gRPC and JSON-RPC transports.\n"
"This is configured in our `application.properties` file as shown here:"
msgstr "前のセクションでは、gRPC と JSON-RPC の両方のトランスポートに HTTP ポートを使用することを述べました。これは、 `application.properties` ファイルで次のように設定されています："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "This setting allows serving both plain HTTP and gRPC requests from the same HTTP server. Underneath it uses a Vert.x based gRPC server. If you set this setting to true, gRPC requests will be served on port 9000 (and gRPC Java will be used instead)."
msgstr "この設定により、同じ HTTP サーバからプレーン HTTP リクエストと gRPC リクエストの両方を処理できます。その下で、Vert.x ベースの gRPC サーバーを使用します。この設定を true にすると、gRPC 要求はポート 9000 で処理されます (代わりに gRPC Java が使用されます)。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Starting the A2A Server Agent"
msgstr "A2Aサーバーエージェントの起動"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Once we start our Quarkus application, our A2A server agent will be available at localhost:11000 for clients that would like to use gRPC and at http://localhost:11000 for clients that would like to use JSON-RPC."
msgstr "Quarkusアプリケーションを起動すると、A2Aサーバーエージェントは、gRPCを使用するクライアントにはlocalhost:11000で、JSON-RPCを使用するクライアントには link:http://localhost:11000[http://localhost:1100] 0。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A2A clients can now send queries to our A2A server agent using either the gRPC or JSON-RPC transport."
msgstr "A2Aクライアントは、gRPCまたはJSON-RPCトランスポートを使用して、A2Aサーバーエージェントにクエリを送信できるようになりました。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The complete source code and instructions for starting the server application are available https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server[here]."
msgstr "完全なソースコードとサーバーアプリケーションの起動手順は、 link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/server[こちらから] 入手できます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Now that we have our multi-transport server agent configured and ready to go, let's take a look at how to create an A2A client that can communicate with it."
msgstr "マルチトランスポートサーバーエージェントの設定と準備ができたので、それと通信できるA2Aクライアントを作成する方法を見てみましょう。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A2A Client"
msgstr "A2Aクライアント"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The `dice_agent_multi_transport` sample also includes a https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client/src/main/java/com/samples/a2a/client/TestClient.java[TestClient] that can be used to send messages to the Dice Agent."
msgstr "`dice_agent_multi_transport` サンプルには、Dice Agent にメッセージを送信するために使用できる link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client/src/main/java/com/samples/a2a/client/TestClient.java[TestClient] も含まれています。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Notice that the client's https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client/pom.xml[pom.xml] file contains dependencies on `io.github.a2asdk:a2a-java-sdk-client` and `io.github.a2asdk:a2a-java-sdk-client-transport-grpc`."
msgstr "クライアントの link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client/pom.xml[pom.xml] ファイルには、 `io.github.a2asdk:a2a-java-sdk-client` と `io.github.a2asdk:a2a-java-sdk-client-transport-grpc` への依存関係が含まれていることに注目してください。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The `a2a-java-sdk-client` dependency provides access to a `Client.builder` that we'll use to create our A2A client and also provides the ability for the client to support the JSON-RPC transport."
msgstr "`a2a-java-sdk-client` 依存関係は、A2A クライアントの作成に使用する `Client.builder` へのアクセスを提供し、クライアントが JSON-RPC トランスポートをサポートする機能も提供します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The `a2a-java-sdk-client-transport-grpc` dependency provides the ability for the client to support the gRPC transport."
msgstr "`a2a-java-sdk-client-transport-grpc` 依存は、クライアントがgRPCトランスポートをサポートする機能を提供します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Let's see how the `TestClient` uses the A2A Java SDK to create a `Client` that supports both gRPC and JSON-RPC:"
msgstr "`TestClient` 、A2A Java SDKを使用して、gRPCとJSON-RPCの両方をサポートする `Client` ："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "We can use `Client.builder(publicAgentCard)` to create our A2A client. We need to pass in the `AgentCard` retrieved from the A2A server agent this client will be communicating with."
msgstr "A2Aクライアントを作成するには、 `Client.builder(publicAgentCard)` 。このクライアントが通信するA2Aサーバーエージェントから取得した `AgentCard` を渡す必要があります。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We need to specify event consumers that will be used to handle the responses that will be received from the\n"
"A2A server agent. This will be explained in more detail in the next section."
msgstr "A2Aサーバーエージェントから受け取るレスポンスを処理するために使用するイベントコンシューマを指定する必要があります。これについては、次のセクションで詳しく説明します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The A2A client created by the `Client.builder` will automatically send streaming messages, as opposed to\n"
"non-streaming messages, if it's supported by both the server and the client. We need to specify a handler that will be used for any errors that might occur during streaming."
msgstr "`Client.builder` によって作成されたA2Aクライアントは、サーバーとクライアントの両方でサポートされている場合、非ストリーミングメッセージとは対照的に、自動的にストリーミングメッセージを送信します。ストリーミング中に発生する可能性のあるエラーに使用するハンドラを指定する必要があります。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "We're indicating that we'd like our client to support the gRPC transport."
msgstr "クライアントがgRPCトランスポートをサポートするように指示しています。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We're indicating that we'd like our client to also support the JSON-RPC transport. When communicating with\n"
"an A2A server agent that doesn't support gRPC, this is the transport that would get used."
msgstr "クライアントがJSON-RPCトランスポートもサポートしていることを示します。gRPCをサポートしていないA2Aサーバーエージェントと通信する場合、このトランスポートが使用されます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "We can optionally specify general client configuration and preferences here."
msgstr "オプションで、一般的なクライアント設定とプリファレンスをここで指定できます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Once our `Client` has been created, we can send a message to the A2A server agent. The client will automatically use streaming if it's supported by both the server and the client. If the server doesn't\n"
"support streaming, the client will send a non-streaming message instead."
msgstr "`Client` が作成されたら、A2A サーバエージェントにメッセージを送信できます。サーバとクライアントの両方でストリーミングがサポートされていれば、クライアントは自動的にストリーミングを使用します。サーバーがストリーミングをサポートしていない場合、クライアントは代わりに非ストリーミングメッセージを送信します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Defining the Event Consumers"
msgstr "イベント消費者の定義"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"When creating our A2A client, we need to specify event consumers that will be used to handle the responses\n"
"that will be received from the A2A server agent. Let's see how to define a consumer that handles the different\n"
"types of events:"
msgstr "A2Aクライアントを作成する際、A2Aサーバーエージェントから受け取るレスポンスを処理するために使用するイベントコンシューマーを指定する必要があります。さまざまなタイプのイベントを処理するコンシューマを定義する方法を見てみましょう："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "This defines how to handle a `Message` received from the server agent. The server agent will send a response that contains a `Message` for immediate, self-contained interactions that are stateless."
msgstr "サーバエージェントから受け取った `Message` をどのように扱うかを定義します。サーバエージェントは、ステートレスで即時の自己完結的なやりとりのために、 `Message` を含む応答を送信します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This defines how to handle an `UpdateEvent` received from the server agent for a specific task. There are\n"
"two types of `UpdateEvents` that can be received."
msgstr "これは、特定のタスクのためにサーバエージェントから受信した `UpdateEvent` をどのように処理するかを定義します。受信できる `UpdateEvents` には 2 つのタイプがあります。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A `TaskStatusUpdateEvent` notifies the client of a change in a task's status. This is typically used in streaming interactions. If this is the final event in the stream for this interaction, `taskStatusUpdateEvent.isFinal()`\n"
"will return `true`."
msgstr "`TaskStatusUpdateEvent` タスクのステータスの変更をクライアントに通知します。これは通常、ストリーミングインタラクションで使用されます。これがこのインタラクションのストリームの最終イベントである場合、 `taskStatusUpdateEvent.isFinal()` は `true` を返します。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A `TaskArtifactUpdateEvent` notifies the client that an artifact has been generated or updated. An artifact contains output generated by an agent during a task. This is typically used in streaming interactions."
msgstr "`TaskArtifactUpdateEvent` は、アーティファクトが生成または更新されたことをクライアントに通知します。アーティファクトは、タスク中にエージェントによって生成された出力を含みます。これは通常、ストリーミングインタラクションで使用されます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "This defines how to handle a `Task` received from the server agent. A `Task` will be processed by the server agent through a defined lifecycle until it reaches an interrupted state or a terminal state."
msgstr "これは、サーバエージェントから受信した `Task` の処理方法を定義します。 `Task` は、中断状態または終端状態に達するまで、定義されたライフサイクルを通してサーバエージェントによって処理されます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Transport Selection"
msgstr "輸送手段の選択"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"When creating our `Client`, we used the `withTransport` method to specify that we want the client\n"
"to support both gRPC and JSON-RPC, in that order. The `Client.builder` selects the appropriate\n"
"transport protocol to use based on information obtained from the A2A server agent's `AgentCard`,\n"
"taking into account the transports configured for the client. In this sample application, because\n"
"the server agent's preferred transport is gRPC, the gRPC transport will be used."
msgstr "`Client` を作成する際、 `withTransport` メソッドを使用して、クライアントがgRPCとJSON-RPCの両方をサポートするように指定しました。 `Client.builder` は、A2Aサーバーエージェントの `AgentCard` から取得した情報に基づいて、クライアントに設定されているトランスポートを考慮して、使用する適切なトランスポートプロトコルを選択します。このサンプルアプリケーションでは、サーバーエージェントの優先トランスポートがgRPCであるため、gRPCトランスポートが使用されます。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Using the A2A Client"
msgstr "A2Aクライアントの使用"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "The sample application contains a `TestClientRunner` that can be run using `JBang`:"
msgstr "サンプルアプリケーションには `JBang` を使って実行できる `TestClientRunner` が含まれています："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "You should see output similar to this:"
msgstr "このような出力が表示されるはずです："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"You can also experiment with sending different messages to the A2A server agent using the `--message` option\n"
"as follows:"
msgstr "また、 `--message` オプションを使用して、以下のように A2A サーバーエージェントにさまざまなメッセージを送信して試すこともできます："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The complete source code and instructions for starting the client are available https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client[here]. There\n"
"are also details on how to use an A2A client that uses the A2A Python SDK instead of the A2A Java SDK\n"
"to communicate with our A2A server agent."
msgstr "クライアントを起動するための完全なソースコードと手順は、 link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport/client[こちらを] ご覧ください。また、A2A Java SDKの代わりにA2A Python SDKを使用するA2Aクライアントを使用して、A2Aサーバーエージェントと通信する方法の詳細もあります。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The addition of multi-transport support to the A2A Java SDK, as demonstrated in the new Dice Agent\n"
"sample, is a big step towards creating more flexible, performant, polyglot multi-agent systems."
msgstr "新しいDice Agentサンプルで実証されているように、A2A Java SDKにマルチトランスポートサポートが追加されたことは、より柔軟でパフォーマンスの高い、ポリグロットマルチエージェントシステムを構築するための大きな一歩です。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Further Reading"
msgstr "さらに読む"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport[Dice Agent Sample]"
msgstr "link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/dice_agent_multi_transport[ダイスエージェント サンプル]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[Getting Started with Quarkus and A2A Java SDK 0.3.0]"
msgstr "link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[QuarkusとA2A Java SDK 0.3.0の使用方法]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[A2A Java SDK: Support for the REST Transport is Now Here]"
msgstr "link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[A2A Java SDK：RESTトランスポートがサポートされました]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents[A2A Java SDK Samples]"
msgstr "link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents[A2A Java SDKサンプル]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://github.com/a2aproject/a2a-java/blob/main/README.md[A2A Java SDK Documentation]"
msgstr "link:https://github.com/a2aproject/a2a-java/blob/main/README.md[A2A Java SDK ドキュメント]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://a2a-protocol.org/latest/specification/[A2A Specification]"
msgstr "link:https://a2a-protocol.org/latest/specification/[A2A仕様]"
